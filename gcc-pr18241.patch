    
    PR tree-optimization/18241
    * tree-nrv.c (tree_nrv): Ignore volatile return values.
    * tree-ssa-dse.c (dse_optimize_stmt): Do not optimize
    statements with volatile operands.
    * tree-ssa-operands.c (add_stmt_operand): Do add volatile
    operands after marking a statement with has_volatile_ops.
    
    tree-nrv.c          |    1 +
    tree-ssa-dse.c      |    4 ++++
    tree-ssa-operands.c |   11 ++++-------
    3 files changed, 9 insertions(+), 7 deletions(-)
    
--- gcc-4.0-20050102/gcc/tree-nrv.c.orig	2004-09-06 12:08:02.000000000 +0200
+++ gcc-4.0-20050102/gcc/tree-nrv.c	2005-01-08 21:14:46.025306664 +0100
@@ -154,6 +154,7 @@
 	  /* The returned value must be a local automatic variable of the
 	     same type and alignment as the function's result.  */
 	  if (TREE_CODE (found) != VAR_DECL
+	      || TREE_THIS_VOLATILE (found)
 	      || DECL_CONTEXT (found) != current_function_decl
 	      || TREE_STATIC (found)
 	      || TREE_ADDRESSABLE (found)
--- gcc-4.0-20050102/gcc/tree-ssa-dse.c.orig	2005-01-08 21:19:04.000000000 +0100
+++ gcc-4.0-20050102/gcc/tree-ssa-dse.c	2005-01-08 21:19:18.429894872 +0100
@@ -259,6 +259,10 @@
      not also a function call, then record it into our table.  */
   if (get_call_expr_in (stmt))
     return;
+
+  if (ann->has_volatile_ops)
+    return;
+
   if (TREE_CODE (stmt) == MODIFY_EXPR)
     {
       dataflow_t df = get_immediate_uses (stmt);
--- gcc-4.0-20050102/gcc/tree-ssa-operands.c.orig	2004-12-10 18:28:32.000000000 +0100
+++ gcc-4.0-20050102/gcc/tree-ssa-operands.c	2005-01-08 21:16:39.025128080 +0100
@@ -1520,13 +1520,10 @@
   sym = (TREE_CODE (var) == SSA_NAME ? SSA_NAME_VAR (var) : var);
   v_ann = var_ann (sym);
 
-  /* Don't expose volatile variables to the optimizers.  */
-  if (TREE_THIS_VOLATILE (sym))
-    {
-      if (s_ann)
-	s_ann->has_volatile_ops = true;
-      return;
-    }
+  /* Mark statements with volatile operands.  Optimizers should back
+     off from statements having volatile operands.  */
+  if (TREE_THIS_VOLATILE (sym) && s_ann)
+    s_ann->has_volatile_ops = true;
 
   if (is_real_op)
     {

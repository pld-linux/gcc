Index: libgcc/config.host
===================================================================
--- libgcc/config.host	(.../tags/gcc_4_5_0_release)	(wersja 158397)
+++ libgcc/config.host	(.../branches/gcc-4_5-branch)	(wersja 158397)
@@ -600,6 +600,7 @@
 i[34567]86-*-darwin* | x86_64-*-darwin* | \
   i[34567]86-*-kfreebsd*-gnu | x86_64-*-kfreebsd*-gnu | \
   i[34567]86-*-linux* | x86_64-*-linux* | \
+  i[34567]86-*-gnu* | \
   i[34567]86-*-solaris2* | \
   i[34567]86-*-cygwin* | i[34567]86-*-mingw* | x86_64-*-mingw*)
 	if test "${host_address}" = 32; then
Index: libgcc/ChangeLog
===================================================================
--- libgcc/ChangeLog	(.../tags/gcc_4_5_0_release)	(wersja 158397)
+++ libgcc/ChangeLog	(.../branches/gcc-4_5-branch)	(wersja 158397)
@@ -1,3 +1,10 @@
+2010-04-15  Thomas Schwinge  <tschwinge@gnu.org>
+
+	Backport from mainline:
+	2010-04-15  Thomas Schwinge  <tschwinge@gnu.org>
+
+	* config.host <i[34567]86-*-gnu*>: Handle softfp as for Linux.
+
 2010-04-14  Release Manager
 
 	* GCC 4.5.0 released.
Index: gcc/tree-vrp.c
===================================================================
--- gcc/tree-vrp.c	(.../tags/gcc_4_5_0_release)	(wersja 158397)
+++ gcc/tree-vrp.c	(.../branches/gcc-4_5-branch)	(wersja 158397)
@@ -2715,8 +2715,16 @@
 	   || vr0.type == VR_ANTI_RANGE)
 	  && TREE_CODE (vr0.min) == INTEGER_CST
 	  && TREE_CODE (vr0.max) == INTEGER_CST
-	  && !is_overflow_infinity (vr0.min)
-	  && !is_overflow_infinity (vr0.max)
+	  && (!is_overflow_infinity (vr0.min)
+	      || (vr0.type == VR_RANGE
+		  && TYPE_PRECISION (outer_type) > TYPE_PRECISION (inner_type)
+		  && needs_overflow_infinity (outer_type)
+		  && supports_overflow_infinity (outer_type)))
+	  && (!is_overflow_infinity (vr0.max)
+	      || (vr0.type == VR_RANGE
+		  && TYPE_PRECISION (outer_type) > TYPE_PRECISION (inner_type)
+		  && needs_overflow_infinity (outer_type)
+		  && supports_overflow_infinity (outer_type)))
 	  && (TYPE_PRECISION (outer_type) >= TYPE_PRECISION (inner_type)
 	      || (vr0.type == VR_RANGE
 		  && integer_zerop (int_const_binop (RSHIFT_EXPR,
@@ -2730,6 +2738,10 @@
 	  new_max = force_fit_type_double (outer_type,
 					   TREE_INT_CST_LOW (vr0.max),
 					   TREE_INT_CST_HIGH (vr0.max), 0, 0);
+	  if (is_overflow_infinity (vr0.min))
+	    new_min = negative_overflow_infinity (outer_type);
+	  if (is_overflow_infinity (vr0.max))
+	    new_max = positive_overflow_infinity (outer_type);
 	  set_and_canonicalize_value_range (vr, vr0.type,
 					    new_min, new_max, NULL);
 	  return;
Index: gcc/DATESTAMP
===================================================================
--- gcc/DATESTAMP	(.../tags/gcc_4_5_0_release)	(wersja 158397)
+++ gcc/DATESTAMP	(.../branches/gcc-4_5-branch)	(wersja 158397)
@@ -1 +1 @@
-20100414
+20100416
Index: gcc/DEV-PHASE
===================================================================
--- gcc/DEV-PHASE	(.../tags/gcc_4_5_0_release)	(wersja 158397)
+++ gcc/DEV-PHASE	(.../branches/gcc-4_5-branch)	(wersja 158397)
@@ -0,0 +1 @@
+prerelease
Index: gcc/ChangeLog
===================================================================
--- gcc/ChangeLog	(.../tags/gcc_4_5_0_release)	(wersja 158397)
+++ gcc/ChangeLog	(.../branches/gcc-4_5-branch)	(wersja 158397)
@@ -1,3 +1,36 @@
+2010-04-01  Uros Bizjak  <ubizjak@gmail.com>
+
+	Backport from mainline:
+	2010-04-14  Uros Bizjak  <ubizjak@gmail.com>
+
+	* config/i386/i386.md (*divmod<mode>4): Remove stray "&&" from
+	splitter condition.
+	(*udivmod<mode>4): Ditto.
+
+	2010-04-14  Uros Bizjak  <ubizjak@gmail.com>
+
+	* config/i386/i386.md (*popcountsi2_cmp_zext): Remove mode attribute
+	from insn template.
+
+2010-04-15  Thomas Schwinge  <tschwinge@gnu.org>
+
+	Backport from mainline:
+	2010-04-15  Thomas Schwinge  <tschwinge@gnu.org>
+
+	* config.gcc <i[34567]86-*-gnu*>: Handle softfp as for Linux.
+
+2010-04-15  Richard Guenther  <rguenther@suse.de>
+
+	PR tree-optimization/43627
+	* tree-vrp.c (extract_range_from_unary_expr): Widenings
+	of [1, +INF(OVF)] go to [1, +INF(OVF)] of the wider type,
+	not varying.
+
+2010-04-14  Richard Guenther  <rguenther@suse.de>
+
+	* DEV-PHASE: Set back to prerelease.
+	* BASE-VER: Bump to 4.5.1.
+
 2010-04-14  Release Manager
 
 	* GCC 4.5.0 released.
@@ -100,7 +133,7 @@
 
 2010-04-02  Steven Bosscher  <steven@gcc.gnu.org>
 
-	* ada/gcc-interface/Make-lang.in, alias.c, attribs.c, auto-inc-dec.c, 
+	* ada/gcc-interface/Make-lang.in, alias.c, attribs.c, auto-inc-dec.c,
 	basic-block.h, bb-reorder.c, calls.c, c-common.c, cgraph.h,
 	collect2.h, config/alpha/alpha.c, config/alpha/alpha.md,
 	config/alpha/predicates.md, config/arm/arm.md,
@@ -171,7 +204,7 @@
 2010-04-02  Richard Earnshaw  <rearnsha@arm.com>
 
 	PR target/43469
-	* arm.c (legitimize_tls_address): Adjust call to 
+	* arm.c (legitimize_tls_address): Adjust call to
 	gen_tls_load_dot_plus_four.
 	(arm_note_pic_base): New function.
 	(arm_cannot_copy_insn_p): Use it.
@@ -190,12 +223,12 @@
 
 2010-04-01  Ralf Cors√©pius <ralf.corsepius@rtems.org>
 
-        * config.gcc (lm32-*-rtems*): Add t-lm32.
+	* config.gcc (lm32-*-rtems*): Add t-lm32.
 
 2010-04-01  Joel Sherrill <joel.sherrill@oarcorp.com>
 
-        * config.gcc: Add lm32-*-rtems*.
-        * config/lm32/rtems.h: New file.
+	* config.gcc: Add lm32-*-rtems*.
+	* config/lm32/rtems.h: New file.
 
 2010-04-01  Dave Korn  <dave.korn.cygwin@gmail.com>
 
Index: gcc/testsuite/gcc.dg/tree-ssa/vrp49.c
===================================================================
--- gcc/testsuite/gcc.dg/tree-ssa/vrp49.c	(.../tags/gcc_4_5_0_release)	(wersja 0)
+++ gcc/testsuite/gcc.dg/tree-ssa/vrp49.c	(.../branches/gcc-4_5-branch)	(wersja 158397)
@@ -0,0 +1,28 @@
+/* { dg-do link } */
+/* { dg-options "-O2" } */
+
+extern void link_error (void) __attribute__((noreturn));
+int n;
+float *x;
+int main()
+{
+  if (n > 0)
+    {
+      int i = 0;
+      do
+	{
+	  long long index;
+	  i = i + 1;
+	  index = i;
+	  if (index <= 0)
+	    link_error ();
+	  x[index] = 0;
+	  i = i + 1;
+	  index = i;
+	  if (index <= 0)
+	    link_error ();
+	  x[index] = 0;
+	}
+      while (i < n);
+    }
+}
Index: gcc/testsuite/ChangeLog
===================================================================
--- gcc/testsuite/ChangeLog	(.../tags/gcc_4_5_0_release)	(wersja 158397)
+++ gcc/testsuite/ChangeLog	(.../branches/gcc-4_5-branch)	(wersja 158397)
@@ -1,3 +1,13 @@
+2010-04-15  Richard Guenther  <rguenther@suse.de>
+
+	PR tree-optimization/43627
+	* gcc.dg/tree-ssa/vrp49.c: New testcase.
+
+2010-04-15  Richard Guenther  <rguenther@suse.de>
+
+	PR c++/43611
+	* g++.dg/torture/pr43611.C: New testcase.
+
 2010-04-14  Release Manager
 
 	* GCC 4.5.0 released.
Index: gcc/testsuite/g++.dg/torture/pr43611.C
===================================================================
--- gcc/testsuite/g++.dg/torture/pr43611.C	(.../tags/gcc_4_5_0_release)	(wersja 0)
+++ gcc/testsuite/g++.dg/torture/pr43611.C	(.../branches/gcc-4_5-branch)	(wersja 158397)
@@ -0,0 +1,22 @@
+// { dg-do compile }
+// { dg-options "-fkeep-inline-functions" }
+
+template < typename >
+struct A {
+  void init (int);
+  A ()
+  {
+    this->init (0);
+  }
+};
+
+template < typename >
+struct B : A < int > {
+  A < int > a;
+  B () {}
+};
+
+extern template struct A < int >;
+extern template struct B < int >;
+
+B < int > b;
Index: gcc/cp/ChangeLog
===================================================================
--- gcc/cp/ChangeLog	(.../tags/gcc_4_5_0_release)	(wersja 158397)
+++ gcc/cp/ChangeLog	(.../branches/gcc-4_5-branch)	(wersja 158397)
@@ -1,3 +1,9 @@
+2010-04-15  Richard Guenther  <rguenther@suse.de>
+
+	PR c++/43611
+	* semantics.c (expand_or_defer_fn_1): Do not keep extern
+	template inline functions.
+
 2010-04-14  Release Manager
 
 	* GCC 4.5.0 released.
Index: gcc/cp/semantics.c
===================================================================
--- gcc/cp/semantics.c	(.../tags/gcc_4_5_0_release)	(wersja 158397)
+++ gcc/cp/semantics.c	(.../branches/gcc-4_5-branch)	(wersja 158397)
@@ -3449,7 +3449,9 @@
 	 this function as needed so that finish_file will make sure to
 	 output it later.  Similarly, all dllexport'd functions must
 	 be emitted; there may be callers in other DLLs.  */
-      if ((flag_keep_inline_functions && DECL_DECLARED_INLINE_P (fn))
+      if ((flag_keep_inline_functions
+	   && DECL_DECLARED_INLINE_P (fn)
+	   && !DECL_REALLY_EXTERN (fn))
 	  || lookup_attribute ("dllexport", DECL_ATTRIBUTES (fn)))
 	mark_needed (fn);
     }
Index: gcc/BASE-VER
===================================================================
--- gcc/BASE-VER	(.../tags/gcc_4_5_0_release)	(wersja 158397)
+++ gcc/BASE-VER	(.../branches/gcc-4_5-branch)	(wersja 158397)
@@ -1 +1 @@
-4.5.0
+4.5.1
Index: gcc/config.gcc
===================================================================
--- gcc/config.gcc	(.../tags/gcc_4_5_0_release)	(wersja 158397)
+++ gcc/config.gcc	(.../branches/gcc-4_5-branch)	(wersja 158397)
@@ -3408,7 +3408,9 @@
 	i[34567]86-*-darwin* | x86_64-*-darwin*)
 		tmake_file="${tmake_file} i386/t-fprules-softfp soft-fp/t-softfp"
 		;;
-	i[34567]86-*-linux* | x86_64-*-linux* | i[34567]86-*-kfreebsd*-gnu | x86_64-*-kfreebsd*-gnu)
+	i[34567]86-*-linux* | x86_64-*-linux* | \
+	  i[34567]86-*-kfreebsd*-gnu | x86_64-*-kfreebsd*-gnu | \
+	  i[34567]86-*-gnu*)
 		tmake_file="${tmake_file} i386/t-fprules-softfp soft-fp/t-softfp i386/t-linux"
 		;;
 	i[34567]86-*-solaris2*)
Index: gcc/config/i386/i386.md
===================================================================
--- gcc/config/i386/i386.md	(.../tags/gcc_4_5_0_release)	(wersja 158397)
+++ gcc/config/i386/i386.md	(.../branches/gcc-4_5-branch)	(wersja 158397)
@@ -8010,7 +8010,7 @@
    (clobber (reg:CC FLAGS_REG))]
   ""
   "#"
-  "&& reload_completed"
+  "reload_completed"
   [(parallel [(set (match_dup 1)
 		   (ashiftrt:SWIM248 (match_dup 4) (match_dup 5)))
 	      (clobber (reg:CC FLAGS_REG))])
@@ -8069,7 +8069,7 @@
    (clobber (reg:CC FLAGS_REG))]
   ""
   "#"
-  "&& reload_completed"
+  "reload_completed"
   [(set (match_dup 1) (const_int 0))
    (parallel [(set (match_dup 0)
 		   (udiv:SWIM248 (match_dup 2) (match_dup 3)))
@@ -14178,13 +14178,13 @@
           (popcount:SI (match_operand:SI 1 "nonimmediate_operand" "rm"))
           (const_int 0)))
    (set (match_operand:DI 0 "register_operand" "=r")
-        (zero_extend:DI(popcount:SI (match_dup 1))))]
+        (zero_extend:DI (popcount:SI (match_dup 1))))]
   "TARGET_64BIT && TARGET_POPCNT && ix86_match_ccmode (insn, CCZmode)"
 {
 #if TARGET_MACHO
   return "popcnt\t{%1, %0|%0, %1}";
 #else
-  return "popcnt{<imodesuffix>}\t{%1, %0|%0, %1}";
+  return "popcnt{l}\t{%1, %0|%0, %1}";
 #endif
 }
   [(set_attr "prefix_rep" "1")

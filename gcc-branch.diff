Index: configure
===================================================================
--- configure	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ configure	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -3097,7 +3097,7 @@
     # Check for target supported by gold.
     case "${target}" in
       i?86-*-* | x86_64-*-* | sparc*-*-* | powerpc*-*-* | arm*-*-*)
-        configdirs="`echo " ${configdirs} " | sed -e 's/ ld / gold /'`"
+        configdirs=`echo " ${configdirs} " | sed -e 's/ ld / gold /'`
         ;;
     esac
   fi
@@ -5457,7 +5457,7 @@
 if test "x$with_gmp$with_gmp_include$with_gmp_lib" = x && test -d ${srcdir}/gmp; then
   gmplibs='-L$$r/$(HOST_SUBDIR)/gmp/'"$lt_cv_objdir $gmplibs"
   gmpinc='-I$$r/$(HOST_SUBDIR)/gmp -I$$s/gmp '"$gmpinc"
-  extra_mpfr_configure_flags='--with-gmp-build=$$r/$(HOST_SUBDIR)/gmp'
+  extra_mpfr_configure_flags='--with-gmp-include=$$r/$(HOST_SUBDIR)/gmp --with-gmp-lib=$$r/$(HOST_SUBDIR)/gmp/'"$lt_cv_objdir"
   extra_mpc_gmp_configure_flags='--with-gmp-include=$$r/$(HOST_SUBDIR)/gmp --with-gmp-lib=$$r/$(HOST_SUBDIR)/gmp/'"$lt_cv_objdir"
   # Do not test the gmp version.  Assume that it is sufficient, since
   # it is in the source tree, and the library has not been built yet
Index: libgcc/config.host
===================================================================
--- libgcc/config.host	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ libgcc/config.host	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -345,6 +345,8 @@
 	tmake_file="ia64/t-ia64"
 	;;
 ia64*-*-freebsd*)
+	extra_parts="crtbegin.o crtend.o crtbeginS.o crtendS.o crtfastmath.o"
+	tmake_file="ia64/t-ia64"
 	;;
 ia64*-*-linux*)
 	extra_parts="crtbegin.o crtend.o crtbeginS.o crtendS.o crtfastmath.o"
Index: libgcc/ChangeLog
===================================================================
--- libgcc/ChangeLog	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ libgcc/ChangeLog	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1,3 +1,9 @@
+2010-09-12  Gerald Pfeifer  <gerald@pfeifer.com>
+	    Andrew Pinski  <pinskia@gmail.com>
+
+	PR target/40959	
+	* config.host (ia64*-*-freebsd*): Set extra_parts.  Set tmake_file.
+
 2010-07-31  Release Manager
 
 	* GCC 4.5.1 released.
Index: gcc/doc/sourcebuild.texi
===================================================================
--- gcc/doc/sourcebuild.texi	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/doc/sourcebuild.texi	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1679,6 +1679,11 @@
 @item pthread_h
 Target has @code{pthread.h}.
 
+@item run_expensive_tests
+Expensive testcases (usually those that consume excessive amounts of CPU
+time) should be run on this target.  This can be enabled by setting the
+@env{GCC_TEST_RUN_EXPENSIVE} environment variable to a non-empty string.
+
 @item simulator
 Test system runs executables on a simulator (i.e. slowly) rather than
 hardware (i.e. fast).
Index: gcc/doc/extend.texi
===================================================================
--- gcc/doc/extend.texi	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/doc/extend.texi	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1345,9 +1345,7 @@
 @cindex VLAs
 
 Variable-length automatic arrays are allowed in ISO C99, and as an
-extension GCC accepts them in C90 mode and in C++.  (However, GCC's
-implementation of variable-length arrays does not yet conform in detail
-to the ISO C99 standard.)  These arrays are
+extension GCC accepts them in C90 mode and in C++.  These arrays are
 declared like any other automatic arrays, but with a length that is not
 a constant expression.  The storage is allocated at the point of
 declaration and deallocated when the brace-level is exited.  For
Index: gcc/doc/invoke.texi
===================================================================
--- gcc/doc/invoke.texi	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/doc/invoke.texi	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -5776,7 +5776,8 @@
 Optimize yet more.  @option{-O3} turns on all optimizations specified
 by @option{-O2} and also turns on the @option{-finline-functions},
 @option{-funswitch-loops}, @option{-fpredictive-commoning},
-@option{-fgcse-after-reload} and @option{-ftree-vectorize} options.
+@option{-fgcse-after-reload}, @option{-ftree-vectorize} and
+@option{-fipa-cp-clone} options.
 
 @item -O0
 @opindex O0
Index: gcc/tree-complex.c
===================================================================
--- gcc/tree-complex.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/tree-complex.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -665,12 +665,16 @@
 update_complex_assignment (gimple_stmt_iterator *gsi, tree r, tree i)
 {
   gimple_stmt_iterator orig_si = *gsi;
+  gimple stmt;
 
   if (gimple_in_ssa_p (cfun))
     update_complex_components (gsi, gsi_stmt (*gsi), r, i);
 
   gimple_assign_set_rhs_with_ops (&orig_si, COMPLEX_EXPR, r, i);
-  update_stmt (gsi_stmt (orig_si));
+  stmt = gsi_stmt (orig_si);
+  update_stmt (stmt);
+  if (maybe_clean_eh_stmt (stmt))
+    gimple_purge_dead_eh_edges (gimple_bb (stmt));
 }
 
 
Index: gcc/optabs.c
===================================================================
--- gcc/optabs.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/optabs.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -7033,6 +7033,7 @@
   if (icode == CODE_FOR_nothing)
     return NULL_RTX;
 
+  do_pending_stack_adjust ();
   do
     {
       start_sequence ();
Index: gcc/DATESTAMP
===================================================================
--- gcc/DATESTAMP	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/DATESTAMP	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1 +1 @@
-20100731
+20101015
Index: gcc/postreload.c
===================================================================
--- gcc/postreload.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/postreload.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -810,7 +810,7 @@
 	  rtx reg = SET_DEST (set);
 	  rtx plus = SET_SRC (set);
 	  rtx base = XEXP (plus, 1);
-	  rtx prev = prev_nonnote_insn (insn);
+	  rtx prev = prev_nonnote_nondebug_insn (insn);
 	  rtx prev_set = prev ? single_set (prev) : NULL_RTX;
 	  unsigned int regno = REGNO (reg);
 	  rtx index_reg = NULL_RTX;
@@ -1323,7 +1323,7 @@
 		       && MODES_OK_FOR_MOVE2ADD (GET_MODE (reg),
 						 reg_mode[REGNO (src)]))
 		{
-		  rtx next = next_nonnote_insn (insn);
+		  rtx next = next_nonnote_nondebug_insn (insn);
 		  rtx set = NULL_RTX;
 		  if (next)
 		    set = single_set (next);
Index: gcc/rtlanal.c
===================================================================
--- gcc/rtlanal.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/rtlanal.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -4755,9 +4755,7 @@
 	 stop if it isn't a single set or if it has a REG_INC note because
 	 we don't want to bother dealing with it.  */
 
-      do
-	prev = prev_nonnote_insn (prev);
-      while (prev && DEBUG_INSN_P (prev));
+      prev = prev_nonnote_nondebug_insn (prev);
 
       if (prev == 0
 	  || !NONJUMP_INSN_P (prev)
Index: gcc/configure
===================================================================
--- gcc/configure	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/configure	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -25454,27 +25454,58 @@
 
 
 pluginlibs=
+
+case "${host}" in
+  *-*-darwin*)
+    if test x$build = x$host; then
+      export_sym_check="nm${exeext} -g"
+    elif test x$host = x$target; then
+      export_sym_check="$gcc_cv_nm -g"
+    else
+      export_sym_check=
+    fi
+  ;;
+  *)
+    if test x$build = x$host; then
+      export_sym_check="objdump${exeext} -T"
+    elif test x$host = x$target; then
+      export_sym_check="$gcc_cv_objdump -T"
+    else
+      export_sym_check=
+    fi
+  ;;
+esac
+
 if test x"$enable_plugin" = x"yes"; then
 
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for exported symbols" >&5
 $as_echo_n "checking for exported symbols... " >&6; }
-  echo "int main() {return 0;} int foobar() {return 0;}" > conftest.c
-  ${CC} ${CFLAGS} ${LDFLAGS} conftest.c -o conftest > /dev/null 2>&1
-  if $gcc_cv_objdump -T conftest | grep foobar > /dev/null; then
-    : # No need to use a flag
-  else
-    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for -rdynamic" >&5
+  if test "x$export_sym_check" != x; then
+    echo "int main() {return 0;} int foobar() {return 0;}" > conftest.c
+    ${CC} ${CFLAGS} ${LDFLAGS} conftest.c -o conftest > /dev/null 2>&1
+    if $export_sym_check conftest | grep foobar > /dev/null; then
+      : # No need to use a flag
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+    else
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+      { $as_echo "$as_me:${as_lineno-$LINENO}: checking for -rdynamic" >&5
 $as_echo_n "checking for -rdynamic... " >&6; }
-    ${CC} ${CFLAGS} ${LDFLAGS} -rdynamic conftest.c -o conftest > /dev/null 2>&1
-    if $gcc_cv_objdump -T conftest | grep foobar > /dev/null; then
-      plugin_rdynamic=yes
-      pluginlibs="-rdynamic"
-    else
-      plugin_rdynamic=no
-      enable_plugin=no
+      ${CC} ${CFLAGS} ${LDFLAGS} -rdynamic conftest.c -o conftest > /dev/null 2>&1
+      if $export_sym_check conftest | grep foobar > /dev/null; then
+        plugin_rdynamic=yes
+        pluginlibs="-rdynamic"
+      else
+        plugin_rdynamic=no
+        enable_plugin=no
+      fi
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: $plugin_rdynamic" >&5
+$as_echo "$plugin_rdynamic" >&6; }
     fi
-    { $as_echo "$as_me:${as_lineno-$LINENO}: result: $plugin_rdynamic" >&5
-$as_echo "$plugin_rdynamic" >&6; }
+  else
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: unable to check" >&5
+$as_echo "unable to check" >&6; }
   fi
 
   # Check -ldl
@@ -25542,7 +25573,14 @@
 
   # Check that we can build shared objects with -fPIC -shared
   saved_LDFLAGS="$LDFLAGS"
-  LDFLAGS="$LDFLAGS -fPIC -shared"
+  case "${host}" in
+    *-*-darwin*)
+      LDFLAGS="$LDFLAGS -fPIC -shared -undefined dynamic_lookup"
+    ;;
+    *)
+      LDFLAGS="$LDFLAGS -fPIC -shared"
+    ;;
+  esac
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for -fPIC -shared" >&5
 $as_echo_n "checking for -fPIC -shared... " >&6; }
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
Index: gcc/builtins.c
===================================================================
--- gcc/builtins.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/builtins.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -100,9 +100,9 @@
 static rtx expand_builtin_mathfn (tree, rtx, rtx);
 static rtx expand_builtin_mathfn_2 (tree, rtx, rtx);
 static rtx expand_builtin_mathfn_3 (tree, rtx, rtx);
-static rtx expand_builtin_interclass_mathfn (tree, rtx, rtx);
+static rtx expand_builtin_interclass_mathfn (tree, rtx);
 static rtx expand_builtin_sincos (tree);
-static rtx expand_builtin_cexpi (tree, rtx, rtx);
+static rtx expand_builtin_cexpi (tree, rtx);
 static rtx expand_builtin_int_roundingfn (tree, rtx);
 static rtx expand_builtin_int_roundingfn_2 (tree, rtx);
 static rtx expand_builtin_args_info (tree);
@@ -2291,11 +2291,10 @@
    isnan, etc).
    Return 0 if a normal call should be emitted rather than expanding the
    function in-line.  EXP is the expression that is a call to the builtin
-   function; if convenient, the result should be placed in TARGET.
-   SUBTARGET may be used as the target for computing one of EXP's operands.  */
+   function; if convenient, the result should be placed in TARGET.  */
 
 static rtx
-expand_builtin_interclass_mathfn (tree exp, rtx target, rtx subtarget)
+expand_builtin_interclass_mathfn (tree exp, rtx target)
 {
   enum insn_code icode = CODE_FOR_nothing;
   rtx op0;
@@ -2328,7 +2327,7 @@
 	 side-effects more the once.  */
       CALL_EXPR_ARG (exp, 0) = arg = builtin_save_expr (arg);
 
-      op0 = expand_expr (arg, subtarget, VOIDmode, EXPAND_NORMAL);
+      op0 = expand_expr (arg, NULL_RTX, VOIDmode, EXPAND_NORMAL);
 
       if (mode != GET_MODE (op0))
 	op0 = convert_to_mode (mode, op0, 0);
@@ -2395,11 +2394,10 @@
 
 /* Expand a call to the internal cexpi builtin to the sincos math function.
    EXP is the expression that is a call to the builtin function; if convenient,
-   the result should be placed in TARGET.  SUBTARGET may be used as the target
-   for computing one of EXP's operands.  */
+   the result should be placed in TARGET.  */
 
 static rtx
-expand_builtin_cexpi (tree exp, rtx target, rtx subtarget)
+expand_builtin_cexpi (tree exp, rtx target)
 {
   tree fndecl = get_callee_fndecl (exp);
   tree arg, type;
@@ -2422,7 +2420,7 @@
       op1 = gen_reg_rtx (mode);
       op2 = gen_reg_rtx (mode);
 
-      op0 = expand_expr (arg, subtarget, VOIDmode, EXPAND_NORMAL);
+      op0 = expand_expr (arg, NULL_RTX, VOIDmode, EXPAND_NORMAL);
 
       /* Compute into op1 and op2.  */
       expand_twoval_unop (sincos_optab, op0, op2, op1, 0);
@@ -3073,7 +3071,7 @@
    function; if convenient, the result should be placed in TARGET.  */
 
 static rtx
-expand_builtin_powi (tree exp, rtx target, rtx subtarget)
+expand_builtin_powi (tree exp, rtx target)
 {
   tree arg0, arg1;
   rtx op0, op1;
@@ -3102,7 +3100,7 @@
 	      || (optimize_insn_for_speed_p ()
 		  && powi_cost (n) <= POWI_MAX_MULTS)))
 	{
-	  op0 = expand_expr (arg0, subtarget, VOIDmode, EXPAND_NORMAL);
+	  op0 = expand_expr (arg0, NULL_RTX, VOIDmode, EXPAND_NORMAL);
 	  op0 = force_reg (mode, op0);
 	  return expand_powi (op0, mode, n);
 	}
@@ -3116,7 +3114,7 @@
   if (target == NULL_RTX)
     target = gen_reg_rtx (mode);
 
-  op0 = expand_expr (arg0, subtarget, mode, EXPAND_NORMAL);
+  op0 = expand_expr (arg0, NULL_RTX, mode, EXPAND_NORMAL);
   if (GET_MODE (op0) != mode)
     op0 = convert_to_mode (mode, op0, 0);
   op1 = expand_expr (arg1, NULL_RTX, mode2, EXPAND_NORMAL);
@@ -4885,7 +4883,10 @@
     return NULL_RTX;
 
   /* Compute the argument.  */
-  op0 = expand_expr (CALL_EXPR_ARG (exp, 0), subtarget,
+  op0 = expand_expr (CALL_EXPR_ARG (exp, 0),
+		     (subtarget
+		      && (TYPE_MODE (TREE_TYPE (CALL_EXPR_ARG (exp, 0)))
+			  == GET_MODE (subtarget))) ? subtarget : NULL_RTX,
 		     VOIDmode, EXPAND_NORMAL);
   /* Compute op, into TARGET if possible.
      Set TARGET to wherever the result comes back.  */
@@ -5722,7 +5723,7 @@
     CASE_FLT_FN (BUILT_IN_FINITE):
     case BUILT_IN_ISFINITE:
     case BUILT_IN_ISNORMAL:
-      target = expand_builtin_interclass_mathfn (exp, target, subtarget);
+      target = expand_builtin_interclass_mathfn (exp, target);
       if (target)
 	return target;
       break;
@@ -5752,7 +5753,7 @@
       break;
 
     CASE_FLT_FN (BUILT_IN_POWI):
-      target = expand_builtin_powi (exp, target, subtarget);
+      target = expand_builtin_powi (exp, target);
       if (target)
 	return target;
       break;
@@ -5774,7 +5775,7 @@
       break;
 
     CASE_FLT_FN (BUILT_IN_CEXPI):
-      target = expand_builtin_cexpi (exp, target, subtarget);
+      target = expand_builtin_cexpi (exp, target);
       gcc_assert (target);
       return target;
 
Index: gcc/fold-const.c
===================================================================
--- gcc/fold-const.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/fold-const.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -4737,9 +4737,9 @@
 	  n_high = range_binop (MINUS_EXPR, exp_type,
 				build_int_cst (exp_type, 0),
 				0, low, 0);
-	  low = n_low, high = n_high;
-	  exp = arg0;
-	  continue;
+	  if (n_high != 0 && TREE_OVERFLOW (n_high))
+	    break;
+	  goto normalize;
 
 	case BIT_NOT_EXPR:
 	  /* ~ X -> -X - 1  */
@@ -4773,6 +4773,7 @@
 	  if (TYPE_OVERFLOW_UNDEFINED (arg0_type))
 	    *strict_overflow_p = true;
 
+	normalize:
 	  /* Check for an unsigned range which has wrapped around the maximum
 	     value thus making n_high < n_low, and normalize it.  */
 	  if (n_low && n_high && tree_int_cst_lt (n_high, n_low))
Index: gcc/reorg.c
===================================================================
--- gcc/reorg.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/reorg.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -3458,9 +3458,13 @@
 	     We do this by deleting the INSN containing the SEQUENCE, then
 	     re-emitting the insns separately, and then deleting the RETURN.
 	     This allows the count of the jump target to be properly
-	     decremented.  */
+	     decremented.
 
-	  /* Clear the from target bit, since these insns are no longer
+	     Note that we need to change the INSN_UID of the re-emitted insns
+	     since it is used to hash the insns for mark_target_live_regs and
+	     the re-emitted insns will no longer be wrapped up in a SEQUENCE.
+
+	     Clear the from target bit, since these insns are no longer
 	     in delay slots.  */
 	  for (i = 0; i < XVECLEN (pat, 0); i++)
 	    INSN_FROM_TARGET_P (XVECEXP (pat, 0, i)) = 0;
@@ -3468,13 +3472,10 @@
 	  trial = PREV_INSN (insn);
 	  delete_related_insns (insn);
 	  gcc_assert (GET_CODE (pat) == SEQUENCE);
-	  after = trial;
-	  for (i = 0; i < XVECLEN (pat, 0); i++)
-	    {
-	      rtx this_insn = XVECEXP (pat, 0, i);
-	      add_insn_after (this_insn, after, NULL);
-	      after = this_insn;
-	    }
+	  add_insn_after (delay_insn, trial, NULL);
+	  after = delay_insn;
+	  for (i = 1; i < XVECLEN (pat, 0); i++)
+	    after = emit_copy_of_insn_after (XVECEXP (pat, 0, i), after);
 	  delete_scheduled_jump (delay_insn);
 	  continue;
 	}
@@ -3579,9 +3580,13 @@
 	     We do this by deleting the INSN containing the SEQUENCE, then
 	     re-emitting the insns separately, and then deleting the jump.
 	     This allows the count of the jump target to be properly
-	     decremented.  */
+	     decremented.
 
-	  /* Clear the from target bit, since these insns are no longer
+	     Note that we need to change the INSN_UID of the re-emitted insns
+	     since it is used to hash the insns for mark_target_live_regs and
+	     the re-emitted insns will no longer be wrapped up in a SEQUENCE.
+
+	     Clear the from target bit, since these insns are no longer
 	     in delay slots.  */
 	  for (i = 0; i < XVECLEN (pat, 0); i++)
 	    INSN_FROM_TARGET_P (XVECEXP (pat, 0, i)) = 0;
@@ -3589,13 +3594,10 @@
 	  trial = PREV_INSN (insn);
 	  delete_related_insns (insn);
 	  gcc_assert (GET_CODE (pat) == SEQUENCE);
-	  after = trial;
-	  for (i = 0; i < XVECLEN (pat, 0); i++)
-	    {
-	      rtx this_insn = XVECEXP (pat, 0, i);
-	      add_insn_after (this_insn, after, NULL);
-	      after = this_insn;
-	    }
+	  add_insn_after (delay_insn, trial, NULL);
+	  after = delay_insn;
+	  for (i = 1; i < XVECLEN (pat, 0); i++)
+	    after = emit_copy_of_insn_after (XVECEXP (pat, 0, i), after);
 	  delete_scheduled_jump (delay_insn);
 	  continue;
 	}
Index: gcc/DEV-PHASE
===================================================================
--- gcc/DEV-PHASE	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/DEV-PHASE	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1 @@
+prerelease
Index: gcc/ChangeLog
===================================================================
--- gcc/ChangeLog	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/ChangeLog	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1,3 +1,714 @@
+2010-10-15  Joseph Myers  <joseph@codesourcery.com>
+
+	* doc/extend.texi (Variable Length): Don't refer to VLAs not
+	conforming to C99.
+
+2010-10-14  Joseph Myers  <joseph@codesourcery.com>
+
+	PR c/45969
+	* c-typeck.c (build_binary_op): Don't try to compute a semantic
+	type with excess precision for boolean operations.
+
+2010-10-13  Richard Guenther  <rguenther@suse.de>
+	    Joern Rennecke  <joern.rennecke@embecosm.com>
+
+	PR debug/44832
+	* tree-ssa-live.c (mark_all_vars_used_1): Set TREE_USED for
+	LABEL_DECL.
+	(remove_unused_scope_block_p): Don't drop TREE_USED LABEL_DECLs
+	unless they have DECL_IGNORED_P set.
+
+2010-10-13  Richard Guenther  <rguenther@suse.de>
+
+	PR tree-optimization/45982
+	* tree-ssa-structalias.c (make_constraints_to): New function.
+	(make_constraint_to): Implement in terms of make_constraints_to.
+	(find_func_aliases): Properly make return values of pure/const
+	functions escape if they assign to sth that is not a pointer.
+
+2010-10-11  Alexandre Oliva  <aoliva@redhat.com>
+
+	PR debug/45656
+	* cse.c (cse_extended_basic_block): Preserve cc0 info across
+	debug isnsn.  Skip them when searching for cc0 setter.
+	(set_live_p): Skip debug insns when searching for cc0 user.
+
+2010-10-09  Ralf Corsépius <ralf.corsepius@rtems.org>
+
+	* config.gcc (bfin*-rtems*): Add newlib-stdint.h.
+	* config.gcc (lm32*-rtems*): Add newlib-stdint.h.
+
+2010-10-07  Richard Guenther  <rguenther@suse.de>
+
+	PR middle-end/45869
+	* tree-cfg.c (verify_gimple_assign_binary): Allow vector shifts
+	of pointers.
+
+2010-10-07  Richard Guenther  <rguenther@suse.de>
+
+	Backport from mainline
+	2010-09-07  Richard Guenther  <rguenther@suse.de>
+
+	PR middle-end/45569
+	* tree-eh.c (operation_could_trap_helper_p): Neither COMPLEX_EXPR
+	nor CONSTRUCTOR can trap.
+	* tree-complex.c (update_complex_assignment): Update EH info.
+
+2010-10-06  Jack Howarth  <howarth@bromo.med.uc.edu>
+
+	Backport from mainline
+	2010-04-26  Jack Howarth <howarth@bromo.med.uc.edu>
+
+	PR 43715
+	* configure.ac: Pass -g for export_sym_check on darwin.
+	Use "-undefined dynamic_lookup" on darwin.
+	* configure: Regenerate.
+
+2010-10-05  Ira Rosen  <irar@il.ibm.com>
+
+	PR tree-optimization/45752
+	* tree-vect-slp.c (vect_get_mask_element): Remove static
+	variables, make them function arguments.
+	(vect_transform_slp_perm_load): Pass new arguments to
+	vect_get_mask_element.
+
+2010-10-04  Matthias Klose  <doko@ubuntu.com>
+
+	* config/sparc/t-linux64 (MULTILIB_OSDIRNAMES): Use ../lib32 as the
+	multilib osdirname if it exists.
+	* config/s390/t-linux64 (MULTILIB_OSDIRNAMES): Likewise.
+
+2010-10-03  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>
+
+	PR target/45820
+	* config/pa/pa.c (pa_secondary_reload): Handle symbolic operands
+	earlier.
+
+2010-10-01  Richard Guenther  <rguenther@suse.de>
+
+	PR tree-optimization/45854
+	* tree-eh.c (cleanup_empty_eh): Avoid degenerate case.
+
+2010-09-30  Jakub Jelinek  <jakub@redhat.com>
+
+	PR target/45843
+	* config/i386/i386.c (ix86_gimplify_va_arg): Use
+	INTVAL (XEXP (slot, 1)) as prev_size.
+
+2010-09-29  Kai Tietz  <kai.tietz@onevision.com>
+
+        * config/i386/mingw32.h (TARGET_64BIT): replaced by
+        TARGET_64BIT_DEFAULT in #if check.
+
+2010-09-28  Richard Henderson  <rth@redhat.com>
+
+	* config/i386/cygming.h (ASM_OUTPUT_DWARF_OFFSET): Output 8 bytes
+	when 8 bytes are requested.                             
+
+2010-09-27  Richard Sandiford  <rdsandiford@googlemail.com>
+
+	Backport from mainline:
+
+	2010-05-19  James E. Wilson  <wilson@codesourcery.com>
+
+	PR target/43764
+	* config/mips/mips.c (mips_call_expr_from_insn): New arg second_call.
+	Set it.
+	(mips_annotate_pic_calls): Pass new arg to mips_call_expr_from_insn.
+	Use it.
+
+2010-09-27  Richard Sandiford  <rdsandiford@googlemail.com>
+
+	PR rtl-optimization/43358
+	* ira-lives.c (process_single_reg_class_operands): Adjust the costs
+	of a single hard register, using simplify_subreg_regno to decide
+	what that register should be.
+
+2010-09-25  Eric Botcazou  <ebotcazou@adacore.com>
+
+	* tree-inline.c (copy_bb): Use GSI_CONTINUE_LINKING when inserting new
+	statements because of the return slot optimization.
+
+2010-09-24  Jakub Jelinek  <jakub@redhat.com>
+
+	Revert:
+	2010-09-17  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR middle-end/45234
+	* calls.c (expand_call): Make sure that all variable sized
+	adjustments are multiple of preferred stack boundary after
+	stack alignment.
+
+2010-09-23  Eric Botcazou  <ebotcazou@adacore.com>
+
+	Backport from mainline
+	2010-09-02  Olivier Hainque  <hainque@adacore.com>
+
+	PR middle-end/44763
+	* ira-color.c (SORTGT): New macro, helper for qsort callbacks.
+	(allocno_priority_compare_func): Use it instead of a straight
+	difference computation over priorities.
+
+2010-09-22  Eric Botcazou  <ebotcazou@adacore.com>
+
+	PR java/44095
+	* config/sparc/linux.h (ASM_SPEC): Pass -K PIC if -findirect-dispatch
+	is specified and the suffix of the file isn't ".c".
+	* config/sparc/linux64.h (ASM_SPEC): Likewise.
+
+2010-09-22  Eric Botcazou  <ebotcazou@adacore.com>
+
+	PR target/35664
+	* config/sparc/constraints.md ('e'): Return NO_REGS if !TARGET_FPU.
+	('f'): Likewise.
+
+2010-09-21  Hans-Peter Nilsson  <hp@axis.com>
+
+	PR rtl-optimization/41085
+	Backport from mainline
+	2010-07-27  Bernd Schmidt  <bernds@codesourcery.com>
+
+	PR rtl-optimization/45051
+	* reload1.c (delete_output_reload): Use refers_to_regno_p rather
+	than reg_mentioned_p.
+
+2010-09-21  Kai Tietz  <kai.tietz@onevision.com>
+
+	PR target/45694
+	* config/i386/i386.c (ix86_expand_prologue): Save r10 in case that
+	static chain-register is used for 64-bit.
+
+2010-09-21  Jakub Jelinek  <jakub@redhat.com>
+
+	PR middle-end/45678
+	* expr.c (expand_expr_real_1) <case VIEW_CONVERT_EXPR>: If
+	op0 isn't sufficiently aligned and there is movmisalignM
+	insn for mode, use it to load op0 into a temporary register.
+
+	Backport from mainline
+	2010-09-20  Jakub Jelinek  <jakub@redhat.com>
+
+	PR middle-end/45678
+	* cfgexpand.c (expand_one_stack_var_at): Limit alignment to
+	crtl->max_used_stack_slot_alignment.
+
+2010-09-21  Richard Guenther  <rguenther@suse.de>
+
+	PR middle-end/45704
+	* gimplify.c (gimplify_modify_expr_rhs): Preserve volatileness.
+
+2010-09-20  Jakub Jelinek  <jakub@redhat.com>
+
+	PR rtl-optimization/45728
+	* expr.c (expand_expr_real_1): If op0 isn't REG or MEM, try
+	gen_lowpart_common first and if that fails, force_reg first
+	before calling gen_lowpart.
+
+	PR rtl-optimization/45695
+	* combine.c (try_combine): Don't try to swap the two patterns, if the
+	chosen order is not possible, just give up.  For HAVE_cc0 targets,
+	check if XVECEXP (newpat, 0, 0) doesn't use REGs or MEMs set by insns
+	in between i2 and i3.
+
+2010-09-20  Eric Botcazou  <ebotcazou@adacore.com>
+
+	PR rtl-optimization/42775
+	* cfgrtl.c (rest_of_pass_free_cfg): Recompute notes if delay slot
+	scheduling is enabled.
+
+2010-09-20  H.J. Lu  <hongjiu.lu@intel.com>
+
+	Backport from mainline
+	2010-09-17  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR middle-end/45234
+	* calls.c (expand_call): Make sure that all variable sized
+	adjustments are multiple of preferred stack boundary after
+	stack alignment.
+
+2010-09-20  Rafael Carre   <rafael.carre@gmail.com>
+
+	PR target/45726
+	* arm.md (arm_movtas_ze): Only enable on machine with MOVT.
+
+2010-09-20  Richard Guenther  <rguenther@suse.de>
+
+	PR tree-optimization/45623
+	* tree-ssa-structalias.c (get_constraint_for_ptr_offset): Adjust.
+	(get_constraint_for_component_ref): If computing a constraint
+	for the rhs handle type punning through unions.
+	(get_constraint_for_address_of): Adjust.
+	(get_constraint_for_1): Likewise.
+	(get_constraint_for): Likewise.
+	(get_constraint_for_rhs): New function.
+	(do_structure_copy): Adjust.
+	(make_constraint_to): Likewise.
+	(handle_const_call): Likewise.
+	(find_func_aliases): Likewise.
+
+2010-09-18  Richard Guenther  <rguenther@suse.de>
+
+	PR tree-optimization/45709
+	* tree-inline.c (copy_phis_for_bb): Delay commit of edge
+	insertions until after all PHI nodes of the block are processed.
+
+2010-09-18  H.J. Lu  <hongjiu.lu@intel.com>
+
+	Backport from mainline
+	2010-04-07  Dodji Seketeli  <dodji@redhat.com>
+
+	PR debug/43628
+	* dwarf2out.c (modified_type_die): Ignore artificial typedefs.
+
+2010-09-18  Richard Guenther  <rguenther@suse.de>
+
+	PR tree-optimization/45709
+	* tree-inline.c (copy_phis_for_bb): Fixup new_edge when
+	we splitted it.
+
+2010-09-17  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
+
+	Backport from mainline:
+	2010-09-08  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
+
+	* doc/sourcebuild.texi (Effective-Target Keywords): Document
+	run_expensive_tests.
+
+2010-09-15  Eric Botcazou  <ebotcazou@adacore.com>
+
+	PR rtl-optimization/45593
+	* reorg.c (relax_delay_slots): Use emit_copy_of_insn_after to re-emit
+	insns that were in delay slots as stand-alone insns.
+
+2010-09-14  Tristan Gingold  <gingold@adacore.com>
+
+	* configure.ac (plugins): Fix typos.
+	* configure: Regenerate.
+
+2010-09-14  Jakub Jelinek  <jakub@redhat.com>
+
+	PR middle-end/45567
+	* builtins.c (expand_builtin_interclass_mathfn, expand_builtin_cexpi,
+	expand_builtin_powi): Remove subtarget argument, pass NULL_RTX instead.
+	(expand_builtin): Adjust caller.
+	(expand_builtin_unop): Only use subtarget if it has the right mode.
+
+	PR debug/45660
+	* dwarf2out.c (gen_decl_die): Call gen_type_die for origin before
+	gen_type_die for function/method return type.
+
+2010-09-13  Hans-Peter Nilsson  <hp@axis.com>
+
+	PR rtl-optimization/41087
+	* ifcvt.c (noce_get_condition): Don't allow conditions with
+	side-effects.
+
+2010-09-12  Alexander Monakov  <amonakov@ispras.ru>
+
+	Backport from mainline
+	2010-09-06  Andrey Belevantsev  <abel@ispras.ru>
+
+	PR rtl-optimization/44919
+	* sel-sched.c (move_cond_jump): Remove assert, check that
+	the several blocks case can only happen with mutually exclusive
+	insns instead.  Rewrite the movement code to support moving through
+	several basic blocks.
+
+2010-09-10  Jack Howarth <howarth@bromo.med.uc.edu>
+
+	Backport from mainline
+	2010-09-07  H.J. Lu  <hjl.tools@gmail.com>
+		    Jack Howarth <howarth@bromo.med.uc.edu>
+
+	PR target/36502
+	PR target/42313
+	PR target/44651
+	* config/i386/darwin.h (STACK_BOUNDARY): Redefine as 128 for
+	profiling or 64-bit MS_ABI and as BITS_PER_WORD otherwise.
+	(PREFERRED_STACK_BOUNDARY): Replace STACK_BOUNDARY with 128 in
+	MAX macro.
+
+2010-09-09  Vladimir Makarov  <vmakarov@redhat.com>
+
+	PR middle-end/45312
+	* reload1.c (merge_assigned_reloads): Remove.
+	(reload_as_needed): Don't call it.
+
+2010-09-09  Matthias Klose  <doko@ubuntu.com>
+
+	PR bootstrap/43847
+	* configure.ac (--enable-plugin): Enhance for cross builds.
+	* configure: Regenerate.
+
+2010-09-09  Vladimir Makarov  <vmakarov@redhat.com>
+
+	PR middle-end/44554
+	* ira.c (ira): Switch off sharing spill slots if setjmp is called.
+
+2010-09-08  Vladimir Makarov  <vmakarov@redhat.com>
+
+	PR middle-end/40386
+	* ira.c (pseudo_for_reload_consideration_p): Don't use
+	flag_ira_share_spill_slots.
+
+2010-09-09  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>
+
+	* config/s390/s390.c (legitimate_reload_constant_p): Accept floating-
+	point zero operands that fit into a single GPR.
+	(s390_preferred_reload_class): Ensure we only return general-purpose
+	register classes.
+	* config/s390/s390.md ("*mov<mode>_64dfp"): Use lghi to load
+	floating-point zero operands into GPRs.
+	("*mov<mode>_64"): Likewise.
+	("mov<mode>"): Likewise using lhi.
+
+2010-09-09  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>
+
+	* config/s390/s390.c (s390_symref_operand_p): Return false for
+	literal pool references.
+	(s390_check_qrst_address): Update caller.
+
+2010-09-08  Martin Jambor  <mjambor@suse.cz>
+
+	PR other/45443
+	* doc/invoke.texi: Add -fipa-cp-clone to list of switches turned on
+	at -O3.
+
+2010-09-03  Jakub Jelinek  <jakub@redhat.com>
+
+	PR middle-end/45484
+	* dwarf2out.c (flush_queued_reg_saves): Rename to...
+	(dwarf2out_flush_queued_reg_saves): ... this.  No longer static.
+	(dwarf2out_frame_debug): Adjust callers.
+	* dwarf2out.h (dwarf2out_flush_queued_reg_saves): New prototype.
+	* config/i386/i386.c (output_set_got): Call it.
+
+	PR debug/45500
+	* dwarf2out.c (rtl_for_decl_init): Give up for all generic vectors,
+	not just generic vectors with BLKmode.
+
+2010-09-02  Ian Bolton  <ian.bolton@arm.com>
+
+	Backport from mainline
+	2010-09-01  Ian Bolton  <ian.bolton@arm.com>
+
+	* Makefile.in (tree-switch-conversion.o): Update dependencies.
+	
+	2010-08-19  Ian Bolton  <ian.bolton@arm.com>
+	
+	PR target/45070
+	* config/arm/arm.c (arm_output_epilogue): Ensure that return
+	value of size 1-3 is handled correctly.
+
+	2010-08-19  Ian Bolton  <ian.bolton@arm.com>
+
+	* tree-switch-conversion.c (gen_inbound_check): Ensure that the
+	type for the conditional has wide enough range.
+
+	2010-08-07  Marcus Shawcroft  <marcus.shawcroft@arm.com>
+	
+	* config/arm/linux-atomic.c (SUBWORD_VAL_CAS): Instantiate with
+	'unsigned short' and 'unsigned char' instead of 'short' and 'char'.
+	(SUBWORD_BOOL_CAS): Likewise.
+	(SUBWORD_SYNC_OP): Likewise.
+	(SUBWORD_TEST_AND_SET): Likewise.
+	(FETCH_AND_OP_WORD): Parenthesise INF_OP
+	(SUBWORD_SYNC_OP): Likewise.
+	(OP_AND_FETCH_WORD): Likewise.
+	
+2010-09-01  Jakub Jelinek  <jakub@redhat.com>
+
+	PR middle-end/45458
+	* bb-reorder.c (add_labels_and_missing_jumps): Treat
+	bbs ending with throwing insns like blocks ending with a call.
+	(fix_up_fall_thru_edges): Likewise.
+
+2010-09-01  Eric Botcazou  <ebotcazou@adacore.com>
+
+	* gimplify.c (gimplify_init_constructor): Do not create a temporary for
+	a volatile LHS if the constructor has only one element.
+
+2010-08-31  Eric Botcazou  <ebotcazou@adacore.com>
+
+	* tree-nested.c (convert_all_function_calls): Iterate until after the
+	sum of static chains in the nest doesn't change.
+
+2010-08-31  Eric Botcazou  <ebotcazou@adacore.com>
+
+	Backport from mainline
+	2010-08-20  Jakub Jelinek  <jakub@redhat.com>
+
+	PR rtl-optimization/45353
+	* sel-sched-ir.c (sel_bb_head): Return NULL even if next_nonnote_insn
+	after bb_note is a BARRIER.
+
+2010-08-30  Jakub Jelinek  <jakub@redhat.com>
+
+	PR middle-end/45423
+	* gimplify.c (goa_stabilize_expr): Handle TRUTH_NOT_EXPR
+	and TRUTH_{AND,OR,XOR}_EXPR.
+	* c-parser.c (c_parser_omp_atomic): Handle boolean
+	{PRE,POST}_{INC,DEC}REMENT.
+
+2010-08-30  Jakub Jelinek  <jakub@redhat.com>
+
+	Backport from mainline
+	2010-07-27  Jakub Jelinek  <jakub@redhat.com>
+
+	PR c/45079
+	* c-pretty-print.c (pp_c_expression): Handle C_MAYBE_CONST_EXPR.
+
+2010-08-30  H.J. Lu  <hongjiu.lu@intel.com>
+
+	Backport from mainline
+	2010-08-25  Richard Guenther  <rguenther@suse.de>
+
+	PR tree-optimization/45393
+	* tree-ssa-math-opts.c (execute_cse_sincos_1): Properly transfer
+	and clean EH info.  Avoid SSA update.
+	(execute_cse_sincos): Cleanup the CFG if it has changed.
+
+2010-08-28  Eric Botcazou  <ebotcazou@adacore.com>
+
+	* config/ia64/ia64.md (cstorebi4): Fix thinko.
+
+2010-08-28  Uros Bizjak  <ubizjak@gmail.com>
+
+	PR target/41484
+	* config/i386/sse.md (sse4_1_extendv8qiv8hi2): Also accept memory
+	operands for operand 1.
+	(sse4_1_extendv4qiv4si2): Ditto.
+	(sse4_1_extendv2qiv2di2): Ditto.
+	(sse4_1_extendv4hiv4si2): Ditto.
+	(sse4_1_extendv2hiv2di2): Ditto.
+	(sse4_1_extendv2siv2di2): Ditto.
+	(sse4_1_zero_extendv8qiv8hi2): Ditto.
+	(sse4_1_zero_extendv4qiv4si2): Ditto.
+	(sse4_1_zero_extendv2qiv2di2): Ditto.
+	(sse4_1_zero_extendv4hiv4si2): Ditto.
+	(sse4_1_zero_extendv2hiv2di2): Ditto.
+	(sse4_1_zero_extendv2siv2di2): Ditto.
+	(*sse4_1_extendv8qiv8hi2): Remove insn pattern.
+	(*sse4_1_extendv4qiv4si2): Ditto.
+	(*sse4_1_extendv2qiv2di2): Ditto.
+	(*sse4_1_extendv4hiv4si2): Ditto.
+	(*sse4_1_extendv2hiv2di2): Ditto.
+	(*sse4_1_extendv2siv2di2): Ditto.
+	(*sse4_1_zero_extendv8qiv8hi2): Ditto.
+	(*sse4_1_zero_extendv4qiv4si2): Ditto.
+	(*sse4_1_zero_extendv2qiv2di2): Ditto.
+	(*sse4_1_zero_extendv4hiv4si2): Ditto.
+	(*sse4_1_zero_extendv2hiv2di2): Ditto.
+	(*sse4_1_zero_extendv2siv2di2): Ditto.
+
+2010-08-25  Jakub Jelinek  <jakub@redhat.com>
+
+	PR rtl-optimization/44858
+	* combine.c (try_combine): If recog_for_combine added CLOBBERs to
+	newi2pat, make sure they don't affect newpat.
+
+	PR rtl-optimization/45400
+	* combine.c (simplify_shift_const_1) <case SUBREG>: Only use
+	SUBREG_REG if both modes are of MODE_INT class.
+
+2010-08-20  Changpeng Fang  <changpeng.fang@amd.com>
+
+	PR tree-optimization/45260
+	* tree-flow.h (may_be_nonaddressable_p): New definition. Make the
+	existing static function global.
+
+	* tree-ssa-loop-ivopts.c (may_be_nonaddressable_p): This function
+	is changed to global.
+
+	* tree-ssa-loop-prefetch.c (gather_memory_references_ref): Call
+	may_be_nonaddressable_p on base, and don't collect this reference
+	if the address of the base could not be taken.
+
+2010-08-20  David Edelsohn  <edelsohn@gnu.org>
+
+	Backport from mainline
+	2010-04-22  David Edelsohn  <edelsohn@gnu.org>
+
+	* config/rs6000/x-aix: Override LDFLAGS for all COMPILERS.
+
+2010-08-19  Uros Bizjak  <ubizjak@gmail.com>
+
+	* config/i386/i386.md (*add<SWI:mode>3_cconly_overflow): Do not use
+	ix86_binary_operator_ok.
+
+2010-08-18  Uros Bizjak  <ubizjak@gmail.com>
+
+	PR target/45327
+	* config/i386/i386.md (<any_or:code><SWI:mode>_3): Do not use
+	ix86_binary_operator_ok.
+
+2010-08-18  H.J. Lu  <hongjiu.lu@intel.com>
+
+	Backport from mainline
+	2010-08-18  Paolo Bonzini  <bonzini@gnu.org>
+
+	PR middle-end/45292
+	* optabs.c (expand_bool_compare_and_swap): Expand pending
+	pops before trying the optab.
+
+2010-08-17  Uros Bizjak  <ubizjak@gmail.com>
+
+	PR target/45296
+	* reginfo.c (globalize_reg): Reject stack registers.
+
+2010-08-16  Changpeng Fang  <changpeng.fang@amd.com>
+
+	Backport from mainline:
+	2010-08-12  Changpeng Fang  <changpeng.fang@amd.com>
+
+	PR tree-optimization/45241
+	* tree-vect-patterns.c (vect_recog_dot_prod_pattern): Give
+	up dot_prod pattern searching if a stmt is outside the loop.
+
+2010-08-16  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>
+
+	Backport from mainline:
+	2010-08-09  Richard Guenther  <rguenther@suse.de>
+
+	PR middle-end/44632
+	* function.c (gimplify_parameters): Do not clear addressable
+	bit of the original parameter.
+
+2010-08-14  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>
+
+	Revert:
+	2010-08-08  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>
+
+	PR boehm-gc/34544
+	* gthr-posix.h (__gthread_start): Delete.
+	(__gthread_active_init): Use pthread_default_stacksize_np instead of
+	pthread_create to determine if hpux pthreads are active.
+	* gthr-posix95.h (__gthread_start): Delete.
+	(__gthread_active_init): Likewise use pthread_default_stacksize_np.
+
+2010-08-12  Jakub Jelinek  <jakub@redhat.com>
+
+	PR middle-end/45262
+	* fold-const.c (make_range) <case NEGATE_EXPR>: Punt if
+	-a overflows.  Normalize the range.
+
+	PR debug/45259
+	* caller-save.c (save_call_clobbered_regs): Only swap notes with
+	DEBUG_INSNs if n_regs_saved.
+
+	Backport from mainline
+	2010-07-30  Jakub Jelinek  <jakub@redhat.com>
+
+	PR debug/45055
+	PR rtl-optimization/45137
+	* rtl.h (prev_nonnote_nondebug_insn, next_nonnote_nondebug_insn): New
+	prototypes.
+	* emit-rtl.c (prev_nonnote_nondebug_insn, next_nonnote_nondebug_insn):
+	New functions.
+	* combine.c (next_nonnote_nondebug_insn): Removed.
+	* ifcvt.c (noce_process_if_block): Use prev_nonnote_nondebug_insn.
+	* haifa-sched.c (queue_to_ready): Use next_nonnote_nondebug_insn.
+	* sched-deps.c (sched_analyze_insn): Likewise.
+	(fixup_sched_groups, deps_start_bb): Use prev_nonnote_nondebug_insn.
+	* rtlanal.c (canonicalize_condition): Likewise.
+	* postreload.c (reload_combine): Likewise.
+	(reload_cse_move2add): Use next_nonnote_nondebug_insn.
+
+2010-08-08  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>
+
+	Backport from mainline.
+	2010-07-17  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>
+
+	PR target/44805
+	* config/pa/pa.h (CONSTANT_ALIGNMENT): Align strings to BITS_PER_WORD
+	on all targets.
+
+2010-08-08  Richard Guenther  <rguenther@suse.de>
+
+	PR middle-end/45034
+	* convert.c (convert_to_integer): Always use an unsigned
+	type for narrowed negate and bitwise not.
+
+2010-08-08  Richard Guenther  <rguenther@suse.de>
+
+	PR tree-optimization/45109
+	* tree-ssa-structalias.c (get_constraint_for_component_ref):
+	Explicitly strip handled components and indirect references.
+
+2010-08-08  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>
+
+	PR boehm-gc/34544
+	* gthr-posix.h (__gthread_start): Delete.
+	(__gthread_active_init): Use pthread_default_stacksize_np instead of
+	pthread_create to determine if hpux pthreads are active.
+	* gthr-posix95.h (__gthread_start): Delete.
+	(__gthread_active_init): Likewise use pthread_default_stacksize_np.
+
+2010-08-06  Eric Botcazou  <ebotcazou@adacore.com>
+
+	PR target/44942
+	* config/sparc/sparc.c (function_arg_advance): Always take into account
+	the padding, if any.
+
+2010-08-06  Uros Bizjak  <ubizjak@gmail.com>
+
+	* expmed.c (expand_mult_const) <case alg_shift>: Expand shift into
+	temporary. Emit move from temporary to accum, so REG_EQUAL note will
+	be attached to this insn in correct mode.
+
+2010-08-06  Uros Bizjak  <ubizjak@gmail.com>
+
+	* config/i386/i386.c (ix86_decompose_address): Check for SI_REG
+	using REGNO of base_reg directly.
+
+2010-08-03  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>
+
+	* config/spu/spu.c (spu_emit_branch_hint): Do not access NOTE_KIND of
+	non-NOTE insns.
+
+2010-08-03  Uros Bizjak  <ubizjak@gmail.com>
+
+	PR target/41089
+	* config/alpha/alpha.c (alpha_build_builtin_va_list): Mark __offset
+	as volatile.
+
+2010-08-03  Martin Jambor  <mjambor@suse.cz>
+
+	PR tree-optimization/44914
+	* tree-sra.c (cfg_changed): New variable.
+	(sra_initialize): Initialize cgf_changed to false.
+	(scan_function): Set cfg_changed if cfg was changed.
+	(perform_intra_sra): Return also TODO_cleanup_cfg if cfg was changed.
+	(ipa_early_sra): Likewise.
+
+2010-08-02  DJ Delorie  <dj@redhat.com>
+
+	* config/rx/predicates.md (rx_constshift_operand): New.
+	* config/rx/rx.md (zs_cond): New.
+	(cbranchsi4): Remove mode.
+	(*cbranchsi4_<code>): Likewise.
+	(*tstbranchsi4_<code>): New.
+	(*tstbranchsi4r_<code>): New.
+	(*tstbranchsi4m_eq): New.
+	(*tstbranchsi4m_ne): New.
+	(cbranchsf4): Remove mode.
+	(*cbranchsf4_<code>): Likewise.
+
+2010-07-31  Richard Guenther  <rguenther@suse.de>
+
+	PR tree-optimization/45052
+	* ipa-pure-const.c (check_stmt): Check volatileness.
+
+2010-07-31  Richard Guenther  <rguenther@suse.de>
+
+	* ipa-prop.c (ipa_modify_formal_parameters): Use
+	build_distinct_type_copy.
+
+2010-07-31  Richard Guenther  <rguenther@suse.de>
+
+	* DEV-PHASE: Set back to prerelease.
+	* BASE-VER: Bump to 4.5.2.
+
 2010-07-31  Release Manager
 
 	* GCC 4.5.1 released.
@@ -105,8 +816,8 @@
 2010-07-19  Bingfeng Mei  <bmei@broadcom.com>
 
 	* ddg.c (create_ddg): Exclude nodes of debug_insn in counting nodes
-        of a loop.
-        * loop-doloop.c (doloop_condition_get): Skip possible debug_insn.
+	of a loop.
+	* loop-doloop.c (doloop_condition_get): Skip possible debug_insn.
 
 2010-07-15  Jie Zhang  <jie@codesourcery.com>
 
@@ -286,7 +997,7 @@
 	if old_decl was DECL_ONE_ONLY.
 
 	2010-06-21  Jakub Jelinek  <jakub@redhat.com>
- 
+
 	PR target/44575
 	* config/i386/i386.c (ix86_gimplify_va_arg): When copying
 	va_arg from a set of register save slots into a temporary,
@@ -392,24 +1103,24 @@
 	Backport from mainline
 	2010-05-17  Martin Jambor  <mjambor@suse.cz>
 
-        PR middle-end/44133
-        * tree-sra.c (create_access_replacement): New parameter rename, mark
-        the replaement for renaming only when it is true.
-        (get_access_replacement): Pass true in the rename parameter of
-        create_access_replacement.
-        (get_unrenamed_access_replacement): New function.
-        (replace_uses_with_default_def_ssa_name): New parameter racc, get the
-        replacement declaration from it.
+	PR middle-end/44133
+	* tree-sra.c (create_access_replacement): New parameter rename, mark
+	the replaement for renaming only when it is true.
+	(get_access_replacement): Pass true in the rename parameter of
+	create_access_replacement.
+	(get_unrenamed_access_replacement): New function.
+	(replace_uses_with_default_def_ssa_name): New parameter racc, get the
+	replacement declaration from it.
 
 2010-06-29  Martin Jambor  <mjambor@suse.cz>
 
 	Backport from mainline
 	2010-04-13  Martin Jambor  <mjambor@suse.cz>
 
-        * tree-sra.c (replace_uses_with_default_def_ssa_name): New function.
-        (sra_modify_assign): Delete stmts loading dead data even if racc has no
-        children.  Call replace_uses_with_default_def_ssa_name to handle
-        SSA_NAES on lhs.
+	* tree-sra.c (replace_uses_with_default_def_ssa_name): New function.
+	(sra_modify_assign): Delete stmts loading dead data even if racc has no
+	children.  Call replace_uses_with_default_def_ssa_name to handle
+	SSA_NAES on lhs.
 
 2010-06-27  Jan Hubicka  <jh@suse.cz>
 
@@ -536,7 +1247,7 @@
 	Backport from mainline:
 	2010-05-18  Steven Bosscher  <steven@gcc.gnu.org>
 
-        * darwin.c (darwin_asm_named_section): Do not add assembler comment
+	* darwin.c (darwin_asm_named_section): Do not add assembler comment
 	after .section directive; just print it before the directive
 	instead.
 
@@ -1659,7 +2370,7 @@
 	* tree-tailcall.c (find_tail_calls): Verify the tail call
 	properly.
 
-2010-04-19 Ira Rosen <irar@il.ibm.com>
+2010-04-19 Ira Rosen  <irar@il.ibm.com>
 
 	PR tree-optimization/43771
 	* tree-vect-slp.c (vect_supported_load_permutation_p): Check that
@@ -1925,11 +2636,11 @@
 	* Makefile.in ($(out_object_file)): Depend on
 	gt-$(basename $(notdir $(out_file))).h.
 
-2010-04-01  Ralf Corsépius <ralf.corsepius@rtems.org>
+2010-04-01  Ralf Corsépius  <ralf.corsepius@rtems.org>
 
 	* config.gcc (lm32-*-rtems*): Add t-lm32.
 
-2010-04-01  Joel Sherrill <joel.sherrill@oarcorp.com>
+2010-04-01  Joel Sherrill  <joel.sherrill@oarcorp.com>
 
 	* config.gcc: Add lm32-*-rtems*.
 	* config/lm32/rtems.h: New file.
@@ -1984,8 +2695,8 @@
 
 	PR middle-end/43602
 	Revert
-	2010-03-30  Seongbae Park <seongbae.park@gmail.com>
-	    Jack Howarth <howarth@bromo.med.uc.edu>
+	2010-03-30  Seongbae Park  <seongbae.park@gmail.com>
+		    Jack Howarth  <howarth@bromo.med.uc.edu>
 
 	* tree-profile.c (tree_init_ic_make_global_vars): Make static
 	variables TLS.
@@ -2276,8 +2987,8 @@
 	* config/s390/s390.c (s390_emit_prologue): Omit issuing a dynamic
 	stack check if the mask would be zero.
 
-2010-03-30  Seongbae Park <seongbae.park@gmail.com>
-	    Jack Howarth <howarth@bromo.med.uc.edu>
+2010-03-30  Seongbae Park  <seongbae.park@gmail.com>
+	    Jack Howarth  <howarth@bromo.med.uc.edu>
 
 	* tree-profile.c (tree_init_ic_make_global_vars): Make static
 	variables TLS.
@@ -2620,7 +3331,7 @@
 	instead of callq.
 
 2010-03-22  Janis Johnson  <janis187@us.ibm.com>
-	    Rainer Orth <ro@CeBiTec.Uni-Bielefeld.DE>
+	    Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
 
 	* doc/sourcebuild.texi (Test Directives): Split into six
 	subsections, with most of the current text in new subsections
@@ -2775,8 +3486,8 @@
 	(sparc_file_end): Emit a hidden comdat symbol for the PIC
 	thunk if possible.  Output CFI information as needed.
 
-2010-03-18  Francois-Xavier Coudert <fxcoudert@gcc.gnu.org>
-	    Jack Howarth <howarth@bromo.med.uc.edu>
+2010-03-18  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>
+	    Jack Howarth  <howarth@bromo.med.uc.edu>
 
 	PR target/36399
 	* config/i386/i386.h: Fix ABI on darwin x86-32.
@@ -2919,7 +3630,7 @@
 	* graphite-sese-to-poly.c (split_reduction_stmt): Skip debug
 	statements before splitting block.
 
-2010-03-16  Rainer Orth <ro@CeBiTec.Uni-Bielefeld.DE>
+2010-03-16  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
 
 	* doc/sourcebuild.texi (Testsuites): Fix markup.
 	Use pathnames relative to gcc/testsuite.
@@ -3531,7 +4242,7 @@
 	* tree-vect-loop.c (vect_transform_loop): Kill out-of-loop debug
 	uses of relevant DEFs that are dead outside the loop too.
 
-2010-03-06  Alexandre Oliva <aoliva@redhat.com>
+2010-03-06  Alexandre Oliva  <aoliva@redhat.com>
 
 	* var-tracking.c (dataflow_set_merge): Swap src and src2.
 	Reverted:
@@ -4313,7 +5024,7 @@
 	* config/spu/spu-c.c (spu_resolve_overloaded_builtin): Call
 	lang_hooks.types_compatible_p instead of comptypes.
 
-2010-02-18  Sebastian Huber <sebastian.huber@embedded-brains.de>
+2010-02-18  Sebastian Huber  <sebastian.huber@embedded-brains.de>
 
 	* config/arm/lib1funcs.asm (__prefer_thumb__): New define.
 	(udivsi3, aeabi_uidivmod, divsi3, aeabi_idivmod): Use Thumb-1 variant
@@ -4384,7 +5095,7 @@
 	statements ...
 	(vrp_visit_phi_node): ... but only for loop PHI nodes.
 
-2010-02-16  Ira Rosen <irar@il.ibm.com>
+2010-02-16  Ira Rosen  <irar@il.ibm.com>
 
 	PR tree-optimization/43074
 	* tree-vectorizer.h (VECTORIZABLE_CYCLE_DEF): New.
@@ -4412,8 +5123,8 @@
 	flag_var_tracking_assignments.
 	* Makefile.in (var-tracking.o): Adjust dependencies.
 
-2010-02-16  Jack Howarth <howarth@bromo.med.uc.edu>
-	    Jakub Jelinek <jakub@redhat.com>
+2010-02-16  Jack Howarth  <howarth@bromo.med.uc.edu>
+	    Jakub Jelinek  <jakub@redhat.com>
 
 	PR target/42854
 	* config/darwin.h (ASM_WEAKEN_DECL): Don't check weak attribute
@@ -4511,7 +5222,7 @@
 
 2010-02-12  Dave Korn  <dave.korn.cygwin@gmail.com>
 	    Jack Howarth  <howarth@bromo.med.uc.edu>
-	    Iain Sandoe <iain.sandoe@sandoe-acoustics.co.uk>
+	    Iain Sandoe  <iain.sandoe@sandoe-acoustics.co.uk>
 
 	PR target/42982
 	Partial revert of unintended change in fix for PR41605.
@@ -5934,7 +6645,7 @@
 	(maybe_tidy_empty_bb): Delete prototype.
 	(purge_empty_blocks): Declare.
 
-2010-01-14  Andrey Belevantsev <abel@ispras.ru>
+2010-01-14  Andrey Belevantsev  <abel@ispras.ru>
 
 	PR rtl-optimization/42249
 	* sel-sched.c (try_replace_dest_reg): When chosen register
Index: gcc/testsuite/gcc.c-torture/execute/pr45034.c
===================================================================
--- gcc/testsuite/gcc.c-torture/execute/pr45034.c	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/gcc.c-torture/execute/pr45034.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,45 @@
+extern void abort (void);
+static void fixnum_neg(signed char x, signed char *py, int *pv)
+{
+  unsigned char ux, uy;
+
+  ux = (unsigned char)x;
+  uy = -ux;
+  *py = (uy <= 127) ? (signed char)uy : (-(signed char)(255 - uy) - 1);
+  *pv = (x == -128) ? 1 : 0;
+}
+
+void __attribute__((noinline)) foo(int x, int y, int v)
+{
+  if (y < -128 || y > 127)
+    abort();
+}
+
+int test_neg(void)
+{
+  signed char x, y;
+  int v, err;
+
+  err = 0;
+  x = -128;
+  for (;;) {
+      fixnum_neg(x, &y, &v);
+      foo((int)x, (int)y, v);
+      if ((v && x != -128) || (!v && x == -128))
+	++err;
+      if (x == 127)
+	break;
+      ++x;
+  }
+  return err;
+}
+
+int main(void)
+{
+  if (sizeof (char) != 1)
+    return 0;
+  if (test_neg() != 0)
+    abort();
+  return 0;
+}
+
Index: gcc/testsuite/gcc.c-torture/execute/pr45070.c
===================================================================
--- gcc/testsuite/gcc.c-torture/execute/pr45070.c	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/gcc.c-torture/execute/pr45070.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,52 @@
+/* PR45070 */
+extern void abort(void);
+
+struct packed_ushort {
+    unsigned short ucs;
+} __attribute__((packed));
+
+struct source {
+    int pos, length;
+    int flag;
+};
+
+static void __attribute__((noinline)) fetch(struct source *p)
+{
+    p->length = 128;
+}
+    
+static struct packed_ushort __attribute__((noinline)) next(struct source *p)
+{
+    struct packed_ushort rv;
+
+    if (p->pos >= p->length) {
+	if (p->flag) {
+	    p->flag = 0;
+	    fetch(p);
+	    return next(p);
+	}
+	p->flag = 1;
+	rv.ucs = 0xffff;
+	return rv;
+    }
+    rv.ucs = 0;
+    return rv;
+}
+
+int main(void)
+{
+    struct source s;
+    int i;
+
+    s.pos = 0;
+    s.length = 0;
+    s.flag = 0;
+
+    for (i = 0; i < 16; i++) {
+	struct packed_ushort rv = next(&s);
+	if ((i == 0 && rv.ucs != 0xffff)
+	    || (i > 0 && rv.ucs != 0))
+	    abort();
+    }
+    return 0;
+}
Index: gcc/testsuite/gcc.c-torture/execute/pr45695.c
===================================================================
--- gcc/testsuite/gcc.c-torture/execute/pr45695.c	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/gcc.c-torture/execute/pr45695.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,32 @@
+/* PR rtl-optimization/45695 */
+
+extern void abort (void);
+
+__attribute__((noinline)) void
+g (int x)
+{
+  asm volatile ("" : "+r" (x));
+}
+
+__attribute__((noinline)) int
+f (int a, int b, int d)
+{
+  int r = -1;
+  b += d;
+  if (d == a)
+    r = b - d;
+  g (b);
+  return r;
+}
+
+int
+main (void)
+{
+  int l;
+  asm ("" : "=r" (l) : "0" (0));
+  if (f (l + 0, l + 1, l + 4) != -1)
+    abort ();
+  if (f (l + 4, l + 1, l + 4) != 1)
+    abort ();
+  return 0;
+}
Index: gcc/testsuite/gcc.c-torture/execute/pr40386.c
===================================================================
--- gcc/testsuite/gcc.c-torture/execute/pr40386.c	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/gcc.c-torture/execute/pr40386.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,99 @@
+/* { dg-options "-fno-ira-share-spill-slots" } */
+#define CHAR_BIT 8
+
+#define ROR(a,b) (((a) >> (b)) | ((a) << ((sizeof (a) * CHAR_BIT) - (b))))
+#define ROL(a,b) (((a) << (b)) | ((a) >> ((sizeof (a) * CHAR_BIT) - (b))))
+
+#define CHAR_VALUE ((char)0xf234)
+#define SHORT_VALUE ((short)0xf234)
+#define INT_VALUE ((int)0xf234)
+#define LONG_VALUE ((long)0xf2345678L)
+#define LL_VALUE ((long long)0xf2345678abcdef0LL)
+
+#define SHIFT1 4
+#define SHIFT2 ((sizeof (long long) * CHAR_BIT) - SHIFT1)
+
+char c = CHAR_VALUE;
+short s = SHORT_VALUE;
+int i = INT_VALUE;
+long l = LONG_VALUE;
+long long ll = LL_VALUE;
+int shift1 = SHIFT1;
+int shift2 = SHIFT2;
+
+main ()
+{
+  if (ROR (c, shift1) != ROR (CHAR_VALUE, SHIFT1))
+    abort ();
+
+  if (ROR (c, SHIFT1) != ROR (CHAR_VALUE, SHIFT1))
+    abort ();
+
+  if (ROR (s, shift1) != ROR (SHORT_VALUE, SHIFT1))
+    abort ();
+
+  if (ROR (s, SHIFT1) != ROR (SHORT_VALUE, SHIFT1))
+    abort ();
+
+  if (ROR (i, shift1) != ROR (INT_VALUE, SHIFT1))
+    abort ();
+
+  if (ROR (i, SHIFT1) != ROR (INT_VALUE, SHIFT1))
+    abort ();
+
+  if (ROR (l, shift1) != ROR (LONG_VALUE, SHIFT1))
+    abort ();
+
+  if (ROR (l, SHIFT1) != ROR (LONG_VALUE, SHIFT1))
+    abort ();
+
+  if (ROR (ll, shift1) != ROR (LL_VALUE, SHIFT1))
+    abort ();
+
+  if (ROR (ll, SHIFT1) != ROR (LL_VALUE, SHIFT1))
+    abort ();
+
+  if (ROR (ll, shift2) != ROR (LL_VALUE, SHIFT2))
+    abort ();
+
+  if (ROR (ll, SHIFT2) != ROR (LL_VALUE, SHIFT2))
+    abort ();
+
+  if (ROL (c, shift1) != ROL (CHAR_VALUE, SHIFT1))
+    abort ();
+
+  if (ROL (c, SHIFT1) != ROL (CHAR_VALUE, SHIFT1))
+    abort ();
+
+  if (ROL (s, shift1) != ROL (SHORT_VALUE, SHIFT1))
+    abort ();
+
+  if (ROL (s, SHIFT1) != ROL (SHORT_VALUE, SHIFT1))
+    abort ();
+
+  if (ROL (i, shift1) != ROL (INT_VALUE, SHIFT1))
+    abort ();
+
+  if (ROL (i, SHIFT1) != ROL (INT_VALUE, SHIFT1))
+    abort ();
+
+  if (ROL (l, shift1) != ROL (LONG_VALUE, SHIFT1))
+    abort ();
+
+  if (ROL (l, SHIFT1) != ROL (LONG_VALUE, SHIFT1))
+    abort ();
+
+  if (ROL (ll, shift1) != ROL (LL_VALUE, SHIFT1))
+    abort ();
+
+  if (ROL (ll, SHIFT1) != ROL (LL_VALUE, SHIFT1))
+    abort ();
+
+  if (ROL (ll, shift2) != ROL (LL_VALUE, SHIFT2))
+    abort ();
+
+  if (ROL (ll, SHIFT2) != ROL (LL_VALUE, SHIFT2))
+    abort ();
+
+  exit (0);
+}
Index: gcc/testsuite/gcc.c-torture/execute/pr40386.x
===================================================================
--- gcc/testsuite/gcc.c-torture/execute/pr40386.x	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/gcc.c-torture/execute/pr40386.x	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,2 @@
+set additional_flags "-fno-ira-share-spill-slots"
+return 0
Index: gcc/testsuite/gcc.c-torture/execute/pr44858.c
===================================================================
--- gcc/testsuite/gcc.c-torture/execute/pr44858.c	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/gcc.c-torture/execute/pr44858.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,28 @@
+/* PR rtl-optimization/44858 */
+
+extern void abort (void);
+int a = 3;
+int b = 1;
+
+__attribute__((noinline)) long long
+foo (int x, int y)
+{
+  return x / y;
+}
+
+__attribute__((noinline)) int
+bar (void)
+{
+  int c = 2;
+  c &= foo (1, b) > b;
+  b = (a != 0) | c;
+  return c;
+}
+
+int
+main (void)
+{
+  if (bar () != 0 || b != 1)
+    abort ();
+  return 0;
+}
Index: gcc/testsuite/gcc.c-torture/execute/pr45262.c
===================================================================
--- gcc/testsuite/gcc.c-torture/execute/pr45262.c	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/gcc.c-torture/execute/pr45262.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,33 @@
+/* PR middle-end/45262 */
+
+extern void abort (void);
+
+int
+foo (unsigned int x)
+{
+  return ((int) x < 0) || ((int) (-x) < 0);
+}
+
+int
+bar (unsigned int x)
+{
+  return x >> 31 || (-x) >> 31;
+}
+
+int
+main (void)
+{
+  if (foo (1) != 1)
+    abort ();
+  if (foo (0) != 0)
+    abort ();
+  if (foo (-1) != 1)
+    abort ();
+  if (bar (1) != 1)
+    abort ();
+  if (bar (0) != 0)
+    abort ();
+  if (bar (-1) != 1)
+    abort ();
+  return 0;
+}
Index: gcc/testsuite/gcc.c-torture/compile/pr45728.c
===================================================================
--- gcc/testsuite/gcc.c-torture/compile/pr45728.c	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/gcc.c-torture/compile/pr45728.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,17 @@
+/* PR rtl-optimization/45728 */
+
+union U
+{
+  int *m;
+  double d;
+};
+
+int i;
+union U u;
+
+int
+foo (void)
+{
+  union U v = { &i };
+  return u.d == v.d;
+}
Index: gcc/testsuite/gcc.c-torture/compile/pr45109.c
===================================================================
--- gcc/testsuite/gcc.c-torture/compile/pr45109.c	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/gcc.c-torture/compile/pr45109.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,38 @@
+struct o_fsm_t;
+struct o_fsm_event_t;
+
+typedef void (*fn_t) (struct o_fsm_t *,
+		      struct o_fsm_event_t const *);
+
+struct o_fsm_state_t {
+    fn_t dispatch;
+};
+
+struct o_fsm_t {
+    fn_t dispatch;
+};
+
+extern struct o_fsm_state_t o_fsm_tran(struct o_fsm_t *fsm,
+				       struct o_fsm_state_t next_state);
+static void plist_parser_state_start(struct o_fsm_t *fsm,
+				     struct o_fsm_event_t const *fsm_event);
+
+struct o_fsm_state_t o_fsm_state(fn_t dispatch_fcn)
+{
+  return *(struct o_fsm_state_t *)&dispatch_fcn;
+}
+
+typedef struct _o_plist_parser_t {
+    struct o_fsm_t fsm;
+} o_plist_parser_t;
+
+static void plist_parser_state_start(struct o_fsm_t *fsm,
+				     struct o_fsm_event_t const *fsm_event)
+{
+}
+
+void o_plist_deserialize_xml(int fin)
+{
+  o_plist_parser_t parser;
+  o_fsm_tran(&parser.fsm, o_fsm_state(plist_parser_state_start));
+}
Index: gcc/testsuite/gcc.c-torture/compile/pr45969-1.c
===================================================================
--- gcc/testsuite/gcc.c-torture/compile/pr45969-1.c	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/gcc.c-torture/compile/pr45969-1.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,6 @@
+/* { dg-options "-std=c89" } */
+void crash() {
+    double l[4];
+    if((l[0]+l[2]) && (l[1]+l[3])){
+    }
+}
Index: gcc/testsuite/gcc.c-torture/compile/20100915-1.c
===================================================================
--- gcc/testsuite/gcc.c-torture/compile/20100915-1.c	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/gcc.c-torture/compile/20100915-1.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,82 @@
+/* PR rtl-optimization/45593 */
+/* Testcase by Arnaud Lacombe <lacombar@gmail.com> */
+
+typedef unsigned int __u32;
+typedef __u32 __be32;
+static inline __attribute__((always_inline)) int __attribute__((__cold__)) printk(const char *s, ...) { return 0; }
+typedef struct journal_s journal_t;
+typedef struct journal_header_s
+{
+ __be32 h_magic;
+ __be32 h_blocktype;
+ __be32 h_sequence;
+} journal_header_t;
+typedef struct journal_superblock_s
+{
+ journal_header_t s_header;
+ __be32 s_blocksize;
+ __be32 s_maxlen;
+} journal_superblock_t;
+struct journal_s
+{
+ struct buffer_head *j_sb_buffer;
+ journal_superblock_t *j_superblock;
+ int j_format_version;
+ int j_blocksize;
+ unsigned int j_maxlen;
+};
+static void journal_fail_superblock (journal_t *journal)
+{
+ journal->j_sb_buffer = ((void *)0);
+}
+static int journal_get_superblock(journal_t *journal)
+{
+ struct buffer_head *bh;
+ journal_superblock_t *sb;
+ int err = -100;
+ bh = journal->j_sb_buffer;
+ if (!buffer_uptodate(bh)) {
+  if (!buffer_uptodate(bh)) {
+   printk ("JBD: IO error reading journal superblock\n");
+   goto out;
+  }
+ }
+ err = -101;
+ if (sb->s_header.h_magic != (( __be32)(__u32)(0)) ||
+     sb->s_blocksize != (( __be32)(__u32)(journal->j_blocksize))) {
+  printk("JBD: no valid journal superblock found\n");
+  goto out;
+ }
+ switch((( __u32)(__be32)(sb->s_header.h_blocktype))) {
+ case 0:
+ case 1:
+  break;
+ default:
+  goto out;
+ }
+ if ((( __u32)(__be32)(sb->s_maxlen)) < journal->j_maxlen)
+  journal->j_maxlen = (( __u32)(__be32)(sb->s_maxlen));
+ else if ((( __u32)(__be32)(sb->s_maxlen)) > journal->j_maxlen) {
+  printk ("JBD: journal file too short\n");
+  goto out;
+ }
+ return 0;
+out:
+ journal_fail_superblock(journal);
+ return err;
+}
+static int load_superblock(journal_t *journal)
+{
+ journal_get_superblock(journal);
+ return 0;
+}
+int jbd2_journal_update_format (journal_t *journal)
+{
+ journal_get_superblock(journal);
+ return 0;
+}
+int jbd2_journal_wipe(journal_t *journal, int write)
+{
+ load_superblock(journal);
+ return 0;
+}
Index: gcc/testsuite/gcc.c-torture/compile/limits-fnargs.c
===================================================================
--- gcc/testsuite/gcc.c-torture/compile/limits-fnargs.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/gcc.c-torture/compile/limits-fnargs.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1,4 +1,5 @@
 /* { dg-timeout-factor 4.0 } */
+/* { dg-require-effective-target run_expensive_tests } */
 
 #define PAR1 int, int, int, int, int, int, int, int, int, int
 #define PAR2 PAR1, PAR1, PAR1, PAR1, PAR1, PAR1, PAR1, PAR1, PAR1, PAR1
Index: gcc/testsuite/gcc.target/i386/builtin-unreachable.c
===================================================================
--- gcc/testsuite/gcc.target/i386/builtin-unreachable.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/gcc.target/i386/builtin-unreachable.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -9,5 +9,5 @@
     __builtin_unreachable ();
   return p ? 1 : 0;
 }
-/* { dg-final { scan-assembler-not "%e\[bs\]p" { target { ! *-*-darwin* } } } } */
+/* { dg-final { scan-assembler-not "%e\[bs\]p" } } */
 /* { dg-final { scan-assembler-not "\[\\t \]+j" } } */
Index: gcc/testsuite/gcc.target/i386/pr36502.c
===================================================================
--- gcc/testsuite/gcc.target/i386/pr36502.c	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/gcc.target/i386/pr36502.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,7 @@
+/* PR target/36502 */
+/* { dg-do compile { target { *-*-darwin* && ilp32 } } } */
+/* { dg-options "-O -fomit-frame-pointer -fno-pic -S" } */
+int a;
+void f() {a++;}
+/* { dg-final { scan-assembler-not "esp" } } */
+
Index: gcc/testsuite/gcc.target/i386/pr45296.c
===================================================================
--- gcc/testsuite/gcc.target/i386/pr45296.c	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/gcc.target/i386/pr45296.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,4 @@
+/* { dg-do compile } */
+/* { dg-options "" } */
+
+register long double F80 asm("st"); /* { dg-error "stack register" } */
Index: gcc/testsuite/gcc.target/i386/pr45500.c
===================================================================
--- gcc/testsuite/gcc.target/i386/pr45500.c	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/gcc.target/i386/pr45500.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,6 @@
+/* PR debug/45500 */
+/* { dg-do compile } */
+/* { dg-options "-g -msse" } */
+
+typedef char V __attribute__ ((__vector_size__ (16)));
+static const V s = { '\n', '\r', '?', '\\' };
Index: gcc/testsuite/gcc.target/i386/pr22076.c
===================================================================
--- gcc/testsuite/gcc.target/i386/pr22076.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/gcc.target/i386/pr22076.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1,4 +1,5 @@
-/* { dg-do compile } */
+/* Fails on 32-bit Solaris 2/x86: PR target/44452 */
+/* { dg-do compile { target { ! { i?86-*-solaris2* && ilp32 } } } } */
 /* { dg-options "-O2 -fomit-frame-pointer -flax-vector-conversions -mmmx" } */
 
 #include <mmintrin.h>
Index: gcc/testsuite/gcc.target/i386/abi-2.c
===================================================================
--- gcc/testsuite/gcc.target/i386/abi-2.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/gcc.target/i386/abi-2.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -6,4 +6,5 @@
 typedef long long __m256i __attribute__ ((__vector_size__ (32)));
 __m256i foo (void) { return (__m256i){ 1, 2, 3, 4 }; }
 
-/* { dg-final { scan-assembler-times "ymm0" 1 } } */
+/* Fails on 32-bit Solaris 2/x86: PR target/44452 */
+/* { dg-final { scan-assembler-times "ymm0" 1 { xfail { i?86-*-solaris2* && ilp32 } } } } */
Index: gcc/testsuite/gcc.target/x86_64/abi/avx/abi-avx.exp
===================================================================
--- gcc/testsuite/gcc.target/x86_64/abi/avx/abi-avx.exp	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/gcc.target/x86_64/abi/avx/abi-avx.exp	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -28,9 +28,20 @@
 }
 
 
+# If the linker used understands -M <mapfile>, pass it to clear hardware
+# capabilities set by the Sun assembler.
+set flags ""
+set clearcap_ldflags "-Wl,-M,$srcdir/gcc.target/i386/clearcap.map"
+
+if [check_no_compiler_messages mapfile executable {
+	int main (void) { return 0; }
+  } $clearcap_ldflags ] {
+  set flags $clearcap_ldflags
+}
+
 torture-init
 set-torture-options $C_TORTURE_OPTIONS
-set additional_flags "-W -Wall -mavx"
+set additional_flags "-W -Wall -mavx $flags"
 
 foreach src [lsort [glob -nocomplain $srcdir/$subdir/test_*.c]] {
     if {[runtest_file_p $runtests $src]} {
Index: gcc/testsuite/gcc.target/sparc/mnofpu.c
===================================================================
--- gcc/testsuite/gcc.target/sparc/mnofpu.c	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/gcc.target/sparc/mnofpu.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,90 @@
+/* PR target/35664 */
+/* Tetstcase by Mike Stein <mstein.lists@googlemail.com> */
+
+/* { dg-do compile } */
+/* { dg-options "-O2 -mno-fpu" } */
+
+typedef unsigned char u8;
+typedef unsigned short u16;
+typedef unsigned int u32;
+typedef unsigned long long u64;
+struct pt_regs {
+};
+static inline __attribute__((always_inline)) struct task_struct *__get_current(void)
+{
+}
+static inline __attribute__((always_inline)) u32 flip_dword (u32 l)
+{
+ return ((l&0xff)<<24) | (((l>>8)&0xff)<<16) | (((l>>16)&0xff)<<8)| ((l>>24)&0xff);
+}
+static inline __attribute__((always_inline)) u32 __readl(const volatile void *addr)
+{
+ return flip_dword(*( volatile u32 *)addr);
+}
+enum e1e_registers {
+ E1000_PRC64 = 0x0405C,
+ E1000_PRC127 = 0x04060,
+ E1000_PRC255 = 0x04064,
+ E1000_PTC511 = 0x040E4,
+ E1000_PTC1023 = 0x040E8,
+ E1000_PTC1522 = 0x040EC,
+ E1000_MPTC = 0x040F0,
+};
+enum e1000_media_type {
+ e1000_media_type_copper = 1,
+};
+struct e1000_rx_desc {
+ struct {
+ } wb;
+};
+struct e1000_hw_stats {
+ u64 prc64;
+ u64 prc127;
+ u64 prc255;
+ u64 ptc511;
+ u64 ptc1023;
+ u64 ptc1522;
+ u64 mptc;
+};
+struct e1000_shadow_ram {
+ u16 value;
+};
+struct e1000_dev_spec_ich8lan {
+ struct e1000_shadow_ram shadow_ram[2048];
+};
+struct e1000_hw {
+ u8 *hw_addr;
+ union {
+  struct e1000_dev_spec_ich8lan ich8lan;
+ } dev_spec;
+ enum e1000_media_type media_type;
+};
+struct e1000_adapter {
+ u16 link_speed;
+ struct e1000_hw hw;
+ struct e1000_hw_stats stats;
+ unsigned int flags;
+};
+static inline __attribute__((always_inline)) u32 __er32(struct e1000_hw *hw, unsigned long reg)
+{
+ return __readl(hw->hw_addr + reg);
+}
+void e1000e_update_stats(struct e1000_adapter *adapter)
+{
+ struct e1000_hw *hw = &adapter->hw;
+ u16 phy_tmp;
+ if (adapter->flags & (1 << 10)) {
+  adapter->stats.prc64 += __er32(hw, E1000_PRC64);
+  adapter->stats.prc127 += __er32(hw, E1000_PRC127);
+  adapter->stats.prc255 += __er32(hw, E1000_PRC255);
+  adapter->stats.ptc511 += __er32(hw, E1000_PTC511);
+  adapter->stats.ptc1023 += __er32(hw, E1000_PTC1023);
+  adapter->stats.ptc1522 += __er32(hw, E1000_PTC1522);
+ }
+ adapter->stats.mptc += __er32(hw, E1000_MPTC);
+ if (hw->media_type == e1000_media_type_copper) {
+  if ((adapter->link_speed == 1000) &&
+     (!e1e_rphy(hw, 0x0A, &phy_tmp))) {
+  }
+ }
+}
Index: gcc/testsuite/gnat.dg/return2_pkg.ads
===================================================================
--- gcc/testsuite/gnat.dg/return2_pkg.ads	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/gnat.dg/return2_pkg.ads	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,7 @@
+package Return2_Pkg is
+
+  function F return String;
+
+  function G (Line : String; Index : Positive) return String;
+
+end Return2_Pkg;
Index: gcc/testsuite/gnat.dg/return2.adb
===================================================================
--- gcc/testsuite/gnat.dg/return2.adb	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/gnat.dg/return2.adb	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,33 @@
+-- { dg-do compile }
+-- { dg-options "-O" }
+
+with Return2_Pkg; use Return2_Pkg;
+
+package body Return2 is
+
+  function Value_Internal (Image : String) return Result_Internal_T is
+  begin
+    return (Member => False);
+  end;
+
+  type Result_T is array (1 .. 2) of Result_Internal_T;
+
+  function Value (Img : String) return T is
+    My_F : constant String := F;
+    Result : Result_T;
+    Value : T;
+  begin
+    for I in Result'Range loop
+      if G (My_F, I) /= "" then
+        Result (I) := Value_Internal (G (My_F, I));
+        if Result (I).Member then
+          Value (Result (I).Data) := True;
+        else
+          raise Program_Error;
+        end if;
+      end if;
+    end loop;
+    return Value;
+  end;
+
+end Return2;
Index: gcc/testsuite/gnat.dg/return2.ads
===================================================================
--- gcc/testsuite/gnat.dg/return2.ads	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/gnat.dg/return2.ads	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,18 @@
+package Return2 is
+
+  type Kind_T is (One, Two);
+
+  type T is array (Kind_T) of Boolean;
+
+  type Result_Internal_T (Member : Boolean := False) is record
+    case Member is
+      when True =>
+        Data : Kind_T := Kind_T'First;
+      when False =>
+        null;
+    end case;
+  end record;
+
+  function Value (Img : String) return T;
+
+end Return2;
Index: gcc/testsuite/gcc.dg/20050330-2.c
===================================================================
--- gcc/testsuite/gcc.dg/20050330-2.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/gcc.dg/20050330-2.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -19,5 +19,3 @@
     x->b[y] = x->b[y + 1];
   x->b[x->a] = (void *) 0;
 }
-
-/* { dg-final { cleanup-coverage-files } } */
Index: gcc/testsuite/gcc.dg/nested-func-8.c
===================================================================
--- gcc/testsuite/gcc.dg/nested-func-8.c	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/gcc.dg/nested-func-8.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,57 @@
+/* { dg-do run } */
+/* { dg-options "-O -fno-inline" } */
+
+extern void abort (void);
+
+/* Return 0 and clobber the static chain.  */
+
+int
+zero (int n)
+{
+  int
+  nested (int m)
+  {
+    return m - n;
+  }
+
+  return nested (n);
+}
+
+/* Return the triple of ARG in a convoluted manner.  */
+
+int
+triple (int arg)
+{
+  int
+  read_arg (void)
+  {
+    return arg;
+  }
+
+  int
+  parent (int nested_arg)
+  {
+    int
+    child1 (void)
+    {
+      return parent (zero (5));
+    }
+
+    int
+    child2 (void)
+    {
+      return nested_arg + read_arg ();
+    }
+
+    return (nested_arg == 0 ? 0 : child1 ()) + child2 ();
+  }
+
+  return parent (arg);
+}
+
+int main(void)
+{
+  if (triple (13) != 3 * 13)
+    abort ();
+  return 0;
+}
Index: gcc/testsuite/gcc.dg/gomp/atomic-14.c
===================================================================
--- gcc/testsuite/gcc.dg/gomp/atomic-14.c	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/gcc.dg/gomp/atomic-14.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,43 @@
+/* PR middle-end/45423 */
+/* { dg-do compile } */
+/* { dg-options "-fopenmp" } */
+
+#ifdef __cplusplus
+bool *baz ();
+#else
+_Bool *baz ();
+#endif
+int *bar ();
+
+int
+foo (void)
+{
+  #pragma omp barrier
+  #pragma omp atomic
+    (*bar ())++;
+  #pragma omp barrier
+  #pragma omp atomic
+    ++(*bar ());
+  #pragma omp barrier
+  #pragma omp atomic
+    (*bar ())--;
+  #pragma omp barrier
+  #pragma omp atomic
+    --(*bar ());
+  #pragma omp barrier
+  #pragma omp atomic
+    (*baz ())++;
+  #pragma omp barrier
+  #pragma omp atomic
+    ++(*baz ());
+#ifndef __cplusplus
+  #pragma omp barrier
+  #pragma omp atomic
+    (*baz ())--;
+  #pragma omp barrier
+  #pragma omp atomic
+    --(*baz ());
+  #pragma omp barrier
+#endif
+  return 0;
+}
Index: gcc/testsuite/gcc.dg/gomp/pr34610.c
===================================================================
--- gcc/testsuite/gcc.dg/gomp/pr34610.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/gcc.dg/gomp/pr34610.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -26,5 +26,3 @@
   for (i = 0; i < 10; ++i)
     bar (i);
 }
-
-/* { dg-final { cleanup-coverage-files } } */
Index: gcc/testsuite/gcc.dg/gomp/atomic-12.c
===================================================================
--- gcc/testsuite/gcc.dg/gomp/atomic-12.c	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/gcc.dg/gomp/atomic-12.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,306 @@
+/* PR middle-end/45423 */
+/* { dg-do compile } */
+/* { dg-options "-fopenmp -fdump-tree-gimple -g0" } */
+/* atomicvar should never be referenced in between the barrier and
+   following #pragma omp atomic_load.  */
+/* { dg-final { scan-tree-dump-not "barrier\[^#\]*atomicvar" "gimple" } } */
+/* { dg-final { cleanup-tree-dump "gimple" } } */
+
+#ifdef __cplusplus
+bool atomicvar, c;
+#else
+_Bool atomicvar, c;
+#endif
+int i, atomicvar2, c2;
+
+int
+foo (void)
+{
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar |= -1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar |= 0;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar |= 1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar |= 2;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar |= c;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar ^= -1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar ^= 0;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar ^= 1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar ^= 2;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar ^= c;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar &= -1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar &= 0;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar &= 1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar &= 2;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar &= c;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar += -1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar += 0;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar += 1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar += 2;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar += c;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar -= -1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar -= 0;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar -= 1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar -= 2;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar -= c;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar *= -1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar *= 0;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar *= 1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar *= 2;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar *= c;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar /= -1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar /= 1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar /= 2;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar /= c;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar <<= 0;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar <<= 1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar <<= 2;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar <<= i;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar >>= 0;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar >>= 1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar >>= 2;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar >>= i;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar++;
+  #pragma omp barrier
+  #pragma omp atomic
+    ++atomicvar;
+  #pragma omp barrier
+#ifndef __cplusplus
+  #pragma omp atomic
+    atomicvar--;
+  #pragma omp barrier
+  #pragma omp atomic
+    --atomicvar;
+  #pragma omp barrier
+#endif
+  return 0;
+}
+
+int
+bar (void)
+{
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 |= -1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 |= 0;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 |= 1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 |= 2;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 |= c2;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 ^= -1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 ^= 0;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 ^= 1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 ^= 2;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 ^= c2;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 &= -1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 &= 0;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 &= 1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 &= 2;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 &= c2;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 += -1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 += 0;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 += 1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 += 2;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 += c2;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 -= -1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 -= 0;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 -= 1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 -= 2;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 -= c2;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 *= -1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 *= 0;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 *= 1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 *= 2;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 *= c2;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 /= -1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 /= 1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 /= 2;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 /= c2;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 <<= 0;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 <<= 1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 <<= 2;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 <<= i;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 >>= 0;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 >>= 1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 >>= 2;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 >>= i;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2++;
+  #pragma omp barrier
+  #pragma omp atomic
+    ++atomicvar2;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2--;
+  #pragma omp barrier
+  #pragma omp atomic
+    --atomicvar2;
+  #pragma omp barrier
+  return 0;
+}
Index: gcc/testsuite/gcc.dg/gomp/pr27573.c
===================================================================
--- gcc/testsuite/gcc.dg/gomp/pr27573.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/gcc.dg/gomp/pr27573.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -16,5 +16,3 @@
   }
   return 0;
 }
-
-/* { dg-final { cleanup-coverage-files } } */
Index: gcc/testsuite/gcc.dg/gomp/atomic-13.c
===================================================================
--- gcc/testsuite/gcc.dg/gomp/atomic-13.c	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/gcc.dg/gomp/atomic-13.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,9 @@
+/* PR middle-end/45423 */
+/* { dg-do compile } */
+/* { dg-options "-fopenmp -fdump-tree-gimple -g0 -O2" } */
+/* atomicvar should never be referenced in between the barrier and
+   following #pragma omp atomic_load.  */
+/* { dg-final { scan-tree-dump-not "barrier\[^#\]*atomicvar" "gimple" } } */
+/* { dg-final { cleanup-tree-dump "gimple" } } */
+
+#include "atomic-12.c"
Index: gcc/testsuite/gcc.dg/pr32773.c
===================================================================
--- gcc/testsuite/gcc.dg/pr32773.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/gcc.dg/pr32773.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -7,5 +7,3 @@
   if (p)
     *p = 0;
 } /* { dg-message "note: \[^\n\]*execution counts estimated" } */
-
-/* { dg-final { cleanup-coverage-files } } */
Index: gcc/testsuite/gcc.dg/20030107-1.c
===================================================================
--- gcc/testsuite/gcc.dg/20030107-1.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/gcc.dg/20030107-1.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -3,5 +3,3 @@
 
 extern void bar(void) __attribute__((noreturn));
 int foo (void) { bar(); }
-
-/* { dg-final { cleanup-coverage-files } } */
Index: gcc/testsuite/gcc.dg/20051201-1.c
===================================================================
--- gcc/testsuite/gcc.dg/20051201-1.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/gcc.dg/20051201-1.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -24,5 +24,3 @@
   
   res = bar ();
 }
-
-/* { dg-final { cleanup-coverage-files } } */
Index: gcc/testsuite/gcc.dg/debug/dwarf2/aranges-fnsec-1.c
===================================================================
--- gcc/testsuite/gcc.dg/debug/dwarf2/aranges-fnsec-1.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/gcc.dg/debug/dwarf2/aranges-fnsec-1.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -2,6 +2,7 @@
    text section if nothing went in there.  */
 /* Origin: Joseph Myers <joseph@codesourcery.com> */
 /* { dg-do compile } */
+/* { dg-require-effective-target function_sections } */
 /* { dg-options "-gdwarf-2 -ffunction-sections -w -dA" } */
 /* { dg-final { scan-assembler-not "\\.Letext0-\\.Ltext0" } } */
 /* { dg-final { scan-assembler-not "\\.Ltext0\[^\n\r\]*Offset 0x0" } } */
Index: gcc/testsuite/gcc.dg/20030702-1.c
===================================================================
--- gcc/testsuite/gcc.dg/20030702-1.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/gcc.dg/20030702-1.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -8,5 +8,3 @@
 {
   fork ();
 }
-
-/* { dg-final { cleanup-coverage-files } } */
Index: gcc/testsuite/gcc.dg/march.c
===================================================================
--- gcc/testsuite/gcc.dg/march.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/gcc.dg/march.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1,4 +1,5 @@
 /* { dg-do compile } */
+/* { dg-skip-if "" { *-*-* } { "-march=*" } { "" } } */
 /* { dg-options "-march=foo" } */
 /* { dg-error "march" "" { target *-*-* } 0 } */
 /* { dg-bogus "mtune" "" { target *-*-* } 0 } */
Index: gcc/testsuite/gcc.dg/profile-dir-1.c
===================================================================
--- gcc/testsuite/gcc.dg/profile-dir-1.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/gcc.dg/profile-dir-1.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1,6 +1,5 @@
 /* { dg-do compile } */
 /* { dg-options "-O -fprofile-generate=. -fdump-tree-tree_profile" } */
-/* { dg-require-host-local "" } */
 /* { dg-final { scan-tree-dump " ./profile-dir-1.gcda" "tree_profile" } } */
 
 int
@@ -9,5 +8,4 @@
   return 0;
 }
 
-/* { dg-final { cleanup-coverage-files } } */
 /* { dg-final { cleanup-tree-dump "tree_profile" } } */
Index: gcc/testsuite/gcc.dg/pr24225.c
===================================================================
--- gcc/testsuite/gcc.dg/pr24225.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/gcc.dg/pr24225.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -13,5 +13,3 @@
     return 0;
   }
 }
-
-/* { dg-final { cleanup-coverage-files } } */
Index: gcc/testsuite/gcc.dg/pr45079.c
===================================================================
--- gcc/testsuite/gcc.dg/pr45079.c	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/gcc.dg/pr45079.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,10 @@
+/* PR c/45079 */
+/* { dg-do compile } */
+
+void
+foo (const char *p, int cond, int a, int b)
+{
+  p[cond ? a : b] = '\0';	/* { dg-error "assignment of read-only location" } */
+}
+
+/* { dg-bogus "not supported by" "" { target *-*-* } 0 } */
Index: gcc/testsuite/gcc.dg/graphite/interchange-0.c
===================================================================
--- gcc/testsuite/gcc.dg/graphite/interchange-0.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/gcc.dg/graphite/interchange-0.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -47,4 +47,4 @@
 }
 
 /* { dg-final { scan-tree-dump-times "will be interchanged" 1 "graphite" } } */
-/* { dg -final { cleanup-tree-dump "graphite" } } */
+/* { dg-final { cleanup-tree-dump "graphite" } } */
Index: gcc/testsuite/gcc.dg/pragma-init-fini.c
===================================================================
--- gcc/testsuite/gcc.dg/pragma-init-fini.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/gcc.dg/pragma-init-fini.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1,6 +1,7 @@
 /* Tests for #pragma init and #pragma fini.  */
 
 /* { dg-do run { target *-*-solaris2.* } } */
+/* { dg-skip-if "no .pushsection/.popsection" { i?86-*-solaris2.8 && { ! gas } } } */
 
 extern void abort ();
 
Index: gcc/testsuite/gcc.dg/pr43058.c
===================================================================
--- gcc/testsuite/gcc.dg/pr43058.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/gcc.dg/pr43058.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1,6 +1,7 @@
 /* PR debug/43058 */
 /* { dg-do compile } */
 /* { dg-options "-g -O2" } */
+/* { dg-timeout-factor 4 } */
 
 extern void *f1 (void *, void *, void *);
 extern void *f2 (const char *, int, int, int, void *(*) ());
Index: gcc/testsuite/gcc.dg/pr26570.c
===================================================================
--- gcc/testsuite/gcc.dg/pr26570.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/gcc.dg/pr26570.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -5,5 +5,3 @@
 {
   return a / b;
 } /* { dg-message "note: \[^\n\]*execution counts estimated" } */
-
-/* { dg-final { cleanup-coverage-files } } */
Index: gcc/testsuite/gcc.dg/lto/20091216-1_0.c
===================================================================
--- gcc/testsuite/gcc.dg/lto/20091216-1_0.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/gcc.dg/lto/20091216-1_0.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1,6 +1,10 @@
 /* { dg-lto-do run } */
 
+#ifdef __ia64
+asm (".globl start_\nstart_: nop 0");
+#else
 asm (".globl start_; start_: nop");
+#endif
 
 int
 main ()
Index: gcc/testsuite/gcc.dg/lto/20090313_0.c
===================================================================
--- gcc/testsuite/gcc.dg/lto/20090313_0.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/gcc.dg/lto/20090313_0.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1,4 +1,5 @@
 /* { dg-lto-options "-mcpu=v9" { target sparc*-*-* } } */
+/* { dg-require-effective-target sync_char_short } */
 void
 _cairo_clip_path_reference () {
   int a;
Index: gcc/testsuite/gcc.dg/profile-dir-2.c
===================================================================
--- gcc/testsuite/gcc.dg/profile-dir-2.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/gcc.dg/profile-dir-2.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1,6 +1,5 @@
 /* { dg-do compile } */
 /* { dg-options "-O -fprofile-generate -fdump-tree-tree_profile" } */
-/* { dg-require-host-local "" } */
 /* { dg-final { scan-tree-dump "/profile-dir-2.gcda" "tree_profile" } } */
 
 int
@@ -9,5 +8,4 @@
   return 0;
 }
 
-/* { dg-final { cleanup-coverage-files } } */
 /* { dg-final { cleanup-tree-dump "tree_profile" } } */
Index: gcc/testsuite/gcc.dg/torture/pr45982.c
===================================================================
--- gcc/testsuite/gcc.dg/torture/pr45982.c	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/gcc.dg/torture/pr45982.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,27 @@
+/* { dg-do run } */
+
+#include <stdint.h>
+
+extern void abort (void);
+
+uintptr_t __attribute__((pure,noinline,noclone))
+foo (int *a)
+{
+  return (uintptr_t) a;
+}
+
+void __attribute__((noinline,noclone))
+bar (uintptr_t a)
+{
+  int *p = (int *)a;
+  *p = 1;
+}
+
+int main()
+{
+  int t = 0;
+  bar (foo (&t));
+  if (t != 1)
+    abort ();
+  return 0;
+}
Index: gcc/testsuite/gcc.dg/torture/pr45678-1.c
===================================================================
--- gcc/testsuite/gcc.dg/torture/pr45678-1.c	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/gcc.dg/torture/pr45678-1.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,17 @@
+/* { dg-do run } */
+/* { dg-options "-fno-common" { target { { hppa*-*-hpux* } && { ! hppa*64*-*-* } } } } */
+
+typedef float V __attribute__ ((vector_size (16)));
+V g;
+float d[4] = { 4, 3, 2, 1 };
+
+int
+main ()
+{
+  V e;
+  __builtin_memcpy (&e, &d, sizeof (d));
+  V f = { 5, 15, 25, 35 };
+  e = e * f;
+  g = e;
+  return 0;
+}
Index: gcc/testsuite/gcc.dg/torture/pr39074-2.c
===================================================================
--- gcc/testsuite/gcc.dg/torture/pr39074-2.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/gcc.dg/torture/pr39074-2.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -30,5 +30,5 @@
   return 0;
 }
 
-/* { dg-final { scan-tree-dump "y.._., points-to vars: { i }" "alias" } } */
+/* { dg-final { scan-tree-dump "y.._., points-to non-local, points-to escaped, points-to vars: { i }" "alias" } } */
 /* { dg-final { cleanup-tree-dump "alias" } } */
Index: gcc/testsuite/gcc.dg/torture/pr45678-2.c
===================================================================
--- gcc/testsuite/gcc.dg/torture/pr45678-2.c	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/gcc.dg/torture/pr45678-2.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,17 @@
+/* { dg-do run } */
+/* { dg-options "-fno-common" { target { { hppa*-*-hpux* } && { ! hppa*64*-*-* } } } } */
+
+typedef float V __attribute__ ((vector_size (16)));
+V g;
+
+int
+main ()
+{
+  float d[4] = { 4, 3, 2, 1 };
+  V e;
+  __builtin_memcpy (&e, &d, sizeof (d));
+  V f = { 5, 15, 25, 35 };
+  e = e * f;
+  g = e;
+  return 0;
+}
Index: gcc/testsuite/gcc.dg/torture/pr45704.c
===================================================================
--- gcc/testsuite/gcc.dg/torture/pr45704.c	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/gcc.dg/torture/pr45704.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,15 @@
+/* { dg-do compile } */
+/* { dg-options "-fdump-tree-optimized" } */
+
+struct st {
+    int ptr;
+};
+
+int foo(struct st *st)
+{
+  int v = *(volatile int *)&st->ptr;
+  return v & 0xff;
+}
+
+/* { dg-final { scan-tree-dump-times "={v}" 1 "optimized" } } */
+/* { dg-final { cleanup-tree-dump "optimized" } } */
Index: gcc/testsuite/gcc.dg/torture/pr45623.c
===================================================================
--- gcc/testsuite/gcc.dg/torture/pr45623.c	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/gcc.dg/torture/pr45623.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,28 @@
+/* { dg-do run } */
+
+#include <stdint.h>
+
+extern void abort (void);
+
+char *s1 = "foo";
+char *s2 = "bar";
+
+char **ss1 = &s1;
+
+typedef union jsval_layout
+{
+    uint64_t asBits;
+    char **ptr;
+} jsval_layout;
+
+int main()
+{
+  jsval_layout l, m;
+  l.ptr = ss1;
+  m.asBits = l.asBits;
+  char ** data = m.ptr;
+  *data = s2;
+  if (s1 != s2)
+    abort ();
+  return 0;
+}
Index: gcc/testsuite/gcc.dg/torture/stackalign/alloca-4.c
===================================================================
--- gcc/testsuite/gcc.dg/torture/stackalign/alloca-4.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/gcc.dg/torture/stackalign/alloca-4.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1,6 +1,6 @@
 /* PR middle-end/37009 */
 /* { dg-do run { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */
-/* { dg-options "-m32 -mincoming-stack-boundary=2 -mpreferred-stack-boundary=2" } */
+/* { dg-options "-mincoming-stack-boundary=2 -mpreferred-stack-boundary=2" } */
 
 #include "check.h"
 
Index: gcc/testsuite/gcc.dg/torture/pr45869.c
===================================================================
--- gcc/testsuite/gcc.dg/torture/pr45869.c	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/gcc.dg/torture/pr45869.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,15 @@
+/* { dg-do compile } */
+
+char *
+foo (unsigned int count, void **list)
+{
+  char *minaddr = (char *) list[0];
+  unsigned int i; /* NOTE: change of type to "int" eliminates the ICE */
+  for (i = 1; i < count; i++)
+    {
+      char *addr = (char *) list[i];
+      if (addr < minaddr)
+	minaddr = addr;
+    }
+  return minaddr;
+}
Index: gcc/testsuite/gcc.dg/tree-ssa/pr24287.c
===================================================================
--- gcc/testsuite/gcc.dg/tree-ssa/pr24287.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/gcc.dg/tree-ssa/pr24287.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -9,11 +9,14 @@
 int g(void)
 {
   int t = 0, t1 = 2;
+  /* ???  That's not true.  The pointers escape to the integer return
+     value which we do not track in PTA.  */
   int t2 = h(&t, &t1);
   if (t != 0)
     link_error ();
   if (t1 != 2)
     link_error ();
+  /* ???  And it would finally escape here even if we did.  */
   g1(t2);
   if (t != 0)
     link_error ();
@@ -21,5 +24,6 @@
     link_error ();
   return t2 == 2;
 }
-/* { dg-final { scan-tree-dump-times "link_error" 0 "optimized" } } */
+/* We are allowed to optimize the first two link_error calls.  */
+/* { dg-final { scan-tree-dump-times "link_error" 2 "optimized" } } */
 /* { dg-final { cleanup-tree-dump "optimized" } } */
Index: gcc/testsuite/gcc.dg/tree-ssa/pta-callused.c
===================================================================
--- gcc/testsuite/gcc.dg/tree-ssa/pta-callused.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/gcc.dg/tree-ssa/pta-callused.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -5,7 +5,7 @@
   int *p, *q;
 };
 
-int foo (int ***x) __attribute__((pure));
+int *foo (int ***x) __attribute__((pure));
 
 int bar (int b)
 {
@@ -19,7 +19,7 @@
     q = &f.p;
   else
     q = &f.q;
-  return foo (&q);
+  return *foo (&q);
 }
 
 /* { dg-final { scan-tree-dump "CALLUSED = { f.* i q }" "alias" } } */
Index: gcc/testsuite/gcc.dg/tree-ssa/sra-10.c
===================================================================
--- gcc/testsuite/gcc.dg/tree-ssa/sra-10.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/gcc.dg/tree-ssa/sra-10.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1,5 +1,5 @@
 /* { dg-do compile } */
-/* { dg-options "-O1 -fdump-tree-optimized -fdump-tree-esra-details" } */
+/* { dg-options "-O1 -fdump-tree-optimized" } */
 
 struct S
 {
Index: gcc/testsuite/gcc.dg/pr45567.c
===================================================================
--- gcc/testsuite/gcc.dg/pr45567.c	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/gcc.dg/pr45567.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,9 @@
+/* PR middle-end/45567 */
+/* { dg-do compile } */
+/* { dg-options "-ftree-ter" } */
+
+unsigned
+foo (char c)
+{
+  return __builtin_popcountl ((unsigned long) c);
+}
Index: gcc/testsuite/gcc.dg/pragma-init-fini-2.c
===================================================================
--- gcc/testsuite/gcc.dg/pragma-init-fini-2.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/gcc.dg/pragma-init-fini-2.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -2,6 +2,7 @@
 
 /* { dg-do link { target *-*-solaris2.* } } */
 /* { dg-options "-fpic" } */
+/* { dg-xfail-if "no .pushsection/.popsection" { i?86-*-solaris2.8 && { ! gas } } } */
 
 #include <stdio.h>
 
Index: gcc/testsuite/gcc.dg/pr45055.c
===================================================================
--- gcc/testsuite/gcc.dg/pr45055.c	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/gcc.dg/pr45055.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,41 @@
+/* PR debug/45055 */
+/* { dg-do compile } */
+/* { dg-options "-O2 -ftracer -fsched-pressure -funroll-loops -fschedule-insns -fcompare-debug" } */
+
+int colormap[10];
+
+extern int bar ();
+
+void
+foo (int *img, int fp, int y, int *ptr, int depth, int c, int t, int xm)
+{
+  int x, color, count;
+  for (; y; y--)
+    {
+      if (depth)
+	{
+	  count = bar ();
+	  for (x = xm; x; x--)
+	    {
+	      if (c != 1)
+		count = color = -1;
+	      if (count == 0)
+		color = count = bar ();
+	      if (color)
+		t = bar (fp);
+	      *ptr++ = colormap[t];
+	    }
+	}
+      switch (*img)
+	{
+	case 1:
+	  bar ();
+	case 3:
+	case -1:
+	case -3:
+	  bar ();
+	case -4:
+	  bar ();
+	}
+    }
+}
Index: gcc/testsuite/gcc.dg/20050325-1.c
===================================================================
--- gcc/testsuite/gcc.dg/20050325-1.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/gcc.dg/20050325-1.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -17,5 +17,3 @@
 {
   g (42, ff);
 }
-
-/* { dg-final { cleanup-coverage-files } } */
Index: gcc/testsuite/gcc.dg/pr45259.c
===================================================================
--- gcc/testsuite/gcc.dg/pr45259.c	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/gcc.dg/pr45259.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,42 @@
+/* PR debug/45259 */
+/* { dg-do compile } */
+/* { dg-options "-g -O2 -fpic -w" { target fpic } } */
+
+struct S { void (*bar) (long); };
+struct T { struct S *t; };
+int w;
+extern int baz (int);
+
+void
+foo (int x, int u, char *z)
+{
+  struct T *v;
+  static void *y[256] = { &&l1, &&l2 };
+  for (;;)
+    switch (x)
+      {
+      l2:
+	x = 9;
+      case 9:
+	goto *y[*z++];
+      case 10:
+      case 27:
+      case 54:
+      case 99:
+      case 100:
+      case 120:
+      case 122:
+      case 131:
+      case 132:
+      case 134:
+      case 141:
+      case 142:
+	v->t->bar (u);
+	v->t->bar (u);
+      case 143:
+	continue;
+      l1:
+      default:
+	baz (w);
+      }
+}
Index: gcc/testsuite/gcc.dg/profile-dir-3.c
===================================================================
--- gcc/testsuite/gcc.dg/profile-dir-3.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/gcc.dg/profile-dir-3.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1,6 +1,5 @@
 /* { dg-do compile } */
 /* { dg-options "-O -fprofile-generate -fprofile-dir=. -fdump-tree-tree_profile" } */
-/* { dg-require-host-local "" } */
 /* { dg-final { scan-tree-dump " ./profile-dir-3.gcda" "tree_profile" } } */
 
 int
@@ -9,5 +8,4 @@
   return 0;
 }
 
-/* { dg-final { cleanup-coverage-files } } */
 /* { dg-final { cleanup-tree-dump "tree_profile" } } */
Index: gcc/testsuite/gcc.dg/vect/no-tree-pre-pr45241.c
===================================================================
--- gcc/testsuite/gcc.dg/vect/no-tree-pre-pr45241.c	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/gcc.dg/vect/no-tree-pre-pr45241.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,20 @@
+/* PR tree-optimization/45241 */
+/* { dg-do compile } */
+/* { dg-options "-fno-tree-vectorize" } */
+
+int
+foo (short x)
+{
+  short i, y;
+  int sum;
+
+  for (i = 0; i < x; i++)
+    y = x * i;
+
+  for (i = x; i > 0; i--)
+    sum += y;
+
+  return sum;
+}
+
+/* { dg-final { cleanup-tree-dump "vect" } } */
Index: gcc/testsuite/gcc.dg/vect/pr45752.c
===================================================================
--- gcc/testsuite/gcc.dg/vect/pr45752.c	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/gcc.dg/vect/pr45752.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,109 @@
+/* { dg-require-effective-target vect_int } */
+
+#include <stdarg.h>
+#include <stdio.h>
+#include "tree-vect.h"
+
+#define M00 100
+#define M10 216
+#define M20 23
+#define M30 237
+#define M40 437
+
+#define M01 1322
+#define M11 13
+#define M21 27271
+#define M31 2280
+#define M41 284
+
+#define M02 74
+#define M12 191
+#define M22 500
+#define M32 111
+#define M42 1114
+
+#define M03 134
+#define M13 117
+#define M23 11
+#define M33 771
+#define M43 71
+
+#define M04 334
+#define M14 147
+#define M24 115
+#define M34 7716
+#define M44 16
+
+#define N 16
+
+void foo (unsigned int *__restrict__ pInput,
+          unsigned int *__restrict__ pOutput,
+          unsigned int *__restrict__ pInput2,
+          unsigned int *__restrict__ pOutput2)
+{
+  unsigned int i, a, b, c, d, e;
+
+  for (i = 0; i < N / 5; i++)
+    {
+       a = *pInput++;
+       b = *pInput++;
+       c = *pInput++;
+       d = *pInput++;
+       e = *pInput++;
+
+       *pOutput++ = M00 * a + M01 * b + M02 * c + M03 * d + M04 * e;
+       *pOutput++ = M10 * a + M11 * b + M12 * c + M13 * d + M14 * e;
+       *pOutput++ = M20 * a + M21 * b + M22 * c + M23 * d + M24 * e;
+       *pOutput++ = M30 * a + M31 * b + M32 * c + M33 * d + M34 * e;
+       *pOutput++ = M40 * a + M41 * b + M42 * c + M43 * d + M44 * e;
+
+
+       a = *pInput2++;
+       b = *pInput2++;
+       c = *pInput2++;
+       d = *pInput2++;
+       e = *pInput2++;
+
+       *pOutput2++ = M00 * a + M01 * b + M02 * c + M03 * d + M04 * e;
+       *pOutput2++ = M10 * a + M11 * b + M12 * c + M13 * d + M14 * e;
+       *pOutput2++ = M20 * a + M21 * b + M22 * c + M23 * d + M24 * e;
+       *pOutput2++ = M30 * a + M31 * b + M32 * c + M33 * d + M34 * e;
+       *pOutput2++ = M40 * a + M41 * b + M42 * c + M43 * d + M44 * e;
+
+    }
+}
+
+int main (int argc, const char* argv[])
+{
+  unsigned int input[N], output[N], i, input2[N], output2[N];
+  unsigned int check_results[N] = {3208, 1334, 28764, 35679, 2789, 13028,
+    4754, 168364, 91254, 12399, 22848, 8174, 307964, 146829, 22009, 0};
+  unsigned int check_results2[N] = {7136, 2702, 84604, 57909, 6633, 16956,
+    6122, 224204, 113484, 16243, 26776, 9542, 363804, 169059, 25853, 0};
+
+  check_vect ();
+
+  for (i = 0; i < N; i++)
+    {
+      input[i] = i%256;
+      input2[i] = i + 2;
+      output[i] = 0;
+      output2[i] = 0;
+      __asm__ volatile ("");
+    }
+
+  foo (input, output, input2, output2);
+
+  for (i = 0; i < N; i++)
+    if (output[i] != check_results[i]
+        || output2[i] != check_results2[i])
+      abort ();
+
+  return 0;
+}
+
+/* { dg-final { scan-tree-dump-times "vectorized 1 loops" 0 "vect"  } } */
+/* { dg-final { scan-tree-dump-times "permutation requires at least three vectors" 2 "vect" { target vect_perm } } } */
+/* { dg-final { scan-tree-dump-times "vectorizing stmts using SLP" 0 "vect"  } } */
+/* { dg-final { cleanup-tree-dump "vect" } } */
+
Index: gcc/testsuite/gcc.dg/mtune.c
===================================================================
--- gcc/testsuite/gcc.dg/mtune.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/gcc.dg/mtune.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1,4 +1,5 @@
 /* { dg-do compile } */
+/* { dg-skip-if "" { *-*-* } { "-mtune=*" } { "" } } */
 /* { dg-options "-mtune=foo" } */
 /* { dg-error "mtune" "" { target *-*-* } 0 } */
 /* { dg-bogus "march" "" { target *-*-* } 0 } */
Index: gcc/testsuite/gcc.dg/20050309-1.c
===================================================================
--- gcc/testsuite/gcc.dg/20050309-1.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/gcc.dg/20050309-1.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -34,5 +34,3 @@
   error (1, 0, 0, node, "%s", name);
   return 0;
 }
-
-/* { dg-final { cleanup-coverage-files } } */
Index: gcc/testsuite/ada/acats/run_acats
===================================================================
--- gcc/testsuite/ada/acats/run_acats	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/ada/acats/run_acats	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -70,4 +70,4 @@
 # Limit the stack to 16MB for stack checking
 ulimit -s 16384
 
-exec $SHELL $testdir/run_all.sh ${1+"$@"}
+exec $testdir/run_all.sh ${1+"$@"}
Index: gcc/testsuite/ChangeLog
===================================================================
--- gcc/testsuite/ChangeLog	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/ChangeLog	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1,3 +1,487 @@
+2010-10-14  Joseph Myers  <joseph@codesourcery.com>
+
+	PR c/45969
+	* gcc.c-torture/compile/pr45969-1.c: New test.
+
+2010-10-13  Richard Guenther  <rguenther@suse.de>
+
+	PR tree-optimization/45982
+	* gcc.dg/torture/pr45982.c: New testcase.
+	* gcc.dg/tree-ssa/pr24287.c: Adjust.
+	* gcc.dg/tree-ssa/pta-callused.c: Likewise.
+	* gcc.dg/torture/pr39074-2.c: Likewise.
+
+2010-10-12  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
+
+	* gcc.dg/pragma-init-fini.c: Skip on i?86-*-solaris2.8 && !gas.
+	* gcc.dg/pragma-init-fini-2.c: XFAIL on i?86-*-solaris2.8 && !gas.
+
+2010-10-09  Janus Weil  <janus@gcc.gnu.org>
+
+	PR fortran/45748
+	* gfortran.dg/intrinsic_6.f90: New.
+
+2010-10-07  Richard Guenther  <rguenther@suse.de>
+
+	PR middle-end/45869
+	* gcc.dg/torture/pr45869.c: New testcase.
+
+2010-10-07  Richard Guenther  <rguenther@suse.de>
+
+	Backport from mainline
+	2010-09-07  Richard Guenther  <rguenther@suse.de>
+
+	PR middle-end/45569
+	* g++.dg/eh/pr45569.C: New testcase.
+
+2010-10-06  Jerry DeLisle  <jvdelisle@gcc.gnu.org>
+
+	Backport from mainline
+	PR libfortran/45710
+	* gfortran.dg/namelist_65.f90: New test.
+
+2010-10-06  Jack Howarth <howarth@bromo.med.uc.edu>
+
+	Backport from mainline
+	2010-08-18  Iain Sandoe  <iains@gcc.gnu.org>
+
+	PR debug/42487
+	* lib/target-supports.exp (check_effective_target_function_sections): New.
+	* gcc.dg/debug/dwarf2/aranges-fnsec-1.c: Check that the target supports
+	function sections before proceding.
+
+2010-10-06  Jack Howarth <howarth@bromo.med.uc.edu>
+
+	Backport from mainline
+	2010-09-10  Jack Howarth <howarth@bromo.med.uc.edu>
+
+	PR target/42070
+	* lib/profopt.exp: Prune warnings on execname2 compile.
+	* lib/prune.exp: Prune "can't add line info" warnings.
+
+2010-10-06  Jack Howarth  <howarth@bromo.med.uc.edu>
+
+	Backport from mainline
+	2010-04-26  Jack Howarth <howarth@bromo.med.uc.edu>
+
+	PR 43715
+	* lib/plugin-support.exp: Use "-undefined
+	dynamic_lookup" on darwin.
+
+2010-10-05  Ira Rosen  <irar@il.ibm.com>
+
+	PR tree-optimization/45752
+	* gcc.dg/vect/pr45752.c: New test.
+
+2010-10-03  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>
+
+	* gcc.dg/torture/pr45678-1.c: Add -fno-common to options on 32-bit
+	hppa*-*-hpux*.
+	* gcc.dg/torture/pr45678-2.c: Likewise.
+
+2010-10-01  Richard Guenther  <rguenther@suse.de>
+
+	PR tree-optimization/45854
+	* g++.dg/torture/pr45854.C: New testcase.
+
+2010-09-30  Jakub Jelinek  <jakub@redhat.com>
+
+	PR target/45843
+	* g++.dg/torture/pr45843.C: New test.
+
+2010-09-30  Eric Botcazou  <ebotcazou@adacore.com>
+
+	* ada/acats/run_acats: Revert revision 157037.
+
+2010-09-28  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
+
+	PR target/44452
+	* gcc.target/i386/abi-2.c: XFAIL on i?86-*-solaris2* && ilp32.
+	* gcc.target/i386/pr22076.c: Skip on i?86-solaris2* && ilp32.
+
+2010-09-25  Eric Botcazou  <ebotcazou@adacore.com>
+
+	* gnat.dg/return2.ad[sb]: New test.
+	* gnat.dg/return2_pkg.ads: New helper.
+
+2010-09-24  Jakub Jelinek  <jakub@redhat.com>
+
+	PR middle-end/45234
+	* gcc.dg/torture/stackalign/alloca-5.c: Remove.
+
+2010-09-23  Jakub Jelinek  <jakub@redhat.com>
+
+	* gcc.dg/torture/stackalign/alloca-4.c: Remove -m32 from dg-options.
+	* gcc.dg/torture/stackalign/alloca-5.c: Likewise.  Fix up -DDEBUG
+	build.
+
+2010-09-22  Jerry DeLisle  <jvdelisle@gcc.gnu.org>
+
+	Backport from mainline
+	PR libfortran/45532
+	* gfortran.dg/namelist_64.f90: New test.
+
+2010-09-22  Eric Botcazou  <ebotcazou@adacore.com>
+
+	* gcc.target/sparc/mnofpu.c: New test.
+
+2010-09-21  Jakub Jelinek  <jakub@redhat.com>
+
+	Backport from mainline
+	2010-09-17  Richard Guenther  <rguenther@suse.de>
+		    H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR middle-end/45678
+	* gcc.dg/torture/pr45678-1.c: New.
+	* gcc.dg/torture/pr45678-2.c: Likewise.
+
+2010-09-21  Richard Guenther  <rguenther@suse.de>
+
+	PR middle-end/45704
+	* gcc.dg/torture/pr45704.c: New testcase.
+
+2010-09-20  Jakub Jelinek  <jakub@redhat.com>
+
+	PR rtl-optimization/45728
+	* gcc.c-torture/compile/pr45728.c: New test.
+
+	PR rtl-optimization/45695
+	* gcc.c-torture/execute/pr45695.c: New test.
+
+2010-09-20  Paul Thomas  <pault@gcc.gnu.org>
+
+	PR fortran/45081
+	* gfortran.dg/derived_array_intrinsics_1.f90 : New test.
+
+2010-09-20  H.J. Lu  <hongjiu.lu@intel.com>
+
+	Backport from mainline
+	2010-09-17  H.J. Lu  <hongjiu.lu@intel.com>
+
+	PR middle-end/45234
+	* gcc.dg/torture/stackalign/alloca-5.c: New.
+
+2010-09-20  Richard Guenther  <rguenther@suse.de>
+
+	PR tree-optimization/45623
+	* gcc.dg/torture/pr45623.c: New testcase.
+
+2010-09-18  Richard Guenther  <rguenther@suse.de>
+
+	PR tree-optimization/45709
+	* g++.dg/torture/pr45709-2.C: New testcase.
+
+2010-09-18  Richard Guenther  <rguenther@suse.de>
+
+	PR tree-optimization/45709
+	* g++.dg/torture/pr45709.C: New testcase.
+
+2010-09-18  H.J. Lu  <hongjiu.lu@intel.com>
+
+	Backport from mainline
+	2010-04-07  Dodji Seketeli  <dodji@redhat.com>
+
+	PR debug/43628
+	* g++.dg/debug/dwarf2/typedef2.C: New test.
+
+2010-09-17  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
+
+	Backport from mainline:
+	2010-09-08  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
+
+	* lib/target-supports.exp
+	(check_effective_target_run_expensive_tests): New proc.
+	* gcc.c-torture/compile/limits-fnargs.c: Use
+	dg-require-effective-target run_expensive_tests.
+
+2010-09-15  Eric Botcazou  <ebotcazou@adacore.com>
+
+	* gcc.c-torture/compile/20100915-1.c: New test.
+
+2010-09-14  Jakub Jelinek  <jakub@redhat.com>
+
+	PR middle-end/45567
+	* gcc.dg/pr45567.c: New test.
+
+	PR debug/45660
+	* g++.dg/debug/pr45660.C: New test.
+
+2010-09-12  Alexander Monakov  <amonakov@ispras.ru>
+
+	Backport from mainline
+	2010-09-06  Alexander Monakov  <amonakov@ispras.ru>
+
+	PR rtl-optimization/44919
+	* g++.dg/opt/pr44919.C: New.
+
+2010-09-10  Jack Howarth <howarth@bromo.med.uc.edu>
+
+	Backport from mainline
+	2010-09-07  Jack Howarth <howarth@bromo.med.uc.edu>
+
+	PR target/36502
+	* gcc.target/i386/pr36502.c: New test.
+
+	PR target/42313
+	PR target/44651
+	* gcc.target/i386/builtin-unreachable.c: Don't skip on darwin.
+
+2010-09-08  Vladimir Makarov  <vmakarov@redhat.com>
+
+	PR middle-end/40386
+	* gcc.c-torture/execute/{pr40386.c,pr40386.x}: New testcase.
+	
+2010-09-08  Jakub Jelinek  <jakub@redhat.com>
+
+	PR fortran/45595
+	* gfortran.dg/gomp/pr45595.f90: New test.
+
+2010-09-06  Dodji Seketeli  <dodji@redhat.com>
+
+    	PR c++/45200
+    	PR c++/45293
+    	PR c++/45558
+    	* g++.dg/template/typedef34.C: New test.
+    	* g++.dg/template/typedef35.C: New test.
+
+2010-09-04  Tobias Burnus  <burnus@net-b.de>
+
+	PR fortran/45530
+	* gfortran.dg/namelist_63.f90: New.
+
+2010-09-04  Tobias Burnus  <burnus@net-b.de>
+
+	PR fortran/45489
+	* gfortran.dg/initialization_27.f90: New.
+
+2010-09-04  Tobias Burnus  <burnus@net-b.de>
+
+	PR fortran/45019
+	* gfortran.dg/aliasing_dummy_5.f90: New.
+
+2010-09-03  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
+
+	Backport from mainline:
+	2010-07-23  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
+
+	* gcc.dg/pr43058.c: Use dg-timeout-factor 4.
+
+2010-09-03  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
+
+	* gcc.target/x86_64/abi/avx/abi-avx.exp: Link with
+	gcc.target/i386/clearcap.map if supported.
+
+2010-09-03  Jakub Jelinek  <jakub@redhat.com>
+
+	PR debug/45500
+	* gcc.target/i386/pr45500.c: New test.
+
+2010-09-02  Ian Bolton  <ian.bolton@arm.com>
+
+	Backport from mainline
+	2010-08-19  Ian Bolton  <ian.bolton@arm.com>
+	
+	PR target/45070
+	* gcc.c-torture/execute/pr45070.c: New.
+
+	2010-08-19  Ian Bolton  <ian.bolton@arm.com>
+
+	* g++.dg/pr44328.C: New test.
+	
+	2010-08-07  Marcus Shawcroft <marcus.shawcroft@arm.com>
+
+	* lib/target-supports.exp: (check_effective_target_sync_int_long):
+	Add arm*-*-linux-gnueabi.
+	(check_effective_target_sync_char_short): Likewise.
+	
+2010-09-01  Jakub Jelinek  <jakub@redhat.com>
+
+	PR middle-end/45458
+	* g++.dg/tree-prof/partition2.C: New test.
+
+2010-08-31  Eric Botcazou  <ebotcazou@adacore.com>
+
+	* gcc.dg/nested-func-8.c: New test.
+
+2010-08-30  Jakub Jelinek  <jakub@redhat.com>
+
+	PR middle-end/45423
+	* gcc.dg/gomp/atomic-12.c: New test.
+	* gcc.dg/gomp/atomic-13.c: New test.
+	* gcc.dg/gomp/atomic-14.c: New test.
+	* g++.dg/gomp/atomic-11.C: New test.
+	* g++.dg/gomp/atomic-12.C: New test.
+	* g++.dg/gomp/atomic-13.C: New test.
+	* g++.dg/gomp/atomic-14.C: New test.
+
+2010-08-30  Jakub Jelinek  <jakub@redhat.com>
+
+	Backport from mainline
+	2010-07-27  Jakub Jelinek  <jakub@redhat.com>
+
+	PR c/45079
+	* gcc.dg/pr45079.c: New test.
+
+2010-08-29  Jason Merrill  <jason@redhat.com>
+
+	PR c++/44991
+	* g++.dg/parse/defarg15.C: New.
+
+2010-08-30  H.J. Lu  <hongjiu.lu@intel.com>
+
+	Backport from mainline
+	2010-08-25  Richard Guenther  <rguenther@suse.de>
+
+	PR tree-optimization/45393
+	* g++.dg/torture/pr45393.C: New testcase.
+
+2010-08-25  Jakub Jelinek  <jakub@redhat.com>
+
+	PR rtl-optimization/44858
+	* gcc.c-torture/execute/pr44858.c: New test.
+
+	PR rtl-optimization/45400
+	* g++.dg/other/i386-8.C: New test.
+
+2010-08-19  Jason Merrill  <jason@redhat.com>
+
+	* g++.dg/init/value8.C: New.
+
+2010-08-20  Jakub Jelinek  <jakub@redhat.com>
+
+	PR fortran/45344
+	Backport from mainline
+	2010-05-14  Jakub Jelinek  <jakub@redhat.com>
+
+	* gfortran.dg/gomp/pr44036-1.f90: Adjust.
+
+2010-08-17  Uros Bizjak  <ubizjak@gmail.com>
+
+	PR target/45296
+	* gcc.target/i386/pr45296.c: New test.
+
+2010-08-16  Changpeng Fang  <changpeng.fang@amd.com>
+
+        PR tree-optimization/45241
+        * gcc.dg/vect/no-tree-pre-pr45241.c: New test.
+
+2010-08-14  Uros Bizjak  <ubizjak@gmail.com>
+
+	* g++.dg/cast.C: Change fields of structures to "long" to pass
+	the test on targets with STRUCTURE_SIZE_BOUNDARY != BITS_PER_UNIT.
+	* g++.dg/cpp0x/iop.C: Ditto.
+	* g++.dg/cpp0x/named_refs.C: Ditto.
+	* g++.dg/cpp0x/rv1p.C: Ditto.
+	* g++.dg/cpp0x/rv2p.C: Ditto.
+	* g++.dg/cpp0x/rv3p.C: Ditto.
+	* g++.dg/cpp0x/rv4p.C: Ditto.
+	* g++.dg/cpp0x/rv5p.C: Ditto.
+	* g++.dg/cpp0x/rv6p.C: Ditto.
+	* g++.dg/cpp0x/rv7p.C: Ditto.
+	* g++.dg/cpp0x/rv8p.C: Ditto.
+	* g++.dg/cpp0x/unnamed_refs.C: Ditto.
+
+2010-08-12  Jakub Jelinek  <jakub@redhat.com>
+
+	PR middle-end/45262
+	* gcc.c-torture/execute/pr45262.c: New test.
+
+	PR debug/45259
+	* gcc.dg/pr45259.c: New test.
+
+	Backport from mainline
+	2010-07-30  Jakub Jelinek  <jakub@redhat.com>
+
+	PR debug/45055
+	PR rtl-optimization/45137
+	* gcc.dg/pr45055.c: New test.
+
+2010-08-08  Uros Bizjak  <ubizjak@gmail.com>
+
+	* gcc.dg/20030107-1.c: Do not call cleanup-coverage-files.
+	* gcc.dg/20030702-1.c: Ditto.
+	* gcc.dg/20050309-1.c: Ditto.
+	* gcc.dg/20050325-1.c: Ditto.
+	* gcc.dg/20050330-2.c: Ditto.
+	* gcc.dg/20051201-1.c: Ditto.
+	* gcc.dg/gomp/pr27573.c: Ditto.
+	* gcc.dg/gomp/pr34610.c: Ditto.
+	* gcc.dg/pr24225.c: Ditto.
+	* gcc.dg/pr26570.c: Ditto.
+	* gcc.dg/pr32773.c: Ditto.
+	* g++.dg/gcov/gcov-6.C: Ditto.
+	* g++.dg/gomp/pr34608.C: Ditto.
+	* gfortran.dg/gomp/pr27573.f90: Ditto.
+
+	* gcc.dg/profile-dir-1.c: Do not call cleanup-coverage-files.  Remove
+	dg-require-host-local dg directive.
+	* gcc.dg/profile-dir-2.c: Ditto.
+	* gcc.dg/profile-dir-3.c: Ditto.
+
+2010-08-08  Richard Guenther  <rguenther@suse.de>
+
+	PR middle-end/45034
+	* gcc.c-torture/execute/pr45034.c: New testcase.
+
+2010-08-08  Richard Guenther  <rguenther@suse.de>
+
+	PR tree-optimization/45109
+	* gcc.c-torture/compile/pr45109.c: New testcase.
+
+2010-08-08  Uros Bizjak  <ubizjak@gmail.com>
+
+	* gcc.dg/march.c: Skip if -march defined.
+	* gcc.dg/mtune.c: Skip if -mtune defined.
+
+	* g++.old-deja/g++.jason/thunk3.C: Skip for targets with
+	generic thunk support.
+
+	Backport from mainline:
+	2010-05-25  Richard Guenther  <rguenther@suse.de>
+
+	* gcc.dg/tree-ssa/sra-10.c: Do not dump esra details.
+
+	Backport from mainline:
+	2010-04-22  Uros Bizjak  <ubizjak@gmail.com>
+
+	* gcc.dg/graphite/interchange-0.c: Fix dg-final directive.
+
+2010-08-05  Janus Weil  <janus@gcc.gnu.org>
+
+	PR fortran/44929
+	* gfortran.dg/allocate_derived_3.f90: New.
+
+2010-08-04  Uros Bizjak  <ubizjak@gmail.com>
+
+	Backport from mainline:
+	2010-07-20  Bingfeng Mei  <bmei@broadcom.com>
+
+	* gcc.dg/lto/20090313_0.c: Use dg-require-effective-target
+	sync_char_short.
+
+	2010-06-24  Steve Ellcey  <sje@cup.hp.com>
+
+	PR testsuite/43283
+	* gcc.dg/lto/20091216-1_0.c: Use newline instead of semicolon
+	and add argument to nop for IA64.
+
+2010-08-03  Martin Jambor  <mjambor@suse.cz>
+
+	PR tree-optimization/44914
+	* g++.dg/tree-ssa/pr44914.C: New test.
+
+2010-08-02  Uros Bizjak  <ubizjak@gmail.com>
+
+	* lib/gcc-dg.exp (cleanup-coverage-files): Remove options from
+	test name.
+	(cleanup-repo-files): Ditto.
+	(cleanup-saved-temps): Ditto.
+
+2010-07-31  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>
+
+	PR c++/45112
+	* testsuite/g++.dg/pr45112.C: New test.
+
 2010-07-31  Release Manager
 
 	* GCC 4.5.1 released.
@@ -479,15 +963,15 @@
 	Backport from mainline
 	2010-05-17  Martin Jambor  <mjambor@suse.cz>
 
-        PR middle-end/44133
-        * gcc.dg/tree-ssa/pr44133.c: New test.
+	PR middle-end/44133
+	* gcc.dg/tree-ssa/pr44133.c: New test.
 
 2010-06-29  Martin Jambor  <mjambor@suse.cz>
 
 	Backport from mainline
 	2010-04-13  Martin Jambor  <mjambor@suse.cz>
 
-        * gcc.dg/tree-ssa/sra-9.c: New test.
+	* gcc.dg/tree-ssa/sra-9.c: New test.
 
 2010-06-28  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
 
@@ -636,7 +1120,7 @@
 	PR testsuite/44518
 	* obj-c++.dg/encode-2.mm: XFAIL new test for all targets.
 	* obj-c++.dg/encode-3.mm: Restore XFAIL run for all targets.
-	
+
 2010-06-12  Daniel Franke  <franke.daniel@gmail.com>
 
 	PR fortran/44347
Index: gcc/testsuite/g++.old-deja/g++.jason/thunk3.C
===================================================================
--- gcc/testsuite/g++.old-deja/g++.jason/thunk3.C	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/g++.old-deja/g++.jason/thunk3.C	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1,4 +1,5 @@
-// { dg-do run { xfail rs6000-*-* powerpc-*-eabi v850-*-* sh-*-* sh64-*-* h8*-*-* xtensa*-*-* m32r*-*-* lm32-*-* } }
+// { dg-do run }
+// { dg-skip-if "fails with generic thunk support" { rs6000-*-* powerpc-*-eabi v850-*-* sh-*-* sh64-*-* h8*-*-* xtensa*-*-* m32r*-*-* lm32-*-* } { "*" } { "" } }
 // Test that variadic function calls using thunks work right.
 // Note that this will break on any target that uses the generic thunk
 //  support, because it doesn't support variadic functions.
Index: gcc/testsuite/g++.dg/other/i386-8.C
===================================================================
--- gcc/testsuite/g++.dg/other/i386-8.C	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/g++.dg/other/i386-8.C	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,23 @@
+// PR rtl-optimization/45400
+// { dg-do compile { target i?86-*-* x86_64-*-* } }
+// { dg-options "-O2 -msse2" }
+// { dg-options "-O2 -msse2 -fpic" { target fpic } }
+// { dg-require-effective-target sse2 }
+
+#include <xmmintrin.h>
+
+static inline unsigned short
+bar (unsigned short x)
+{
+  return ((x << 8) | (x >> 8));
+}
+
+unsigned int
+foo (float *x, short *y)
+{
+  __m128 a = _mm_set_ps1 (32767.5f);
+  __m128 b = _mm_mul_ps (_mm_load_ps (x), a);
+  __m64 c = _mm_cvtps_pi16 (b);
+  __builtin_memcpy (y, &c, sizeof (short) * 4);
+  y[0] = bar (y[0]);
+}
Index: gcc/testsuite/g++.dg/tree-ssa/pr44914.C
===================================================================
--- gcc/testsuite/g++.dg/tree-ssa/pr44914.C	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/g++.dg/tree-ssa/pr44914.C	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,20 @@
+/* { dg-do compile } */
+/* { dg-options "-O1 -fipa-sra -fnon-call-exceptions" } */
+
+struct A
+{
+  ~A () { }
+};
+
+struct B
+{
+  A a;
+  int i;
+  void f (int) { }
+  B ()
+  {
+    f (i);
+  }
+};
+
+B b;
Index: gcc/testsuite/g++.dg/debug/dwarf2/typedef2.C
===================================================================
--- gcc/testsuite/g++.dg/debug/dwarf2/typedef2.C	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/g++.dg/debug/dwarf2/typedef2.C	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,11 @@
+// Origin: PR debug/43628
+// { dg-options "-g -dA" }
+// { dg-do compile }
+
+// { dg-final { scan-assembler-times "\[^\n\r\]*\\(DIE\[^\n\r\]*DW_TAG_formal_parameter\\)\[\n\r\]{1,2}\[^\n\r\]*DW_AT_type\[\n\r\]{1,2}" 1 } }
+class C
+{
+  public:
+  typedef void (*t) (C);
+};
+C::t f;
Index: gcc/testsuite/g++.dg/debug/pr45660.C
===================================================================
--- gcc/testsuite/g++.dg/debug/pr45660.C	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/g++.dg/debug/pr45660.C	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,16 @@
+// PR debug/45660
+// { dg-do compile }
+// { dg-options "-g -fno-inline" }
+
+void
+test ()
+{
+  struct S
+  {
+    typedef void (**T) (void);
+    static T i (void) { return 0; }
+  };
+  S s;
+  if (s.i ())
+    *s.i () = 0;
+}
Index: gcc/testsuite/g++.dg/pr45112.C
===================================================================
--- gcc/testsuite/g++.dg/pr45112.C	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/g++.dg/pr45112.C	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,12 @@
+/* { dg-do compile } */
+
+struct JSString
+{
+  unsigned char mLength;
+  static JSString unitStringTable[];
+};
+
+JSString JSString::unitStringTable[] __attribute__ ((aligned (8))) = { 1 };
+
+int bug [__alignof__ (JSString::unitStringTable) >= 8 ? 1 : -1];
+
Index: gcc/testsuite/g++.dg/opt/pr44919.C
===================================================================
--- gcc/testsuite/g++.dg/opt/pr44919.C	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/g++.dg/opt/pr44919.C	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,253 @@
+// { dg-do compile { target powerpc*-*-* ia64-*-* x86_64-*-* } }
+// { dg-options "-O3 -fselective-scheduling2" }
+
+namespace std {
+
+typedef long unsigned int size_t;
+
+template<typename _Tp> class new_allocator { public: typedef size_t size_type; typedef _Tp* pointer; };
+template<typename _Tp> class allocator: public new_allocator<_Tp> { public: typedef size_t size_type; template<typename _Tp1> struct rebind { typedef allocator<_Tp1> other; }; };
+
+class back_insert_iterator { };
+template<typename _Container> back_insert_iterator back_inserter(_Container& __x) { };
+
+class vector { };
+
+struct _List_node_base { };
+struct _List_node : public _List_node_base { };
+template<typename _Tp> struct _List_iterator { typedef _List_iterator<_Tp> _Self; typedef _Tp& reference; explicit _List_iterator(_List_node_base* __x) : _M_node(__x) { } reference operator*() const { } _Self& operator++() { } bool operator!=(const _Self& __x) const { return _M_node != __x._M_node; } _List_node_base* _M_node; };
+template<typename _Tp, typename _Alloc> class _List_base { protected: typedef typename _Alloc::template rebind<_List_node >::other _Node_alloc_type; struct _List_impl : public _Node_alloc_type { _List_node_base _M_node; }; _List_impl _M_impl; };
+template<typename _Tp, typename _Alloc = std::allocator<_Tp> > class list : protected _List_base<_Tp, _Alloc> { public: typedef _Tp value_type; typedef _List_iterator<_Tp> iterator; iterator begin() { } iterator end() { return iterator(&this->_M_impl._M_node); } };
+
+namespace tr1 { template<typename _Tp, size_t _Nm> struct array { typedef _Tp value_type; typedef const value_type& const_reference; typedef const value_type* const_iterator; typedef size_t size_type; value_type _M_instance[_Nm ? _Nm : 1]; const_iterator begin() const { return const_iterator(&_M_instance[0]); } const_reference operator[](size_type __n) const { return _M_instance[__n]; } }; }
+}
+
+namespace X {
+
+class Object { };
+struct Has_qrt { };
+template <typename F> struct qrt_or_not { typedef const typename F::result_type & type; };
+template <typename Functor, typename P1 = void> struct Qualified_result_of : qrt_or_not<Functor> { };
+
+using std::tr1::array;
+
+template <class R_> class Point_2 : public R_::Kernel_base::Point_2 {
+public:
+  typedef typename R_::Kernel_base::Point_2 RPoint_2;
+  typedef RPoint_2 Rep;
+  const Rep& rep() const { }
+};
+
+template <class R_> class Vector_2 : public R_::Kernel_base::Vector_2 {
+public:
+  typedef typename R_::Kernel_base::Vector_2 RVector_2;
+  typedef RVector_2 Rep;
+  const Rep& rep() const { return *this; }
+  typedef R_ R;
+  typename Qualified_result_of<typename R::Compute_x_2,Vector_2>::type x() const { return R().compute_x_2_object()(*this); }
+  typename Qualified_result_of<typename R::Compute_y_2,Vector_2>::type y() const { return R().compute_y_2_object()(*this); }
+  typename Qualified_result_of<typename R::Compute_y_2,Vector_2>::type cartesian(int i) const { return (i==0) ? x() : y(); }
+  typename Qualified_result_of<typename R::Compute_hx_2,Vector_2>::type hx() const { return R().compute_hx_2_object()(*this); }
+  typename Qualified_result_of<typename R::Compute_hy_2,Vector_2>::type hy() const { return R().compute_hy_2_object()(*this); }
+  typename Qualified_result_of<typename R::Compute_hw_2,Vector_2>::type hw() const { return R().compute_hw_2_object()(*this); }
+  typename Qualified_result_of<typename R::Compute_hx_2,Vector_2>::type homogeneous(int i) const { return (i==0) ? hx() : (i==1)? hy() : hw(); }
+};
+
+template <class R_> class Segment_2 : public R_::Kernel_base::Segment_2 { };
+template <class R_> class Iso_rectangle_2 : public R_::Kernel_base::Iso_rectangle_2 { };
+
+template <typename T, int i > const T& constant() { static const T t(i); return t; }
+template <class T, class Alloc = std::allocator<T > > class Handle_for { struct RefCounted { T t; }; typedef typename Alloc::template rebind<RefCounted>::other Allocator; typedef typename Allocator::pointer pointer; pointer ptr_; public: typedef T element_type; const T * Ptr() const { return &(ptr_->t); } };
+template <class T, class Allocator> const T& get(const Handle_for<T, Allocator> &h) { return *(h.Ptr()); }
+
+template <class R_> class PointC2 {
+public:
+  typedef typename R_::Vector_2 Vector_2; Vector_2 base;
+  typedef typename Vector_2::Cartesian_const_iterator Cartesian_const_iterator; Cartesian_const_iterator cartesian_begin() const { return base.cartesian_begin(); }
+};
+
+template <class R_> class VectorC2 {
+public:
+  typedef typename R_::FT FT;
+  typedef array<FT, 2> Rep;
+  typedef typename R_::template Handle<Rep>::type Base;
+  Base base;
+  typedef typename Rep::const_iterator Cartesian_const_iterator;
+  const FT & x() const { return X::get(base)[0]; }
+  const FT & y() const { return X::get(base)[1]; }
+  const FT & hx() const { return x(); }
+  const FT & hy() const { return y(); }
+  const FT & hw() const { return constant<FT, 1>(); }
+  Cartesian_const_iterator cartesian_begin() const { return X::get(base).begin(); }
+};
+
+template <class R_> class SegmentC2 { };
+template <class R_> class Iso_rectangleC2 { };
+
+namespace internal {
+  template <class K> class Segment_2_Iso_rectangle_2_pair {
+    public:
+      enum Intersection_results { NO_INTERSECTION };
+      Segment_2_Iso_rectangle_2_pair(typename K::Segment_2 const *seg, typename K::Iso_rectangle_2 const *rect) ;
+      Intersection_results intersection_type() const;
+      mutable Intersection_results _result;
+      typename K::Point_2 _ref_point;
+      typename K::Vector_2 _dir;
+      typename K::Point_2 _isomin;
+      typename K::Point_2 _isomax;
+      mutable typename K::FT _min, _max;
+  };
+  template <class K> Object intersection( const typename K::Segment_2 &seg, const typename K::Iso_rectangle_2 &iso, const K&) {
+    typedef Segment_2_Iso_rectangle_2_pair<K> is_t; is_t ispair(&seg, &iso); switch (ispair.intersection_type()) { }
+  }
+  template <class K> typename Segment_2_Iso_rectangle_2_pair<K>::Intersection_results Segment_2_Iso_rectangle_2_pair<K>::intersection_type() const {
+    typedef typename K::RT RT;
+    typedef typename K::FT FT;
+    typename K::Construct_cartesian_const_iterator_2 construct_cccit;
+    typename K::Cartesian_const_iterator_2 ref_point_it = construct_cccit(_ref_point);
+    typename K::Cartesian_const_iterator_2 end = construct_cccit(_ref_point, 0);
+    typename K::Cartesian_const_iterator_2 isomin_it = construct_cccit(_isomin);
+    typename K::Cartesian_const_iterator_2 isomax_it = construct_cccit(_isomax);
+    for (unsigned int i=0; ref_point_it != end; ++i, ++ref_point_it, ++isomin_it, ++isomax_it) {
+      if (_dir.homogeneous(i) == RT(0)) {
+        if ( *(ref_point_it) <*(isomin_it) ) {
+          _result = NO_INTERSECTION;
+        }
+        if ( *(ref_point_it) > *(isomax_it)) {
+          _result = NO_INTERSECTION;
+        }
+      } else {
+        FT newmin, newmax;
+        if (_dir.homogeneous(i) > RT(0)) {
+          newmin = ( *(isomin_it) - (*ref_point_it)) / _dir.cartesian(i);
+          newmax = ( *(isomax_it) - (*ref_point_it)) / _dir.cartesian(i);
+        } else {
+          newmin = ( (*isomax_it) - (*ref_point_it)) / _dir.cartesian(i);
+          newmax = ( (*isomin_it) - (*ref_point_it)) / _dir.cartesian(i);
+        }
+        if (newmin > _min) _min = newmin;
+        if (newmax <_max) _max = newmax;
+        if (_max <_min) { return _result; }
+      }
+    }
+  }
+}
+
+template <class K> Object intersection(const Segment_2<K> &seg, const Iso_rectangle_2<K> &iso) { typedef typename K::Intersect_2 Intersect; return Intersect()(seg, iso); }
+
+namespace CommonKernelFunctors {
+  template <typename K> class Construct_cartesian_const_iterator_2 {
+    typedef typename K::Point_2 Point_2;
+    typedef typename K::Cartesian_const_iterator_2 Cartesian_const_iterator_2;
+public:
+    typedef Cartesian_const_iterator_2 result_type;
+    Cartesian_const_iterator_2 operator()( const Point_2& p) const { return p.rep().cartesian_begin(); }
+    Cartesian_const_iterator_2 operator()( const Point_2& p, int) const { }
+  };
+  template <typename K> class Intersect_2 {
+    typedef typename K::Object_2 Object_2;
+  public:
+    typedef Object_2 result_type;
+    template <class T1, class T2> Object_2 operator()(const T1& t1, const T2& t2) const { return internal::intersection(t1, t2, K()); }
+  };
+}
+
+namespace CartesianKernelFunctors {
+  using namespace CommonKernelFunctors;
+  template <typename K> class Compute_x_2 : Has_qrt {
+    typedef typename K::FT FT;
+    typedef typename K::Vector_2 Vector_2;
+  public:
+    typedef FT result_type;
+    const result_type & operator()(const Vector_2& v) const { return v.rep().x(); }
+  };
+  template <typename K> class Compute_y_2 : Has_qrt {
+    typedef typename K::FT FT;
+    typedef typename K::Vector_2 Vector_2;
+  public:
+    typedef FT result_type;
+    const result_type & operator()(const Vector_2& v) const { return v.rep().y(); }
+  };
+  template <typename K> class Compute_hx_2 : public Has_qrt {
+    typedef typename K::FT FT;
+    typedef typename K::Vector_2 Vector_2;
+  public:
+    typedef FT result_type;
+    const result_type & operator()(const Vector_2& v) const { return v.rep().hx(); }
+  };
+  template <typename K> class Compute_hy_2 : public Has_qrt {
+    typedef typename K::FT FT;
+    typedef typename K::Vector_2 Vector_2;
+  public:
+    typedef FT result_type;
+    const result_type & operator()(const Vector_2& v) const { return v.rep().hy(); }
+  };
+  template <typename K> class Compute_hw_2 : public Has_qrt {
+    typedef typename K::FT FT;
+    typedef typename K::Vector_2 Vector_2;
+  public:
+    typedef FT result_type;
+    const result_type & operator()(const Vector_2& v) const { return v.rep().hw(); }
+  };
+}
+
+template <typename K_, typename FT_> struct Cartesian_base {
+  typedef K_ Kernel;
+  typedef X::Object Object_2;
+  typedef PointC2<Kernel> Point_2;
+  typedef VectorC2<Kernel> Vector_2;
+  typedef SegmentC2<Kernel> Segment_2;
+  typedef Iso_rectangleC2<Kernel> Iso_rectangle_2;
+  typedef typename array<FT_, 2>::const_iterator Cartesian_const_iterator_2;
+};
+
+template <typename K_base, typename Kernel_ > struct Type_equality_wrapper : public K_base {
+  typedef K_base Kernel_base;
+  typedef X::Point_2<Kernel_> Point_2;
+  typedef X::Vector_2<Kernel_> Vector_2;
+  typedef X::Segment_2<Kernel_> Segment_2;
+  typedef X::Iso_rectangle_2<Kernel_> Iso_rectangle_2;
+};
+
+template <typename FT_, typename Kernel_ > struct Cartesian_base_ref_count : public Cartesian_base<Kernel_, FT_ > {
+  typedef FT_ RT;
+  typedef FT_ FT;
+  template <typename T > struct Handle { typedef Handle_for<T> type; };
+  typedef Kernel_ K;
+  typedef CartesianKernelFunctors::Compute_x_2<K> Compute_x_2;
+  Compute_x_2 compute_x_2_object() const { }
+  typedef CartesianKernelFunctors::Compute_y_2<K> Compute_y_2;
+  Compute_y_2 compute_y_2_object() const { }
+  typedef CartesianKernelFunctors::Compute_hx_2<K> Compute_hx_2;
+  Compute_hx_2 compute_hx_2_object() const { }
+  typedef CartesianKernelFunctors::Compute_hy_2<K> Compute_hy_2;
+  Compute_hy_2 compute_hy_2_object() const { }
+  typedef CartesianKernelFunctors::Compute_hw_2<K> Compute_hw_2;
+  Compute_hw_2 compute_hw_2_object() const { }
+  typedef CartesianKernelFunctors::Construct_cartesian_const_iterator_2<K> Construct_cartesian_const_iterator_2;
+  typedef CartesianKernelFunctors::Intersect_2<K> Intersect_2;
+};
+
+template <typename FT_ > struct Cartesian : public Type_equality_wrapper<Cartesian_base_ref_count<FT_, Cartesian<FT_> >, Cartesian<FT_> > { };
+
+template <class Kernel> class Ipelet_base {
+public:
+  typedef typename X::Point_2<Kernel> Point_2;
+  typedef typename Kernel::Segment_2 Segment_2;
+  typedef typename Kernel::Iso_rectangle_2 Iso_rectangle_2;
+
+  Iso_rectangle_2 read_active_objects () const { }
+  struct Voronoi_from_tri{ std::list<Segment_2> seg_list; };
+
+  template <class T,class output_iterator> bool cast_into_seg(const T& obj,const Iso_rectangle_2& bbox,output_iterator out_it) const{ X::intersection(obj,bbox); }
+  template<class iterator,class output_iterator> void cast_into_seg(const iterator first,const iterator end, const Iso_rectangle_2& bbox, output_iterator out_it) const { for (iterator it=first; it!=end; ++it) cast_into_seg(*it,bbox,out_it); }
+  void draw_dual_(Voronoi_from_tri& v_recup,const Iso_rectangle_2& bbox) const { std::vector seg_cont; cast_into_seg(v_recup.seg_list.begin(),v_recup.seg_list.end(),bbox,std::back_inserter(seg_cont)); }
+  void draw_dual_in_ipe(const Iso_rectangle_2& bbox) const { Voronoi_from_tri v_recup; draw_dual_(v_recup,bbox); }
+};
+
+typedef X::Cartesian<double> Kernel;
+
+class diagrammeIpelet : public X::Ipelet_base<Kernel> { void protected_run(); };
+void diagrammeIpelet::protected_run() { Iso_rectangle_2 bbox = read_active_objects( ); draw_dual_in_ipe(bbox); }
+
+}
Index: gcc/testsuite/g++.dg/tree-prof/partition2.C
===================================================================
--- gcc/testsuite/g++.dg/tree-prof/partition2.C	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/g++.dg/tree-prof/partition2.C	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,15 @@
+// PR middle-end/45458
+// { dg-require-effective-target freorder }
+// { dg-options "-fnon-call-exceptions -freorder-blocks-and-partition" }
+
+int
+main ()
+{
+  try
+  {
+    throw 6;
+  }
+  catch (...)
+  {
+  }
+}
Index: gcc/testsuite/g++.dg/pr44328.C
===================================================================
--- gcc/testsuite/g++.dg/pr44328.C	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/g++.dg/pr44328.C	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,39 @@
+/* { dg-do compile } */
+/* { dg-options "-c -O2 -Wextra" } */
+#define O_RDONLY     (1<<0)
+#define O_WRONLY     (1<<1)
+#define O_RDWR       (O_RDONLY|O_WRONLY)
+#define O_CREAT      (1<<3)
+#define O_TRUNC      (1<<6)
+
+typedef enum {
+    OM_READ = 0,
+    OM_WRITE,
+    OM_READWRITE_NOCREATE,
+    OM_READWRITE_CREATE
+} OpenMode;
+
+extern int open(const char *name, int mode);
+
+void open_file(const char *filename, const OpenMode rw)
+{
+    int mode = 0;
+
+    switch( rw )
+    {
+    case OM_WRITE:
+        mode = O_WRONLY|O_CREAT|O_TRUNC;
+        break;
+    case OM_READ:
+        mode = O_RDONLY;
+        break;
+    case OM_READWRITE_NOCREATE:
+        mode = O_RDWR;
+        break;
+    case OM_READWRITE_CREATE:
+        mode = O_RDWR|O_CREAT|O_TRUNC;
+        break;
+    }
+
+    open( filename, mode );
+}
Index: gcc/testsuite/g++.dg/parse/defarg15.C
===================================================================
--- gcc/testsuite/g++.dg/parse/defarg15.C	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/g++.dg/parse/defarg15.C	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,5 @@
+// PR c++/44991
+
+class bar {
+    void foo(bool a = 3 < 2, bool b = true) {}
+};
Index: gcc/testsuite/g++.dg/cpp0x/rv6p.C
===================================================================
--- gcc/testsuite/g++.dg/cpp0x/rv6p.C	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/g++.dg/cpp0x/rv6p.C	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -8,14 +8,14 @@
 template <bool> struct sa;
 template <> struct sa<true> {};
 
-struct one   {char x[1];};
-struct two   {char x[2];};
-struct three {char x[3];};
-struct four  {char x[4];};
-struct five  {char x[5];};
-struct six   {char x[6];};
-struct seven {char x[7];};
-struct eight {char x[8];};
+struct one   {long x[1];};
+struct two   {long x[2];};
+struct three {long x[3];};
+struct four  {long x[4];};
+struct five  {long x[5];};
+struct six   {long x[6];};
+struct seven {long x[7];};
+struct eight {long x[8];};
 
 struct A
 {
@@ -43,12 +43,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_6_123456(a))           == 1> t1;
-    sa<sizeof(sink_6_123456(ca))          == 2> t2;
-    sa<sizeof(sink_6_123456(va))          == 3> t3;
-    sa<sizeof(sink_6_123456(cva))         == 4> t4;
-    sa<sizeof(sink_6_123456(source()))    == 5> t5;
-    sa<sizeof(sink_6_123456(c_source()))  == 6> t6;
+    sa<sizeof(sink_6_123456(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_6_123456(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_6_123456(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_6_123456(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_6_123456(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_6_123456(c_source()))  == 6 * sizeof(long)> t6;
     return 0;
 }
 
@@ -65,13 +65,13 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_6_123457(a))           == 1> t1;
-    sa<sizeof(sink_6_123457(ca))          == 2> t2;
-    sa<sizeof(sink_6_123457(va))          == 3> t3;
-    sa<sizeof(sink_6_123457(cva))         == 4> t4;
-    sa<sizeof(sink_6_123457(source()))    == 5> t5;
-    sa<sizeof(sink_6_123457(c_source()))  == 2> t6;
-    sa<sizeof(sink_6_123457(v_source()))  == 7> t7;
+    sa<sizeof(sink_6_123457(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_6_123457(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_6_123457(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_6_123457(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_6_123457(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_6_123457(c_source()))  == 2 * sizeof(long)> t6;
+    sa<sizeof(sink_6_123457(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -88,14 +88,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_6_123458(a))           == 1> t1;
-    sa<sizeof(sink_6_123458(ca))          == 2> t2;
-    sa<sizeof(sink_6_123458(va))          == 3> t3;
-    sa<sizeof(sink_6_123458(cva))         == 4> t4;
-    sa<sizeof(sink_6_123458(source()))    == 5> t5;
-    sa<sizeof(sink_6_123458(c_source()))  == 8> t6;
-    sa<sizeof(sink_6_123458(v_source()))  == 8> t7;
-    sa<sizeof(sink_6_123458(cv_source())) == 8> t8;
+    sa<sizeof(sink_6_123458(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_6_123458(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_6_123458(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_6_123458(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_6_123458(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_6_123458(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_6_123458(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_6_123458(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -112,12 +112,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_6_123467(a))           == 1> t1;
-    sa<sizeof(sink_6_123467(ca))          == 2> t2;
-    sa<sizeof(sink_6_123467(va))          == 3> t3;
-    sa<sizeof(sink_6_123467(cva))         == 4> t4;
-    sa<sizeof(sink_6_123467(c_source()))  == 6> t6;
-    sa<sizeof(sink_6_123467(v_source()))  == 7> t7;
+    sa<sizeof(sink_6_123467(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_6_123467(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_6_123467(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_6_123467(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_6_123467(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_6_123467(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -134,14 +134,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_6_123468(a))           == 1> t1;
-    sa<sizeof(sink_6_123468(ca))          == 2> t2;
-    sa<sizeof(sink_6_123468(va))          == 3> t3;
-    sa<sizeof(sink_6_123468(cva))         == 4> t4;
-    sa<sizeof(sink_6_123468(source()))    == 6> t5;
-    sa<sizeof(sink_6_123468(c_source()))  == 6> t6;
-    sa<sizeof(sink_6_123468(v_source()))  == 8> t7;
-    sa<sizeof(sink_6_123468(cv_source())) == 8> t8;
+    sa<sizeof(sink_6_123468(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_6_123468(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_6_123468(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_6_123468(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_6_123468(source()))    == 6 * sizeof(long)> t5;
+    sa<sizeof(sink_6_123468(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_6_123468(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_6_123468(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -158,14 +158,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_6_123478(a))           == 1> t1;
-    sa<sizeof(sink_6_123478(ca))          == 2> t2;
-    sa<sizeof(sink_6_123478(va))          == 3> t3;
-    sa<sizeof(sink_6_123478(cva))         == 4> t4;
-    sa<sizeof(sink_6_123478(source()))    == 7> t5;
-    sa<sizeof(sink_6_123478(c_source()))  == 8> t6;
-    sa<sizeof(sink_6_123478(v_source()))  == 7> t7;
-    sa<sizeof(sink_6_123478(cv_source())) == 8> t8;
+    sa<sizeof(sink_6_123478(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_6_123478(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_6_123478(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_6_123478(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_6_123478(source()))    == 7 * sizeof(long)> t5;
+    sa<sizeof(sink_6_123478(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_6_123478(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_6_123478(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -182,12 +182,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_6_123567(a))           == 1> t1;
-    sa<sizeof(sink_6_123567(ca))          == 2> t2;
-    sa<sizeof(sink_6_123567(va))          == 3> t3;
-    sa<sizeof(sink_6_123567(source()))    == 5> t5;
-    sa<sizeof(sink_6_123567(c_source()))  == 6> t6;
-    sa<sizeof(sink_6_123567(v_source()))  == 7> t7;
+    sa<sizeof(sink_6_123567(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_6_123567(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_6_123567(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_6_123567(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_6_123567(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_6_123567(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -204,13 +204,13 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_6_123568(a))           == 1> t1;
-    sa<sizeof(sink_6_123568(ca))          == 2> t2;
-    sa<sizeof(sink_6_123568(va))          == 3> t3;
-    sa<sizeof(sink_6_123568(source()))    == 5> t5;
-    sa<sizeof(sink_6_123568(c_source()))  == 6> t6;
-    sa<sizeof(sink_6_123568(v_source()))  == 8> t7;
-    sa<sizeof(sink_6_123568(cv_source())) == 8> t8;
+    sa<sizeof(sink_6_123568(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_6_123568(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_6_123568(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_6_123568(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_6_123568(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_6_123568(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_6_123568(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -227,13 +227,13 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_6_123578(a))           == 1> t1;
-    sa<sizeof(sink_6_123578(ca))          == 2> t2;
-    sa<sizeof(sink_6_123578(va))          == 3> t3;
-    sa<sizeof(sink_6_123578(source()))    == 5> t5;
-    sa<sizeof(sink_6_123578(c_source()))  == 8> t6;
-    sa<sizeof(sink_6_123578(v_source()))  == 7> t7;
-    sa<sizeof(sink_6_123578(cv_source())) == 8> t8;
+    sa<sizeof(sink_6_123578(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_6_123578(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_6_123578(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_6_123578(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_6_123578(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_6_123578(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_6_123578(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -250,12 +250,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_6_123678(a))           == 1> t1;
-    sa<sizeof(sink_6_123678(ca))          == 2> t2;
-    sa<sizeof(sink_6_123678(va))          == 3> t3;
-    sa<sizeof(sink_6_123678(c_source()))  == 6> t6;
-    sa<sizeof(sink_6_123678(v_source()))  == 7> t7;
-    sa<sizeof(sink_6_123678(cv_source())) == 8> t8;
+    sa<sizeof(sink_6_123678(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_6_123678(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_6_123678(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_6_123678(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_6_123678(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_6_123678(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -272,13 +272,13 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_6_124567(a))           == 1> t1;
-    sa<sizeof(sink_6_124567(ca))          == 2> t2;
-    sa<sizeof(sink_6_124567(va))          == 4> t3;
-    sa<sizeof(sink_6_124567(cva))         == 4> t4;
-    sa<sizeof(sink_6_124567(source()))    == 5> t5;
-    sa<sizeof(sink_6_124567(c_source()))  == 6> t6;
-    sa<sizeof(sink_6_124567(v_source()))  == 7> t7;
+    sa<sizeof(sink_6_124567(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_6_124567(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_6_124567(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_6_124567(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_6_124567(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_6_124567(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_6_124567(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -295,14 +295,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_6_124568(a))           == 1> t1;
-    sa<sizeof(sink_6_124568(ca))          == 2> t2;
-    sa<sizeof(sink_6_124568(va))          == 4> t3;
-    sa<sizeof(sink_6_124568(cva))         == 4> t4;
-    sa<sizeof(sink_6_124568(source()))    == 5> t5;
-    sa<sizeof(sink_6_124568(c_source()))  == 6> t6;
-    sa<sizeof(sink_6_124568(v_source()))  == 8> t7;
-    sa<sizeof(sink_6_124568(cv_source())) == 8> t8;
+    sa<sizeof(sink_6_124568(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_6_124568(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_6_124568(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_6_124568(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_6_124568(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_6_124568(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_6_124568(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_6_124568(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -319,14 +319,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_6_124578(a))           == 1> t1;
-    sa<sizeof(sink_6_124578(ca))          == 2> t2;
-    sa<sizeof(sink_6_124578(va))          == 4> t3;
-    sa<sizeof(sink_6_124578(cva))         == 4> t4;
-    sa<sizeof(sink_6_124578(source()))    == 5> t5;
-    sa<sizeof(sink_6_124578(c_source()))  == 8> t6;
-    sa<sizeof(sink_6_124578(v_source()))  == 7> t7;
-    sa<sizeof(sink_6_124578(cv_source())) == 8> t8;
+    sa<sizeof(sink_6_124578(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_6_124578(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_6_124578(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_6_124578(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_6_124578(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_6_124578(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_6_124578(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_6_124578(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -343,13 +343,13 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_6_124678(a))           == 1> t1;
-    sa<sizeof(sink_6_124678(ca))          == 2> t2;
-    sa<sizeof(sink_6_124678(va))          == 4> t3;
-    sa<sizeof(sink_6_124678(cva))         == 4> t4;
-    sa<sizeof(sink_6_124678(c_source()))  == 6> t6;
-    sa<sizeof(sink_6_124678(v_source()))  == 7> t7;
-    sa<sizeof(sink_6_124678(cv_source())) == 8> t8;
+    sa<sizeof(sink_6_124678(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_6_124678(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_6_124678(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_6_124678(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_6_124678(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_6_124678(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_6_124678(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -366,12 +366,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_6_125678(a))           == 1> t1;
-    sa<sizeof(sink_6_125678(ca))          == 2> t2;
-    sa<sizeof(sink_6_125678(source()))    == 5> t5;
-    sa<sizeof(sink_6_125678(c_source()))  == 6> t6;
-    sa<sizeof(sink_6_125678(v_source()))  == 7> t7;
-    sa<sizeof(sink_6_125678(cv_source())) == 8> t8;
+    sa<sizeof(sink_6_125678(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_6_125678(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_6_125678(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_6_125678(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_6_125678(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_6_125678(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -388,13 +388,13 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_6_134567(a))           == 1> t1;
-    sa<sizeof(sink_6_134567(ca))          == 4> t2;
-    sa<sizeof(sink_6_134567(va))          == 3> t3;
-    sa<sizeof(sink_6_134567(cva))         == 4> t4;
-    sa<sizeof(sink_6_134567(source()))    == 5> t5;
-    sa<sizeof(sink_6_134567(c_source()))  == 6> t6;
-    sa<sizeof(sink_6_134567(v_source()))  == 7> t7;
+    sa<sizeof(sink_6_134567(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_6_134567(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_6_134567(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_6_134567(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_6_134567(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_6_134567(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_6_134567(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -411,14 +411,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_6_134568(a))           == 1> t1;
-    sa<sizeof(sink_6_134568(ca))          == 4> t2;
-    sa<sizeof(sink_6_134568(va))          == 3> t3;
-    sa<sizeof(sink_6_134568(cva))         == 4> t4;
-    sa<sizeof(sink_6_134568(source()))    == 5> t5;
-    sa<sizeof(sink_6_134568(c_source()))  == 6> t6;
-    sa<sizeof(sink_6_134568(v_source()))  == 8> t7;
-    sa<sizeof(sink_6_134568(cv_source())) == 8> t8;
+    sa<sizeof(sink_6_134568(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_6_134568(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_6_134568(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_6_134568(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_6_134568(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_6_134568(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_6_134568(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_6_134568(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -435,14 +435,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_6_134578(a))           == 1> t1;
-    sa<sizeof(sink_6_134578(ca))          == 4> t2;
-    sa<sizeof(sink_6_134578(va))          == 3> t3;
-    sa<sizeof(sink_6_134578(cva))         == 4> t4;
-    sa<sizeof(sink_6_134578(source()))    == 5> t5;
-    sa<sizeof(sink_6_134578(c_source()))  == 8> t6;
-    sa<sizeof(sink_6_134578(v_source()))  == 7> t7;
-    sa<sizeof(sink_6_134578(cv_source())) == 8> t8;
+    sa<sizeof(sink_6_134578(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_6_134578(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_6_134578(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_6_134578(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_6_134578(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_6_134578(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_6_134578(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_6_134578(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -459,13 +459,13 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_6_134678(a))           == 1> t1;
-    sa<sizeof(sink_6_134678(ca))          == 4> t2;
-    sa<sizeof(sink_6_134678(va))          == 3> t3;
-    sa<sizeof(sink_6_134678(cva))         == 4> t4;
-    sa<sizeof(sink_6_134678(c_source()))  == 6> t6;
-    sa<sizeof(sink_6_134678(v_source()))  == 7> t7;
-    sa<sizeof(sink_6_134678(cv_source())) == 8> t8;
+    sa<sizeof(sink_6_134678(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_6_134678(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_6_134678(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_6_134678(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_6_134678(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_6_134678(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_6_134678(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -482,12 +482,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_6_135678(a))           == 1> t1;
-    sa<sizeof(sink_6_135678(va))          == 3> t3;
-    sa<sizeof(sink_6_135678(source()))    == 5> t5;
-    sa<sizeof(sink_6_135678(c_source()))  == 6> t6;
-    sa<sizeof(sink_6_135678(v_source()))  == 7> t7;
-    sa<sizeof(sink_6_135678(cv_source())) == 8> t8;
+    sa<sizeof(sink_6_135678(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_6_135678(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_6_135678(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_6_135678(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_6_135678(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_6_135678(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -504,14 +504,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_6_145678(a))           == 1> t1;
-    sa<sizeof(sink_6_145678(ca))          == 4> t2;
-    sa<sizeof(sink_6_145678(va))          == 4> t3;
-    sa<sizeof(sink_6_145678(cva))         == 4> t4;
-    sa<sizeof(sink_6_145678(source()))    == 5> t5;
-    sa<sizeof(sink_6_145678(c_source()))  == 6> t6;
-    sa<sizeof(sink_6_145678(v_source()))  == 7> t7;
-    sa<sizeof(sink_6_145678(cv_source())) == 8> t8;
+    sa<sizeof(sink_6_145678(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_6_145678(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_6_145678(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_6_145678(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_6_145678(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_6_145678(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_6_145678(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_6_145678(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -528,12 +528,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_6_234567(ca))          == 2> t2;
-    sa<sizeof(sink_6_234567(va))          == 3> t3;
-    sa<sizeof(sink_6_234567(cva))         == 4> t4;
-    sa<sizeof(sink_6_234567(source()))    == 5> t5;
-    sa<sizeof(sink_6_234567(c_source()))  == 6> t6;
-    sa<sizeof(sink_6_234567(v_source()))  == 7> t7;
+    sa<sizeof(sink_6_234567(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_6_234567(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_6_234567(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_6_234567(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_6_234567(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_6_234567(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -550,13 +550,13 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_6_234568(ca))          == 2> t2;
-    sa<sizeof(sink_6_234568(va))          == 3> t3;
-    sa<sizeof(sink_6_234568(cva))         == 4> t4;
-    sa<sizeof(sink_6_234568(source()))    == 5> t5;
-    sa<sizeof(sink_6_234568(c_source()))  == 6> t6;
-    sa<sizeof(sink_6_234568(v_source()))  == 8> t7;
-    sa<sizeof(sink_6_234568(cv_source())) == 8> t8;
+    sa<sizeof(sink_6_234568(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_6_234568(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_6_234568(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_6_234568(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_6_234568(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_6_234568(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_6_234568(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -573,13 +573,13 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_6_234578(ca))          == 2> t2;
-    sa<sizeof(sink_6_234578(va))          == 3> t3;
-    sa<sizeof(sink_6_234578(cva))         == 4> t4;
-    sa<sizeof(sink_6_234578(source()))    == 5> t5;
-    sa<sizeof(sink_6_234578(c_source()))  == 8> t6;
-    sa<sizeof(sink_6_234578(v_source()))  == 7> t7;
-    sa<sizeof(sink_6_234578(cv_source())) == 8> t8;
+    sa<sizeof(sink_6_234578(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_6_234578(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_6_234578(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_6_234578(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_6_234578(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_6_234578(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_6_234578(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -596,12 +596,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_6_234678(ca))          == 2> t2;
-    sa<sizeof(sink_6_234678(va))          == 3> t3;
-    sa<sizeof(sink_6_234678(cva))         == 4> t4;
-    sa<sizeof(sink_6_234678(c_source()))  == 6> t6;
-    sa<sizeof(sink_6_234678(v_source()))  == 7> t7;
-    sa<sizeof(sink_6_234678(cv_source())) == 8> t8;
+    sa<sizeof(sink_6_234678(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_6_234678(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_6_234678(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_6_234678(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_6_234678(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_6_234678(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -618,12 +618,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_6_235678(ca))          == 2> t2;
-    sa<sizeof(sink_6_235678(va))          == 3> t3;
-    sa<sizeof(sink_6_235678(source()))    == 5> t5;
-    sa<sizeof(sink_6_235678(c_source()))  == 6> t6;
-    sa<sizeof(sink_6_235678(v_source()))  == 7> t7;
-    sa<sizeof(sink_6_235678(cv_source())) == 8> t8;
+    sa<sizeof(sink_6_235678(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_6_235678(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_6_235678(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_6_235678(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_6_235678(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_6_235678(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -640,14 +640,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_6_245678(a))           == 2> t1;
-    sa<sizeof(sink_6_245678(ca))          == 2> t2;
-    sa<sizeof(sink_6_245678(va))          == 4> t3;
-    sa<sizeof(sink_6_245678(cva))         == 4> t4;
-    sa<sizeof(sink_6_245678(source()))    == 5> t5;
-    sa<sizeof(sink_6_245678(c_source()))  == 6> t6;
-    sa<sizeof(sink_6_245678(v_source()))  == 7> t7;
-    sa<sizeof(sink_6_245678(cv_source())) == 8> t8;
+    sa<sizeof(sink_6_245678(a))           == 2 * sizeof(long)> t1;
+    sa<sizeof(sink_6_245678(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_6_245678(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_6_245678(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_6_245678(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_6_245678(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_6_245678(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_6_245678(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -664,14 +664,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_6_345678(a))           == 3> t1;
-    sa<sizeof(sink_6_345678(ca))          == 4> t2;
-    sa<sizeof(sink_6_345678(va))          == 3> t3;
-    sa<sizeof(sink_6_345678(cva))         == 4> t4;
-    sa<sizeof(sink_6_345678(source()))    == 5> t5;
-    sa<sizeof(sink_6_345678(c_source()))  == 6> t6;
-    sa<sizeof(sink_6_345678(v_source()))  == 7> t7;
-    sa<sizeof(sink_6_345678(cv_source())) == 8> t8;
+    sa<sizeof(sink_6_345678(a))           == 3 * sizeof(long)> t1;
+    sa<sizeof(sink_6_345678(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_6_345678(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_6_345678(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_6_345678(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_6_345678(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_6_345678(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_6_345678(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
Index: gcc/testsuite/g++.dg/cpp0x/rv1p.C
===================================================================
--- gcc/testsuite/g++.dg/cpp0x/rv1p.C	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/g++.dg/cpp0x/rv1p.C	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -8,14 +8,14 @@
 template <bool> struct sa;
 template <> struct sa<true> {};
 
-struct one   {char x[1];};
-struct two   {char x[2];};
-struct three {char x[3];};
-struct four  {char x[4];};
-struct five  {char x[5];};
-struct six   {char x[6];};
-struct seven {char x[7];};
-struct eight {char x[8];};
+struct one   {long x[1];};
+struct two   {long x[2];};
+struct three {long x[3];};
+struct four  {long x[4];};
+struct five  {long x[5];};
+struct six   {long x[6];};
+struct seven {long x[7];};
+struct eight {long x[8];};
 
 struct A
 {
@@ -38,7 +38,7 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_1_1(a))           == 1> t1;
+    sa<sizeof(sink_1_1(a))           == 1 * sizeof(long)> t1;
     return 0;
 }
 
@@ -50,10 +50,10 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_1_2(a))           == 2> t1;
-    sa<sizeof(sink_1_2(ca))          == 2> t2;
-    sa<sizeof(sink_1_2(source()))    == 2> t5;
-    sa<sizeof(sink_1_2(c_source()))  == 2> t6;
+    sa<sizeof(sink_1_2(a))           == 2 * sizeof(long)> t1;
+    sa<sizeof(sink_1_2(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_1_2(source()))    == 2 * sizeof(long)> t5;
+    sa<sizeof(sink_1_2(c_source()))  == 2 * sizeof(long)> t6;
     return 0;
 }
 
@@ -65,8 +65,8 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_1_3(a))           == 3> t1;
-    sa<sizeof(sink_1_3(va))          == 3> t3;
+    sa<sizeof(sink_1_3(a))           == 3 * sizeof(long)> t1;
+    sa<sizeof(sink_1_3(va))          == 3 * sizeof(long)> t3;
     return 0;
 }
 
@@ -78,10 +78,10 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_1_4(a))           == 4> t1;
-    sa<sizeof(sink_1_4(ca))          == 4> t2;
-    sa<sizeof(sink_1_4(va))          == 4> t3;
-    sa<sizeof(sink_1_4(cva))         == 4> t4;
+    sa<sizeof(sink_1_4(a))           == 4 * sizeof(long)> t1;
+    sa<sizeof(sink_1_4(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_1_4(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_1_4(cva))         == 4 * sizeof(long)> t4;
     return 0;
 }
 
@@ -93,7 +93,7 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_1_5(source()))    == 5> t5;
+    sa<sizeof(sink_1_5(source()))    == 5 * sizeof(long)> t5;
     return 0;
 }
 
@@ -105,8 +105,8 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_1_6(source()))    == 6> t5;
-    sa<sizeof(sink_1_6(c_source()))  == 6> t6;
+    sa<sizeof(sink_1_6(source()))    == 6 * sizeof(long)> t5;
+    sa<sizeof(sink_1_6(c_source()))  == 6 * sizeof(long)> t6;
     return 0;
 }
 
@@ -118,8 +118,8 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_1_7(source()))    == 7> t5;
-    sa<sizeof(sink_1_7(v_source()))  == 7> t7;
+    sa<sizeof(sink_1_7(source()))    == 7 * sizeof(long)> t5;
+    sa<sizeof(sink_1_7(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -131,10 +131,10 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_1_8(source()))    == 8> t5;
-    sa<sizeof(sink_1_8(c_source()))  == 8> t6;
-    sa<sizeof(sink_1_8(v_source()))  == 8> t7;
-    sa<sizeof(sink_1_8(cv_source())) == 8> t8;
+    sa<sizeof(sink_1_8(source()))    == 8 * sizeof(long)> t5;
+    sa<sizeof(sink_1_8(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_1_8(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_1_8(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
Index: gcc/testsuite/g++.dg/cpp0x/cast.C
===================================================================
--- gcc/testsuite/g++.dg/cpp0x/cast.C	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/g++.dg/cpp0x/cast.C	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -8,8 +8,8 @@
 template <bool> struct sa;
 template <> struct sa<true> {};
 
-struct one   {char x[1];};
-struct two   {char x[2];};
+struct one   {long x[1];};
+struct two   {long x[2];};
 
 struct A {};
 
@@ -19,8 +19,8 @@
 int test1()
 {
     A a;
-    sa<sizeof(foo(a)) == 1> t1;
-    sa<sizeof(foo(static_cast<A&&>(a))) == 2> t2;
+    sa<sizeof(foo(a)) == 1 * sizeof(long)> t1;
+    sa<sizeof(foo(static_cast<A&&>(a))) == 2 * sizeof(long)> t2;
     return 0;
 }
 
Index: gcc/testsuite/g++.dg/cpp0x/rv7p.C
===================================================================
--- gcc/testsuite/g++.dg/cpp0x/rv7p.C	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/g++.dg/cpp0x/rv7p.C	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -8,14 +8,14 @@
 template <bool> struct sa;
 template <> struct sa<true> {};
 
-struct one   {char x[1];};
-struct two   {char x[2];};
-struct three {char x[3];};
-struct four  {char x[4];};
-struct five  {char x[5];};
-struct six   {char x[6];};
-struct seven {char x[7];};
-struct eight {char x[8];};
+struct one   {long x[1];};
+struct two   {long x[2];};
+struct three {long x[3];};
+struct four  {long x[4];};
+struct five  {long x[5];};
+struct six   {long x[6];};
+struct seven {long x[7];};
+struct eight {long x[8];};
 
 struct A
 {
@@ -44,13 +44,13 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_7_1234567(a))           == 1> t1;
-    sa<sizeof(sink_7_1234567(ca))          == 2> t2;
-    sa<sizeof(sink_7_1234567(va))          == 3> t3;
-    sa<sizeof(sink_7_1234567(cva))         == 4> t4;
-    sa<sizeof(sink_7_1234567(source()))    == 5> t5;
-    sa<sizeof(sink_7_1234567(c_source()))  == 6> t6;
-    sa<sizeof(sink_7_1234567(v_source()))  == 7> t7;
+    sa<sizeof(sink_7_1234567(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_7_1234567(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_7_1234567(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_7_1234567(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_7_1234567(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_7_1234567(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_7_1234567(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -68,14 +68,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_7_1234568(a))           == 1> t1;
-    sa<sizeof(sink_7_1234568(ca))          == 2> t2;
-    sa<sizeof(sink_7_1234568(va))          == 3> t3;
-    sa<sizeof(sink_7_1234568(cva))         == 4> t4;
-    sa<sizeof(sink_7_1234568(source()))    == 5> t5;
-    sa<sizeof(sink_7_1234568(c_source()))  == 6> t6;
-    sa<sizeof(sink_7_1234568(v_source()))  == 8> t7;
-    sa<sizeof(sink_7_1234568(cv_source())) == 8> t8;
+    sa<sizeof(sink_7_1234568(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_7_1234568(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_7_1234568(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_7_1234568(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_7_1234568(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_7_1234568(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_7_1234568(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_7_1234568(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -93,14 +93,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_7_1234578(a))           == 1> t1;
-    sa<sizeof(sink_7_1234578(ca))          == 2> t2;
-    sa<sizeof(sink_7_1234578(va))          == 3> t3;
-    sa<sizeof(sink_7_1234578(cva))         == 4> t4;
-    sa<sizeof(sink_7_1234578(source()))    == 5> t5;
-    sa<sizeof(sink_7_1234578(c_source()))  == 8> t6;
-    sa<sizeof(sink_7_1234578(v_source()))  == 7> t7;
-    sa<sizeof(sink_7_1234578(cv_source())) == 8> t8;
+    sa<sizeof(sink_7_1234578(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_7_1234578(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_7_1234578(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_7_1234578(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_7_1234578(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_7_1234578(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_7_1234578(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_7_1234578(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -118,13 +118,13 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_7_1234678(a))           == 1> t1;
-    sa<sizeof(sink_7_1234678(ca))          == 2> t2;
-    sa<sizeof(sink_7_1234678(va))          == 3> t3;
-    sa<sizeof(sink_7_1234678(cva))         == 4> t4;
-    sa<sizeof(sink_7_1234678(c_source()))  == 6> t6;
-    sa<sizeof(sink_7_1234678(v_source()))  == 7> t7;
-    sa<sizeof(sink_7_1234678(cv_source())) == 8> t8;
+    sa<sizeof(sink_7_1234678(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_7_1234678(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_7_1234678(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_7_1234678(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_7_1234678(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_7_1234678(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_7_1234678(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -142,13 +142,13 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_7_1235678(a))           == 1> t1;
-    sa<sizeof(sink_7_1235678(ca))          == 2> t2;
-    sa<sizeof(sink_7_1235678(va))          == 3> t3;
-    sa<sizeof(sink_7_1235678(source()))    == 5> t5;
-    sa<sizeof(sink_7_1235678(c_source()))  == 6> t6;
-    sa<sizeof(sink_7_1235678(v_source()))  == 7> t7;
-    sa<sizeof(sink_7_1235678(cv_source())) == 8> t8;
+    sa<sizeof(sink_7_1235678(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_7_1235678(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_7_1235678(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_7_1235678(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_7_1235678(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_7_1235678(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_7_1235678(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -166,14 +166,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_7_1245678(a))           == 1> t1;
-    sa<sizeof(sink_7_1245678(ca))          == 2> t2;
-    sa<sizeof(sink_7_1245678(va))          == 4> t3;
-    sa<sizeof(sink_7_1245678(cva))         == 4> t4;
-    sa<sizeof(sink_7_1245678(source()))    == 5> t5;
-    sa<sizeof(sink_7_1245678(c_source()))  == 6> t6;
-    sa<sizeof(sink_7_1245678(v_source()))  == 7> t7;
-    sa<sizeof(sink_7_1245678(cv_source())) == 8> t8;
+    sa<sizeof(sink_7_1245678(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_7_1245678(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_7_1245678(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_7_1245678(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_7_1245678(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_7_1245678(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_7_1245678(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_7_1245678(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -191,14 +191,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_7_1345678(a))           == 1> t1;
-    sa<sizeof(sink_7_1345678(ca))          == 4> t2;
-    sa<sizeof(sink_7_1345678(va))          == 3> t3;
-    sa<sizeof(sink_7_1345678(cva))         == 4> t4;
-    sa<sizeof(sink_7_1345678(source()))    == 5> t5;
-    sa<sizeof(sink_7_1345678(c_source()))  == 6> t6;
-    sa<sizeof(sink_7_1345678(v_source()))  == 7> t7;
-    sa<sizeof(sink_7_1345678(cv_source())) == 8> t8;
+    sa<sizeof(sink_7_1345678(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_7_1345678(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_7_1345678(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_7_1345678(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_7_1345678(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_7_1345678(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_7_1345678(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_7_1345678(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -216,13 +216,13 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_7_2345678(ca))          == 2> t2;
-    sa<sizeof(sink_7_2345678(va))          == 3> t3;
-    sa<sizeof(sink_7_2345678(cva))         == 4> t4;
-    sa<sizeof(sink_7_2345678(source()))    == 5> t5;
-    sa<sizeof(sink_7_2345678(c_source()))  == 6> t6;
-    sa<sizeof(sink_7_2345678(v_source()))  == 7> t7;
-    sa<sizeof(sink_7_2345678(cv_source())) == 8> t8;
+    sa<sizeof(sink_7_2345678(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_7_2345678(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_7_2345678(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_7_2345678(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_7_2345678(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_7_2345678(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_7_2345678(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
Index: gcc/testsuite/g++.dg/cpp0x/rv2p.C
===================================================================
--- gcc/testsuite/g++.dg/cpp0x/rv2p.C	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/g++.dg/cpp0x/rv2p.C	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -8,14 +8,14 @@
 template <bool> struct sa;
 template <> struct sa<true> {};
 
-struct one   {char x[1];};
-struct two   {char x[2];};
-struct three {char x[3];};
-struct four  {char x[4];};
-struct five  {char x[5];};
-struct six   {char x[6];};
-struct seven {char x[7];};
-struct eight {char x[8];};
+struct one   {long x[1];};
+struct two   {long x[2];};
+struct three {long x[3];};
+struct four  {long x[4];};
+struct five  {long x[5];};
+struct six   {long x[6];};
+struct seven {long x[7];};
+struct eight {long x[8];};
 
 struct A
 {
@@ -39,10 +39,10 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_2_12(a))           == 1> t1;
-    sa<sizeof(sink_2_12(ca))          == 2> t2;
-    sa<sizeof(sink_2_12(source()))    == 2> t5;
-    sa<sizeof(sink_2_12(c_source()))  == 2> t6;
+    sa<sizeof(sink_2_12(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_2_12(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_2_12(source()))    == 2 * sizeof(long)> t5;
+    sa<sizeof(sink_2_12(c_source()))  == 2 * sizeof(long)> t6;
     return 0;
 }
 
@@ -55,8 +55,8 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_2_13(a))           == 1> t1;
-    sa<sizeof(sink_2_13(va))          == 3> t3;
+    sa<sizeof(sink_2_13(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_2_13(va))          == 3 * sizeof(long)> t3;
     return 0;
 }
 
@@ -69,10 +69,10 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_2_14(a))           == 1> t1;
-    sa<sizeof(sink_2_14(ca))          == 4> t2;
-    sa<sizeof(sink_2_14(va))          == 4> t3;
-    sa<sizeof(sink_2_14(cva))         == 4> t4;
+    sa<sizeof(sink_2_14(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_2_14(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_2_14(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_2_14(cva))         == 4 * sizeof(long)> t4;
     return 0;
 }
 
@@ -85,8 +85,8 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_2_15(a))           == 1> t1;
-    sa<sizeof(sink_2_15(source()))    == 5> t5;
+    sa<sizeof(sink_2_15(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_2_15(source()))    == 5 * sizeof(long)> t5;
     return 0;
 }
 
@@ -99,9 +99,9 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_2_16(a))           == 1> t1;
-    sa<sizeof(sink_2_16(source()))    == 6> t5;
-    sa<sizeof(sink_2_16(c_source()))  == 6> t6;
+    sa<sizeof(sink_2_16(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_2_16(source()))    == 6 * sizeof(long)> t5;
+    sa<sizeof(sink_2_16(c_source()))  == 6 * sizeof(long)> t6;
     return 0;
 }
 
@@ -114,9 +114,9 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_2_17(a))           == 1> t1;
-    sa<sizeof(sink_2_17(source()))    == 7> t5;
-    sa<sizeof(sink_2_17(v_source()))  == 7> t7;
+    sa<sizeof(sink_2_17(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_2_17(source()))    == 7 * sizeof(long)> t5;
+    sa<sizeof(sink_2_17(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -129,11 +129,11 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_2_18(a))           == 1> t1;
-    sa<sizeof(sink_2_18(source()))    == 8> t5;
-    sa<sizeof(sink_2_18(c_source()))  == 8> t6;
-    sa<sizeof(sink_2_18(v_source()))  == 8> t7;
-    sa<sizeof(sink_2_18(cv_source())) == 8> t8;
+    sa<sizeof(sink_2_18(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_2_18(source()))    == 8 * sizeof(long)> t5;
+    sa<sizeof(sink_2_18(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_2_18(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_2_18(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -146,10 +146,10 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_2_23(ca))          == 2> t2;
-    sa<sizeof(sink_2_23(va))          == 3> t3;
-    sa<sizeof(sink_2_23(source()))    == 2> t5;
-    sa<sizeof(sink_2_23(c_source()))  == 2> t6;
+    sa<sizeof(sink_2_23(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_2_23(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_2_23(source()))    == 2 * sizeof(long)> t5;
+    sa<sizeof(sink_2_23(c_source()))  == 2 * sizeof(long)> t6;
     return 0;
 }
 
@@ -162,14 +162,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_2_24(a))           == 2> t1;
-    sa<sizeof(sink_2_24(ca))          == 2> t2;
-    sa<sizeof(sink_2_24(va))          == 4> t3;
-    sa<sizeof(sink_2_24(cva))         == 4> t4;
-    sa<sizeof(sink_2_24(source()))    == 2> t5;
-    sa<sizeof(sink_2_24(c_source()))  == 2> t6;
-//    sa<sizeof(sink_2_24(v_source()))  == 4> t7;
-//    sa<sizeof(sink_2_24(cv_source())) == 4> t8;
+    sa<sizeof(sink_2_24(a))           == 2 * sizeof(long)> t1;
+    sa<sizeof(sink_2_24(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_2_24(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_2_24(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_2_24(source()))    == 2 * sizeof(long)> t5;
+    sa<sizeof(sink_2_24(c_source()))  == 2 * sizeof(long)> t6;
+//    sa<sizeof(sink_2_24(v_source()))  == 4 * sizeof(long)> t7;
+//    sa<sizeof(sink_2_24(cv_source())) == 4 * sizeof(long)> t8;
     return 0;
 }
 
@@ -182,10 +182,10 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_2_25(a))           == 2> t1;
-    sa<sizeof(sink_2_25(ca))          == 2> t2;
-    sa<sizeof(sink_2_25(source()))    == 5> t5;
-    sa<sizeof(sink_2_25(c_source()))  == 2> t6;
+    sa<sizeof(sink_2_25(a))           == 2 * sizeof(long)> t1;
+    sa<sizeof(sink_2_25(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_2_25(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_2_25(c_source()))  == 2 * sizeof(long)> t6;
     return 0;
 }
 
@@ -198,10 +198,10 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_2_26(a))           == 2> t1;
-    sa<sizeof(sink_2_26(ca))          == 2> t2;
-    sa<sizeof(sink_2_26(source()))    == 6> t5;
-    sa<sizeof(sink_2_26(c_source()))  == 6> t6;
+    sa<sizeof(sink_2_26(a))           == 2 * sizeof(long)> t1;
+    sa<sizeof(sink_2_26(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_2_26(source()))    == 6 * sizeof(long)> t5;
+    sa<sizeof(sink_2_26(c_source()))  == 6 * sizeof(long)> t6;
     return 0;
 }
 
@@ -214,11 +214,11 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_2_27(a))           == 2> t1;
-    sa<sizeof(sink_2_27(ca))          == 2> t2;
-    sa<sizeof(sink_2_27(source()))    == 7> t5;
-    sa<sizeof(sink_2_27(c_source()))  == 2> t6;
-    sa<sizeof(sink_2_27(v_source()))  == 7> t7;
+    sa<sizeof(sink_2_27(a))           == 2 * sizeof(long)> t1;
+    sa<sizeof(sink_2_27(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_2_27(source()))    == 7 * sizeof(long)> t5;
+    sa<sizeof(sink_2_27(c_source()))  == 2 * sizeof(long)> t6;
+    sa<sizeof(sink_2_27(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -231,12 +231,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_2_28(a))           == 2> t1;
-    sa<sizeof(sink_2_28(ca))          == 2> t2;
-    sa<sizeof(sink_2_28(source()))    == 8> t5;
-    sa<sizeof(sink_2_28(c_source()))  == 8> t6;
-    sa<sizeof(sink_2_28(v_source()))  == 8> t7;
-    sa<sizeof(sink_2_28(cv_source())) == 8> t8;
+    sa<sizeof(sink_2_28(a))           == 2 * sizeof(long)> t1;
+    sa<sizeof(sink_2_28(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_2_28(source()))    == 8 * sizeof(long)> t5;
+    sa<sizeof(sink_2_28(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_2_28(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_2_28(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -249,14 +249,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_2_34(a))           == 3> t1;
-    sa<sizeof(sink_2_34(ca))          == 4> t2;
-    sa<sizeof(sink_2_34(va))          == 3> t3;
-    sa<sizeof(sink_2_34(cva))         == 4> t4;
-//    sa<sizeof(sink_2_34(source()))    == 4> t5;
-//    sa<sizeof(sink_2_34(c_source()))  == 4> t6;
-//    sa<sizeof(sink_2_34(v_source()))  == 4> t7;
-//    sa<sizeof(sink_2_34(cv_source())) == 4> t8;
+    sa<sizeof(sink_2_34(a))           == 3 * sizeof(long)> t1;
+    sa<sizeof(sink_2_34(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_2_34(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_2_34(cva))         == 4 * sizeof(long)> t4;
+//    sa<sizeof(sink_2_34(source()))    == 4 * sizeof(long)> t5;
+//    sa<sizeof(sink_2_34(c_source()))  == 4 * sizeof(long)> t6;
+//    sa<sizeof(sink_2_34(v_source()))  == 4 * sizeof(long)> t7;
+//    sa<sizeof(sink_2_34(cv_source())) == 4 * sizeof(long)> t8;
     return 0;
 }
 
@@ -269,9 +269,9 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_2_35(a))           == 3> t1;
-    sa<sizeof(sink_2_35(va))          == 3> t3;
-    sa<sizeof(sink_2_35(source()))    == 5> t5;
+    sa<sizeof(sink_2_35(a))           == 3 * sizeof(long)> t1;
+    sa<sizeof(sink_2_35(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_2_35(source()))    == 5 * sizeof(long)> t5;
     return 0;
 }
 
@@ -284,10 +284,10 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_2_36(a))           == 3> t1;
-    sa<sizeof(sink_2_36(va))          == 3> t3;
-    sa<sizeof(sink_2_36(source()))    == 6> t5;
-    sa<sizeof(sink_2_36(c_source()))  == 6> t6;
+    sa<sizeof(sink_2_36(a))           == 3 * sizeof(long)> t1;
+    sa<sizeof(sink_2_36(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_2_36(source()))    == 6 * sizeof(long)> t5;
+    sa<sizeof(sink_2_36(c_source()))  == 6 * sizeof(long)> t6;
     return 0;
 }
 
@@ -300,10 +300,10 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_2_37(a))           == 3> t1;
-    sa<sizeof(sink_2_37(va))          == 3> t3;
-    sa<sizeof(sink_2_37(source()))    == 7> t5;
-    sa<sizeof(sink_2_37(v_source()))  == 7> t7;
+    sa<sizeof(sink_2_37(a))           == 3 * sizeof(long)> t1;
+    sa<sizeof(sink_2_37(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_2_37(source()))    == 7 * sizeof(long)> t5;
+    sa<sizeof(sink_2_37(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -316,12 +316,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_2_38(a))           == 3> t1;
-    sa<sizeof(sink_2_38(va))          == 3> t3;
-    sa<sizeof(sink_2_38(source()))    == 8> t5;
-    sa<sizeof(sink_2_38(c_source()))  == 8> t6;
-    sa<sizeof(sink_2_38(v_source()))  == 8> t7;
-    sa<sizeof(sink_2_38(cv_source())) == 8> t8;
+    sa<sizeof(sink_2_38(a))           == 3 * sizeof(long)> t1;
+    sa<sizeof(sink_2_38(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_2_38(source()))    == 8 * sizeof(long)> t5;
+    sa<sizeof(sink_2_38(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_2_38(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_2_38(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -334,14 +334,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_2_45(a))           == 4> t1;
-    sa<sizeof(sink_2_45(ca))          == 4> t2;
-    sa<sizeof(sink_2_45(va))          == 4> t3;
-    sa<sizeof(sink_2_45(cva))         == 4> t4;
-    sa<sizeof(sink_2_45(source()))    == 5> t5;
-//    sa<sizeof(sink_2_45(c_source()))  == 4> t6;
-//    sa<sizeof(sink_2_45(v_source()))  == 4> t7;
-//    sa<sizeof(sink_2_45(cv_source())) == 4> t8;
+    sa<sizeof(sink_2_45(a))           == 4 * sizeof(long)> t1;
+    sa<sizeof(sink_2_45(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_2_45(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_2_45(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_2_45(source()))    == 5 * sizeof(long)> t5;
+//    sa<sizeof(sink_2_45(c_source()))  == 4 * sizeof(long)> t6;
+//    sa<sizeof(sink_2_45(v_source()))  == 4 * sizeof(long)> t7;
+//    sa<sizeof(sink_2_45(cv_source())) == 4 * sizeof(long)> t8;
     return 0;
 }
 
@@ -354,14 +354,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_2_46(a))           == 4> t1;
-    sa<sizeof(sink_2_46(ca))          == 4> t2;
-    sa<sizeof(sink_2_46(va))          == 4> t3;
-    sa<sizeof(sink_2_46(cva))         == 4> t4;
-    sa<sizeof(sink_2_46(source()))    == 6> t5;
-    sa<sizeof(sink_2_46(c_source()))  == 6> t6;
-//    sa<sizeof(sink_2_46(v_source()))  == 4> t7;
-//    sa<sizeof(sink_2_46(cv_source())) == 4> t8;
+    sa<sizeof(sink_2_46(a))           == 4 * sizeof(long)> t1;
+    sa<sizeof(sink_2_46(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_2_46(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_2_46(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_2_46(source()))    == 6 * sizeof(long)> t5;
+    sa<sizeof(sink_2_46(c_source()))  == 6 * sizeof(long)> t6;
+//    sa<sizeof(sink_2_46(v_source()))  == 4 * sizeof(long)> t7;
+//    sa<sizeof(sink_2_46(cv_source())) == 4 * sizeof(long)> t8;
     return 0;
 }
 
@@ -374,14 +374,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_2_47(a))           == 4> t1;
-    sa<sizeof(sink_2_47(ca))          == 4> t2;
-    sa<sizeof(sink_2_47(va))          == 4> t3;
-    sa<sizeof(sink_2_47(cva))         == 4> t4;
-    sa<sizeof(sink_2_47(source()))    == 7> t5;
-//    sa<sizeof(sink_2_47(c_source()))  == 4> t6;
-    sa<sizeof(sink_2_47(v_source()))  == 7> t7;
-//    sa<sizeof(sink_2_47(cv_source())) == 4> t8;
+    sa<sizeof(sink_2_47(a))           == 4 * sizeof(long)> t1;
+    sa<sizeof(sink_2_47(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_2_47(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_2_47(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_2_47(source()))    == 7 * sizeof(long)> t5;
+//    sa<sizeof(sink_2_47(c_source()))  == 4 * sizeof(long)> t6;
+    sa<sizeof(sink_2_47(v_source()))  == 7 * sizeof(long)> t7;
+//    sa<sizeof(sink_2_47(cv_source())) == 4 * sizeof(long)> t8;
     return 0;
 }
 
@@ -394,14 +394,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_2_48(a))           == 4> t1;
-    sa<sizeof(sink_2_48(ca))          == 4> t2;
-    sa<sizeof(sink_2_48(va))          == 4> t3;
-    sa<sizeof(sink_2_48(cva))         == 4> t4;
-    sa<sizeof(sink_2_48(source()))    == 8> t5;
-    sa<sizeof(sink_2_48(c_source()))  == 8> t6;
-    sa<sizeof(sink_2_48(v_source()))  == 8> t7;
-    sa<sizeof(sink_2_48(cv_source())) == 8> t8;
+    sa<sizeof(sink_2_48(a))           == 4 * sizeof(long)> t1;
+    sa<sizeof(sink_2_48(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_2_48(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_2_48(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_2_48(source()))    == 8 * sizeof(long)> t5;
+    sa<sizeof(sink_2_48(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_2_48(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_2_48(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -414,8 +414,8 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_2_56(source()))    == 5> t5;
-    sa<sizeof(sink_2_56(c_source()))  == 6> t6;
+    sa<sizeof(sink_2_56(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_2_56(c_source()))  == 6 * sizeof(long)> t6;
     return 0;
 }
 
@@ -428,8 +428,8 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_2_57(source()))    == 5> t5;
-    sa<sizeof(sink_2_57(v_source()))  == 7> t7;
+    sa<sizeof(sink_2_57(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_2_57(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -442,10 +442,10 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_2_58(source()))    == 5> t5;
-    sa<sizeof(sink_2_58(c_source()))  == 8> t6;
-    sa<sizeof(sink_2_58(v_source()))  == 8> t7;
-    sa<sizeof(sink_2_58(cv_source())) == 8> t8;
+    sa<sizeof(sink_2_58(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_2_58(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_2_58(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_2_58(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -458,8 +458,8 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_2_67(c_source()))  == 6> t6;
-    sa<sizeof(sink_2_67(v_source()))  == 7> t7;
+    sa<sizeof(sink_2_67(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_2_67(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -472,10 +472,10 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_2_68(source()))    == 6> t5;
-    sa<sizeof(sink_2_68(c_source()))  == 6> t6;
-    sa<sizeof(sink_2_68(v_source()))  == 8> t7;
-    sa<sizeof(sink_2_68(cv_source())) == 8> t8;
+    sa<sizeof(sink_2_68(source()))    == 6 * sizeof(long)> t5;
+    sa<sizeof(sink_2_68(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_2_68(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_2_68(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -488,10 +488,10 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_2_78(source()))    == 7> t5;
-    sa<sizeof(sink_2_78(c_source()))  == 8> t6;
-    sa<sizeof(sink_2_78(v_source()))  == 7> t7;
-    sa<sizeof(sink_2_78(cv_source())) == 8> t8;
+    sa<sizeof(sink_2_78(source()))    == 7 * sizeof(long)> t5;
+    sa<sizeof(sink_2_78(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_2_78(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_2_78(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
Index: gcc/testsuite/g++.dg/cpp0x/rv8p.C
===================================================================
--- gcc/testsuite/g++.dg/cpp0x/rv8p.C	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/g++.dg/cpp0x/rv8p.C	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -8,14 +8,14 @@
 template <bool> struct sa;
 template <> struct sa<true> {};
 
-struct one   {char x[1];};
-struct two   {char x[2];};
-struct three {char x[3];};
-struct four  {char x[4];};
-struct five  {char x[5];};
-struct six   {char x[6];};
-struct seven {char x[7];};
-struct eight {char x[8];};
+struct one   {long x[1];};
+struct two   {long x[2];};
+struct three {long x[3];};
+struct four  {long x[4];};
+struct five  {long x[5];};
+struct six   {long x[6];};
+struct seven {long x[7];};
+struct eight {long x[8];};
 
 struct A
 {
@@ -45,14 +45,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_8_12345678(a))           == 1> t1;
-    sa<sizeof(sink_8_12345678(ca))          == 2> t2;
-    sa<sizeof(sink_8_12345678(va))          == 3> t3;
-    sa<sizeof(sink_8_12345678(cva))         == 4> t4;
-    sa<sizeof(sink_8_12345678(source()))    == 5> t5;
-    sa<sizeof(sink_8_12345678(c_source()))  == 6> t6;
-    sa<sizeof(sink_8_12345678(v_source()))  == 7> t7;
-    sa<sizeof(sink_8_12345678(cv_source())) == 8> t8;
+    sa<sizeof(sink_8_12345678(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_8_12345678(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_8_12345678(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_8_12345678(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_8_12345678(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_8_12345678(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_8_12345678(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_8_12345678(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
Index: gcc/testsuite/g++.dg/cpp0x/rv3p.C
===================================================================
--- gcc/testsuite/g++.dg/cpp0x/rv3p.C	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/g++.dg/cpp0x/rv3p.C	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -8,14 +8,14 @@
 template <bool> struct sa;
 template <> struct sa<true> {};
 
-struct one   {char x[1];};
-struct two   {char x[2];};
-struct three {char x[3];};
-struct four  {char x[4];};
-struct five  {char x[5];};
-struct six   {char x[6];};
-struct seven {char x[7];};
-struct eight {char x[8];};
+struct one   {long x[1];};
+struct two   {long x[2];};
+struct three {long x[3];};
+struct four  {long x[4];};
+struct five  {long x[5];};
+struct six   {long x[6];};
+struct seven {long x[7];};
+struct eight {long x[8];};
 
 struct A
 {
@@ -40,11 +40,11 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_123(a))           == 1> t1;
-    sa<sizeof(sink_3_123(ca))          == 2> t2;
-    sa<sizeof(sink_3_123(va))          == 3> t3;
-    sa<sizeof(sink_3_123(source()))    == 2> t5;
-    sa<sizeof(sink_3_123(c_source()))  == 2> t6;
+    sa<sizeof(sink_3_123(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_3_123(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_3_123(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_3_123(source()))    == 2 * sizeof(long)> t5;
+    sa<sizeof(sink_3_123(c_source()))  == 2 * sizeof(long)> t6;
     return 0;
 }
 
@@ -58,12 +58,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_124(a))           == 1> t1;
-    sa<sizeof(sink_3_124(ca))          == 2> t2;
-    sa<sizeof(sink_3_124(va))          == 4> t3;
-    sa<sizeof(sink_3_124(cva))         == 4> t4;
-    sa<sizeof(sink_3_124(source()))    == 2> t5;
-    sa<sizeof(sink_3_124(c_source()))  == 2> t6;
+    sa<sizeof(sink_3_124(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_3_124(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_3_124(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_3_124(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_3_124(source()))    == 2 * sizeof(long)> t5;
+    sa<sizeof(sink_3_124(c_source()))  == 2 * sizeof(long)> t6;
     return 0;
 }
 
@@ -77,10 +77,10 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_125(a))           == 1> t1;
-    sa<sizeof(sink_3_125(ca))          == 2> t2;
-    sa<sizeof(sink_3_125(source()))    == 5> t5;
-    sa<sizeof(sink_3_125(c_source()))  == 2> t6;
+    sa<sizeof(sink_3_125(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_3_125(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_3_125(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_3_125(c_source()))  == 2 * sizeof(long)> t6;
     return 0;
 }
 
@@ -94,10 +94,10 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_126(a))           == 1> t1;
-    sa<sizeof(sink_3_126(ca))          == 2> t2;
-    sa<sizeof(sink_3_126(source()))    == 6> t5;
-    sa<sizeof(sink_3_126(c_source()))  == 6> t6;
+    sa<sizeof(sink_3_126(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_3_126(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_3_126(source()))    == 6 * sizeof(long)> t5;
+    sa<sizeof(sink_3_126(c_source()))  == 6 * sizeof(long)> t6;
     return 0;
 }
 
@@ -111,11 +111,11 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_127(a))           == 1> t1;
-    sa<sizeof(sink_3_127(ca))          == 2> t2;
-    sa<sizeof(sink_3_127(source()))    == 7> t5;
-    sa<sizeof(sink_3_127(c_source()))  == 2> t6;
-    sa<sizeof(sink_3_127(v_source()))  == 7> t7;
+    sa<sizeof(sink_3_127(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_3_127(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_3_127(source()))    == 7 * sizeof(long)> t5;
+    sa<sizeof(sink_3_127(c_source()))  == 2 * sizeof(long)> t6;
+    sa<sizeof(sink_3_127(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -129,12 +129,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_128(a))           == 1> t1;
-    sa<sizeof(sink_3_128(ca))          == 2> t2;
-    sa<sizeof(sink_3_128(source()))    == 8> t5;
-    sa<sizeof(sink_3_128(c_source()))  == 8> t6;
-    sa<sizeof(sink_3_128(v_source()))  == 8> t7;
-    sa<sizeof(sink_3_128(cv_source())) == 8> t8;
+    sa<sizeof(sink_3_128(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_3_128(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_3_128(source()))    == 8 * sizeof(long)> t5;
+    sa<sizeof(sink_3_128(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_3_128(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_3_128(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -148,10 +148,10 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_134(a))           == 1> t1;
-    sa<sizeof(sink_3_134(ca))          == 4> t2;
-    sa<sizeof(sink_3_134(va))          == 3> t3;
-    sa<sizeof(sink_3_134(cva))         == 4> t4;
+    sa<sizeof(sink_3_134(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_3_134(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_3_134(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_3_134(cva))         == 4 * sizeof(long)> t4;
     return 0;
 }
 
@@ -165,9 +165,9 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_135(a))           == 1> t1;
-    sa<sizeof(sink_3_135(va))          == 3> t3;
-    sa<sizeof(sink_3_135(source()))    == 5> t5;
+    sa<sizeof(sink_3_135(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_3_135(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_3_135(source()))    == 5 * sizeof(long)> t5;
     return 0;
 }
 
@@ -181,10 +181,10 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_136(a))           == 1> t1;
-    sa<sizeof(sink_3_136(va))          == 3> t3;
-    sa<sizeof(sink_3_136(source()))    == 6> t5;
-    sa<sizeof(sink_3_136(c_source()))  == 6> t6;
+    sa<sizeof(sink_3_136(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_3_136(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_3_136(source()))    == 6 * sizeof(long)> t5;
+    sa<sizeof(sink_3_136(c_source()))  == 6 * sizeof(long)> t6;
     return 0;
 }
 
@@ -198,10 +198,10 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_137(a))           == 1> t1;
-    sa<sizeof(sink_3_137(va))          == 3> t3;
-    sa<sizeof(sink_3_137(source()))    == 7> t5;
-    sa<sizeof(sink_3_137(v_source()))  == 7> t7;
+    sa<sizeof(sink_3_137(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_3_137(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_3_137(source()))    == 7 * sizeof(long)> t5;
+    sa<sizeof(sink_3_137(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -215,12 +215,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_138(a))           == 1> t1;
-    sa<sizeof(sink_3_138(va))          == 3> t3;
-    sa<sizeof(sink_3_138(source()))    == 8> t5;
-    sa<sizeof(sink_3_138(c_source()))  == 8> t6;
-    sa<sizeof(sink_3_138(v_source()))  == 8> t7;
-    sa<sizeof(sink_3_138(cv_source())) == 8> t8;
+    sa<sizeof(sink_3_138(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_3_138(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_3_138(source()))    == 8 * sizeof(long)> t5;
+    sa<sizeof(sink_3_138(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_3_138(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_3_138(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -234,11 +234,11 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_145(a))           == 1> t1;
-    sa<sizeof(sink_3_145(ca))          == 4> t2;
-    sa<sizeof(sink_3_145(va))          == 4> t3;
-    sa<sizeof(sink_3_145(cva))         == 4> t4;
-    sa<sizeof(sink_3_145(source()))    == 5> t5;
+    sa<sizeof(sink_3_145(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_3_145(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_3_145(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_3_145(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_3_145(source()))    == 5 * sizeof(long)> t5;
     return 0;
 }
 
@@ -252,12 +252,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_146(a))           == 1> t1;
-    sa<sizeof(sink_3_146(ca))          == 4> t2;
-    sa<sizeof(sink_3_146(va))          == 4> t3;
-    sa<sizeof(sink_3_146(cva))         == 4> t4;
-    sa<sizeof(sink_3_146(source()))    == 6> t5;
-    sa<sizeof(sink_3_146(c_source()))  == 6> t6;
+    sa<sizeof(sink_3_146(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_3_146(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_3_146(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_3_146(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_3_146(source()))    == 6 * sizeof(long)> t5;
+    sa<sizeof(sink_3_146(c_source()))  == 6 * sizeof(long)> t6;
     return 0;
 }
 
@@ -271,12 +271,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_147(a))           == 1> t1;
-    sa<sizeof(sink_3_147(ca))          == 4> t2;
-    sa<sizeof(sink_3_147(va))          == 4> t3;
-    sa<sizeof(sink_3_147(cva))         == 4> t4;
-    sa<sizeof(sink_3_147(source()))    == 7> t5;
-    sa<sizeof(sink_3_147(v_source()))  == 7> t7;
+    sa<sizeof(sink_3_147(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_3_147(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_3_147(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_3_147(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_3_147(source()))    == 7 * sizeof(long)> t5;
+    sa<sizeof(sink_3_147(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -290,14 +290,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_148(a))           == 1> t1;
-    sa<sizeof(sink_3_148(ca))          == 4> t2;
-    sa<sizeof(sink_3_148(va))          == 4> t3;
-    sa<sizeof(sink_3_148(cva))         == 4> t4;
-    sa<sizeof(sink_3_148(source()))    == 8> t5;
-    sa<sizeof(sink_3_148(c_source()))  == 8> t6;
-    sa<sizeof(sink_3_148(v_source()))  == 8> t7;
-    sa<sizeof(sink_3_148(cv_source())) == 8> t8;
+    sa<sizeof(sink_3_148(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_3_148(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_3_148(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_3_148(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_3_148(source()))    == 8 * sizeof(long)> t5;
+    sa<sizeof(sink_3_148(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_3_148(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_3_148(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -311,9 +311,9 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_156(a))           == 1> t1;
-    sa<sizeof(sink_3_156(source()))    == 5> t5;
-    sa<sizeof(sink_3_156(c_source()))  == 6> t6;
+    sa<sizeof(sink_3_156(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_3_156(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_3_156(c_source()))  == 6 * sizeof(long)> t6;
     return 0;
 }
 
@@ -327,9 +327,9 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_157(a))           == 1> t1;
-    sa<sizeof(sink_3_157(source()))    == 5> t5;
-    sa<sizeof(sink_3_157(v_source()))  == 7> t7;
+    sa<sizeof(sink_3_157(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_3_157(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_3_157(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -343,11 +343,11 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_158(a))           == 1> t1;
-    sa<sizeof(sink_3_158(source()))    == 5> t5;
-    sa<sizeof(sink_3_158(c_source()))  == 8> t6;
-    sa<sizeof(sink_3_158(v_source()))  == 8> t7;
-    sa<sizeof(sink_3_158(cv_source())) == 8> t8;
+    sa<sizeof(sink_3_158(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_3_158(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_3_158(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_3_158(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_3_158(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -361,9 +361,9 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_167(a))           == 1> t1;
-    sa<sizeof(sink_3_167(c_source()))  == 6> t6;
-    sa<sizeof(sink_3_167(v_source()))  == 7> t7;
+    sa<sizeof(sink_3_167(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_3_167(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_3_167(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -377,11 +377,11 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_168(a))           == 1> t1;
-    sa<sizeof(sink_3_168(source()))    == 6> t5;
-    sa<sizeof(sink_3_168(c_source()))  == 6> t6;
-    sa<sizeof(sink_3_168(v_source()))  == 8> t7;
-    sa<sizeof(sink_3_168(cv_source())) == 8> t8;
+    sa<sizeof(sink_3_168(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_3_168(source()))    == 6 * sizeof(long)> t5;
+    sa<sizeof(sink_3_168(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_3_168(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_3_168(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -395,11 +395,11 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_178(a))           == 1> t1;
-    sa<sizeof(sink_3_178(source()))    == 7> t5;
-    sa<sizeof(sink_3_178(c_source()))  == 8> t6;
-    sa<sizeof(sink_3_178(v_source()))  == 7> t7;
-    sa<sizeof(sink_3_178(cv_source())) == 8> t8;
+    sa<sizeof(sink_3_178(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_3_178(source()))    == 7 * sizeof(long)> t5;
+    sa<sizeof(sink_3_178(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_3_178(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_3_178(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -413,11 +413,11 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_234(ca))          == 2> t2;
-    sa<sizeof(sink_3_234(va))          == 3> t3;
-    sa<sizeof(sink_3_234(cva))         == 4> t4;
-    sa<sizeof(sink_3_234(source()))    == 2> t5;
-    sa<sizeof(sink_3_234(c_source()))  == 2> t6;
+    sa<sizeof(sink_3_234(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_3_234(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_3_234(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_3_234(source()))    == 2 * sizeof(long)> t5;
+    sa<sizeof(sink_3_234(c_source()))  == 2 * sizeof(long)> t6;
     return 0;
 }
 
@@ -431,10 +431,10 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_235(ca))          == 2> t2;
-    sa<sizeof(sink_3_235(va))          == 3> t3;
-    sa<sizeof(sink_3_235(source()))    == 5> t5;
-    sa<sizeof(sink_3_235(c_source()))  == 2> t6;
+    sa<sizeof(sink_3_235(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_3_235(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_3_235(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_3_235(c_source()))  == 2 * sizeof(long)> t6;
     return 0;
 }
 
@@ -448,10 +448,10 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_236(ca))          == 2> t2;
-    sa<sizeof(sink_3_236(va))          == 3> t3;
-    sa<sizeof(sink_3_236(source()))    == 6> t5;
-    sa<sizeof(sink_3_236(c_source()))  == 6> t6;
+    sa<sizeof(sink_3_236(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_3_236(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_3_236(source()))    == 6 * sizeof(long)> t5;
+    sa<sizeof(sink_3_236(c_source()))  == 6 * sizeof(long)> t6;
     return 0;
 }
 
@@ -465,11 +465,11 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_237(ca))          == 2> t2;
-    sa<sizeof(sink_3_237(va))          == 3> t3;
-    sa<sizeof(sink_3_237(source()))    == 7> t5;
-    sa<sizeof(sink_3_237(c_source()))  == 2> t6;
-    sa<sizeof(sink_3_237(v_source()))  == 7> t7;
+    sa<sizeof(sink_3_237(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_3_237(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_3_237(source()))    == 7 * sizeof(long)> t5;
+    sa<sizeof(sink_3_237(c_source()))  == 2 * sizeof(long)> t6;
+    sa<sizeof(sink_3_237(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -483,12 +483,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_238(ca))          == 2> t2;
-    sa<sizeof(sink_3_238(va))          == 3> t3;
-    sa<sizeof(sink_3_238(source()))    == 8> t5;
-    sa<sizeof(sink_3_238(c_source()))  == 8> t6;
-    sa<sizeof(sink_3_238(v_source()))  == 8> t7;
-    sa<sizeof(sink_3_238(cv_source())) == 8> t8;
+    sa<sizeof(sink_3_238(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_3_238(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_3_238(source()))    == 8 * sizeof(long)> t5;
+    sa<sizeof(sink_3_238(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_3_238(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_3_238(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -502,12 +502,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_245(a))           == 2> t1;
-    sa<sizeof(sink_3_245(ca))          == 2> t2;
-    sa<sizeof(sink_3_245(va))          == 4> t3;
-    sa<sizeof(sink_3_245(cva))         == 4> t4;
-    sa<sizeof(sink_3_245(source()))    == 5> t5;
-    sa<sizeof(sink_3_245(c_source()))  == 2> t6;
+    sa<sizeof(sink_3_245(a))           == 2 * sizeof(long)> t1;
+    sa<sizeof(sink_3_245(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_3_245(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_3_245(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_3_245(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_3_245(c_source()))  == 2 * sizeof(long)> t6;
     return 0;
 }
 
@@ -521,12 +521,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_246(a))           == 2> t1;
-    sa<sizeof(sink_3_246(ca))          == 2> t2;
-    sa<sizeof(sink_3_246(va))          == 4> t3;
-    sa<sizeof(sink_3_246(cva))         == 4> t4;
-    sa<sizeof(sink_3_246(source()))    == 6> t5;
-    sa<sizeof(sink_3_246(c_source()))  == 6> t6;
+    sa<sizeof(sink_3_246(a))           == 2 * sizeof(long)> t1;
+    sa<sizeof(sink_3_246(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_3_246(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_3_246(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_3_246(source()))    == 6 * sizeof(long)> t5;
+    sa<sizeof(sink_3_246(c_source()))  == 6 * sizeof(long)> t6;
     return 0;
 }
 
@@ -540,13 +540,13 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_247(a))           == 2> t1;
-    sa<sizeof(sink_3_247(ca))          == 2> t2;
-    sa<sizeof(sink_3_247(va))          == 4> t3;
-    sa<sizeof(sink_3_247(cva))         == 4> t4;
-    sa<sizeof(sink_3_247(source()))    == 7> t5;
-    sa<sizeof(sink_3_247(c_source()))  == 2> t6;
-    sa<sizeof(sink_3_247(v_source()))  == 7> t7;
+    sa<sizeof(sink_3_247(a))           == 2 * sizeof(long)> t1;
+    sa<sizeof(sink_3_247(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_3_247(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_3_247(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_3_247(source()))    == 7 * sizeof(long)> t5;
+    sa<sizeof(sink_3_247(c_source()))  == 2 * sizeof(long)> t6;
+    sa<sizeof(sink_3_247(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -560,14 +560,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_248(a))           == 2> t1;
-    sa<sizeof(sink_3_248(ca))          == 2> t2;
-    sa<sizeof(sink_3_248(va))          == 4> t3;
-    sa<sizeof(sink_3_248(cva))         == 4> t4;
-    sa<sizeof(sink_3_248(source()))    == 8> t5;
-    sa<sizeof(sink_3_248(c_source()))  == 8> t6;
-    sa<sizeof(sink_3_248(v_source()))  == 8> t7;
-    sa<sizeof(sink_3_248(cv_source())) == 8> t8;
+    sa<sizeof(sink_3_248(a))           == 2 * sizeof(long)> t1;
+    sa<sizeof(sink_3_248(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_3_248(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_3_248(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_3_248(source()))    == 8 * sizeof(long)> t5;
+    sa<sizeof(sink_3_248(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_3_248(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_3_248(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -581,10 +581,10 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_256(a))           == 2> t1;
-    sa<sizeof(sink_3_256(ca))          == 2> t2;
-    sa<sizeof(sink_3_256(source()))    == 5> t5;
-    sa<sizeof(sink_3_256(c_source()))  == 6> t6;
+    sa<sizeof(sink_3_256(a))           == 2 * sizeof(long)> t1;
+    sa<sizeof(sink_3_256(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_3_256(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_3_256(c_source()))  == 6 * sizeof(long)> t6;
     return 0;
 }
 
@@ -598,11 +598,11 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_257(a))           == 2> t1;
-    sa<sizeof(sink_3_257(ca))          == 2> t2;
-    sa<sizeof(sink_3_257(source()))    == 5> t5;
-    sa<sizeof(sink_3_257(c_source()))  == 2> t6;
-    sa<sizeof(sink_3_257(v_source()))  == 7> t7;
+    sa<sizeof(sink_3_257(a))           == 2 * sizeof(long)> t1;
+    sa<sizeof(sink_3_257(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_3_257(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_3_257(c_source()))  == 2 * sizeof(long)> t6;
+    sa<sizeof(sink_3_257(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -616,12 +616,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_258(a))           == 2> t1;
-    sa<sizeof(sink_3_258(ca))          == 2> t2;
-    sa<sizeof(sink_3_258(source()))    == 5> t5;
-    sa<sizeof(sink_3_258(c_source()))  == 8> t6;
-    sa<sizeof(sink_3_258(v_source()))  == 8> t7;
-    sa<sizeof(sink_3_258(cv_source())) == 8> t8;
+    sa<sizeof(sink_3_258(a))           == 2 * sizeof(long)> t1;
+    sa<sizeof(sink_3_258(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_3_258(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_3_258(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_3_258(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_3_258(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -635,10 +635,10 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_267(a))           == 2> t1;
-    sa<sizeof(sink_3_267(ca))          == 2> t2;
-    sa<sizeof(sink_3_267(c_source()))  == 6> t6;
-    sa<sizeof(sink_3_267(v_source()))  == 7> t7;
+    sa<sizeof(sink_3_267(a))           == 2 * sizeof(long)> t1;
+    sa<sizeof(sink_3_267(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_3_267(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_3_267(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -652,12 +652,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_268(a))           == 2> t1;
-    sa<sizeof(sink_3_268(ca))          == 2> t2;
-    sa<sizeof(sink_3_268(source()))    == 6> t5;
-    sa<sizeof(sink_3_268(c_source()))  == 6> t6;
-    sa<sizeof(sink_3_268(v_source()))  == 8> t7;
-    sa<sizeof(sink_3_268(cv_source())) == 8> t8;
+    sa<sizeof(sink_3_268(a))           == 2 * sizeof(long)> t1;
+    sa<sizeof(sink_3_268(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_3_268(source()))    == 6 * sizeof(long)> t5;
+    sa<sizeof(sink_3_268(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_3_268(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_3_268(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -671,12 +671,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_278(a))           == 2> t1;
-    sa<sizeof(sink_3_278(ca))          == 2> t2;
-    sa<sizeof(sink_3_278(source()))    == 7> t5;
-    sa<sizeof(sink_3_278(c_source()))  == 8> t6;
-    sa<sizeof(sink_3_278(v_source()))  == 7> t7;
-    sa<sizeof(sink_3_278(cv_source())) == 8> t8;
+    sa<sizeof(sink_3_278(a))           == 2 * sizeof(long)> t1;
+    sa<sizeof(sink_3_278(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_3_278(source()))    == 7 * sizeof(long)> t5;
+    sa<sizeof(sink_3_278(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_3_278(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_3_278(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -690,11 +690,11 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_345(a))           == 3> t1;
-    sa<sizeof(sink_3_345(ca))          == 4> t2;
-    sa<sizeof(sink_3_345(va))          == 3> t3;
-    sa<sizeof(sink_3_345(cva))         == 4> t4;
-    sa<sizeof(sink_3_345(source()))    == 5> t5;
+    sa<sizeof(sink_3_345(a))           == 3 * sizeof(long)> t1;
+    sa<sizeof(sink_3_345(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_3_345(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_3_345(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_3_345(source()))    == 5 * sizeof(long)> t5;
     return 0;
 }
 
@@ -708,12 +708,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_346(a))           == 3> t1;
-    sa<sizeof(sink_3_346(ca))          == 4> t2;
-    sa<sizeof(sink_3_346(va))          == 3> t3;
-    sa<sizeof(sink_3_346(cva))         == 4> t4;
-    sa<sizeof(sink_3_346(source()))    == 6> t5;
-    sa<sizeof(sink_3_346(c_source()))  == 6> t6;
+    sa<sizeof(sink_3_346(a))           == 3 * sizeof(long)> t1;
+    sa<sizeof(sink_3_346(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_3_346(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_3_346(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_3_346(source()))    == 6 * sizeof(long)> t5;
+    sa<sizeof(sink_3_346(c_source()))  == 6 * sizeof(long)> t6;
     return 0;
 }
 
@@ -727,12 +727,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_347(a))           == 3> t1;
-    sa<sizeof(sink_3_347(ca))          == 4> t2;
-    sa<sizeof(sink_3_347(va))          == 3> t3;
-    sa<sizeof(sink_3_347(cva))         == 4> t4;
-    sa<sizeof(sink_3_347(source()))    == 7> t5;
-    sa<sizeof(sink_3_347(v_source()))  == 7> t7;
+    sa<sizeof(sink_3_347(a))           == 3 * sizeof(long)> t1;
+    sa<sizeof(sink_3_347(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_3_347(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_3_347(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_3_347(source()))    == 7 * sizeof(long)> t5;
+    sa<sizeof(sink_3_347(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -746,14 +746,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_348(a))           == 3> t1;
-    sa<sizeof(sink_3_348(ca))          == 4> t2;
-    sa<sizeof(sink_3_348(va))          == 3> t3;
-    sa<sizeof(sink_3_348(cva))         == 4> t4;
-    sa<sizeof(sink_3_348(source()))    == 8> t5;
-    sa<sizeof(sink_3_348(c_source()))  == 8> t6;
-    sa<sizeof(sink_3_348(v_source()))  == 8> t7;
-    sa<sizeof(sink_3_348(cv_source())) == 8> t8;
+    sa<sizeof(sink_3_348(a))           == 3 * sizeof(long)> t1;
+    sa<sizeof(sink_3_348(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_3_348(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_3_348(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_3_348(source()))    == 8 * sizeof(long)> t5;
+    sa<sizeof(sink_3_348(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_3_348(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_3_348(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -767,10 +767,10 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_356(a))           == 3> t1;
-    sa<sizeof(sink_3_356(va))          == 3> t3;
-    sa<sizeof(sink_3_356(source()))    == 5> t5;
-    sa<sizeof(sink_3_356(c_source()))  == 6> t6;
+    sa<sizeof(sink_3_356(a))           == 3 * sizeof(long)> t1;
+    sa<sizeof(sink_3_356(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_3_356(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_3_356(c_source()))  == 6 * sizeof(long)> t6;
     return 0;
 }
 
@@ -784,10 +784,10 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_357(a))           == 3> t1;
-    sa<sizeof(sink_3_357(va))          == 3> t3;
-    sa<sizeof(sink_3_357(source()))    == 5> t5;
-    sa<sizeof(sink_3_357(v_source()))  == 7> t7;
+    sa<sizeof(sink_3_357(a))           == 3 * sizeof(long)> t1;
+    sa<sizeof(sink_3_357(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_3_357(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_3_357(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -801,12 +801,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_358(a))           == 3> t1;
-    sa<sizeof(sink_3_358(va))          == 3> t3;
-    sa<sizeof(sink_3_358(source()))    == 5> t5;
-    sa<sizeof(sink_3_358(c_source()))  == 8> t6;
-    sa<sizeof(sink_3_358(v_source()))  == 8> t7;
-    sa<sizeof(sink_3_358(cv_source())) == 8> t8;
+    sa<sizeof(sink_3_358(a))           == 3 * sizeof(long)> t1;
+    sa<sizeof(sink_3_358(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_3_358(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_3_358(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_3_358(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_3_358(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -820,10 +820,10 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_367(a))           == 3> t1;
-    sa<sizeof(sink_3_367(va))          == 3> t3;
-    sa<sizeof(sink_3_367(c_source()))  == 6> t6;
-    sa<sizeof(sink_3_367(v_source()))  == 7> t7;
+    sa<sizeof(sink_3_367(a))           == 3 * sizeof(long)> t1;
+    sa<sizeof(sink_3_367(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_3_367(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_3_367(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -837,12 +837,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_368(a))           == 3> t1;
-    sa<sizeof(sink_3_368(va))          == 3> t3;
-    sa<sizeof(sink_3_368(source()))    == 6> t5;
-    sa<sizeof(sink_3_368(c_source()))  == 6> t6;
-    sa<sizeof(sink_3_368(v_source()))  == 8> t7;
-    sa<sizeof(sink_3_368(cv_source())) == 8> t8;
+    sa<sizeof(sink_3_368(a))           == 3 * sizeof(long)> t1;
+    sa<sizeof(sink_3_368(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_3_368(source()))    == 6 * sizeof(long)> t5;
+    sa<sizeof(sink_3_368(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_3_368(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_3_368(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -856,12 +856,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_378(a))           == 3> t1;
-    sa<sizeof(sink_3_378(va))          == 3> t3;
-    sa<sizeof(sink_3_378(source()))    == 7> t5;
-    sa<sizeof(sink_3_378(c_source()))  == 8> t6;
-    sa<sizeof(sink_3_378(v_source()))  == 7> t7;
-    sa<sizeof(sink_3_378(cv_source())) == 8> t8;
+    sa<sizeof(sink_3_378(a))           == 3 * sizeof(long)> t1;
+    sa<sizeof(sink_3_378(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_3_378(source()))    == 7 * sizeof(long)> t5;
+    sa<sizeof(sink_3_378(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_3_378(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_3_378(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -875,12 +875,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_456(a))           == 4> t1;
-    sa<sizeof(sink_3_456(ca))          == 4> t2;
-    sa<sizeof(sink_3_456(va))          == 4> t3;
-    sa<sizeof(sink_3_456(cva))         == 4> t4;
-    sa<sizeof(sink_3_456(source()))    == 5> t5;
-    sa<sizeof(sink_3_456(c_source()))  == 6> t6;
+    sa<sizeof(sink_3_456(a))           == 4 * sizeof(long)> t1;
+    sa<sizeof(sink_3_456(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_3_456(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_3_456(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_3_456(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_3_456(c_source()))  == 6 * sizeof(long)> t6;
     return 0;
 }
 
@@ -894,12 +894,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_457(a))           == 4> t1;
-    sa<sizeof(sink_3_457(ca))          == 4> t2;
-    sa<sizeof(sink_3_457(va))          == 4> t3;
-    sa<sizeof(sink_3_457(cva))         == 4> t4;
-    sa<sizeof(sink_3_457(source()))    == 5> t5;
-    sa<sizeof(sink_3_457(v_source()))  == 7> t7;
+    sa<sizeof(sink_3_457(a))           == 4 * sizeof(long)> t1;
+    sa<sizeof(sink_3_457(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_3_457(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_3_457(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_3_457(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_3_457(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -913,14 +913,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_458(a))           == 4> t1;
-    sa<sizeof(sink_3_458(ca))          == 4> t2;
-    sa<sizeof(sink_3_458(va))          == 4> t3;
-    sa<sizeof(sink_3_458(cva))         == 4> t4;
-    sa<sizeof(sink_3_458(source()))    == 5> t5;
-    sa<sizeof(sink_3_458(c_source()))  == 8> t6;
-    sa<sizeof(sink_3_458(v_source()))  == 8> t7;
-    sa<sizeof(sink_3_458(cv_source())) == 8> t8;
+    sa<sizeof(sink_3_458(a))           == 4 * sizeof(long)> t1;
+    sa<sizeof(sink_3_458(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_3_458(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_3_458(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_3_458(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_3_458(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_3_458(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_3_458(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -934,12 +934,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_467(a))           == 4> t1;
-    sa<sizeof(sink_3_467(ca))          == 4> t2;
-    sa<sizeof(sink_3_467(va))          == 4> t3;
-    sa<sizeof(sink_3_467(cva))         == 4> t4;
-    sa<sizeof(sink_3_467(c_source()))  == 6> t6;
-    sa<sizeof(sink_3_467(v_source()))  == 7> t7;
+    sa<sizeof(sink_3_467(a))           == 4 * sizeof(long)> t1;
+    sa<sizeof(sink_3_467(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_3_467(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_3_467(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_3_467(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_3_467(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -953,14 +953,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_468(a))           == 4> t1;
-    sa<sizeof(sink_3_468(ca))          == 4> t2;
-    sa<sizeof(sink_3_468(va))          == 4> t3;
-    sa<sizeof(sink_3_468(cva))         == 4> t4;
-    sa<sizeof(sink_3_468(source()))    == 6> t5;
-    sa<sizeof(sink_3_468(c_source()))  == 6> t6;
-    sa<sizeof(sink_3_468(v_source()))  == 8> t7;
-    sa<sizeof(sink_3_468(cv_source())) == 8> t8;
+    sa<sizeof(sink_3_468(a))           == 4 * sizeof(long)> t1;
+    sa<sizeof(sink_3_468(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_3_468(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_3_468(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_3_468(source()))    == 6 * sizeof(long)> t5;
+    sa<sizeof(sink_3_468(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_3_468(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_3_468(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -974,14 +974,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_478(a))           == 4> t1;
-    sa<sizeof(sink_3_478(ca))          == 4> t2;
-    sa<sizeof(sink_3_478(va))          == 4> t3;
-    sa<sizeof(sink_3_478(cva))         == 4> t4;
-    sa<sizeof(sink_3_478(source()))    == 7> t5;
-    sa<sizeof(sink_3_478(c_source()))  == 8> t6;
-    sa<sizeof(sink_3_478(v_source()))  == 7> t7;
-    sa<sizeof(sink_3_478(cv_source())) == 8> t8;
+    sa<sizeof(sink_3_478(a))           == 4 * sizeof(long)> t1;
+    sa<sizeof(sink_3_478(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_3_478(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_3_478(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_3_478(source()))    == 7 * sizeof(long)> t5;
+    sa<sizeof(sink_3_478(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_3_478(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_3_478(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -995,9 +995,9 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_567(source()))    == 5> t5;
-    sa<sizeof(sink_3_567(c_source()))  == 6> t6;
-    sa<sizeof(sink_3_567(v_source()))  == 7> t7;
+    sa<sizeof(sink_3_567(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_3_567(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_3_567(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -1011,10 +1011,10 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_568(source()))    == 5> t5;
-    sa<sizeof(sink_3_568(c_source()))  == 6> t6;
-    sa<sizeof(sink_3_568(v_source()))  == 8> t7;
-    sa<sizeof(sink_3_568(cv_source())) == 8> t8;
+    sa<sizeof(sink_3_568(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_3_568(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_3_568(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_3_568(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -1028,10 +1028,10 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_578(source()))    == 5> t5;
-    sa<sizeof(sink_3_578(c_source()))  == 8> t6;
-    sa<sizeof(sink_3_578(v_source()))  == 7> t7;
-    sa<sizeof(sink_3_578(cv_source())) == 8> t8;
+    sa<sizeof(sink_3_578(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_3_578(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_3_578(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_3_578(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -1045,9 +1045,9 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_3_678(c_source()))  == 6> t6;
-    sa<sizeof(sink_3_678(v_source()))  == 7> t7;
-    sa<sizeof(sink_3_678(cv_source())) == 8> t8;
+    sa<sizeof(sink_3_678(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_3_678(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_3_678(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
Index: gcc/testsuite/g++.dg/cpp0x/rv4p.C
===================================================================
--- gcc/testsuite/g++.dg/cpp0x/rv4p.C	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/g++.dg/cpp0x/rv4p.C	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -8,14 +8,14 @@
 template <bool> struct sa;
 template <> struct sa<true> {};
 
-struct one   {char x[1];};
-struct two   {char x[2];};
-struct three {char x[3];};
-struct four  {char x[4];};
-struct five  {char x[5];};
-struct six   {char x[6];};
-struct seven {char x[7];};
-struct eight {char x[8];};
+struct one   {long x[1];};
+struct two   {long x[2];};
+struct three {long x[3];};
+struct four  {long x[4];};
+struct five  {long x[5];};
+struct six   {long x[6];};
+struct seven {long x[7];};
+struct eight {long x[8];};
 
 struct A
 {
@@ -41,12 +41,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_1234(a))           == 1> t1;
-    sa<sizeof(sink_4_1234(ca))          == 2> t2;
-    sa<sizeof(sink_4_1234(va))          == 3> t3;
-    sa<sizeof(sink_4_1234(cva))         == 4> t4;
-    sa<sizeof(sink_4_1234(source()))    == 2> t5;
-    sa<sizeof(sink_4_1234(c_source()))  == 2> t6;
+    sa<sizeof(sink_4_1234(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_4_1234(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_4_1234(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_4_1234(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_4_1234(source()))    == 2 * sizeof(long)> t5;
+    sa<sizeof(sink_4_1234(c_source()))  == 2 * sizeof(long)> t6;
     return 0;
 }
 
@@ -61,11 +61,11 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_1235(a))           == 1> t1;
-    sa<sizeof(sink_4_1235(ca))          == 2> t2;
-    sa<sizeof(sink_4_1235(va))          == 3> t3;
-    sa<sizeof(sink_4_1235(source()))    == 5> t5;
-    sa<sizeof(sink_4_1235(c_source()))  == 2> t6;
+    sa<sizeof(sink_4_1235(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_4_1235(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_4_1235(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_4_1235(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_4_1235(c_source()))  == 2 * sizeof(long)> t6;
     return 0;
 }
 
@@ -80,11 +80,11 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_1236(a))           == 1> t1;
-    sa<sizeof(sink_4_1236(ca))          == 2> t2;
-    sa<sizeof(sink_4_1236(va))          == 3> t3;
-    sa<sizeof(sink_4_1236(source()))    == 6> t5;
-    sa<sizeof(sink_4_1236(c_source()))  == 6> t6;
+    sa<sizeof(sink_4_1236(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_4_1236(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_4_1236(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_4_1236(source()))    == 6 * sizeof(long)> t5;
+    sa<sizeof(sink_4_1236(c_source()))  == 6 * sizeof(long)> t6;
     return 0;
 }
 
@@ -99,12 +99,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_1237(a))           == 1> t1;
-    sa<sizeof(sink_4_1237(ca))          == 2> t2;
-    sa<sizeof(sink_4_1237(va))          == 3> t3;
-    sa<sizeof(sink_4_1237(source()))    == 7> t5;
-    sa<sizeof(sink_4_1237(c_source()))  == 2> t6;
-    sa<sizeof(sink_4_1237(v_source()))  == 7> t7;
+    sa<sizeof(sink_4_1237(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_4_1237(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_4_1237(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_4_1237(source()))    == 7 * sizeof(long)> t5;
+    sa<sizeof(sink_4_1237(c_source()))  == 2 * sizeof(long)> t6;
+    sa<sizeof(sink_4_1237(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -119,13 +119,13 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_1238(a))           == 1> t1;
-    sa<sizeof(sink_4_1238(ca))          == 2> t2;
-    sa<sizeof(sink_4_1238(va))          == 3> t3;
-    sa<sizeof(sink_4_1238(source()))    == 8> t5;
-    sa<sizeof(sink_4_1238(c_source()))  == 8> t6;
-    sa<sizeof(sink_4_1238(v_source()))  == 8> t7;
-    sa<sizeof(sink_4_1238(cv_source())) == 8> t8;
+    sa<sizeof(sink_4_1238(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_4_1238(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_4_1238(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_4_1238(source()))    == 8 * sizeof(long)> t5;
+    sa<sizeof(sink_4_1238(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_4_1238(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_4_1238(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -140,12 +140,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_1245(a))           == 1> t1;
-    sa<sizeof(sink_4_1245(ca))          == 2> t2;
-    sa<sizeof(sink_4_1245(va))          == 4> t3;
-    sa<sizeof(sink_4_1245(cva))         == 4> t4;
-    sa<sizeof(sink_4_1245(source()))    == 5> t5;
-    sa<sizeof(sink_4_1245(c_source()))  == 2> t6;
+    sa<sizeof(sink_4_1245(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_4_1245(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_4_1245(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_4_1245(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_4_1245(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_4_1245(c_source()))  == 2 * sizeof(long)> t6;
     return 0;
 }
 
@@ -160,12 +160,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_1246(a))           == 1> t1;
-    sa<sizeof(sink_4_1246(ca))          == 2> t2;
-    sa<sizeof(sink_4_1246(va))          == 4> t3;
-    sa<sizeof(sink_4_1246(cva))         == 4> t4;
-    sa<sizeof(sink_4_1246(source()))    == 6> t5;
-    sa<sizeof(sink_4_1246(c_source()))  == 6> t6;
+    sa<sizeof(sink_4_1246(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_4_1246(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_4_1246(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_4_1246(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_4_1246(source()))    == 6 * sizeof(long)> t5;
+    sa<sizeof(sink_4_1246(c_source()))  == 6 * sizeof(long)> t6;
     return 0;
 }
 
@@ -180,13 +180,13 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_1247(a))           == 1> t1;
-    sa<sizeof(sink_4_1247(ca))          == 2> t2;
-    sa<sizeof(sink_4_1247(va))          == 4> t3;
-    sa<sizeof(sink_4_1247(cva))         == 4> t4;
-    sa<sizeof(sink_4_1247(source()))    == 7> t5;
-    sa<sizeof(sink_4_1247(c_source()))  == 2> t6;
-    sa<sizeof(sink_4_1247(v_source()))  == 7> t7;
+    sa<sizeof(sink_4_1247(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_4_1247(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_4_1247(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_4_1247(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_4_1247(source()))    == 7 * sizeof(long)> t5;
+    sa<sizeof(sink_4_1247(c_source()))  == 2 * sizeof(long)> t6;
+    sa<sizeof(sink_4_1247(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -201,14 +201,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_1248(a))           == 1> t1;
-    sa<sizeof(sink_4_1248(ca))          == 2> t2;
-    sa<sizeof(sink_4_1248(va))          == 4> t3;
-    sa<sizeof(sink_4_1248(cva))         == 4> t4;
-    sa<sizeof(sink_4_1248(source()))    == 8> t5;
-    sa<sizeof(sink_4_1248(c_source()))  == 8> t6;
-    sa<sizeof(sink_4_1248(v_source()))  == 8> t7;
-    sa<sizeof(sink_4_1248(cv_source())) == 8> t8;
+    sa<sizeof(sink_4_1248(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_4_1248(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_4_1248(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_4_1248(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_4_1248(source()))    == 8 * sizeof(long)> t5;
+    sa<sizeof(sink_4_1248(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_4_1248(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_4_1248(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -223,10 +223,10 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_1256(a))           == 1> t1;
-    sa<sizeof(sink_4_1256(ca))          == 2> t2;
-    sa<sizeof(sink_4_1256(source()))    == 5> t5;
-    sa<sizeof(sink_4_1256(c_source()))  == 6> t6;
+    sa<sizeof(sink_4_1256(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_4_1256(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_4_1256(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_4_1256(c_source()))  == 6 * sizeof(long)> t6;
     return 0;
 }
 
@@ -241,11 +241,11 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_1257(a))           == 1> t1;
-    sa<sizeof(sink_4_1257(ca))          == 2> t2;
-    sa<sizeof(sink_4_1257(source()))    == 5> t5;
-    sa<sizeof(sink_4_1257(c_source()))  == 2> t6;
-    sa<sizeof(sink_4_1257(v_source()))  == 7> t7;
+    sa<sizeof(sink_4_1257(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_4_1257(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_4_1257(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_4_1257(c_source()))  == 2 * sizeof(long)> t6;
+    sa<sizeof(sink_4_1257(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -260,12 +260,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_1258(a))           == 1> t1;
-    sa<sizeof(sink_4_1258(ca))          == 2> t2;
-    sa<sizeof(sink_4_1258(source()))    == 5> t5;
-    sa<sizeof(sink_4_1258(c_source()))  == 8> t6;
-    sa<sizeof(sink_4_1258(v_source()))  == 8> t7;
-    sa<sizeof(sink_4_1258(cv_source())) == 8> t8;
+    sa<sizeof(sink_4_1258(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_4_1258(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_4_1258(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_4_1258(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_4_1258(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_4_1258(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -280,10 +280,10 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_1267(a))           == 1> t1;
-    sa<sizeof(sink_4_1267(ca))          == 2> t2;
-    sa<sizeof(sink_4_1267(c_source()))  == 6> t6;
-    sa<sizeof(sink_4_1267(v_source()))  == 7> t7;
+    sa<sizeof(sink_4_1267(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_4_1267(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_4_1267(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_4_1267(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -298,12 +298,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_1268(a))           == 1> t1;
-    sa<sizeof(sink_4_1268(ca))          == 2> t2;
-    sa<sizeof(sink_4_1268(source()))    == 6> t5;
-    sa<sizeof(sink_4_1268(c_source()))  == 6> t6;
-    sa<sizeof(sink_4_1268(v_source()))  == 8> t7;
-    sa<sizeof(sink_4_1268(cv_source())) == 8> t8;
+    sa<sizeof(sink_4_1268(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_4_1268(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_4_1268(source()))    == 6 * sizeof(long)> t5;
+    sa<sizeof(sink_4_1268(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_4_1268(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_4_1268(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -318,12 +318,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_1278(a))           == 1> t1;
-    sa<sizeof(sink_4_1278(ca))          == 2> t2;
-    sa<sizeof(sink_4_1278(source()))    == 7> t5;
-    sa<sizeof(sink_4_1278(c_source()))  == 8> t6;
-    sa<sizeof(sink_4_1278(v_source()))  == 7> t7;
-    sa<sizeof(sink_4_1278(cv_source())) == 8> t8;
+    sa<sizeof(sink_4_1278(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_4_1278(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_4_1278(source()))    == 7 * sizeof(long)> t5;
+    sa<sizeof(sink_4_1278(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_4_1278(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_4_1278(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -338,11 +338,11 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_1345(a))           == 1> t1;
-    sa<sizeof(sink_4_1345(ca))          == 4> t2;
-    sa<sizeof(sink_4_1345(va))          == 3> t3;
-    sa<sizeof(sink_4_1345(cva))         == 4> t4;
-    sa<sizeof(sink_4_1345(source()))    == 5> t5;
+    sa<sizeof(sink_4_1345(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_4_1345(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_4_1345(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_4_1345(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_4_1345(source()))    == 5 * sizeof(long)> t5;
     return 0;
 }
 
@@ -357,12 +357,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_1346(a))           == 1> t1;
-    sa<sizeof(sink_4_1346(ca))          == 4> t2;
-    sa<sizeof(sink_4_1346(va))          == 3> t3;
-    sa<sizeof(sink_4_1346(cva))         == 4> t4;
-    sa<sizeof(sink_4_1346(source()))    == 6> t5;
-    sa<sizeof(sink_4_1346(c_source()))  == 6> t6;
+    sa<sizeof(sink_4_1346(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_4_1346(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_4_1346(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_4_1346(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_4_1346(source()))    == 6 * sizeof(long)> t5;
+    sa<sizeof(sink_4_1346(c_source()))  == 6 * sizeof(long)> t6;
     return 0;
 }
 
@@ -377,12 +377,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_1347(a))           == 1> t1;
-    sa<sizeof(sink_4_1347(ca))          == 4> t2;
-    sa<sizeof(sink_4_1347(va))          == 3> t3;
-    sa<sizeof(sink_4_1347(cva))         == 4> t4;
-    sa<sizeof(sink_4_1347(source()))    == 7> t5;
-    sa<sizeof(sink_4_1347(v_source()))  == 7> t7;
+    sa<sizeof(sink_4_1347(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_4_1347(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_4_1347(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_4_1347(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_4_1347(source()))    == 7 * sizeof(long)> t5;
+    sa<sizeof(sink_4_1347(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -397,14 +397,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_1348(a))           == 1> t1;
-    sa<sizeof(sink_4_1348(ca))          == 4> t2;
-    sa<sizeof(sink_4_1348(va))          == 3> t3;
-    sa<sizeof(sink_4_1348(cva))         == 4> t4;
-    sa<sizeof(sink_4_1348(source()))    == 8> t5;
-    sa<sizeof(sink_4_1348(c_source()))  == 8> t6;
-    sa<sizeof(sink_4_1348(v_source()))  == 8> t7;
-    sa<sizeof(sink_4_1348(cv_source())) == 8> t8;
+    sa<sizeof(sink_4_1348(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_4_1348(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_4_1348(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_4_1348(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_4_1348(source()))    == 8 * sizeof(long)> t5;
+    sa<sizeof(sink_4_1348(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_4_1348(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_4_1348(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -419,10 +419,10 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_1356(a))           == 1> t1;
-    sa<sizeof(sink_4_1356(va))          == 3> t3;
-    sa<sizeof(sink_4_1356(source()))    == 5> t5;
-    sa<sizeof(sink_4_1356(c_source()))  == 6> t6;
+    sa<sizeof(sink_4_1356(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_4_1356(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_4_1356(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_4_1356(c_source()))  == 6 * sizeof(long)> t6;
     return 0;
 }
 
@@ -437,10 +437,10 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_1357(a))           == 1> t1;
-    sa<sizeof(sink_4_1357(va))          == 3> t3;
-    sa<sizeof(sink_4_1357(source()))    == 5> t5;
-    sa<sizeof(sink_4_1357(v_source()))  == 7> t7;
+    sa<sizeof(sink_4_1357(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_4_1357(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_4_1357(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_4_1357(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -455,12 +455,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_1358(a))           == 1> t1;
-    sa<sizeof(sink_4_1358(va))          == 3> t3;
-    sa<sizeof(sink_4_1358(source()))    == 5> t5;
-    sa<sizeof(sink_4_1358(c_source()))  == 8> t6;
-    sa<sizeof(sink_4_1358(v_source()))  == 8> t7;
-    sa<sizeof(sink_4_1358(cv_source())) == 8> t8;
+    sa<sizeof(sink_4_1358(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_4_1358(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_4_1358(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_4_1358(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_4_1358(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_4_1358(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -475,10 +475,10 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_1367(a))           == 1> t1;
-    sa<sizeof(sink_4_1367(va))          == 3> t3;
-    sa<sizeof(sink_4_1367(c_source()))  == 6> t6;
-    sa<sizeof(sink_4_1367(v_source()))  == 7> t7;
+    sa<sizeof(sink_4_1367(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_4_1367(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_4_1367(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_4_1367(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -493,12 +493,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_1368(a))           == 1> t1;
-    sa<sizeof(sink_4_1368(va))          == 3> t3;
-    sa<sizeof(sink_4_1368(source()))    == 6> t5;
-    sa<sizeof(sink_4_1368(c_source()))  == 6> t6;
-    sa<sizeof(sink_4_1368(v_source()))  == 8> t7;
-    sa<sizeof(sink_4_1368(cv_source())) == 8> t8;
+    sa<sizeof(sink_4_1368(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_4_1368(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_4_1368(source()))    == 6 * sizeof(long)> t5;
+    sa<sizeof(sink_4_1368(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_4_1368(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_4_1368(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -513,12 +513,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_1378(a))           == 1> t1;
-    sa<sizeof(sink_4_1378(va))          == 3> t3;
-    sa<sizeof(sink_4_1378(source()))    == 7> t5;
-    sa<sizeof(sink_4_1378(c_source()))  == 8> t6;
-    sa<sizeof(sink_4_1378(v_source()))  == 7> t7;
-    sa<sizeof(sink_4_1378(cv_source())) == 8> t8;
+    sa<sizeof(sink_4_1378(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_4_1378(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_4_1378(source()))    == 7 * sizeof(long)> t5;
+    sa<sizeof(sink_4_1378(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_4_1378(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_4_1378(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -533,12 +533,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_1456(a))           == 1> t1;
-    sa<sizeof(sink_4_1456(ca))          == 4> t2;
-    sa<sizeof(sink_4_1456(va))          == 4> t3;
-    sa<sizeof(sink_4_1456(cva))         == 4> t4;
-    sa<sizeof(sink_4_1456(source()))    == 5> t5;
-    sa<sizeof(sink_4_1456(c_source()))  == 6> t6;
+    sa<sizeof(sink_4_1456(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_4_1456(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_4_1456(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_4_1456(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_4_1456(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_4_1456(c_source()))  == 6 * sizeof(long)> t6;
     return 0;
 }
 
@@ -553,12 +553,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_1457(a))           == 1> t1;
-    sa<sizeof(sink_4_1457(ca))          == 4> t2;
-    sa<sizeof(sink_4_1457(va))          == 4> t3;
-    sa<sizeof(sink_4_1457(cva))         == 4> t4;
-    sa<sizeof(sink_4_1457(source()))    == 5> t5;
-    sa<sizeof(sink_4_1457(v_source()))  == 7> t7;
+    sa<sizeof(sink_4_1457(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_4_1457(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_4_1457(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_4_1457(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_4_1457(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_4_1457(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -573,14 +573,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_1458(a))           == 1> t1;
-    sa<sizeof(sink_4_1458(ca))          == 4> t2;
-    sa<sizeof(sink_4_1458(va))          == 4> t3;
-    sa<sizeof(sink_4_1458(cva))         == 4> t4;
-    sa<sizeof(sink_4_1458(source()))    == 5> t5;
-    sa<sizeof(sink_4_1458(c_source()))  == 8> t6;
-    sa<sizeof(sink_4_1458(v_source()))  == 8> t7;
-    sa<sizeof(sink_4_1458(cv_source())) == 8> t8;
+    sa<sizeof(sink_4_1458(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_4_1458(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_4_1458(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_4_1458(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_4_1458(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_4_1458(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_4_1458(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_4_1458(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -595,12 +595,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_1467(a))           == 1> t1;
-    sa<sizeof(sink_4_1467(ca))          == 4> t2;
-    sa<sizeof(sink_4_1467(va))          == 4> t3;
-    sa<sizeof(sink_4_1467(cva))         == 4> t4;
-    sa<sizeof(sink_4_1467(c_source()))  == 6> t6;
-    sa<sizeof(sink_4_1467(v_source()))  == 7> t7;
+    sa<sizeof(sink_4_1467(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_4_1467(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_4_1467(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_4_1467(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_4_1467(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_4_1467(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -615,14 +615,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_1468(a))           == 1> t1;
-    sa<sizeof(sink_4_1468(ca))          == 4> t2;
-    sa<sizeof(sink_4_1468(va))          == 4> t3;
-    sa<sizeof(sink_4_1468(cva))         == 4> t4;
-    sa<sizeof(sink_4_1468(source()))    == 6> t5;
-    sa<sizeof(sink_4_1468(c_source()))  == 6> t6;
-    sa<sizeof(sink_4_1468(v_source()))  == 8> t7;
-    sa<sizeof(sink_4_1468(cv_source())) == 8> t8;
+    sa<sizeof(sink_4_1468(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_4_1468(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_4_1468(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_4_1468(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_4_1468(source()))    == 6 * sizeof(long)> t5;
+    sa<sizeof(sink_4_1468(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_4_1468(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_4_1468(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -637,14 +637,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_1478(a))           == 1> t1;
-    sa<sizeof(sink_4_1478(ca))          == 4> t2;
-    sa<sizeof(sink_4_1478(va))          == 4> t3;
-    sa<sizeof(sink_4_1478(cva))         == 4> t4;
-    sa<sizeof(sink_4_1478(source()))    == 7> t5;
-    sa<sizeof(sink_4_1478(c_source()))  == 8> t6;
-    sa<sizeof(sink_4_1478(v_source()))  == 7> t7;
-    sa<sizeof(sink_4_1478(cv_source())) == 8> t8;
+    sa<sizeof(sink_4_1478(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_4_1478(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_4_1478(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_4_1478(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_4_1478(source()))    == 7 * sizeof(long)> t5;
+    sa<sizeof(sink_4_1478(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_4_1478(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_4_1478(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -659,10 +659,10 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_1567(a))           == 1> t1;
-    sa<sizeof(sink_4_1567(source()))    == 5> t5;
-    sa<sizeof(sink_4_1567(c_source()))  == 6> t6;
-    sa<sizeof(sink_4_1567(v_source()))  == 7> t7;
+    sa<sizeof(sink_4_1567(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_4_1567(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_4_1567(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_4_1567(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -677,11 +677,11 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_1568(a))           == 1> t1;
-    sa<sizeof(sink_4_1568(source()))    == 5> t5;
-    sa<sizeof(sink_4_1568(c_source()))  == 6> t6;
-    sa<sizeof(sink_4_1568(v_source()))  == 8> t7;
-    sa<sizeof(sink_4_1568(cv_source())) == 8> t8;
+    sa<sizeof(sink_4_1568(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_4_1568(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_4_1568(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_4_1568(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_4_1568(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -696,11 +696,11 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_1578(a))           == 1> t1;
-    sa<sizeof(sink_4_1578(source()))    == 5> t5;
-    sa<sizeof(sink_4_1578(c_source()))  == 8> t6;
-    sa<sizeof(sink_4_1578(v_source()))  == 7> t7;
-    sa<sizeof(sink_4_1578(cv_source())) == 8> t8;
+    sa<sizeof(sink_4_1578(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_4_1578(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_4_1578(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_4_1578(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_4_1578(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -715,10 +715,10 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_1678(a))           == 1> t1;
-    sa<sizeof(sink_4_1678(c_source()))  == 6> t6;
-    sa<sizeof(sink_4_1678(v_source()))  == 7> t7;
-    sa<sizeof(sink_4_1678(cv_source())) == 8> t8;
+    sa<sizeof(sink_4_1678(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_4_1678(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_4_1678(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_4_1678(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -733,11 +733,11 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_2345(ca))          == 2> t2;
-    sa<sizeof(sink_4_2345(va))          == 3> t3;
-    sa<sizeof(sink_4_2345(cva))         == 4> t4;
-    sa<sizeof(sink_4_2345(source()))    == 5> t5;
-    sa<sizeof(sink_4_2345(c_source()))  == 2> t6;
+    sa<sizeof(sink_4_2345(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_4_2345(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_4_2345(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_4_2345(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_4_2345(c_source()))  == 2 * sizeof(long)> t6;
     return 0;
 }
 
@@ -752,11 +752,11 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_2346(ca))          == 2> t2;
-    sa<sizeof(sink_4_2346(va))          == 3> t3;
-    sa<sizeof(sink_4_2346(cva))         == 4> t4;
-    sa<sizeof(sink_4_2346(source()))    == 6> t5;
-    sa<sizeof(sink_4_2346(c_source()))  == 6> t6;
+    sa<sizeof(sink_4_2346(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_4_2346(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_4_2346(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_4_2346(source()))    == 6 * sizeof(long)> t5;
+    sa<sizeof(sink_4_2346(c_source()))  == 6 * sizeof(long)> t6;
     return 0;
 }
 
@@ -771,12 +771,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_2347(ca))          == 2> t2;
-    sa<sizeof(sink_4_2347(va))          == 3> t3;
-    sa<sizeof(sink_4_2347(cva))         == 4> t4;
-    sa<sizeof(sink_4_2347(source()))    == 7> t5;
-    sa<sizeof(sink_4_2347(c_source()))  == 2> t6;
-    sa<sizeof(sink_4_2347(v_source()))  == 7> t7;
+    sa<sizeof(sink_4_2347(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_4_2347(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_4_2347(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_4_2347(source()))    == 7 * sizeof(long)> t5;
+    sa<sizeof(sink_4_2347(c_source()))  == 2 * sizeof(long)> t6;
+    sa<sizeof(sink_4_2347(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -791,13 +791,13 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_2348(ca))          == 2> t2;
-    sa<sizeof(sink_4_2348(va))          == 3> t3;
-    sa<sizeof(sink_4_2348(cva))         == 4> t4;
-    sa<sizeof(sink_4_2348(source()))    == 8> t5;
-    sa<sizeof(sink_4_2348(c_source()))  == 8> t6;
-    sa<sizeof(sink_4_2348(v_source()))  == 8> t7;
-    sa<sizeof(sink_4_2348(cv_source())) == 8> t8;
+    sa<sizeof(sink_4_2348(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_4_2348(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_4_2348(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_4_2348(source()))    == 8 * sizeof(long)> t5;
+    sa<sizeof(sink_4_2348(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_4_2348(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_4_2348(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -812,10 +812,10 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_2356(ca))          == 2> t2;
-    sa<sizeof(sink_4_2356(va))          == 3> t3;
-    sa<sizeof(sink_4_2356(source()))    == 5> t5;
-    sa<sizeof(sink_4_2356(c_source()))  == 6> t6;
+    sa<sizeof(sink_4_2356(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_4_2356(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_4_2356(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_4_2356(c_source()))  == 6 * sizeof(long)> t6;
     return 0;
 }
 
@@ -830,11 +830,11 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_2357(ca))          == 2> t2;
-    sa<sizeof(sink_4_2357(va))          == 3> t3;
-    sa<sizeof(sink_4_2357(source()))    == 5> t5;
-    sa<sizeof(sink_4_2357(c_source()))  == 2> t6;
-    sa<sizeof(sink_4_2357(v_source()))  == 7> t7;
+    sa<sizeof(sink_4_2357(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_4_2357(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_4_2357(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_4_2357(c_source()))  == 2 * sizeof(long)> t6;
+    sa<sizeof(sink_4_2357(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -849,12 +849,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_2358(ca))          == 2> t2;
-    sa<sizeof(sink_4_2358(va))          == 3> t3;
-    sa<sizeof(sink_4_2358(source()))    == 5> t5;
-    sa<sizeof(sink_4_2358(c_source()))  == 8> t6;
-    sa<sizeof(sink_4_2358(v_source()))  == 8> t7;
-    sa<sizeof(sink_4_2358(cv_source())) == 8> t8;
+    sa<sizeof(sink_4_2358(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_4_2358(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_4_2358(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_4_2358(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_4_2358(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_4_2358(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -869,10 +869,10 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_2367(ca))          == 2> t2;
-    sa<sizeof(sink_4_2367(va))          == 3> t3;
-    sa<sizeof(sink_4_2367(c_source()))  == 6> t6;
-    sa<sizeof(sink_4_2367(v_source()))  == 7> t7;
+    sa<sizeof(sink_4_2367(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_4_2367(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_4_2367(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_4_2367(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -887,12 +887,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_2368(ca))          == 2> t2;
-    sa<sizeof(sink_4_2368(va))          == 3> t3;
-    sa<sizeof(sink_4_2368(source()))    == 6> t5;
-    sa<sizeof(sink_4_2368(c_source()))  == 6> t6;
-    sa<sizeof(sink_4_2368(v_source()))  == 8> t7;
-    sa<sizeof(sink_4_2368(cv_source())) == 8> t8;
+    sa<sizeof(sink_4_2368(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_4_2368(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_4_2368(source()))    == 6 * sizeof(long)> t5;
+    sa<sizeof(sink_4_2368(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_4_2368(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_4_2368(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -907,12 +907,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_2378(ca))          == 2> t2;
-    sa<sizeof(sink_4_2378(va))          == 3> t3;
-    sa<sizeof(sink_4_2378(source()))    == 7> t5;
-    sa<sizeof(sink_4_2378(c_source()))  == 8> t6;
-    sa<sizeof(sink_4_2378(v_source()))  == 7> t7;
-    sa<sizeof(sink_4_2378(cv_source())) == 8> t8;
+    sa<sizeof(sink_4_2378(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_4_2378(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_4_2378(source()))    == 7 * sizeof(long)> t5;
+    sa<sizeof(sink_4_2378(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_4_2378(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_4_2378(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -927,12 +927,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_2456(a))           == 2> t1;
-    sa<sizeof(sink_4_2456(ca))          == 2> t2;
-    sa<sizeof(sink_4_2456(va))          == 4> t3;
-    sa<sizeof(sink_4_2456(cva))         == 4> t4;
-    sa<sizeof(sink_4_2456(source()))    == 5> t5;
-    sa<sizeof(sink_4_2456(c_source()))  == 6> t6;
+    sa<sizeof(sink_4_2456(a))           == 2 * sizeof(long)> t1;
+    sa<sizeof(sink_4_2456(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_4_2456(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_4_2456(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_4_2456(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_4_2456(c_source()))  == 6 * sizeof(long)> t6;
     return 0;
 }
 
@@ -947,13 +947,13 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_2457(a))           == 2> t1;
-    sa<sizeof(sink_4_2457(ca))          == 2> t2;
-    sa<sizeof(sink_4_2457(va))          == 4> t3;
-    sa<sizeof(sink_4_2457(cva))         == 4> t4;
-    sa<sizeof(sink_4_2457(source()))    == 5> t5;
-    sa<sizeof(sink_4_2457(c_source()))  == 2> t6;
-    sa<sizeof(sink_4_2457(v_source()))  == 7> t7;
+    sa<sizeof(sink_4_2457(a))           == 2 * sizeof(long)> t1;
+    sa<sizeof(sink_4_2457(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_4_2457(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_4_2457(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_4_2457(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_4_2457(c_source()))  == 2 * sizeof(long)> t6;
+    sa<sizeof(sink_4_2457(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -968,14 +968,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_2458(a))           == 2> t1;
-    sa<sizeof(sink_4_2458(ca))          == 2> t2;
-    sa<sizeof(sink_4_2458(va))          == 4> t3;
-    sa<sizeof(sink_4_2458(cva))         == 4> t4;
-    sa<sizeof(sink_4_2458(source()))    == 5> t5;
-    sa<sizeof(sink_4_2458(c_source()))  == 8> t6;
-    sa<sizeof(sink_4_2458(v_source()))  == 8> t7;
-    sa<sizeof(sink_4_2458(cv_source())) == 8> t8;
+    sa<sizeof(sink_4_2458(a))           == 2 * sizeof(long)> t1;
+    sa<sizeof(sink_4_2458(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_4_2458(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_4_2458(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_4_2458(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_4_2458(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_4_2458(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_4_2458(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -990,12 +990,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_2467(a))           == 2> t1;
-    sa<sizeof(sink_4_2467(ca))          == 2> t2;
-    sa<sizeof(sink_4_2467(va))          == 4> t3;
-    sa<sizeof(sink_4_2467(cva))         == 4> t4;
-    sa<sizeof(sink_4_2467(c_source()))  == 6> t6;
-    sa<sizeof(sink_4_2467(v_source()))  == 7> t7;
+    sa<sizeof(sink_4_2467(a))           == 2 * sizeof(long)> t1;
+    sa<sizeof(sink_4_2467(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_4_2467(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_4_2467(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_4_2467(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_4_2467(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -1010,14 +1010,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_2468(a))           == 2> t1;
-    sa<sizeof(sink_4_2468(ca))          == 2> t2;
-    sa<sizeof(sink_4_2468(va))          == 4> t3;
-    sa<sizeof(sink_4_2468(cva))         == 4> t4;
-    sa<sizeof(sink_4_2468(source()))    == 6> t5;
-    sa<sizeof(sink_4_2468(c_source()))  == 6> t6;
-    sa<sizeof(sink_4_2468(v_source()))  == 8> t7;
-    sa<sizeof(sink_4_2468(cv_source())) == 8> t8;
+    sa<sizeof(sink_4_2468(a))           == 2 * sizeof(long)> t1;
+    sa<sizeof(sink_4_2468(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_4_2468(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_4_2468(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_4_2468(source()))    == 6 * sizeof(long)> t5;
+    sa<sizeof(sink_4_2468(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_4_2468(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_4_2468(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -1032,14 +1032,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_2478(a))           == 2> t1;
-    sa<sizeof(sink_4_2478(ca))          == 2> t2;
-    sa<sizeof(sink_4_2478(va))          == 4> t3;
-    sa<sizeof(sink_4_2478(cva))         == 4> t4;
-    sa<sizeof(sink_4_2478(source()))    == 7> t5;
-    sa<sizeof(sink_4_2478(c_source()))  == 8> t6;
-    sa<sizeof(sink_4_2478(v_source()))  == 7> t7;
-    sa<sizeof(sink_4_2478(cv_source())) == 8> t8;
+    sa<sizeof(sink_4_2478(a))           == 2 * sizeof(long)> t1;
+    sa<sizeof(sink_4_2478(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_4_2478(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_4_2478(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_4_2478(source()))    == 7 * sizeof(long)> t5;
+    sa<sizeof(sink_4_2478(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_4_2478(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_4_2478(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -1054,11 +1054,11 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_2567(a))           == 2> t1;
-    sa<sizeof(sink_4_2567(ca))          == 2> t2;
-    sa<sizeof(sink_4_2567(source()))    == 5> t5;
-    sa<sizeof(sink_4_2567(c_source()))  == 6> t6;
-    sa<sizeof(sink_4_2567(v_source()))  == 7> t7;
+    sa<sizeof(sink_4_2567(a))           == 2 * sizeof(long)> t1;
+    sa<sizeof(sink_4_2567(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_4_2567(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_4_2567(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_4_2567(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -1073,12 +1073,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_2568(a))           == 2> t1;
-    sa<sizeof(sink_4_2568(ca))          == 2> t2;
-    sa<sizeof(sink_4_2568(source()))    == 5> t5;
-    sa<sizeof(sink_4_2568(c_source()))  == 6> t6;
-    sa<sizeof(sink_4_2568(v_source()))  == 8> t7;
-    sa<sizeof(sink_4_2568(cv_source())) == 8> t8;
+    sa<sizeof(sink_4_2568(a))           == 2 * sizeof(long)> t1;
+    sa<sizeof(sink_4_2568(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_4_2568(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_4_2568(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_4_2568(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_4_2568(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -1093,12 +1093,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_2578(a))           == 2> t1;
-    sa<sizeof(sink_4_2578(ca))          == 2> t2;
-    sa<sizeof(sink_4_2578(source()))    == 5> t5;
-    sa<sizeof(sink_4_2578(c_source()))  == 8> t6;
-    sa<sizeof(sink_4_2578(v_source()))  == 7> t7;
-    sa<sizeof(sink_4_2578(cv_source())) == 8> t8;
+    sa<sizeof(sink_4_2578(a))           == 2 * sizeof(long)> t1;
+    sa<sizeof(sink_4_2578(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_4_2578(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_4_2578(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_4_2578(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_4_2578(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -1113,11 +1113,11 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_2678(a))           == 2> t1;
-    sa<sizeof(sink_4_2678(ca))          == 2> t2;
-    sa<sizeof(sink_4_2678(c_source()))  == 6> t6;
-    sa<sizeof(sink_4_2678(v_source()))  == 7> t7;
-    sa<sizeof(sink_4_2678(cv_source())) == 8> t8;
+    sa<sizeof(sink_4_2678(a))           == 2 * sizeof(long)> t1;
+    sa<sizeof(sink_4_2678(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_4_2678(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_4_2678(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_4_2678(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -1132,12 +1132,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_3456(a))           == 3> t1;
-    sa<sizeof(sink_4_3456(ca))          == 4> t2;
-    sa<sizeof(sink_4_3456(va))          == 3> t3;
-    sa<sizeof(sink_4_3456(cva))         == 4> t4;
-    sa<sizeof(sink_4_3456(source()))    == 5> t5;
-    sa<sizeof(sink_4_3456(c_source()))  == 6> t6;
+    sa<sizeof(sink_4_3456(a))           == 3 * sizeof(long)> t1;
+    sa<sizeof(sink_4_3456(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_4_3456(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_4_3456(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_4_3456(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_4_3456(c_source()))  == 6 * sizeof(long)> t6;
     return 0;
 }
 
@@ -1152,12 +1152,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_3457(a))           == 3> t1;
-    sa<sizeof(sink_4_3457(ca))          == 4> t2;
-    sa<sizeof(sink_4_3457(va))          == 3> t3;
-    sa<sizeof(sink_4_3457(cva))         == 4> t4;
-    sa<sizeof(sink_4_3457(source()))    == 5> t5;
-    sa<sizeof(sink_4_3457(v_source()))  == 7> t7;
+    sa<sizeof(sink_4_3457(a))           == 3 * sizeof(long)> t1;
+    sa<sizeof(sink_4_3457(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_4_3457(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_4_3457(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_4_3457(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_4_3457(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -1172,14 +1172,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_3458(a))           == 3> t1;
-    sa<sizeof(sink_4_3458(ca))          == 4> t2;
-    sa<sizeof(sink_4_3458(va))          == 3> t3;
-    sa<sizeof(sink_4_3458(cva))         == 4> t4;
-    sa<sizeof(sink_4_3458(source()))    == 5> t5;
-    sa<sizeof(sink_4_3458(c_source()))  == 8> t6;
-    sa<sizeof(sink_4_3458(v_source()))  == 8> t7;
-    sa<sizeof(sink_4_3458(cv_source())) == 8> t8;
+    sa<sizeof(sink_4_3458(a))           == 3 * sizeof(long)> t1;
+    sa<sizeof(sink_4_3458(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_4_3458(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_4_3458(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_4_3458(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_4_3458(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_4_3458(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_4_3458(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -1194,12 +1194,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_3467(a))           == 3> t1;
-    sa<sizeof(sink_4_3467(ca))          == 4> t2;
-    sa<sizeof(sink_4_3467(va))          == 3> t3;
-    sa<sizeof(sink_4_3467(cva))         == 4> t4;
-    sa<sizeof(sink_4_3467(c_source()))  == 6> t6;
-    sa<sizeof(sink_4_3467(v_source()))  == 7> t7;
+    sa<sizeof(sink_4_3467(a))           == 3 * sizeof(long)> t1;
+    sa<sizeof(sink_4_3467(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_4_3467(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_4_3467(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_4_3467(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_4_3467(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -1214,14 +1214,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_3468(a))           == 3> t1;
-    sa<sizeof(sink_4_3468(ca))          == 4> t2;
-    sa<sizeof(sink_4_3468(va))          == 3> t3;
-    sa<sizeof(sink_4_3468(cva))         == 4> t4;
-    sa<sizeof(sink_4_3468(source()))    == 6> t5;
-    sa<sizeof(sink_4_3468(c_source()))  == 6> t6;
-    sa<sizeof(sink_4_3468(v_source()))  == 8> t7;
-    sa<sizeof(sink_4_3468(cv_source())) == 8> t8;
+    sa<sizeof(sink_4_3468(a))           == 3 * sizeof(long)> t1;
+    sa<sizeof(sink_4_3468(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_4_3468(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_4_3468(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_4_3468(source()))    == 6 * sizeof(long)> t5;
+    sa<sizeof(sink_4_3468(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_4_3468(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_4_3468(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -1236,14 +1236,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_3478(a))           == 3> t1;
-    sa<sizeof(sink_4_3478(ca))          == 4> t2;
-    sa<sizeof(sink_4_3478(va))          == 3> t3;
-    sa<sizeof(sink_4_3478(cva))         == 4> t4;
-    sa<sizeof(sink_4_3478(source()))    == 7> t5;
-    sa<sizeof(sink_4_3478(c_source()))  == 8> t6;
-    sa<sizeof(sink_4_3478(v_source()))  == 7> t7;
-    sa<sizeof(sink_4_3478(cv_source())) == 8> t8;
+    sa<sizeof(sink_4_3478(a))           == 3 * sizeof(long)> t1;
+    sa<sizeof(sink_4_3478(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_4_3478(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_4_3478(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_4_3478(source()))    == 7 * sizeof(long)> t5;
+    sa<sizeof(sink_4_3478(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_4_3478(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_4_3478(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -1258,11 +1258,11 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_3567(a))           == 3> t1;
-    sa<sizeof(sink_4_3567(va))          == 3> t3;
-    sa<sizeof(sink_4_3567(source()))    == 5> t5;
-    sa<sizeof(sink_4_3567(c_source()))  == 6> t6;
-    sa<sizeof(sink_4_3567(v_source()))  == 7> t7;
+    sa<sizeof(sink_4_3567(a))           == 3 * sizeof(long)> t1;
+    sa<sizeof(sink_4_3567(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_4_3567(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_4_3567(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_4_3567(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -1277,12 +1277,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_3568(a))           == 3> t1;
-    sa<sizeof(sink_4_3568(va))          == 3> t3;
-    sa<sizeof(sink_4_3568(source()))    == 5> t5;
-    sa<sizeof(sink_4_3568(c_source()))  == 6> t6;
-    sa<sizeof(sink_4_3568(v_source()))  == 8> t7;
-    sa<sizeof(sink_4_3568(cv_source())) == 8> t8;
+    sa<sizeof(sink_4_3568(a))           == 3 * sizeof(long)> t1;
+    sa<sizeof(sink_4_3568(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_4_3568(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_4_3568(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_4_3568(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_4_3568(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -1297,12 +1297,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_3578(a))           == 3> t1;
-    sa<sizeof(sink_4_3578(va))          == 3> t3;
-    sa<sizeof(sink_4_3578(source()))    == 5> t5;
-    sa<sizeof(sink_4_3578(c_source()))  == 8> t6;
-    sa<sizeof(sink_4_3578(v_source()))  == 7> t7;
-    sa<sizeof(sink_4_3578(cv_source())) == 8> t8;
+    sa<sizeof(sink_4_3578(a))           == 3 * sizeof(long)> t1;
+    sa<sizeof(sink_4_3578(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_4_3578(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_4_3578(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_4_3578(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_4_3578(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -1317,11 +1317,11 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_3678(a))           == 3> t1;
-    sa<sizeof(sink_4_3678(va))          == 3> t3;
-    sa<sizeof(sink_4_3678(c_source()))  == 6> t6;
-    sa<sizeof(sink_4_3678(v_source()))  == 7> t7;
-    sa<sizeof(sink_4_3678(cv_source())) == 8> t8;
+    sa<sizeof(sink_4_3678(a))           == 3 * sizeof(long)> t1;
+    sa<sizeof(sink_4_3678(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_4_3678(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_4_3678(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_4_3678(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -1336,13 +1336,13 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_4567(a))           == 4> t1;
-    sa<sizeof(sink_4_4567(ca))          == 4> t2;
-    sa<sizeof(sink_4_4567(va))          == 4> t3;
-    sa<sizeof(sink_4_4567(cva))         == 4> t4;
-    sa<sizeof(sink_4_4567(source()))    == 5> t5;
-    sa<sizeof(sink_4_4567(c_source()))  == 6> t6;
-    sa<sizeof(sink_4_4567(v_source()))  == 7> t7;
+    sa<sizeof(sink_4_4567(a))           == 4 * sizeof(long)> t1;
+    sa<sizeof(sink_4_4567(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_4_4567(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_4_4567(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_4_4567(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_4_4567(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_4_4567(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -1357,14 +1357,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_4568(a))           == 4> t1;
-    sa<sizeof(sink_4_4568(ca))          == 4> t2;
-    sa<sizeof(sink_4_4568(va))          == 4> t3;
-    sa<sizeof(sink_4_4568(cva))         == 4> t4;
-    sa<sizeof(sink_4_4568(source()))    == 5> t5;
-    sa<sizeof(sink_4_4568(c_source()))  == 6> t6;
-    sa<sizeof(sink_4_4568(v_source()))  == 8> t7;
-    sa<sizeof(sink_4_4568(cv_source())) == 8> t8;
+    sa<sizeof(sink_4_4568(a))           == 4 * sizeof(long)> t1;
+    sa<sizeof(sink_4_4568(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_4_4568(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_4_4568(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_4_4568(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_4_4568(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_4_4568(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_4_4568(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -1379,14 +1379,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_4578(a))           == 4> t1;
-    sa<sizeof(sink_4_4578(ca))          == 4> t2;
-    sa<sizeof(sink_4_4578(va))          == 4> t3;
-    sa<sizeof(sink_4_4578(cva))         == 4> t4;
-    sa<sizeof(sink_4_4578(source()))    == 5> t5;
-    sa<sizeof(sink_4_4578(c_source()))  == 8> t6;
-    sa<sizeof(sink_4_4578(v_source()))  == 7> t7;
-    sa<sizeof(sink_4_4578(cv_source())) == 8> t8;
+    sa<sizeof(sink_4_4578(a))           == 4 * sizeof(long)> t1;
+    sa<sizeof(sink_4_4578(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_4_4578(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_4_4578(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_4_4578(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_4_4578(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_4_4578(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_4_4578(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -1401,13 +1401,13 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_4678(a))           == 4> t1;
-    sa<sizeof(sink_4_4678(ca))          == 4> t2;
-    sa<sizeof(sink_4_4678(va))          == 4> t3;
-    sa<sizeof(sink_4_4678(cva))         == 4> t4;
-    sa<sizeof(sink_4_4678(c_source()))  == 6> t6;
-    sa<sizeof(sink_4_4678(v_source()))  == 7> t7;
-    sa<sizeof(sink_4_4678(cv_source())) == 8> t8;
+    sa<sizeof(sink_4_4678(a))           == 4 * sizeof(long)> t1;
+    sa<sizeof(sink_4_4678(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_4_4678(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_4_4678(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_4_4678(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_4_4678(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_4_4678(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -1422,10 +1422,10 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_4_5678(source()))    == 5> t5;
-    sa<sizeof(sink_4_5678(c_source()))  == 6> t6;
-    sa<sizeof(sink_4_5678(v_source()))  == 7> t7;
-    sa<sizeof(sink_4_5678(cv_source())) == 8> t8;
+    sa<sizeof(sink_4_5678(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_4_5678(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_4_5678(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_4_5678(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
Index: gcc/testsuite/g++.dg/cpp0x/iop.C
===================================================================
--- gcc/testsuite/g++.dg/cpp0x/iop.C	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/g++.dg/cpp0x/iop.C	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -12,8 +12,8 @@
 template <bool> struct sa;
 template <> struct sa<true> {};
 
-struct one   {char x[1];};
-struct two   {char x[2];};
+struct one   {long x[1];};
+struct two   {long x[2];};
 
 struct os
 {
@@ -30,7 +30,7 @@
 void test()
 {
     os o;
-    sa<sizeof(o << 1) == 1> t1;  // Calls os::operator<<(int)
+    sa<sizeof(o << 1) == 1 * sizeof(long)> t1;  // Calls os::operator<<(int)
                                  // Would be ambiguous if the implicit object parameter
                                  // was an rvalue reference.
 }
Index: gcc/testsuite/g++.dg/cpp0x/rv5p.C
===================================================================
--- gcc/testsuite/g++.dg/cpp0x/rv5p.C	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/g++.dg/cpp0x/rv5p.C	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -8,14 +8,14 @@
 template <bool> struct sa;
 template <> struct sa<true> {};
 
-struct one   {char x[1];};
-struct two   {char x[2];};
-struct three {char x[3];};
-struct four  {char x[4];};
-struct five  {char x[5];};
-struct six   {char x[6];};
-struct seven {char x[7];};
-struct eight {char x[8];};
+struct one   {long x[1];};
+struct two   {long x[2];};
+struct three {long x[3];};
+struct four  {long x[4];};
+struct five  {long x[5];};
+struct six   {long x[6];};
+struct seven {long x[7];};
+struct eight {long x[8];};
 
 struct A
 {
@@ -42,12 +42,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_12345(a))           == 1> t1;
-    sa<sizeof(sink_5_12345(ca))          == 2> t2;
-    sa<sizeof(sink_5_12345(va))          == 3> t3;
-    sa<sizeof(sink_5_12345(cva))         == 4> t4;
-    sa<sizeof(sink_5_12345(source()))    == 5> t5;
-    sa<sizeof(sink_5_12345(c_source()))  == 2> t6;
+    sa<sizeof(sink_5_12345(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_5_12345(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_5_12345(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_5_12345(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_5_12345(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_5_12345(c_source()))  == 2 * sizeof(long)> t6;
     return 0;
 }
 
@@ -63,12 +63,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_12346(a))           == 1> t1;
-    sa<sizeof(sink_5_12346(ca))          == 2> t2;
-    sa<sizeof(sink_5_12346(va))          == 3> t3;
-    sa<sizeof(sink_5_12346(cva))         == 4> t4;
-    sa<sizeof(sink_5_12346(source()))    == 6> t5;
-    sa<sizeof(sink_5_12346(c_source()))  == 6> t6;
+    sa<sizeof(sink_5_12346(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_5_12346(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_5_12346(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_5_12346(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_5_12346(source()))    == 6 * sizeof(long)> t5;
+    sa<sizeof(sink_5_12346(c_source()))  == 6 * sizeof(long)> t6;
     return 0;
 }
 
@@ -84,13 +84,13 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_12347(a))           == 1> t1;
-    sa<sizeof(sink_5_12347(ca))          == 2> t2;
-    sa<sizeof(sink_5_12347(va))          == 3> t3;
-    sa<sizeof(sink_5_12347(cva))         == 4> t4;
-    sa<sizeof(sink_5_12347(source()))    == 7> t5;
-    sa<sizeof(sink_5_12347(c_source()))  == 2> t6;
-    sa<sizeof(sink_5_12347(v_source()))  == 7> t7;
+    sa<sizeof(sink_5_12347(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_5_12347(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_5_12347(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_5_12347(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_5_12347(source()))    == 7 * sizeof(long)> t5;
+    sa<sizeof(sink_5_12347(c_source()))  == 2 * sizeof(long)> t6;
+    sa<sizeof(sink_5_12347(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -106,14 +106,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_12348(a))           == 1> t1;
-    sa<sizeof(sink_5_12348(ca))          == 2> t2;
-    sa<sizeof(sink_5_12348(va))          == 3> t3;
-    sa<sizeof(sink_5_12348(cva))         == 4> t4;
-    sa<sizeof(sink_5_12348(source()))    == 8> t5;
-    sa<sizeof(sink_5_12348(c_source()))  == 8> t6;
-    sa<sizeof(sink_5_12348(v_source()))  == 8> t7;
-    sa<sizeof(sink_5_12348(cv_source())) == 8> t8;
+    sa<sizeof(sink_5_12348(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_5_12348(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_5_12348(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_5_12348(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_5_12348(source()))    == 8 * sizeof(long)> t5;
+    sa<sizeof(sink_5_12348(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_5_12348(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_5_12348(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -129,11 +129,11 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_12356(a))           == 1> t1;
-    sa<sizeof(sink_5_12356(ca))          == 2> t2;
-    sa<sizeof(sink_5_12356(va))          == 3> t3;
-    sa<sizeof(sink_5_12356(source()))    == 5> t5;
-    sa<sizeof(sink_5_12356(c_source()))  == 6> t6;
+    sa<sizeof(sink_5_12356(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_5_12356(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_5_12356(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_5_12356(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_5_12356(c_source()))  == 6 * sizeof(long)> t6;
     return 0;
 }
 
@@ -149,12 +149,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_12357(a))           == 1> t1;
-    sa<sizeof(sink_5_12357(ca))          == 2> t2;
-    sa<sizeof(sink_5_12357(va))          == 3> t3;
-    sa<sizeof(sink_5_12357(source()))    == 5> t5;
-    sa<sizeof(sink_5_12357(c_source()))  == 2> t6;
-    sa<sizeof(sink_5_12357(v_source()))  == 7> t7;
+    sa<sizeof(sink_5_12357(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_5_12357(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_5_12357(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_5_12357(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_5_12357(c_source()))  == 2 * sizeof(long)> t6;
+    sa<sizeof(sink_5_12357(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -170,13 +170,13 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_12358(a))           == 1> t1;
-    sa<sizeof(sink_5_12358(ca))          == 2> t2;
-    sa<sizeof(sink_5_12358(va))          == 3> t3;
-    sa<sizeof(sink_5_12358(source()))    == 5> t5;
-    sa<sizeof(sink_5_12358(c_source()))  == 8> t6;
-    sa<sizeof(sink_5_12358(v_source()))  == 8> t7;
-    sa<sizeof(sink_5_12358(cv_source())) == 8> t8;
+    sa<sizeof(sink_5_12358(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_5_12358(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_5_12358(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_5_12358(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_5_12358(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_5_12358(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_5_12358(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -192,11 +192,11 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_12367(a))           == 1> t1;
-    sa<sizeof(sink_5_12367(ca))          == 2> t2;
-    sa<sizeof(sink_5_12367(va))          == 3> t3;
-    sa<sizeof(sink_5_12367(c_source()))  == 6> t6;
-    sa<sizeof(sink_5_12367(v_source()))  == 7> t7;
+    sa<sizeof(sink_5_12367(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_5_12367(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_5_12367(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_5_12367(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_5_12367(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -212,13 +212,13 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_12368(a))           == 1> t1;
-    sa<sizeof(sink_5_12368(ca))          == 2> t2;
-    sa<sizeof(sink_5_12368(va))          == 3> t3;
-    sa<sizeof(sink_5_12368(source()))    == 6> t5;
-    sa<sizeof(sink_5_12368(c_source()))  == 6> t6;
-    sa<sizeof(sink_5_12368(v_source()))  == 8> t7;
-    sa<sizeof(sink_5_12368(cv_source())) == 8> t8;
+    sa<sizeof(sink_5_12368(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_5_12368(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_5_12368(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_5_12368(source()))    == 6 * sizeof(long)> t5;
+    sa<sizeof(sink_5_12368(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_5_12368(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_5_12368(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -234,13 +234,13 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_12378(a))           == 1> t1;
-    sa<sizeof(sink_5_12378(ca))          == 2> t2;
-    sa<sizeof(sink_5_12378(va))          == 3> t3;
-    sa<sizeof(sink_5_12378(source()))    == 7> t5;
-    sa<sizeof(sink_5_12378(c_source()))  == 8> t6;
-    sa<sizeof(sink_5_12378(v_source()))  == 7> t7;
-    sa<sizeof(sink_5_12378(cv_source())) == 8> t8;
+    sa<sizeof(sink_5_12378(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_5_12378(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_5_12378(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_5_12378(source()))    == 7 * sizeof(long)> t5;
+    sa<sizeof(sink_5_12378(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_5_12378(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_5_12378(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -256,12 +256,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_12456(a))           == 1> t1;
-    sa<sizeof(sink_5_12456(ca))          == 2> t2;
-    sa<sizeof(sink_5_12456(va))          == 4> t3;
-    sa<sizeof(sink_5_12456(cva))         == 4> t4;
-    sa<sizeof(sink_5_12456(source()))    == 5> t5;
-    sa<sizeof(sink_5_12456(c_source()))  == 6> t6;
+    sa<sizeof(sink_5_12456(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_5_12456(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_5_12456(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_5_12456(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_5_12456(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_5_12456(c_source()))  == 6 * sizeof(long)> t6;
     return 0;
 }
 
@@ -277,13 +277,13 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_12457(a))           == 1> t1;
-    sa<sizeof(sink_5_12457(ca))          == 2> t2;
-    sa<sizeof(sink_5_12457(va))          == 4> t3;
-    sa<sizeof(sink_5_12457(cva))         == 4> t4;
-    sa<sizeof(sink_5_12457(source()))    == 5> t5;
-    sa<sizeof(sink_5_12457(c_source()))  == 2> t6;
-    sa<sizeof(sink_5_12457(v_source()))  == 7> t7;
+    sa<sizeof(sink_5_12457(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_5_12457(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_5_12457(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_5_12457(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_5_12457(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_5_12457(c_source()))  == 2 * sizeof(long)> t6;
+    sa<sizeof(sink_5_12457(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -299,14 +299,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_12458(a))           == 1> t1;
-    sa<sizeof(sink_5_12458(ca))          == 2> t2;
-    sa<sizeof(sink_5_12458(va))          == 4> t3;
-    sa<sizeof(sink_5_12458(cva))         == 4> t4;
-    sa<sizeof(sink_5_12458(source()))    == 5> t5;
-    sa<sizeof(sink_5_12458(c_source()))  == 8> t6;
-    sa<sizeof(sink_5_12458(v_source()))  == 8> t7;
-    sa<sizeof(sink_5_12458(cv_source())) == 8> t8;
+    sa<sizeof(sink_5_12458(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_5_12458(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_5_12458(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_5_12458(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_5_12458(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_5_12458(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_5_12458(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_5_12458(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -322,12 +322,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_12467(a))           == 1> t1;
-    sa<sizeof(sink_5_12467(ca))          == 2> t2;
-    sa<sizeof(sink_5_12467(va))          == 4> t3;
-    sa<sizeof(sink_5_12467(cva))         == 4> t4;
-    sa<sizeof(sink_5_12467(c_source()))  == 6> t6;
-    sa<sizeof(sink_5_12467(v_source()))  == 7> t7;
+    sa<sizeof(sink_5_12467(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_5_12467(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_5_12467(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_5_12467(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_5_12467(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_5_12467(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -343,14 +343,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_12468(a))           == 1> t1;
-    sa<sizeof(sink_5_12468(ca))          == 2> t2;
-    sa<sizeof(sink_5_12468(va))          == 4> t3;
-    sa<sizeof(sink_5_12468(cva))         == 4> t4;
-    sa<sizeof(sink_5_12468(source()))    == 6> t5;
-    sa<sizeof(sink_5_12468(c_source()))  == 6> t6;
-    sa<sizeof(sink_5_12468(v_source()))  == 8> t7;
-    sa<sizeof(sink_5_12468(cv_source())) == 8> t8;
+    sa<sizeof(sink_5_12468(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_5_12468(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_5_12468(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_5_12468(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_5_12468(source()))    == 6 * sizeof(long)> t5;
+    sa<sizeof(sink_5_12468(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_5_12468(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_5_12468(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -366,14 +366,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_12478(a))           == 1> t1;
-    sa<sizeof(sink_5_12478(ca))          == 2> t2;
-    sa<sizeof(sink_5_12478(va))          == 4> t3;
-    sa<sizeof(sink_5_12478(cva))         == 4> t4;
-    sa<sizeof(sink_5_12478(source()))    == 7> t5;
-    sa<sizeof(sink_5_12478(c_source()))  == 8> t6;
-    sa<sizeof(sink_5_12478(v_source()))  == 7> t7;
-    sa<sizeof(sink_5_12478(cv_source())) == 8> t8;
+    sa<sizeof(sink_5_12478(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_5_12478(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_5_12478(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_5_12478(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_5_12478(source()))    == 7 * sizeof(long)> t5;
+    sa<sizeof(sink_5_12478(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_5_12478(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_5_12478(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -389,11 +389,11 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_12567(a))           == 1> t1;
-    sa<sizeof(sink_5_12567(ca))          == 2> t2;
-    sa<sizeof(sink_5_12567(source()))    == 5> t5;
-    sa<sizeof(sink_5_12567(c_source()))  == 6> t6;
-    sa<sizeof(sink_5_12567(v_source()))  == 7> t7;
+    sa<sizeof(sink_5_12567(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_5_12567(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_5_12567(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_5_12567(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_5_12567(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -409,12 +409,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_12568(a))           == 1> t1;
-    sa<sizeof(sink_5_12568(ca))          == 2> t2;
-    sa<sizeof(sink_5_12568(source()))    == 5> t5;
-    sa<sizeof(sink_5_12568(c_source()))  == 6> t6;
-    sa<sizeof(sink_5_12568(v_source()))  == 8> t7;
-    sa<sizeof(sink_5_12568(cv_source())) == 8> t8;
+    sa<sizeof(sink_5_12568(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_5_12568(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_5_12568(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_5_12568(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_5_12568(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_5_12568(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -430,12 +430,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_12578(a))           == 1> t1;
-    sa<sizeof(sink_5_12578(ca))          == 2> t2;
-    sa<sizeof(sink_5_12578(source()))    == 5> t5;
-    sa<sizeof(sink_5_12578(c_source()))  == 8> t6;
-    sa<sizeof(sink_5_12578(v_source()))  == 7> t7;
-    sa<sizeof(sink_5_12578(cv_source())) == 8> t8;
+    sa<sizeof(sink_5_12578(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_5_12578(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_5_12578(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_5_12578(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_5_12578(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_5_12578(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -451,11 +451,11 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_12678(a))           == 1> t1;
-    sa<sizeof(sink_5_12678(ca))          == 2> t2;
-    sa<sizeof(sink_5_12678(c_source()))  == 6> t6;
-    sa<sizeof(sink_5_12678(v_source()))  == 7> t7;
-    sa<sizeof(sink_5_12678(cv_source())) == 8> t8;
+    sa<sizeof(sink_5_12678(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_5_12678(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_5_12678(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_5_12678(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_5_12678(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -471,12 +471,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_13456(a))           == 1> t1;
-    sa<sizeof(sink_5_13456(ca))          == 4> t2;
-    sa<sizeof(sink_5_13456(va))          == 3> t3;
-    sa<sizeof(sink_5_13456(cva))         == 4> t4;
-    sa<sizeof(sink_5_13456(source()))    == 5> t5;
-    sa<sizeof(sink_5_13456(c_source()))  == 6> t6;
+    sa<sizeof(sink_5_13456(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_5_13456(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_5_13456(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_5_13456(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_5_13456(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_5_13456(c_source()))  == 6 * sizeof(long)> t6;
     return 0;
 }
 
@@ -492,12 +492,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_13457(a))           == 1> t1;
-    sa<sizeof(sink_5_13457(ca))          == 4> t2;
-    sa<sizeof(sink_5_13457(va))          == 3> t3;
-    sa<sizeof(sink_5_13457(cva))         == 4> t4;
-    sa<sizeof(sink_5_13457(source()))    == 5> t5;
-    sa<sizeof(sink_5_13457(v_source()))  == 7> t7;
+    sa<sizeof(sink_5_13457(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_5_13457(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_5_13457(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_5_13457(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_5_13457(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_5_13457(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -513,14 +513,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_13458(a))           == 1> t1;
-    sa<sizeof(sink_5_13458(ca))          == 4> t2;
-    sa<sizeof(sink_5_13458(va))          == 3> t3;
-    sa<sizeof(sink_5_13458(cva))         == 4> t4;
-    sa<sizeof(sink_5_13458(source()))    == 5> t5;
-    sa<sizeof(sink_5_13458(c_source()))  == 8> t6;
-    sa<sizeof(sink_5_13458(v_source()))  == 8> t7;
-    sa<sizeof(sink_5_13458(cv_source())) == 8> t8;
+    sa<sizeof(sink_5_13458(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_5_13458(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_5_13458(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_5_13458(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_5_13458(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_5_13458(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_5_13458(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_5_13458(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -536,12 +536,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_13467(a))           == 1> t1;
-    sa<sizeof(sink_5_13467(ca))          == 4> t2;
-    sa<sizeof(sink_5_13467(va))          == 3> t3;
-    sa<sizeof(sink_5_13467(cva))         == 4> t4;
-    sa<sizeof(sink_5_13467(c_source()))  == 6> t6;
-    sa<sizeof(sink_5_13467(v_source()))  == 7> t7;
+    sa<sizeof(sink_5_13467(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_5_13467(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_5_13467(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_5_13467(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_5_13467(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_5_13467(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -557,14 +557,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_13468(a))           == 1> t1;
-    sa<sizeof(sink_5_13468(ca))          == 4> t2;
-    sa<sizeof(sink_5_13468(va))          == 3> t3;
-    sa<sizeof(sink_5_13468(cva))         == 4> t4;
-    sa<sizeof(sink_5_13468(source()))    == 6> t5;
-    sa<sizeof(sink_5_13468(c_source()))  == 6> t6;
-    sa<sizeof(sink_5_13468(v_source()))  == 8> t7;
-    sa<sizeof(sink_5_13468(cv_source())) == 8> t8;
+    sa<sizeof(sink_5_13468(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_5_13468(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_5_13468(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_5_13468(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_5_13468(source()))    == 6 * sizeof(long)> t5;
+    sa<sizeof(sink_5_13468(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_5_13468(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_5_13468(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -580,14 +580,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_13478(a))           == 1> t1;
-    sa<sizeof(sink_5_13478(ca))          == 4> t2;
-    sa<sizeof(sink_5_13478(va))          == 3> t3;
-    sa<sizeof(sink_5_13478(cva))         == 4> t4;
-    sa<sizeof(sink_5_13478(source()))    == 7> t5;
-    sa<sizeof(sink_5_13478(c_source()))  == 8> t6;
-    sa<sizeof(sink_5_13478(v_source()))  == 7> t7;
-    sa<sizeof(sink_5_13478(cv_source())) == 8> t8;
+    sa<sizeof(sink_5_13478(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_5_13478(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_5_13478(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_5_13478(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_5_13478(source()))    == 7 * sizeof(long)> t5;
+    sa<sizeof(sink_5_13478(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_5_13478(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_5_13478(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -603,11 +603,11 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_13567(a))           == 1> t1;
-    sa<sizeof(sink_5_13567(va))          == 3> t3;
-    sa<sizeof(sink_5_13567(source()))    == 5> t5;
-    sa<sizeof(sink_5_13567(c_source()))  == 6> t6;
-    sa<sizeof(sink_5_13567(v_source()))  == 7> t7;
+    sa<sizeof(sink_5_13567(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_5_13567(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_5_13567(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_5_13567(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_5_13567(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -623,12 +623,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_13568(a))           == 1> t1;
-    sa<sizeof(sink_5_13568(va))          == 3> t3;
-    sa<sizeof(sink_5_13568(source()))    == 5> t5;
-    sa<sizeof(sink_5_13568(c_source()))  == 6> t6;
-    sa<sizeof(sink_5_13568(v_source()))  == 8> t7;
-    sa<sizeof(sink_5_13568(cv_source())) == 8> t8;
+    sa<sizeof(sink_5_13568(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_5_13568(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_5_13568(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_5_13568(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_5_13568(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_5_13568(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -644,12 +644,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_13578(a))           == 1> t1;
-    sa<sizeof(sink_5_13578(va))          == 3> t3;
-    sa<sizeof(sink_5_13578(source()))    == 5> t5;
-    sa<sizeof(sink_5_13578(c_source()))  == 8> t6;
-    sa<sizeof(sink_5_13578(v_source()))  == 7> t7;
-    sa<sizeof(sink_5_13578(cv_source())) == 8> t8;
+    sa<sizeof(sink_5_13578(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_5_13578(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_5_13578(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_5_13578(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_5_13578(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_5_13578(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -665,11 +665,11 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_13678(a))           == 1> t1;
-    sa<sizeof(sink_5_13678(va))          == 3> t3;
-    sa<sizeof(sink_5_13678(c_source()))  == 6> t6;
-    sa<sizeof(sink_5_13678(v_source()))  == 7> t7;
-    sa<sizeof(sink_5_13678(cv_source())) == 8> t8;
+    sa<sizeof(sink_5_13678(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_5_13678(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_5_13678(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_5_13678(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_5_13678(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -685,13 +685,13 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_14567(a))           == 1> t1;
-    sa<sizeof(sink_5_14567(ca))          == 4> t2;
-    sa<sizeof(sink_5_14567(va))          == 4> t3;
-    sa<sizeof(sink_5_14567(cva))         == 4> t4;
-    sa<sizeof(sink_5_14567(source()))    == 5> t5;
-    sa<sizeof(sink_5_14567(c_source()))  == 6> t6;
-    sa<sizeof(sink_5_14567(v_source()))  == 7> t7;
+    sa<sizeof(sink_5_14567(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_5_14567(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_5_14567(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_5_14567(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_5_14567(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_5_14567(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_5_14567(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -707,14 +707,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_14568(a))           == 1> t1;
-    sa<sizeof(sink_5_14568(ca))          == 4> t2;
-    sa<sizeof(sink_5_14568(va))          == 4> t3;
-    sa<sizeof(sink_5_14568(cva))         == 4> t4;
-    sa<sizeof(sink_5_14568(source()))    == 5> t5;
-    sa<sizeof(sink_5_14568(c_source()))  == 6> t6;
-    sa<sizeof(sink_5_14568(v_source()))  == 8> t7;
-    sa<sizeof(sink_5_14568(cv_source())) == 8> t8;
+    sa<sizeof(sink_5_14568(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_5_14568(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_5_14568(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_5_14568(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_5_14568(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_5_14568(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_5_14568(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_5_14568(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -730,14 +730,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_14578(a))           == 1> t1;
-    sa<sizeof(sink_5_14578(ca))          == 4> t2;
-    sa<sizeof(sink_5_14578(va))          == 4> t3;
-    sa<sizeof(sink_5_14578(cva))         == 4> t4;
-    sa<sizeof(sink_5_14578(source()))    == 5> t5;
-    sa<sizeof(sink_5_14578(c_source()))  == 8> t6;
-    sa<sizeof(sink_5_14578(v_source()))  == 7> t7;
-    sa<sizeof(sink_5_14578(cv_source())) == 8> t8;
+    sa<sizeof(sink_5_14578(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_5_14578(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_5_14578(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_5_14578(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_5_14578(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_5_14578(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_5_14578(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_5_14578(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -753,13 +753,13 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_14678(a))           == 1> t1;
-    sa<sizeof(sink_5_14678(ca))          == 4> t2;
-    sa<sizeof(sink_5_14678(va))          == 4> t3;
-    sa<sizeof(sink_5_14678(cva))         == 4> t4;
-    sa<sizeof(sink_5_14678(c_source()))  == 6> t6;
-    sa<sizeof(sink_5_14678(v_source()))  == 7> t7;
-    sa<sizeof(sink_5_14678(cv_source())) == 8> t8;
+    sa<sizeof(sink_5_14678(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_5_14678(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_5_14678(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_5_14678(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_5_14678(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_5_14678(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_5_14678(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -775,11 +775,11 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_15678(a))           == 1> t1;
-    sa<sizeof(sink_5_15678(source()))    == 5> t5;
-    sa<sizeof(sink_5_15678(c_source()))  == 6> t6;
-    sa<sizeof(sink_5_15678(v_source()))  == 7> t7;
-    sa<sizeof(sink_5_15678(cv_source())) == 8> t8;
+    sa<sizeof(sink_5_15678(a))           == 1 * sizeof(long)> t1;
+    sa<sizeof(sink_5_15678(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_5_15678(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_5_15678(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_5_15678(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -795,11 +795,11 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_23456(ca))          == 2> t2;
-    sa<sizeof(sink_5_23456(va))          == 3> t3;
-    sa<sizeof(sink_5_23456(cva))         == 4> t4;
-    sa<sizeof(sink_5_23456(source()))    == 5> t5;
-    sa<sizeof(sink_5_23456(c_source()))  == 6> t6;
+    sa<sizeof(sink_5_23456(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_5_23456(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_5_23456(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_5_23456(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_5_23456(c_source()))  == 6 * sizeof(long)> t6;
     return 0;
 }
 
@@ -815,12 +815,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_23457(ca))          == 2> t2;
-    sa<sizeof(sink_5_23457(va))          == 3> t3;
-    sa<sizeof(sink_5_23457(cva))         == 4> t4;
-    sa<sizeof(sink_5_23457(source()))    == 5> t5;
-    sa<sizeof(sink_5_23457(c_source()))  == 2> t6;
-    sa<sizeof(sink_5_23457(v_source()))  == 7> t7;
+    sa<sizeof(sink_5_23457(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_5_23457(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_5_23457(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_5_23457(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_5_23457(c_source()))  == 2 * sizeof(long)> t6;
+    sa<sizeof(sink_5_23457(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -836,13 +836,13 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_23458(ca))          == 2> t2;
-    sa<sizeof(sink_5_23458(va))          == 3> t3;
-    sa<sizeof(sink_5_23458(cva))         == 4> t4;
-    sa<sizeof(sink_5_23458(source()))    == 5> t5;
-    sa<sizeof(sink_5_23458(c_source()))  == 8> t6;
-    sa<sizeof(sink_5_23458(v_source()))  == 8> t7;
-    sa<sizeof(sink_5_23458(cv_source())) == 8> t8;
+    sa<sizeof(sink_5_23458(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_5_23458(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_5_23458(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_5_23458(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_5_23458(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_5_23458(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_5_23458(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -858,11 +858,11 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_23467(ca))          == 2> t2;
-    sa<sizeof(sink_5_23467(va))          == 3> t3;
-    sa<sizeof(sink_5_23467(cva))         == 4> t4;
-    sa<sizeof(sink_5_23467(c_source()))  == 6> t6;
-    sa<sizeof(sink_5_23467(v_source()))  == 7> t7;
+    sa<sizeof(sink_5_23467(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_5_23467(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_5_23467(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_5_23467(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_5_23467(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -878,13 +878,13 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_23468(ca))          == 2> t2;
-    sa<sizeof(sink_5_23468(va))          == 3> t3;
-    sa<sizeof(sink_5_23468(cva))         == 4> t4;
-    sa<sizeof(sink_5_23468(source()))    == 6> t5;
-    sa<sizeof(sink_5_23468(c_source()))  == 6> t6;
-    sa<sizeof(sink_5_23468(v_source()))  == 8> t7;
-    sa<sizeof(sink_5_23468(cv_source())) == 8> t8;
+    sa<sizeof(sink_5_23468(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_5_23468(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_5_23468(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_5_23468(source()))    == 6 * sizeof(long)> t5;
+    sa<sizeof(sink_5_23468(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_5_23468(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_5_23468(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -900,13 +900,13 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_23478(ca))          == 2> t2;
-    sa<sizeof(sink_5_23478(va))          == 3> t3;
-    sa<sizeof(sink_5_23478(cva))         == 4> t4;
-    sa<sizeof(sink_5_23478(source()))    == 7> t5;
-    sa<sizeof(sink_5_23478(c_source()))  == 8> t6;
-    sa<sizeof(sink_5_23478(v_source()))  == 7> t7;
-    sa<sizeof(sink_5_23478(cv_source())) == 8> t8;
+    sa<sizeof(sink_5_23478(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_5_23478(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_5_23478(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_5_23478(source()))    == 7 * sizeof(long)> t5;
+    sa<sizeof(sink_5_23478(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_5_23478(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_5_23478(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -922,11 +922,11 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_23567(ca))          == 2> t2;
-    sa<sizeof(sink_5_23567(va))          == 3> t3;
-    sa<sizeof(sink_5_23567(source()))    == 5> t5;
-    sa<sizeof(sink_5_23567(c_source()))  == 6> t6;
-    sa<sizeof(sink_5_23567(v_source()))  == 7> t7;
+    sa<sizeof(sink_5_23567(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_5_23567(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_5_23567(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_5_23567(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_5_23567(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -942,12 +942,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_23568(ca))          == 2> t2;
-    sa<sizeof(sink_5_23568(va))          == 3> t3;
-    sa<sizeof(sink_5_23568(source()))    == 5> t5;
-    sa<sizeof(sink_5_23568(c_source()))  == 6> t6;
-    sa<sizeof(sink_5_23568(v_source()))  == 8> t7;
-    sa<sizeof(sink_5_23568(cv_source())) == 8> t8;
+    sa<sizeof(sink_5_23568(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_5_23568(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_5_23568(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_5_23568(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_5_23568(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_5_23568(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -963,12 +963,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_23578(ca))          == 2> t2;
-    sa<sizeof(sink_5_23578(va))          == 3> t3;
-    sa<sizeof(sink_5_23578(source()))    == 5> t5;
-    sa<sizeof(sink_5_23578(c_source()))  == 8> t6;
-    sa<sizeof(sink_5_23578(v_source()))  == 7> t7;
-    sa<sizeof(sink_5_23578(cv_source())) == 8> t8;
+    sa<sizeof(sink_5_23578(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_5_23578(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_5_23578(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_5_23578(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_5_23578(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_5_23578(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -984,11 +984,11 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_23678(ca))          == 2> t2;
-    sa<sizeof(sink_5_23678(va))          == 3> t3;
-    sa<sizeof(sink_5_23678(c_source()))  == 6> t6;
-    sa<sizeof(sink_5_23678(v_source()))  == 7> t7;
-    sa<sizeof(sink_5_23678(cv_source())) == 8> t8;
+    sa<sizeof(sink_5_23678(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_5_23678(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_5_23678(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_5_23678(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_5_23678(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -1004,13 +1004,13 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_24567(a))           == 2> t1;
-    sa<sizeof(sink_5_24567(ca))          == 2> t2;
-    sa<sizeof(sink_5_24567(va))          == 4> t3;
-    sa<sizeof(sink_5_24567(cva))         == 4> t4;
-    sa<sizeof(sink_5_24567(source()))    == 5> t5;
-    sa<sizeof(sink_5_24567(c_source()))  == 6> t6;
-    sa<sizeof(sink_5_24567(v_source()))  == 7> t7;
+    sa<sizeof(sink_5_24567(a))           == 2 * sizeof(long)> t1;
+    sa<sizeof(sink_5_24567(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_5_24567(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_5_24567(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_5_24567(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_5_24567(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_5_24567(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -1026,14 +1026,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_24568(a))           == 2> t1;
-    sa<sizeof(sink_5_24568(ca))          == 2> t2;
-    sa<sizeof(sink_5_24568(va))          == 4> t3;
-    sa<sizeof(sink_5_24568(cva))         == 4> t4;
-    sa<sizeof(sink_5_24568(source()))    == 5> t5;
-    sa<sizeof(sink_5_24568(c_source()))  == 6> t6;
-    sa<sizeof(sink_5_24568(v_source()))  == 8> t7;
-    sa<sizeof(sink_5_24568(cv_source())) == 8> t8;
+    sa<sizeof(sink_5_24568(a))           == 2 * sizeof(long)> t1;
+    sa<sizeof(sink_5_24568(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_5_24568(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_5_24568(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_5_24568(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_5_24568(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_5_24568(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_5_24568(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -1049,14 +1049,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_24578(a))           == 2> t1;
-    sa<sizeof(sink_5_24578(ca))          == 2> t2;
-    sa<sizeof(sink_5_24578(va))          == 4> t3;
-    sa<sizeof(sink_5_24578(cva))         == 4> t4;
-    sa<sizeof(sink_5_24578(source()))    == 5> t5;
-    sa<sizeof(sink_5_24578(c_source()))  == 8> t6;
-    sa<sizeof(sink_5_24578(v_source()))  == 7> t7;
-    sa<sizeof(sink_5_24578(cv_source())) == 8> t8;
+    sa<sizeof(sink_5_24578(a))           == 2 * sizeof(long)> t1;
+    sa<sizeof(sink_5_24578(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_5_24578(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_5_24578(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_5_24578(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_5_24578(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_5_24578(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_5_24578(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -1072,13 +1072,13 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_24678(a))           == 2> t1;
-    sa<sizeof(sink_5_24678(ca))          == 2> t2;
-    sa<sizeof(sink_5_24678(va))          == 4> t3;
-    sa<sizeof(sink_5_24678(cva))         == 4> t4;
-    sa<sizeof(sink_5_24678(c_source()))  == 6> t6;
-    sa<sizeof(sink_5_24678(v_source()))  == 7> t7;
-    sa<sizeof(sink_5_24678(cv_source())) == 8> t8;
+    sa<sizeof(sink_5_24678(a))           == 2 * sizeof(long)> t1;
+    sa<sizeof(sink_5_24678(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_5_24678(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_5_24678(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_5_24678(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_5_24678(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_5_24678(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -1094,12 +1094,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_25678(a))           == 2> t1;
-    sa<sizeof(sink_5_25678(ca))          == 2> t2;
-    sa<sizeof(sink_5_25678(source()))    == 5> t5;
-    sa<sizeof(sink_5_25678(c_source()))  == 6> t6;
-    sa<sizeof(sink_5_25678(v_source()))  == 7> t7;
-    sa<sizeof(sink_5_25678(cv_source())) == 8> t8;
+    sa<sizeof(sink_5_25678(a))           == 2 * sizeof(long)> t1;
+    sa<sizeof(sink_5_25678(ca))          == 2 * sizeof(long)> t2;
+    sa<sizeof(sink_5_25678(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_5_25678(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_5_25678(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_5_25678(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -1115,13 +1115,13 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_34567(a))           == 3> t1;
-    sa<sizeof(sink_5_34567(ca))          == 4> t2;
-    sa<sizeof(sink_5_34567(va))          == 3> t3;
-    sa<sizeof(sink_5_34567(cva))         == 4> t4;
-    sa<sizeof(sink_5_34567(source()))    == 5> t5;
-    sa<sizeof(sink_5_34567(c_source()))  == 6> t6;
-    sa<sizeof(sink_5_34567(v_source()))  == 7> t7;
+    sa<sizeof(sink_5_34567(a))           == 3 * sizeof(long)> t1;
+    sa<sizeof(sink_5_34567(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_5_34567(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_5_34567(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_5_34567(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_5_34567(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_5_34567(v_source()))  == 7 * sizeof(long)> t7;
     return 0;
 }
 
@@ -1137,14 +1137,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_34568(a))           == 3> t1;
-    sa<sizeof(sink_5_34568(ca))          == 4> t2;
-    sa<sizeof(sink_5_34568(va))          == 3> t3;
-    sa<sizeof(sink_5_34568(cva))         == 4> t4;
-    sa<sizeof(sink_5_34568(source()))    == 5> t5;
-    sa<sizeof(sink_5_34568(c_source()))  == 6> t6;
-    sa<sizeof(sink_5_34568(v_source()))  == 8> t7;
-    sa<sizeof(sink_5_34568(cv_source())) == 8> t8;
+    sa<sizeof(sink_5_34568(a))           == 3 * sizeof(long)> t1;
+    sa<sizeof(sink_5_34568(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_5_34568(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_5_34568(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_5_34568(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_5_34568(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_5_34568(v_source()))  == 8 * sizeof(long)> t7;
+    sa<sizeof(sink_5_34568(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -1160,14 +1160,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_34578(a))           == 3> t1;
-    sa<sizeof(sink_5_34578(ca))          == 4> t2;
-    sa<sizeof(sink_5_34578(va))          == 3> t3;
-    sa<sizeof(sink_5_34578(cva))         == 4> t4;
-    sa<sizeof(sink_5_34578(source()))    == 5> t5;
-    sa<sizeof(sink_5_34578(c_source()))  == 8> t6;
-    sa<sizeof(sink_5_34578(v_source()))  == 7> t7;
-    sa<sizeof(sink_5_34578(cv_source())) == 8> t8;
+    sa<sizeof(sink_5_34578(a))           == 3 * sizeof(long)> t1;
+    sa<sizeof(sink_5_34578(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_5_34578(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_5_34578(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_5_34578(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_5_34578(c_source()))  == 8 * sizeof(long)> t6;
+    sa<sizeof(sink_5_34578(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_5_34578(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -1183,13 +1183,13 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_34678(a))           == 3> t1;
-    sa<sizeof(sink_5_34678(ca))          == 4> t2;
-    sa<sizeof(sink_5_34678(va))          == 3> t3;
-    sa<sizeof(sink_5_34678(cva))         == 4> t4;
-    sa<sizeof(sink_5_34678(c_source()))  == 6> t6;
-    sa<sizeof(sink_5_34678(v_source()))  == 7> t7;
-    sa<sizeof(sink_5_34678(cv_source())) == 8> t8;
+    sa<sizeof(sink_5_34678(a))           == 3 * sizeof(long)> t1;
+    sa<sizeof(sink_5_34678(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_5_34678(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_5_34678(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_5_34678(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_5_34678(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_5_34678(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -1205,12 +1205,12 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_35678(a))           == 3> t1;
-    sa<sizeof(sink_5_35678(va))          == 3> t3;
-    sa<sizeof(sink_5_35678(source()))    == 5> t5;
-    sa<sizeof(sink_5_35678(c_source()))  == 6> t6;
-    sa<sizeof(sink_5_35678(v_source()))  == 7> t7;
-    sa<sizeof(sink_5_35678(cv_source())) == 8> t8;
+    sa<sizeof(sink_5_35678(a))           == 3 * sizeof(long)> t1;
+    sa<sizeof(sink_5_35678(va))          == 3 * sizeof(long)> t3;
+    sa<sizeof(sink_5_35678(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_5_35678(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_5_35678(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_5_35678(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
@@ -1226,14 +1226,14 @@
     const          A ca = a;
           volatile A va;
     const volatile A cva = a;
-    sa<sizeof(sink_5_45678(a))           == 4> t1;
-    sa<sizeof(sink_5_45678(ca))          == 4> t2;
-    sa<sizeof(sink_5_45678(va))          == 4> t3;
-    sa<sizeof(sink_5_45678(cva))         == 4> t4;
-    sa<sizeof(sink_5_45678(source()))    == 5> t5;
-    sa<sizeof(sink_5_45678(c_source()))  == 6> t6;
-    sa<sizeof(sink_5_45678(v_source()))  == 7> t7;
-    sa<sizeof(sink_5_45678(cv_source())) == 8> t8;
+    sa<sizeof(sink_5_45678(a))           == 4 * sizeof(long)> t1;
+    sa<sizeof(sink_5_45678(ca))          == 4 * sizeof(long)> t2;
+    sa<sizeof(sink_5_45678(va))          == 4 * sizeof(long)> t3;
+    sa<sizeof(sink_5_45678(cva))         == 4 * sizeof(long)> t4;
+    sa<sizeof(sink_5_45678(source()))    == 5 * sizeof(long)> t5;
+    sa<sizeof(sink_5_45678(c_source()))  == 6 * sizeof(long)> t6;
+    sa<sizeof(sink_5_45678(v_source()))  == 7 * sizeof(long)> t7;
+    sa<sizeof(sink_5_45678(cv_source())) == 8 * sizeof(long)> t8;
     return 0;
 }
 
Index: gcc/testsuite/g++.dg/cpp0x/named_refs.C
===================================================================
--- gcc/testsuite/g++.dg/cpp0x/named_refs.C	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/g++.dg/cpp0x/named_refs.C	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -8,8 +8,8 @@
 template <bool> struct sa;
 template <> struct sa<true> {};
 
-struct one   {char x[1];};
-struct two   {char x[2];};
+struct one   {long x[1];};
+struct two   {long x[2];};
 
 struct A {};
 
@@ -18,7 +18,7 @@
 
 int test1(A&& a)
 {
-    sa<sizeof(foo(a)) == 1> t1;
+    sa<sizeof(foo(a)) == 1 * sizeof(long)> t1;
     return 0;
 }
 
Index: gcc/testsuite/g++.dg/cpp0x/unnamed_refs.C
===================================================================
--- gcc/testsuite/g++.dg/cpp0x/unnamed_refs.C	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/g++.dg/cpp0x/unnamed_refs.C	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -8,8 +8,8 @@
 template <bool> struct sa;
 template <> struct sa<true> {};
 
-struct one   {char x[1];};
-struct two   {char x[2];};
+struct one   {long x[1];};
+struct two   {long x[2];};
 
 struct A {};
 
@@ -25,7 +25,7 @@
 
 int test1()
 {
-    sa<sizeof(foo(source())) == 2> t1;
+    sa<sizeof(foo(source())) == 2 * sizeof(long)> t1;
     return 0;
 }
 
Index: gcc/testsuite/g++.dg/eh/pr45569.C
===================================================================
--- gcc/testsuite/g++.dg/eh/pr45569.C	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/g++.dg/eh/pr45569.C	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,23 @@
+// { dg-do compile }
+// { dg-options "-O -fnon-call-exceptions" }
+
+float f ();
+_Complex float g ();
+
+void
+i (_Complex float);
+
+float j ()
+{
+  _Complex float x = 0;
+  try
+    {
+      x = f ();
+    }
+  catch ( ...)
+    {
+      x += g ();
+    }
+  i (x);
+}
+
Index: gcc/testsuite/g++.dg/gomp/atomic-11.C
===================================================================
--- gcc/testsuite/g++.dg/gomp/atomic-11.C	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/g++.dg/gomp/atomic-11.C	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,306 @@
+/* PR middle-end/45423 */
+/* { dg-do compile } */
+/* { dg-options "-fopenmp -fdump-tree-gimple -g0" } */
+/* atomicvar should never be referenced in between the barrier and
+   following #pragma omp atomic_load.  */
+/* { dg-final { scan-tree-dump-not "barrier\[^#\]*atomicvar" "gimple" } } */
+/* { dg-final { cleanup-tree-dump "gimple" } } */
+
+#ifdef __cplusplus
+bool atomicvar, c;
+#else
+_Bool atomicvar, c;
+#endif
+int i, atomicvar2, c2;
+
+int
+foo (void)
+{
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar |= -1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar |= 0;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar |= 1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar |= 2;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar |= c;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar ^= -1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar ^= 0;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar ^= 1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar ^= 2;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar ^= c;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar &= -1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar &= 0;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar &= 1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar &= 2;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar &= c;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar += -1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar += 0;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar += 1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar += 2;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar += c;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar -= -1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar -= 0;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar -= 1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar -= 2;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar -= c;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar *= -1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar *= 0;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar *= 1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar *= 2;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar *= c;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar /= -1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar /= 1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar /= 2;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar /= c;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar <<= 0;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar <<= 1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar <<= 2;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar <<= i;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar >>= 0;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar >>= 1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar >>= 2;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar >>= i;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar++;
+  #pragma omp barrier
+  #pragma omp atomic
+    ++atomicvar;
+  #pragma omp barrier
+#ifndef __cplusplus
+  #pragma omp atomic
+    atomicvar--;
+  #pragma omp barrier
+  #pragma omp atomic
+    --atomicvar;
+  #pragma omp barrier
+#endif
+  return 0;
+}
+
+int
+bar (void)
+{
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 |= -1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 |= 0;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 |= 1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 |= 2;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 |= c2;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 ^= -1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 ^= 0;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 ^= 1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 ^= 2;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 ^= c2;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 &= -1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 &= 0;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 &= 1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 &= 2;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 &= c2;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 += -1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 += 0;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 += 1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 += 2;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 += c2;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 -= -1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 -= 0;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 -= 1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 -= 2;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 -= c2;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 *= -1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 *= 0;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 *= 1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 *= 2;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 *= c2;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 /= -1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 /= 1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 /= 2;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 /= c2;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 <<= 0;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 <<= 1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 <<= 2;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 <<= i;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 >>= 0;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 >>= 1;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 >>= 2;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2 >>= i;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2++;
+  #pragma omp barrier
+  #pragma omp atomic
+    ++atomicvar2;
+  #pragma omp barrier
+  #pragma omp atomic
+    atomicvar2--;
+  #pragma omp barrier
+  #pragma omp atomic
+    --atomicvar2;
+  #pragma omp barrier
+  return 0;
+}
Index: gcc/testsuite/g++.dg/gomp/atomic-12.C
===================================================================
--- gcc/testsuite/g++.dg/gomp/atomic-12.C	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/g++.dg/gomp/atomic-12.C	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,9 @@
+/* PR middle-end/45423 */
+/* { dg-do compile } */
+/* { dg-options "-fopenmp -fdump-tree-gimple -g0 -O2" } */
+/* atomicvar should never be referenced in between the barrier and
+   following #pragma omp atomic_load.  */
+/* { dg-final { scan-tree-dump-not "barrier\[^#\]*atomicvar" "gimple" } } */
+/* { dg-final { cleanup-tree-dump "gimple" } } */
+
+#include "atomic-11.C"
Index: gcc/testsuite/g++.dg/gomp/atomic-13.C
===================================================================
--- gcc/testsuite/g++.dg/gomp/atomic-13.C	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/g++.dg/gomp/atomic-13.C	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,43 @@
+/* PR middle-end/45423 */
+/* { dg-do compile } */
+/* { dg-options "-fopenmp" } */
+
+#ifdef __cplusplus
+bool *baz ();
+#else
+_Bool *baz ();
+#endif
+int *bar ();
+
+int
+foo (void)
+{
+  #pragma omp barrier
+  #pragma omp atomic
+    (*bar ())++;
+  #pragma omp barrier
+  #pragma omp atomic
+    ++(*bar ());
+  #pragma omp barrier
+  #pragma omp atomic
+    (*bar ())--;
+  #pragma omp barrier
+  #pragma omp atomic
+    --(*bar ());
+  #pragma omp barrier
+  #pragma omp atomic
+    (*baz ())++;
+  #pragma omp barrier
+  #pragma omp atomic
+    ++(*baz ());
+#ifndef __cplusplus
+  #pragma omp barrier
+  #pragma omp atomic
+    (*baz ())--;
+  #pragma omp barrier
+  #pragma omp atomic
+    --(*baz ());
+  #pragma omp barrier
+#endif
+  return 0;
+}
Index: gcc/testsuite/g++.dg/gomp/atomic-14.C
===================================================================
--- gcc/testsuite/g++.dg/gomp/atomic-14.C	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/g++.dg/gomp/atomic-14.C	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,19 @@
+// PR middle-end/45423
+// { dg-do compile }
+// { dg-options "-fopenmp" }
+
+bool *baz (), atomicvar;
+
+int
+foo (void)
+{
+  #pragma omp atomic
+    (*baz ())--;	// { dg-error "invalid use of Boolean" }
+  #pragma omp atomic
+    --(*baz ());	// { dg-error "invalid use of Boolean" }
+  #pragma omp atomic
+    atomicvar--;	// { dg-error "invalid use of Boolean" }
+  #pragma omp atomic
+    --atomicvar;	// { dg-error "invalid use of Boolean" }
+  return 0;
+}
Index: gcc/testsuite/g++.dg/init/value8.C
===================================================================
--- gcc/testsuite/g++.dg/init/value8.C	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/g++.dg/init/value8.C	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,19 @@
+// PR c++/45315
+
+struct A
+{
+  A ();
+};
+
+template < int > struct B : A
+{
+  void foo ()
+  {
+    new B < 0 > ();
+  }
+};
+
+int main()
+{
+  B<1>().foo();
+}
Index: gcc/testsuite/g++.dg/torture/pr45393.C
===================================================================
--- gcc/testsuite/g++.dg/torture/pr45393.C	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/g++.dg/torture/pr45393.C	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,38 @@
+// { dg-do compile }
+
+class FloatPoint;
+class Path {
+public:
+    ~Path();
+    void moveTo(const FloatPoint&);
+    static void createEllipse(const FloatPoint& center, float rx, float ry);
+};
+extern "C" {
+    extern float cosf (float);
+    extern float sinf (float);
+}
+const float piFloat = static_cast<float>(3.14159265358979323846);
+class FloatPoint {
+public:
+    FloatPoint(float x, float y) : m_x(x), m_y(y) { }
+    float x() const;
+    float y() const;
+    float m_x, m_y;
+};
+void Path::createEllipse(const FloatPoint& center, float rx, float ry)
+{
+  float cx = center.x();
+  float cy = center.y();
+  Path path;
+  float x = cx;
+  float y = cy;
+  unsigned step = 0, num = 100;
+  while (1) {
+      float angle = static_cast<float>(step) / num * 2.0f * piFloat;
+      x = cx + cosf(angle) * rx;
+      y = cy + sinf(angle) * ry;
+      step++;
+      if (step == 1)
+	path.moveTo(FloatPoint(x, y));
+  }
+}
Index: gcc/testsuite/g++.dg/torture/pr45843.C
===================================================================
--- gcc/testsuite/g++.dg/torture/pr45843.C	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/g++.dg/torture/pr45843.C	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,28 @@
+// PR target/45843
+// { dg-do run }
+
+#include <stdarg.h>
+
+extern "C" void abort ();
+struct S { struct T { } a[14]; char b; };
+struct S arg, s;
+
+void
+foo (int z, ...)
+{
+  char c;
+  va_list ap;
+  va_start (ap, z);
+  c = 'a';
+  arg = va_arg (ap, struct S);
+  if (c != 'a')
+    abort ();
+  va_end (ap);
+}
+
+int
+main ()
+{
+  foo (1, s);
+  return 0;
+}
Index: gcc/testsuite/g++.dg/torture/pr45709-2.C
===================================================================
--- gcc/testsuite/g++.dg/torture/pr45709-2.C	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/g++.dg/torture/pr45709-2.C	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,20 @@
+// { dg-do compile }
+
+struct Region {
+    int storage[4];
+    int count;
+};
+static inline Region subtract(int lhs)
+{
+  Region reg;
+  int* storage = reg.storage;
+  int* storage2 = reg.storage;
+  if (lhs > 0)
+    storage++, storage2--;
+  reg.count = storage - reg.storage + storage2 - reg.storage;
+  return reg;
+}
+void bar(int a)
+{
+  const Region copyBack(subtract(a));
+}
Index: gcc/testsuite/g++.dg/torture/pr45709.C
===================================================================
--- gcc/testsuite/g++.dg/torture/pr45709.C	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/g++.dg/torture/pr45709.C	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,19 @@
+// { dg-do compile }
+
+struct Region {
+    int storage[4];
+    int count;
+};
+static inline Region subtract(int lhs)
+{
+  Region reg;
+  int* storage = reg.storage;
+  if (lhs > 0)
+    storage++;
+  reg.count = storage - reg.storage;
+  return reg;
+}
+void bar(int a)
+{
+  const Region copyBack(subtract(a));
+}
Index: gcc/testsuite/g++.dg/torture/pr45854.C
===================================================================
--- gcc/testsuite/g++.dg/torture/pr45854.C	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/g++.dg/torture/pr45854.C	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,30 @@
+// { dg-do compile }
+
+template < typename = void >
+struct X { } ;
+struct Y
+{
+  Y () ;
+} ;
+template < typename = X < > >
+struct T
+{
+  void f ()
+    {
+      f () ;
+    }
+} ;
+struct S
+{
+  S ( X < > = X < > ()) ;
+  ~S ()
+    {
+      T < > () . f () ;
+    }
+} ;
+struct Z
+{
+  S s ;
+  Y y ;
+} a ;
+
Index: gcc/testsuite/g++.dg/template/typedef34.C
===================================================================
--- gcc/testsuite/g++.dg/template/typedef34.C	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/g++.dg/template/typedef34.C	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,37 @@
+// Origin PR c++/45200
+// { dg-do compile }
+
+template<typename T>
+struct remove_reference
+{
+  typedef T type;
+};
+
+template<typename TestType>
+struct forward_as_lref
+{
+};
+
+template<typename Seq, typename N>
+struct apply1
+{
+  typedef typename remove_reference<Seq>::type seq;
+  typedef forward_as_lref<typename seq::seq_type> type; //#0
+};
+
+template<typename Seq>
+struct apply
+{
+  typedef forward_as_lref<typename remove_reference<Seq>::type::seq_type> type; //#1
+};
+
+struct reverse_view
+{
+  typedef int seq_type;
+};
+
+int
+main()
+{
+  apply<reverse_view >::type a2;
+}
Index: gcc/testsuite/g++.dg/template/typedef35.C
===================================================================
--- gcc/testsuite/g++.dg/template/typedef35.C	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/g++.dg/template/typedef35.C	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,41 @@
+// Origin c++/45558
+// { dg-do compile }
+
+template <typename S, typename T>
+struct C
+{
+  template <typename U>
+  struct B
+  {
+    template <typename W>
+    struct E
+    {
+      explicit E(const W &x) : w(x) {}
+      const W &w;
+    };
+  };
+};
+
+struct F;
+template <typename X>
+struct D
+{
+  D() {}
+};
+
+const D<F> g;
+template <typename S, typename T>
+struct A
+{
+  template <typename U>
+  struct B : C<S, T>::template B<U>
+  {
+    typedef typename C<S, T>::template B<U> V;
+    static const D<typename V::template E<D<F> > > a;
+  };
+};
+
+template <typename S, typename T>
+template <typename U>
+const D<typename C<S, T>::template B<U>::template E<D<F> > >
+A<S, T>::B<U>::a = typename C<S, T>::template B<U>::template E<D<F> >(g);
Index: gcc/testsuite/lib/profopt.exp
===================================================================
--- gcc/testsuite/lib/profopt.exp	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/lib/profopt.exp	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -328,6 +328,10 @@
 	lappend options "additional_flags=$option $extra_flags $feedback_option"
 	set optstr "$option $feedback_option"
 	set comp_output [${tool}_target_compile "$src" "$execname2" "executable" $options]
+
+	# Prune warnings we know are unwanted.
+	set comp_output [prune_warnings $comp_output]
+
 	if ![${tool}_check_compile "$testcase compilation" $optstr $execname2 $comp_output] {
  	    unresolved "$testcase execution,   $optstr"
 	    continue
Index: gcc/testsuite/lib/plugin-support.exp
===================================================================
--- gcc/testsuite/lib/plugin-support.exp	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/lib/plugin-support.exp	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -88,6 +88,10 @@
 
     set optstr "$includes $extra_flags -DIN_GCC -fPIC -shared"
 
+    if { [ ishost *-*-darwin* ] } {
+	set optstr [concat $optstr "-undefined dynamic_lookup"]
+    }
+
     # Temporarily switch to the environment for the plugin compiler.
     restore_ld_library_path_env_vars
     set status [remote_exec build "$PLUGINCC $PLUGINCFLAGS $plugin_src $optstr -o $plugin_lib"]
Index: gcc/testsuite/lib/gcc-dg.exp
===================================================================
--- gcc/testsuite/lib/gcc-dg.exp	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/lib/gcc-dg.exp	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -407,6 +407,8 @@
     # that stores the filename of the testcase in a local variable "name".
     # A cleaner solution would require a new DejaGnu release.
     upvar 2 name testcase
+    # The name might include a list of options; extract the file name.
+    set testcase [lindex $testcase 0]]
     remove-build-file "[file rootname [file tail $testcase]].gc??"
 
     # Clean up coverage files for additional source files.
@@ -423,6 +425,8 @@
     # that stores the filename of the testcase in a local variable "name".
     # A cleaner solution would require a new DejaGnu release.
     upvar 2 name testcase
+    # The name might include a list of options; extract the file name.
+    set testcase [lindex $testcase 0]]
     remove-build-file "[file rootname [file tail $testcase]].o"
     remove-build-file "[file rootname [file tail $testcase]].rpo"
 
@@ -498,6 +502,8 @@
     # that stores the filename of the testcase in a local variable "name".
     # A cleaner solution would require a new DejaGnu release.
     upvar 2 name testcase
+    # The name might include a list of options; extract the file name.
+    set testcase [lindex $testcase 0]]
     foreach suffix $suffixes {
 	remove-build-file "[file rootname [file tail $testcase]]$suffix"
 	# -fcompare-debug dumps
Index: gcc/testsuite/lib/prune.exp
===================================================================
--- gcc/testsuite/lib/prune.exp	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/lib/prune.exp	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -48,6 +48,9 @@
     regsub -all "(^|\n)\[^\n\]*file path prefix \[^\n\]* never used" $text "" text
     regsub -all "(^|\n)\[^\n\]*linker input file unused since linking not done" $text "" text
 
+    # Ignore harmless warnings from Xcode 3.2.x.
+    regsub -all "(^|\n)\[^\n\]*ld: warning: can't add line info to anonymous symbol\[^\n\]*" $text "" text
+
     #send_user "After:$text\n"
 
     return $text
Index: gcc/testsuite/lib/target-supports.exp
===================================================================
--- gcc/testsuite/lib/target-supports.exp	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/lib/target-supports.exp	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -605,6 +605,20 @@
     }]
 }
 
+# Return 1 if -ffunction-sections is supported, 0 otherwise.
+
+proc check_effective_target_function_sections {} {
+    # Darwin has its own scheme and silently accepts -ffunction-sections.
+    global target_triplet
+    if { [regexp ".*-.*-darwin.*" $target_triplet] } {
+	return 0
+    }
+    
+    return [check_no_compiler_messages functionsections assembly {
+ 	void foo (void) { }
+    } "-ffunction-sections"]
+}
+
 # Return 1 if compilation with -fgraphite is error-free for trivial 
 # code, 0 otherwise.
 
@@ -2816,6 +2830,7 @@
 	     || [istarget i?86-*-*]
 	     || [istarget x86_64-*-*]
 	     || [istarget alpha*-*-*] 
+	     || [istarget arm*-*-linux-gnueabi] 
 	     || [istarget bfin*-*linux*]
 	     || [istarget s390*-*-*] 
 	     || [istarget powerpc*-*-*]
@@ -2845,6 +2860,7 @@
 	     || [istarget i?86-*-*]
 	     || [istarget x86_64-*-*]
 	     || [istarget alpha*-*-*] 
+	     || [istarget arm*-*-linux-gnueabi] 
 	     || [istarget s390*-*-*] 
 	     || [istarget powerpc*-*-*]
 	     || [istarget sparc64-*-*]
@@ -3332,3 +3348,12 @@
     }
  return 0
 }
+
+# Return 1 if expensive testcases should be run.
+
+proc check_effective_target_run_expensive_tests { } {
+    if { [getenv GCC_TEST_RUN_EXPENSIVE] != "" } {
+        return 1
+    }
+    return 0
+}
Index: gcc/testsuite/gfortran.dg/aliasing_dummy_5.f90
===================================================================
--- gcc/testsuite/gfortran.dg/aliasing_dummy_5.f90	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/gfortran.dg/aliasing_dummy_5.f90	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,55 @@
+! { dg-do run }
+! 
+! PR fortran/45019
+!
+! Check that the compiler knows that
+! "arg" and "arr" can alias.
+!
+MODULE m
+  IMPLICIT NONE
+  INTEGER, TARGET :: arr(3)
+CONTAINS
+  SUBROUTINE foobar (arg)
+    INTEGER, TARGET :: arg(:)
+    arr(2:3) = arg(1:2)
+  END SUBROUTINE foobar
+END MODULE m
+
+PROGRAM main
+  USE m
+  IMPLICIT NONE
+  arr = (/ 1, 2, 3 /)
+  CALL bar(arr)
+  if (any (arr /= (/ 1, 1, 2 /))) call abort()
+  CALL test()
+contains
+  subroutine bar(x)
+    INTEGER, TARGET :: x(:)
+    CALL foobar (x)
+  end subroutine bar
+END PROGRAM main
+
+MODULE m2
+  IMPLICIT NONE
+  INTEGER, TARGET :: arr(3)
+CONTAINS
+   SUBROUTINE foobar (arg)
+    INTEGER, TARGET :: arg(:)
+    arr(1) = 5
+    arg(1) = 6
+    if (arr(1) == 5) call abort()
+  END SUBROUTINE foobar
+END MODULE m2
+subroutine test
+  USE m2
+  IMPLICIT NONE
+  arr = (/ 1, 2, 3 /)
+  CALL bar(arr)
+contains
+   subroutine bar(x)
+    INTEGER, TARGET :: x(:)
+    CALL foobar (x)
+  end subroutine bar
+END subroutine test
+
+! { dg-final { cleanup-modules "m m2" } }
Index: gcc/testsuite/gfortran.dg/gomp/pr27573.f90
===================================================================
--- gcc/testsuite/gfortran.dg/gomp/pr27573.f90	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/gfortran.dg/gomp/pr27573.f90	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -11,5 +11,3 @@
     end do
   !$omp end parallel
 end
-
-! { dg-final { cleanup-coverage-files } }
Index: gcc/testsuite/gfortran.dg/gomp/pr45595.f90
===================================================================
--- gcc/testsuite/gfortran.dg/gomp/pr45595.f90	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/gfortran.dg/gomp/pr45595.f90	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,10 @@
+! PR fortran/45595
+! { dg-do compile }
+! { dg-options "-fopenmp" }
+
+subroutine foo(l,u)
+  integer :: k,l,u
+  !$omp parallel do shared(l,u) collapse(3)	! { dg-error "not enough DO loops" }
+    do k = l,u
+    end do
+end subroutine
Index: gcc/testsuite/gfortran.dg/gomp/pr44036-1.f90
===================================================================
--- gcc/testsuite/gfortran.dg/gomp/pr44036-1.f90	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/testsuite/gfortran.dg/gomp/pr44036-1.f90	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -12,7 +12,7 @@
   x = a(4)
 !$omp end parallel
 !$omp parallel default(none) private (x)	! { dg-error "enclosing parallel" }
-  x = b(5)					! { dg-error "not specified in" "" { target *-*-* } 11 }
+  x = b(5)					! { dg-error "not specified in" }
 !$omp end parallel
 !$omp parallel default(none) private (x)
   x = c(6)
Index: gcc/testsuite/gfortran.dg/intrinsic_6.f90
===================================================================
--- gcc/testsuite/gfortran.dg/intrinsic_6.f90	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/gfortran.dg/intrinsic_6.f90	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,11 @@
+! { dg-do compile }
+! { dg-options "-fimplicit-none" }
+!
+! PR 45748: [4.5/4.6 Regression] -fimplicit-none failures when using intrinsic MAX
+!
+! Contributed by Themos Tsikas <themos.tsikas@gmail.com>
+
+SUBROUTINE BUG(WORK)
+  INTRINSIC MAX
+  DOUBLE PRECISION WORK(MAX(2,3))
+END
Index: gcc/testsuite/gfortran.dg/namelist_64.f90
===================================================================
--- gcc/testsuite/gfortran.dg/namelist_64.f90	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/gfortran.dg/namelist_64.f90	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,27 @@
+! { dg-do run }
+! PR45532 gfortran namelist read error.
+! Derived from the original test case by David Sagan.
+program test
+implicit none
+type line_struct
+  integer :: width = 10
+end type
+type symbol_struct
+  integer :: typee = 313233
+end type
+type curve_struct
+  type (line_struct) line
+  type (symbol_struct) symbol
+end type
+type (curve_struct) curve(10)
+namelist / params / curve
+!
+open (10, status="scratch")
+write(10,*) "&params"
+write(10,*) " curve(1)%symbol%typee = 1234"
+write(10,*) "/"
+rewind(10)
+read (10, nml = params)
+if (curve(1)%symbol%typee /= 1234) call abort
+close(10)
+end program
Index: gcc/testsuite/gfortran.dg/derived_array_intrinisics_1.f90
===================================================================
--- gcc/testsuite/gfortran.dg/derived_array_intrinisics_1.f90	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/gfortran.dg/derived_array_intrinisics_1.f90	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,30 @@
+! { dg-do compile }
+! { dg-options "-fdump-tree-original" }
+! Test the fix for PR45081 in which derived type array valued intrinsics failed
+! to simplify, which caused an ICE in trans-array.c
+!
+! Contributed by Thorsten Ohl <ohl@physik.uni-wuerzburg.de>
+! 
+  module m
+    implicit none
+    integer :: i
+    type t
+      integer :: i
+    end type t
+    type(t), dimension(4), parameter :: t1  = [( t(i), i = 1, 4)]
+    type(t), dimension(4), parameter :: t2  = [( t(i), i = 8, 11)]
+    type(t), dimension(2,2), parameter :: a = reshape ( t1, [ 2, 2 ] )
+    type(t), dimension(2,2), parameter :: b = transpose (a)
+    type(t), dimension(4), parameter :: c = reshape ( b, [ 4 ] )
+    type(t), dimension(2), parameter :: d = pack ( c, [.false.,.true.,.false.,.true.])
+    type(t), dimension(4), parameter :: e = unpack (d, [.false.,.true.,.false.,.true.], t2)
+    type(t), dimension(4,2), parameter :: f = spread (e, 2, 2)
+    type(t), dimension(8), parameter :: g = reshape ( f, [ 8 ] )
+    integer, parameter :: total = sum(g%i)
+  end module m
+
+    use m
+    integer :: j
+    j = total
+  end
+! { dg-final { scan-tree-dump-times "j = 50" 1 "original" } }
Index: gcc/testsuite/gfortran.dg/namelist_63.f90
===================================================================
--- gcc/testsuite/gfortran.dg/namelist_63.f90	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/gfortran.dg/namelist_63.f90	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,28 @@
+! { dg-do compile }
+!
+! PR fortran/45530
+!
+! Contributed by david.sagan@gmail.com
+!
+program test
+implicit none
+
+type c_struct
+  type (g_struct), pointer :: g
+end type
+
+type g_struct
+  type (p_struct), pointer :: p
+end type
+
+type p_struct
+  type (region_struct), pointer :: r
+end type
+
+type region_struct
+  type (p_struct) plot
+end type
+
+type (c_struct) curve(10)
+namelist / params / curve ! { dg-error "NAMELIST object .curve. in namelist .params. at .1. cannot have POINTER components" }
+end program
Index: gcc/testsuite/gfortran.dg/initialization_27.f90
===================================================================
--- gcc/testsuite/gfortran.dg/initialization_27.f90	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/gfortran.dg/initialization_27.f90	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,39 @@
+! { dg-do run}
+!
+! PR fortran/45489
+!
+! Check that non-referenced variables are default
+! initialized if they are INTENT(OUT) or function results.
+! Only the latter (i.e. "x=f()") was not working before
+! PR 45489 was fixed.
+!
+program test_init
+  implicit none
+  integer, target :: tgt
+  type A
+    integer, pointer:: p => null ()
+    integer:: i=3
+  end type A
+  type(A):: x, y(3)
+  x=f()
+  if (associated(x%p) .or. x%i /= 3) call abort ()
+  y(1)%p => tgt
+  y%i = 99
+  call sub1(3,y)
+  if (associated(y(1)%p) .or. any(y(:)%i /= 3)) call abort ()
+  y(1)%p => tgt
+  y%i = 99
+  call sub2(y)
+  if (associated(y(1)%p) .or. any(y(:)%i /= 3)) call abort ()
+contains
+ function f() result (fr)
+    type(A):: fr
+ end function f
+ subroutine sub1(n,x)
+   integer :: n
+   type(A), intent(out) :: x(n:n+2)
+ end subroutine sub1
+ subroutine sub2(x)
+   type(A), intent(out) :: x(:)
+ end subroutine sub2
+end program test_init
Index: gcc/testsuite/gfortran.dg/namelist_65.f90
===================================================================
--- gcc/testsuite/gfortran.dg/namelist_65.f90	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/gfortran.dg/namelist_65.f90	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,22 @@
+! { dg-do run }
+! { dg-options "-std=gnu" }
+! PR45710 Adjust format/padding for WRITE of NAMELIST group to internal file
+program oneline
+real :: a=1,b=2,c=3,d=4
+namelist /nl1/ a,b,c
+parameter(ilines=5)
+character(len=80) :: out(ilines)
+
+! fill array out with @
+do i=1,len(out)
+   out(:)(i:i)='@'
+enddo
+
+write(out,nl1)
+if (out(1).ne."&NL1") call abort
+if (out(2).ne." A=  1.0000000    ,") call abort
+if (out(3).ne." B=  2.0000000    ,") call abort
+if (out(4).ne." C=  3.0000000    ,") call abort
+if (out(5).ne." /") call abort
+
+end program oneline
Index: gcc/testsuite/gfortran.dg/allocate_derived_3.f90
===================================================================
--- gcc/testsuite/gfortran.dg/allocate_derived_3.f90	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/testsuite/gfortran.dg/allocate_derived_3.f90	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,17 @@
+! { dg-do compile }
+!
+! PR 44929: [OOP] Parsing error of derived type name starting with 'REAL'
+!
+! Contributed by Satish.BD <bdsatish@gmail.com>
+
+ type :: real_type
+ end type
+ class(real_type), allocatable :: obj
+ real(8), allocatable :: r8
+
+ allocate(real_type :: obj)
+
+ allocate( real(kind=8) :: r8)
+ allocate(real(8)  :: r8 )
+
+end 
Index: gcc/cp/typeck.c
===================================================================
--- gcc/cp/typeck.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/cp/typeck.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1164,7 +1164,7 @@
 
   if (!t1_typedef_variant_p || !t2_typedef_variant_p)
     /* Either T1 or T2 is not a typedef so we cannot compare the
-       the template parms of the typedefs of T1 and T2.
+       template parms of the typedefs of T1 and T2.
        At this point, if the main variant type of T1 and T2 are equal
        it means the two types can't be incompatible, from the perspective
        of this function.  */
Index: gcc/cp/init.c
===================================================================
--- gcc/cp/init.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/cp/init.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -2158,7 +2158,8 @@
 	{
 	  init_expr = cp_build_indirect_ref (data_addr, RO_NULL, complain);
 
-	  if (TYPE_NEEDS_CONSTRUCTING (type) && !explicit_value_init_p)
+	  if (TYPE_NEEDS_CONSTRUCTING (type)
+	      && (!explicit_value_init_p || processing_template_decl))
 	    {
 	      init_expr = build_special_member_call (init_expr,
 						     complete_ctor_identifier,
@@ -2168,9 +2169,13 @@
 	    }
 	  else if (explicit_value_init_p)
 	    {
-	      /* Something like `new int()'.  */
-	      init_expr = build2 (INIT_EXPR, type,
-				  init_expr, build_value_init (type));
+	      if (processing_template_decl)
+		/* Don't worry about it, we'll handle this properly at
+		   instantiation time.  */;
+	      else
+		/* Something like `new int()'.  */
+		init_expr = build2 (INIT_EXPR, type,
+				    init_expr, build_value_init (type));
 	    }
 	  else
 	    {
Index: gcc/cp/decl.c
===================================================================
--- gcc/cp/decl.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/cp/decl.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -2077,6 +2077,10 @@
       SET_DECL_INIT_PRIORITY (olddecl, DECL_INIT_PRIORITY (newdecl));
       DECL_HAS_INIT_PRIORITY_P (olddecl) = 1;
     }
+  /* Likewise for DECL_USER_ALIGN and DECL_PACKED.  */
+  DECL_USER_ALIGN (olddecl) = DECL_USER_ALIGN (newdecl);
+  if (TREE_CODE (newdecl) == FIELD_DECL)
+    DECL_PACKED (olddecl) = DECL_PACKED (newdecl);
 
   /* The DECL_LANG_SPECIFIC information in OLDDECL will be replaced
      with that from NEWDECL below.  */
Index: gcc/cp/tree.c
===================================================================
--- gcc/cp/tree.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/cp/tree.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1039,6 +1039,11 @@
 					    TYPE_RAISES_EXCEPTIONS (t));
       }
       break;
+    case TYPENAME_TYPE:
+      result = make_typename_type (strip_typedefs (TYPE_CONTEXT (t)),
+				   TYPENAME_TYPE_FULLNAME (t),
+				   typename_type, tf_none);
+      break;
     default:
       break;
     }
Index: gcc/cp/ChangeLog
===================================================================
--- gcc/cp/ChangeLog	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/cp/ChangeLog	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1,3 +1,33 @@
+2010-09-06  Dodji Seketeli  <dodji@redhat.com>
+
+    	PR c++/45200
+    	PR c++/45293
+    	PR c++/45558
+	* tree.c (strip_typedefs): Strip typedefs from the context of
+    	TYPENAME_TYPEs.
+
+2010-08-30  Jakub Jelinek  <jakub@redhat.com>
+
+	PR middle-end/45423
+	* parser.c (cp_parser_omp_atomic): Handle boolean
+	{PRE,POST}_INCREMENT.
+
+2010-08-29  Jason Merrill  <jason@redhat.com>
+
+	PR c++/44991
+	* parser.c (cp_parser_parameter_declaration): Pop parameter decls
+	after tentative parsing.
+
+2010-08-19  Jason Merrill  <jason@redhat.com>
+
+	PR c++/45315
+	* init.c (build_new_1): Don't use build_value_init in a template.
+
+2010-07-31  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>
+
+	PR c++/45112
+	* decl.c (duplicate_decls): Merge DECL_USER_ALIGN and DECL_PACKED.
+
 2010-07-31  Release Manager
 
 	* GCC 4.5.1 released.
Index: gcc/cp/parser.c
===================================================================
--- gcc/cp/parser.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/cp/parser.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -15191,6 +15191,7 @@
 			 the default argument; otherwise the default
 			 argument continues.  */
 		      bool error = false;
+		      tree t;
 
 		      /* Set ITALP so cp_parser_parameter_declaration_list
 			 doesn't decide to commit to this parse.  */
@@ -15199,7 +15200,11 @@
 
 		      cp_parser_parse_tentatively (parser);
 		      cp_lexer_consume_token (parser->lexer);
+		      begin_scope (sk_function_parms, NULL_TREE);
 		      cp_parser_parameter_declaration_list (parser, &error);
+		      for (t = current_binding_level->names; t; t = TREE_CHAIN (t))
+			pop_binding (DECL_NAME (t), t);
+		      leave_scope ();
 		      if (!cp_parser_error_occurred (parser) && !error)
 			done = true;
 		      cp_parser_abort_tentative_parse (parser);
@@ -21940,6 +21945,32 @@
       rhs = integer_one_node;
       break;
 
+    case COMPOUND_EXPR:
+      if (TREE_CODE (TREE_OPERAND (lhs, 0)) == SAVE_EXPR
+	 && TREE_CODE (TREE_OPERAND (lhs, 1)) == COMPOUND_EXPR
+	 && TREE_CODE (TREE_OPERAND (TREE_OPERAND (lhs, 1), 0)) == MODIFY_EXPR
+	 && TREE_OPERAND (TREE_OPERAND (lhs, 1), 1) == TREE_OPERAND (lhs, 0)
+	 && TREE_CODE (TREE_TYPE (TREE_OPERAND (TREE_OPERAND
+					     (TREE_OPERAND (lhs, 1), 0), 0)))
+	    == BOOLEAN_TYPE)
+       /* Undo effects of boolean_increment for post {in,de}crement.  */
+       lhs = TREE_OPERAND (TREE_OPERAND (lhs, 1), 0);
+      /* FALLTHRU */
+    case MODIFY_EXPR:
+      if (TREE_CODE (lhs) == MODIFY_EXPR
+	 && TREE_CODE (TREE_TYPE (TREE_OPERAND (lhs, 0))) == BOOLEAN_TYPE)
+       {
+	 /* Undo effects of boolean_increment.  */
+	 if (integer_onep (TREE_OPERAND (lhs, 1)))
+	   {
+	     /* This is pre or post increment.  */
+	     rhs = TREE_OPERAND (lhs, 1);
+	     lhs = TREE_OPERAND (lhs, 0);
+	     code = NOP_EXPR;
+	     break;
+	   }
+       }
+      /* FALLTHRU */
     default:
       switch (cp_lexer_peek_token (parser->lexer)->type)
 	{
Index: gcc/haifa-sched.c
===================================================================
--- gcc/haifa-sched.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/haifa-sched.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1997,13 +1997,9 @@
   q_ptr = NEXT_Q (q_ptr);
 
   if (dbg_cnt (sched_insn) == false)
-    {
-      /* If debug counter is activated do not requeue insn next after
-	 last_scheduled_insn.  */
-      skip_insn = next_nonnote_insn (last_scheduled_insn);
-      while (skip_insn && DEBUG_INSN_P (skip_insn))
-	skip_insn = next_nonnote_insn (skip_insn);
-    }
+    /* If debug counter is activated do not requeue insn next after
+       last_scheduled_insn.  */
+    skip_insn = next_nonnote_nondebug_insn (last_scheduled_insn);
   else
     skip_insn = NULL_RTX;
 
Index: gcc/tree-ssa-loop-ivopts.c
===================================================================
--- gcc/tree-ssa-loop-ivopts.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/tree-ssa-loop-ivopts.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1557,7 +1557,7 @@
 
 /* Return true if EXPR may be non-addressable.   */
 
-static bool
+bool
 may_be_nonaddressable_p (tree expr)
 {
   switch (TREE_CODE (expr))
Index: gcc/caller-save.c
===================================================================
--- gcc/caller-save.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/caller-save.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -883,7 +883,10 @@
 	     remain saved.  If the last insn in the block is a JUMP_INSN, put
 	     the restore before the insn, otherwise, put it after the insn.  */
 
-	  if (DEBUG_INSN_P (insn) && last && last->block == chain->block)
+	  if (n_regs_saved
+	      && DEBUG_INSN_P (insn)
+	      && last
+	      && last->block == chain->block)
 	    {
 	      rtx ins, prev;
 	      basic_block bb = BLOCK_FOR_INSN (insn);
Index: gcc/ipa-pure-const.c
===================================================================
--- gcc/ipa-pure-const.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/ipa-pure-const.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -416,6 +416,13 @@
       print_gimple_stmt (dump_file, stmt, 0, 0);
     }
 
+  if (gimple_has_volatile_ops (stmt))
+    {
+      local->pure_const_state = IPA_NEITHER;
+      if (dump_file)
+	fprintf (dump_file, "    Volatile stmt is not const/pure\n");
+    }
+
   /* Look for loads and stores.  */
   walk_stmt_load_store_ops (stmt, local, check_load, check_store);
 
Index: gcc/cse.c
===================================================================
--- gcc/cse.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/cse.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -6359,29 +6359,31 @@
 		recorded_label_ref = true;
 
 #ifdef HAVE_cc0
-	      /* If the previous insn set CC0 and this insn no longer
-		 references CC0, delete the previous insn.  Here we use
-		 fact that nothing expects CC0 to be valid over an insn,
-		 which is true until the final pass.  */
-	      {
-		rtx prev_insn, tem;
+	      if (NONDEBUG_INSN_P (insn))
+		{
+		  /* If the previous insn sets CC0 and this insn no
+		     longer references CC0, delete the previous insn.
+		     Here we use fact that nothing expects CC0 to be
+		     valid over an insn, which is true until the final
+		     pass.  */
+		  rtx prev_insn, tem;
 
-		prev_insn = PREV_INSN (insn);
-		if (prev_insn && NONJUMP_INSN_P (prev_insn)
-		    && (tem = single_set (prev_insn)) != 0
-		    && SET_DEST (tem) == cc0_rtx
-		    && ! reg_mentioned_p (cc0_rtx, PATTERN (insn)))
-		  delete_insn (prev_insn);
-	      }
+		  prev_insn = prev_nonnote_nondebug_insn (insn);
+		  if (prev_insn && NONJUMP_INSN_P (prev_insn)
+		      && (tem = single_set (prev_insn)) != NULL_RTX
+		      && SET_DEST (tem) == cc0_rtx
+		      && ! reg_mentioned_p (cc0_rtx, PATTERN (insn)))
+		    delete_insn (prev_insn);
 
-	      /* If this insn is not the last insn in the basic block,
-		 it will be PREV_INSN(insn) in the next iteration.  If
-		 we recorded any CC0-related information for this insn,
-		 remember it.  */
-	      if (insn != BB_END (bb))
-		{
-		  prev_insn_cc0 = this_insn_cc0;
-		  prev_insn_cc0_mode = this_insn_cc0_mode;
+		  /* If this insn is not the last insn in the basic
+		     block, it will be PREV_INSN(insn) in the next
+		     iteration.  If we recorded any CC0-related
+		     information for this insn, remember it.  */
+		  if (insn != BB_END (bb))
+		    {
+		      prev_insn_cc0 = this_insn_cc0;
+		      prev_insn_cc0_mode = this_insn_cc0_mode;
+		    }
 		}
 #endif
 	    }
@@ -6724,7 +6726,7 @@
 #ifdef HAVE_cc0
   else if (GET_CODE (SET_DEST (set)) == CC0
 	   && !side_effects_p (SET_SRC (set))
-	   && ((tem = next_nonnote_insn (insn)) == 0
+	   && ((tem = next_nonnote_nondebug_insn (insn)) == NULL_RTX
 	       || !INSN_P (tem)
 	       || !reg_referenced_p (cc0_rtx, PATTERN (tem))))
     return false;
Index: gcc/ira-color.c
===================================================================
--- gcc/ira-color.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/ira-color.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -82,6 +82,12 @@
    more costly although simpler.  */
 static VEC(ira_allocno_t,heap) *removed_splay_allocno_vec;
 
+/* Helper for qsort comparison callbacks - return a positive integer if
+   X > Y, or a negative value otherwise.  Use a conditional expression
+   instead of a difference computation to insulate from possible overflow
+   issues, e.g. X - Y < 0 for some X > 0 and Y < 0.  */
+#define SORTGT(x,y) (((x) > (y)) ? 1 : -1)
+
 
 
 /* This page contains functions used to find conflicts using allocno
@@ -1744,8 +1750,8 @@
 
   pri1 = allocno_priorities[ALLOCNO_NUM (a1)];
   pri2 = allocno_priorities[ALLOCNO_NUM (a2)];
-  if (pri2 - pri1)
-    return pri2 - pri1;
+  if (pri2 != pri1)
+    return SORTGT (pri2, pri1);
 
   /* If regs are equally good, sort by allocnos, so that the results of
      qsort leave nothing to chance.  */
Index: gcc/tree-ssa-math-opts.c
===================================================================
--- gcc/tree-ssa-math-opts.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/tree-ssa-math-opts.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -640,7 +640,7 @@
    result of the cexpi call we insert before the use statement that
    dominates all other candidates.  */
 
-static void
+static bool
 execute_cse_sincos_1 (tree name)
 {
   gimple_stmt_iterator gsi;
@@ -651,6 +651,7 @@
   VEC(gimple, heap) *stmts = NULL;
   basic_block top_bb = NULL;
   int i;
+  bool cfg_changed = false;
 
   type = TREE_TYPE (name);
   FOR_EACH_IMM_USE_STMT (use_stmt, use_iter, name)
@@ -682,16 +683,20 @@
   if (seen_cos + seen_sin + seen_cexpi <= 1)
     {
       VEC_free(gimple, heap, stmts);
-      return;
+      return false;
     }
 
   /* Simply insert cexpi at the beginning of top_bb but not earlier than
      the name def statement.  */
   fndecl = mathfn_built_in (type, BUILT_IN_CEXPI);
   if (!fndecl)
-    return;
-  res = make_rename_temp (TREE_TYPE (TREE_TYPE (fndecl)), "sincostmp");
+    return false;
+  res = create_tmp_var (TREE_TYPE (TREE_TYPE (fndecl)), "sincostmp");
+  if (TREE_CODE (TREE_TYPE (TREE_TYPE (fndecl))) == COMPLEX_TYPE
+      || TREE_CODE (TREE_TYPE (TREE_TYPE (fndecl))) == VECTOR_TYPE)
+    DECL_GIMPLE_REG_P (res) = 1;
   stmt = gimple_build_call (fndecl, 1, name);
+  res = make_ssa_name (res, stmt);
   gimple_call_set_lhs (stmt, res);
 
   def_stmt = SSA_NAME_DEF_STMT (name);
@@ -737,11 +742,14 @@
 	stmt = gimple_build_assign (gimple_call_lhs (use_stmt), rhs);
 
 	gsi = gsi_for_stmt (use_stmt);
-	gsi_insert_after (&gsi, stmt, GSI_SAME_STMT);
-	gsi_remove (&gsi, true);
+	gsi_replace (&gsi, stmt, true);
+	if (gimple_purge_dead_eh_edges (gimple_bb (stmt)))
+	  cfg_changed = true;
     }
 
   VEC_free(gimple, heap, stmts);
+
+  return cfg_changed;
 }
 
 /* Go through all calls to sin, cos and cexpi and call execute_cse_sincos_1
@@ -751,6 +759,7 @@
 execute_cse_sincos (void)
 {
   basic_block bb;
+  bool cfg_changed = false;
 
   calculate_dominance_info (CDI_DOMINATORS);
 
@@ -777,7 +786,7 @@
 		CASE_FLT_FN (BUILT_IN_CEXPI):
 		  arg = gimple_call_arg (stmt, 0);
 		  if (TREE_CODE (arg) == SSA_NAME)
-		    execute_cse_sincos_1 (arg);
+		    cfg_changed |= execute_cse_sincos_1 (arg);
 		  break;
 
 		default:;
@@ -787,7 +796,7 @@
     }
 
   free_dominance_info (CDI_DOMINATORS);
-  return 0;
+  return cfg_changed ? TODO_cleanup_cfg : 0;
 }
 
 static bool
Index: gcc/sel-sched.c
===================================================================
--- gcc/sel-sched.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/sel-sched.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -4878,18 +4878,35 @@
 move_cond_jump (rtx insn, bnd_t bnd)
 {
   edge ft_edge;
-  basic_block block_from, block_next, block_new;
-  rtx next, prev, link;
+  basic_block block_from, block_next, block_new, block_bnd, bb;
+  rtx next, prev, link, head;
 
-  /* BLOCK_FROM holds basic block of the jump.  */
   block_from = BLOCK_FOR_INSN (insn);
+  block_bnd = BLOCK_FOR_INSN (BND_TO (bnd));
+  prev = BND_TO (bnd);
 
-  /* Moving of jump should not cross any other jumps or
-  beginnings of new basic blocks.  */
-  gcc_assert (block_from == BLOCK_FOR_INSN (BND_TO (bnd)));
+#ifdef ENABLE_CHECKING
+  /* Moving of jump should not cross any other jumps or beginnings of new
+     basic blocks.  The only exception is when we move a jump through
+     mutually exclusive insns along fallthru edges.  */
+  if (block_from != block_bnd)
+    {
+      bb = block_from;
+      for (link = PREV_INSN (insn); link != PREV_INSN (prev);
+           link = PREV_INSN (link))
+        {
+          if (INSN_P (link))
+            gcc_assert (sched_insns_conditions_mutex_p (insn, link));
+          if (BLOCK_FOR_INSN (link) && BLOCK_FOR_INSN (link) != bb)
+            {
+              gcc_assert (single_pred (bb) == BLOCK_FOR_INSN (link));
+              bb = BLOCK_FOR_INSN (link);
+            }
+        }
+    }
+#endif
 
   /* Jump is moved to the boundary.  */
-  prev = BND_TO (bnd);
   next = PREV_INSN (insn);
   BND_TO (bnd) = insn;
 
@@ -4904,28 +4921,35 @@
   gcc_assert (block_new->next_bb == block_next
               && block_from->next_bb == block_new);
 
-  gcc_assert (BB_END (block_from) == insn);
-
-  /* Move all instructions except INSN from BLOCK_FROM to
-     BLOCK_NEW.  */
-  for (link = prev; link != insn; link = NEXT_INSN (link))
+  /* Move all instructions except INSN to BLOCK_NEW.  */
+  bb = block_bnd;
+  head = BB_HEAD (block_new);
+  while (bb != block_from->next_bb)
     {
-      EXPR_ORIG_BB_INDEX (INSN_EXPR (link)) = block_new->index;
-      df_insn_change_bb (link, block_new);
-    }
+      rtx from, to;
+      from = bb == block_bnd ? prev : sel_bb_head (bb);
+      to = bb == block_from ? next : sel_bb_end (bb);
 
-  /* Set correct basic block and instructions properties.  */
-  BB_END (block_new) = PREV_INSN (insn);
+      /* The jump being moved can be the first insn in the block.
+         In this case we don't have to move anything in this block.  */
+      if (NEXT_INSN (to) != from)
+        {
+          reorder_insns (from, to, head);
 
-  NEXT_INSN (PREV_INSN (prev)) = insn;
-  PREV_INSN (insn) = PREV_INSN (prev);
+          for (link = to; link != head; link = PREV_INSN (link))
+            EXPR_ORIG_BB_INDEX (INSN_EXPR (link)) = block_new->index;
+          head = to;
+        }
 
+      /* Cleanup possibly empty blocks left.  */
+      block_next = bb->next_bb;
+      if (bb != block_from)
+	tidy_control_flow (bb, false);
+      bb = block_next;
+    }
+
   /* Assert there is no jump to BLOCK_NEW, only fallthrough edge.  */
   gcc_assert (NOTE_INSN_BASIC_BLOCK_P (BB_HEAD (block_new)));
-  PREV_INSN (prev) = BB_HEAD (block_new);
-  NEXT_INSN (next) = NEXT_INSN (BB_HEAD (block_new));
-  NEXT_INSN (BB_HEAD (block_new)) = prev;
-  PREV_INSN (NEXT_INSN (next)) = next;
 
   gcc_assert (!sel_bb_empty_p (block_from)
               && !sel_bb_empty_p (block_new));
Index: gcc/ifcvt.c
===================================================================
--- gcc/ifcvt.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/ifcvt.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -2118,8 +2118,15 @@
 
   /* Otherwise, fall back on canonicalize_condition to do the dirty
      work of manipulating MODE_CC values and COMPARE rtx codes.  */
-  return canonicalize_condition (jump, cond, reverse, earliest,
-				 NULL_RTX, false, true);
+  tmp = canonicalize_condition (jump, cond, reverse, earliest,
+				NULL_RTX, false, true);
+
+  /* We don't handle side-effects in the condition, like handling
+     REG_INC notes and making sure no duplicate conditions are emitted.  */
+  if (tmp != NULL_RTX && side_effects_p (tmp))
+    return NULL_RTX;
+
+  return tmp;
 }
 
 /* Return true if OP is ok for if-then-else processing.  */
@@ -2285,9 +2292,7 @@
     }
   else
     {
-      insn_b = prev_nonnote_insn (if_info->cond_earliest);
-      while (insn_b && DEBUG_INSN_P (insn_b))
-	insn_b = prev_nonnote_insn (insn_b);
+      insn_b = prev_nonnote_nondebug_insn (if_info->cond_earliest);
       /* We're going to be moving the evaluation of B down from above
 	 COND_EARLIEST to JUMP.  Make sure the relevant data is still
 	 intact.  */
Index: gcc/dwarf2out.c
===================================================================
--- gcc/dwarf2out.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/dwarf2out.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -471,7 +471,6 @@
 static void output_cfi_directive (dw_cfi_ref);
 static void output_call_frame_info (int);
 static void dwarf2out_note_section_used (void);
-static void flush_queued_reg_saves (void);
 static bool clobbers_queued_reg_save (const_rtx);
 static void dwarf2out_frame_debug_expr (rtx, const char *);
 
@@ -1707,8 +1706,8 @@
 
 /* Output all the entries in QUEUED_REG_SAVES.  */
 
-static void
-flush_queued_reg_saves (void)
+void
+dwarf2out_flush_queued_reg_saves (void)
 {
   struct queued_reg_save *q;
 
@@ -2657,7 +2656,7 @@
       size_t i;
 
       /* Flush any queued register saves.  */
-      flush_queued_reg_saves ();
+      dwarf2out_flush_queued_reg_saves ();
 
       /* Set up state for generating call frame debug info.  */
       lookup_cfa (&cfa);
@@ -2685,7 +2684,7 @@
     }
 
   if (!NONJUMP_INSN_P (insn) || clobbers_queued_reg_save (insn))
-    flush_queued_reg_saves ();
+    dwarf2out_flush_queued_reg_saves ();
 
   if (!RTX_FRAME_RELATED_P (insn))
     {
@@ -12158,7 +12157,8 @@
   name = qualified_type ? TYPE_NAME (qualified_type) : NULL;
 
   /* Handle C typedef types.  */
-  if (name && TREE_CODE (name) == TYPE_DECL && DECL_ORIGINAL_TYPE (name))
+  if (name && TREE_CODE (name) == TYPE_DECL && DECL_ORIGINAL_TYPE (name)
+      && !DECL_ARTIFICIAL (name))
     {
       tree dtype = TREE_TYPE (name);
 
@@ -15578,7 +15578,8 @@
     ;
   /* Vectors only work if their mode is supported by the target.
      FIXME: generic vectors ought to work too.  */
-  else if (TREE_CODE (type) == VECTOR_TYPE && TYPE_MODE (type) == BLKmode)
+  else if (TREE_CODE (type) == VECTOR_TYPE
+	   && !VECTOR_MODE_P (TYPE_MODE (type)))
     ;
   /* If the initializer is something that we know will expand into an
      immediate RTL constant, expand it now.  We must be careful not to
@@ -19609,16 +19610,20 @@
       else if (debug_info_level > DINFO_LEVEL_TERSE)
 	{
 	  /* Before we describe the FUNCTION_DECL itself, make sure that we
-	     have described its return type.  */
+	     have its containing type.  */
+	  if (!origin)
+	    origin = decl_class_context (decl);
+	  if (origin != NULL_TREE)
+	    gen_type_die (origin, context_die);
+
+	  /* And its return type.  */
 	  gen_type_die (TREE_TYPE (TREE_TYPE (decl)), context_die);
 
 	  /* And its virtual context.  */
 	  if (DECL_VINDEX (decl) != NULL_TREE)
 	    gen_type_die (DECL_CONTEXT (decl), context_die);
 
-	  /* And its containing type.  */
-	  if (!origin)
-	    origin = decl_class_context (decl);
+	  /* Make sure we have a member DIE for decl.  */
 	  if (origin != NULL_TREE)
 	    gen_type_die_for_member (origin, decl, context_die);
 
Index: gcc/expr.c
===================================================================
--- gcc/expr.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/expr.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -9344,7 +9344,15 @@
 	{
 	  if (GET_CODE (op0) == SUBREG)
 	    op0 = force_reg (GET_MODE (op0), op0);
-	  op0 = gen_lowpart (mode, op0);
+	  temp = gen_lowpart_common (mode, op0);
+	  if (temp)
+	    op0 = temp;
+	  else
+	    {
+	      if (!REG_P (op0) && !MEM_P (op0))
+		op0 = force_reg (GET_MODE (op0), op0);
+	      op0 = gen_lowpart (mode, op0);
+	    }
 	}
       /* If both modes are integral, then we can convert from one to the
 	 other.  */
@@ -9379,10 +9387,32 @@
 	 results.  */
       if (MEM_P (op0))
 	{
+	  enum insn_code icode;
 	  op0 = copy_rtx (op0);
 
 	  if (TYPE_ALIGN_OK (type))
 	    set_mem_align (op0, MAX (MEM_ALIGN (op0), TYPE_ALIGN (type)));
+	  else if (mode != BLKmode
+		   && MEM_ALIGN (op0) < GET_MODE_ALIGNMENT (mode)
+		   /* If the target does have special handling for unaligned
+		      loads of mode then use them.  */
+		   && ((icode = optab_handler (movmisalign_optab,
+					       mode)->insn_code)
+		       != CODE_FOR_nothing))
+	      {
+		rtx reg, insn;
+
+		op0 = adjust_address (op0, mode, 0);
+		/* We've already validated the memory, and we're creating a
+		   new pseudo destination.  The predicates really can't
+		   fail.  */
+		reg = gen_reg_rtx (mode);
+
+		/* Nor can the insn generator.  */
+		insn = GEN_FCN (icode) (reg, op0);
+		emit_insn (insn);
+		return reg;
+	      }
 	  else if (STRICT_ALIGNMENT
 		   && mode != BLKmode
 		   && MEM_ALIGN (op0) < GET_MODE_ALIGNMENT (mode))
Index: gcc/dwarf2out.h
===================================================================
--- gcc/dwarf2out.h	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/dwarf2out.h	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -22,6 +22,7 @@
 extern void dwarf2out_frame_debug (rtx, bool);
 extern void dwarf2out_begin_epilogue (rtx);
 extern void dwarf2out_frame_debug_restore_state (void);
+extern void dwarf2out_flush_queued_reg_saves (void);
 
 extern void debug_dwarf (void);
 struct die_struct;
Index: gcc/ada/ChangeLog
===================================================================
--- gcc/ada/ChangeLog	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/ada/ChangeLog	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1,3 +1,24 @@
+2010-09-19  Eric Botcazou  <ebotcazou@adacore.com>
+
+	* gcc-interface/trans.c (gnat_pushdecl): Do not do anything special
+	for PARM_DECLs.
+	(end_subprog_body): If the body is a BIND_EXPR, make its associated
+	block the top-level one.
+	(build_function_stub): Build a statement group for the whole function.
+	* gcc-interface/utils.c (Subprogram_Body_to_gnu): If copy-in/copy-out
+	is used, create the enclosing block early and process first the OUT
+	parameters.
+
+2010-09-19  Eric Botcazou  <ebotcazou@adacore.com>
+
+	* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Enumeration_Type>: Do
+	not generate debug info for individual enumerators.
+
+2010-08-30  Eric Botcazou  <ebotcazou@adacore.com>
+
+	* gcc-interface/utils.c (gnat_pushdecl): Remove test for PARM_DECLs.
+	Attach fake PARM_DECLs to the topmost block of the function.
+
 2010-07-31  Release Manager
 
 	* GCC 4.5.1 released.
Index: gcc/ada/gcc-interface/utils.c
===================================================================
--- gcc/ada/gcc-interface/utils.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/ada/gcc-interface/utils.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -423,11 +423,8 @@
 void
 gnat_pushdecl (tree decl, Node_Id gnat_node)
 {
-  /* If this decl is public external or at toplevel, there is no context.
-     But PARM_DECLs always go in the level of its function.  */
-  if (TREE_CODE (decl) != PARM_DECL
-      && ((DECL_EXTERNAL (decl) && TREE_PUBLIC (decl))
-	  || global_bindings_p ()))
+  /* If this decl is public external or at toplevel, there is no context.  */
+  if ((TREE_PUBLIC (decl) && DECL_EXTERNAL (decl)) || global_bindings_p ())
     DECL_CONTEXT (decl) = 0;
   else
     {
@@ -2085,9 +2082,7 @@
 {
   tree fndecl = current_function_decl;
 
-  /* Mark the BLOCK for this level as being for this function and pop the
-     level.  Since the vars in it are the parameters, clear them.  */
-  BLOCK_VARS (current_binding_level->block) = 0;
+  /* Attach the BLOCK for this level to the function and pop the level.  */
   BLOCK_SUPERCONTEXT (current_binding_level->block) = fndecl;
   DECL_INITIAL (fndecl) = current_binding_level->block;
   gnat_poplevel ();
@@ -2099,6 +2094,13 @@
   /* Mark the RESULT_DECL as being in this subprogram. */
   DECL_CONTEXT (DECL_RESULT (fndecl)) = fndecl;
 
+  /* The body should be a BIND_EXPR whose BLOCK is the top-level one.  */
+  if (TREE_CODE (body) == BIND_EXPR)
+    {
+      BLOCK_SUPERCONTEXT (BIND_EXPR_BLOCK (body)) = fndecl;
+      DECL_INITIAL (fndecl) = BIND_EXPR_BLOCK (body);
+    }
+
   DECL_SAVED_TREE (fndecl) = body;
 
   current_function_decl = DECL_CONTEXT (fndecl);
@@ -3471,15 +3473,18 @@
   tree gnu_subprog_type, gnu_subprog_addr, gnu_subprog_call;
   tree gnu_stub_param, gnu_param_list, gnu_arg_types, gnu_param;
   tree gnu_stub_decl = DECL_FUNCTION_STUB (gnu_subprog);
-  tree gnu_body;
 
   gnu_subprog_type = TREE_TYPE (gnu_subprog);
   gnu_param_list = NULL_TREE;
 
+  /* Initialize the information structure for the function.  */
+  allocate_struct_function (gnu_stub_decl, false);
+  set_cfun (NULL);
+
   begin_subprog_body (gnu_stub_decl);
-  gnat_pushlevel ();
 
   start_stmt_group ();
+  gnat_pushlevel ();
 
   /* Loop over the parameters of the stub and translate any of them
      passed by descriptor into a by reference one.  */
@@ -3501,8 +3506,6 @@
       gnu_param_list = tree_cons (NULL_TREE, gnu_param, gnu_param_list);
     }
 
-  gnu_body = end_stmt_group ();
-
   /* Invoke the internal subprogram.  */
   gnu_subprog_addr = build1 (ADDR_EXPR, build_pointer_type (gnu_subprog_type),
 			     gnu_subprog);
@@ -3512,16 +3515,13 @@
 
   /* Propagate the return value, if any.  */
   if (VOID_TYPE_P (TREE_TYPE (gnu_subprog_type)))
-    append_to_statement_list (gnu_subprog_call, &gnu_body);
+    add_stmt (gnu_subprog_call);
   else
-    append_to_statement_list (build_return_expr (DECL_RESULT (gnu_stub_decl),
-						 gnu_subprog_call),
-			      &gnu_body);
+    add_stmt (build_return_expr (DECL_RESULT (gnu_stub_decl),
+				 gnu_subprog_call));
 
   gnat_poplevel ();
-
-  allocate_struct_function (gnu_stub_decl, false);
-  end_subprog_body (gnu_body);
+  end_subprog_body (end_stmt_group ());
 }
 
 /* Build a type to be used to represent an aliased object whose nominal
Index: gcc/ada/gcc-interface/decl.c
===================================================================
--- gcc/ada/gcc-interface/decl.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/ada/gcc-interface/decl.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1445,7 +1445,8 @@
 	      = create_var_decl (get_entity_name (gnat_literal), NULL_TREE,
 				 gnu_type, gnu_value, true, false, false,
 				 false, NULL, gnat_literal);
-
+	    /* Do not generate debug info for individual enumerators.  */
+	    DECL_IGNORED_P (gnu_literal) = 1;
 	    save_gnu_tree (gnat_literal, gnu_literal, false);
 	    gnu_literal_list = tree_cons (DECL_NAME (gnu_literal),
 					  gnu_value, gnu_literal_list);
Index: gcc/ada/gcc-interface/trans.c
===================================================================
--- gcc/ada/gcc-interface/trans.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/ada/gcc-interface/trans.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -2236,41 +2236,49 @@
     = GGC_CNEW (struct language_function);
 
   begin_subprog_body (gnu_subprog_decl);
+
+  /* If there are In Out or Out parameters, we need to ensure that the return
+     statement properly copies them out.  We do this by making a new block and
+     converting any return into a goto to a label at the end of the block.  */
   gnu_cico_list = TYPE_CI_CO_LIST (gnu_subprog_type);
+  if (gnu_cico_list)
+    {
+      push_stack (&gnu_return_label_stack, NULL_TREE,
+		  create_artificial_label (input_location));
 
-  /* If there are Out parameters, we need to ensure that the return statement
-     properly copies them out.  We do this by making a new block and converting
-     any inner return into a goto to a label at the end of the block.  */
-  push_stack (&gnu_return_label_stack, NULL_TREE,
-	      gnu_cico_list ? create_artificial_label (input_location)
-	      : NULL_TREE);
+      start_stmt_group ();
+      gnat_pushlevel ();
 
+      /* See whether there are parameters for which we don't have a GCC tree
+	 yet.  These must be Out parameters.  Make a VAR_DECL for them and
+	 put it into TYPE_CI_CO_LIST, which must contain an empty entry too.
+	 We can match up the entries because TYPE_CI_CO_LIST is in the order
+	 of the parameters.  */
+      for (gnat_param = First_Formal_With_Extras (gnat_subprog_id);
+	   Present (gnat_param);
+	   gnat_param = Next_Formal_With_Extras (gnat_param))
+	if (!present_gnu_tree (gnat_param))
+	  {
+	    tree gnu_cico_entry = gnu_cico_list;
+
+	    /* Skip any entries that have been already filled in; they must
+	       correspond to In Out parameters.  */
+	    while (gnu_cico_entry && TREE_VALUE (gnu_cico_entry))
+	      gnu_cico_entry = TREE_CHAIN (gnu_cico_entry);
+
+	    /* Do any needed references for padded types.  */
+	    TREE_VALUE (gnu_cico_entry)
+	      = convert (TREE_TYPE (TREE_PURPOSE (gnu_cico_entry)),
+			 gnat_to_gnu_entity (gnat_param, NULL_TREE, 1));
+	  }
+    }
+  else
+    push_stack (&gnu_return_label_stack, NULL_TREE, NULL_TREE);
+
   /* Get a tree corresponding to the code for the subprogram.  */
   start_stmt_group ();
   gnat_pushlevel ();
 
-  /* See if there are any parameters for which we don't yet have GCC entities.
-     These must be for Out parameters for which we will be making VAR_DECL
-     nodes here.  Fill them in to TYPE_CI_CO_LIST, which must contain the empty
-     entry as well.  We can match up the entries because TYPE_CI_CO_LIST is in
-     the order of the parameters.  */
-  for (gnat_param = First_Formal_With_Extras (gnat_subprog_id);
-       Present (gnat_param);
-       gnat_param = Next_Formal_With_Extras (gnat_param))
-    if (!present_gnu_tree (gnat_param))
-      {
-	/* Skip any entries that have been already filled in; they must
-	   correspond to In Out parameters.  */
-	for (; gnu_cico_list && TREE_VALUE (gnu_cico_list);
-	     gnu_cico_list = TREE_CHAIN (gnu_cico_list))
-	  ;
-
-	/* Do any needed references for padded types.  */
-	TREE_VALUE (gnu_cico_list)
-	  = convert (TREE_TYPE (TREE_PURPOSE (gnu_cico_list)),
-		     gnat_to_gnu_entity (gnat_param, NULL_TREE, 1));
-      }
-
   /* On VMS, establish our condition handler to possibly turn a condition into
      the corresponding exception if the subprogram has a foreign convention or
      is exported.
@@ -2295,44 +2303,26 @@
   gnat_poplevel ();
   gnu_result = end_stmt_group ();
 
-  /* If we populated the parameter attributes cache, we need to make sure
-     that the cached expressions are evaluated on all possible paths.  */
-  cache = DECL_STRUCT_FUNCTION (gnu_subprog_decl)->language->parm_attr_cache;
-  if (cache)
-    {
-      struct parm_attr_d *pa;
-      int i;
+  /* If we are dealing with a return from an Ada procedure with parameters
+     passed by copy-in/copy-out, we need to return a record containing the
+     final values of these parameters.  If the list contains only one entry,
+     return just that entry though.
 
-      start_stmt_group ();
+     For a full description of the copy-in/copy-out parameter mechanism, see
+     the part of the gnat_to_gnu_entity routine dealing with the translation
+     of subprograms.
 
-      for (i = 0; VEC_iterate (parm_attr, cache, i, pa); i++)
-	{
-	  if (pa->first)
-	    add_stmt_with_node (pa->first, gnat_node);
-	  if (pa->last)
-	    add_stmt_with_node (pa->last, gnat_node);
-	  if (pa->length)
-	    add_stmt_with_node (pa->length, gnat_node);
-	}
-
-      add_stmt (gnu_result);
-      gnu_result = end_stmt_group ();
-    }
-
-  /* If we made a special return label, we need to make a block that contains
-     the definition of that label and the copying to the return value.  That
-     block first contains the function, then the label and copy statement.  */
-  if (TREE_VALUE (gnu_return_label_stack))
+     We need to make a block that contains the definition of that label and
+     the copying of the return value.  It first contains the function, then
+     the label and copy statement.  */
+  if (gnu_cico_list)
     {
       tree gnu_retval;
 
-      start_stmt_group ();
-      gnat_pushlevel ();
       add_stmt (gnu_result);
       add_stmt (build1 (LABEL_EXPR, void_type_node,
 			TREE_VALUE (gnu_return_label_stack)));
 
-      gnu_cico_list = TYPE_CI_CO_LIST (gnu_subprog_type);
       if (list_length (gnu_cico_list) == 1)
 	gnu_retval = TREE_VALUE (gnu_cico_list);
       else
@@ -2351,6 +2341,30 @@
 
   pop_stack (&gnu_return_label_stack);
 
+  /* If we populated the parameter attributes cache, we need to make sure
+     that the cached expressions are evaluated on all possible paths.  */
+  cache = DECL_STRUCT_FUNCTION (gnu_subprog_decl)->language->parm_attr_cache;
+  if (cache)
+    {
+      struct parm_attr_d *pa;
+      int i;
+
+      start_stmt_group ();
+
+      for (i = 0; VEC_iterate (parm_attr, cache, i, pa); i++)
+	{
+	  if (pa->first)
+	    add_stmt_with_node (pa->first, gnat_node);
+	  if (pa->last)
+	    add_stmt_with_node (pa->last, gnat_node);
+	  if (pa->length)
+	    add_stmt_with_node (pa->length, gnat_node);
+	}
+
+      add_stmt (gnu_result);
+      gnu_result = end_stmt_group ();
+    }
+
   /* Set the end location.  */
   Sloc_to_locus
     ((Present (End_Label (Handled_Statement_Sequence (gnat_node)))
Index: gcc/sel-sched-ir.c
===================================================================
--- gcc/sel-sched-ir.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/sel-sched-ir.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -4324,7 +4324,7 @@
       note = bb_note (bb);
       head = next_nonnote_insn (note);
 
-      if (head && BLOCK_FOR_INSN (head) != bb)
+      if (head && (BARRIER_P (head) || BLOCK_FOR_INSN (head) != bb))
 	head = NULL_RTX;
     }
 
Index: gcc/tree-eh.c
===================================================================
--- gcc/tree-eh.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/tree-eh.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -2317,6 +2317,11 @@
 	return true;
       return false;
 
+    case COMPLEX_EXPR:
+    case CONSTRUCTOR:
+      /* Constructing an object cannot trap.  */
+      return false;
+
     default:
       /* Any floating arithmetic may trap.  */
       if (fp_operation && flag_trapping_math)
@@ -3720,8 +3725,14 @@
 
   /* If the block is totally empty, look for more unsplitting cases.  */
   if (gsi_end_p (gsi))
-    return cleanup_empty_eh_unsplit (bb, e_out, lp);
+    {
+      /* For the degenerate case of an infinite loop bail out.  */
+      if (e_out->dest == bb)
+	return false;
 
+      return cleanup_empty_eh_unsplit (bb, e_out, lp);
+    }
+
   /* The block should consist only of a single RESX statement.  */
   resx = gsi_stmt (gsi);
   if (!is_gimple_resx (resx))
Index: gcc/fortran/openmp.c
===================================================================
--- gcc/fortran/openmp.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/fortran/openmp.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1489,7 +1489,8 @@
 	  break;
 	}
       do_code = do_code->next;
-      if (do_code->op != EXEC_DO && do_code->op != EXEC_DO_WHILE)
+      if (do_code == NULL
+	  || (do_code->op != EXEC_DO && do_code->op != EXEC_DO_WHILE))
 	{
 	  gfc_error ("not enough DO loops for collapsed !$OMP DO at %L",
 		     &code->loc);
Index: gcc/fortran/intrinsic.c
===================================================================
--- gcc/fortran/intrinsic.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/fortran/intrinsic.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -112,6 +112,8 @@
   sym->attr.flavor = FL_PROCEDURE;
   sym->attr.proc = PROC_INTRINSIC;
 
+  gfc_commit_symbol (sym);
+
   return sym;
 }
 
Index: gcc/fortran/symbol.c
===================================================================
--- gcc/fortran/symbol.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/fortran/symbol.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -2753,6 +2753,17 @@
   if (lsym->attr.allocatable && rsym->attr.pointer)
     return 1;
 
+  /* Special case: Argument association, cf. F90 12.4.1.6, F2003 12.4.1.7
+     and F2008 12.5.2.13 items 3b and 4b. The pointer case (a) is already
+     checked above.  */
+  if (lsym->attr.target && rsym->attr.target
+      && ((lsym->attr.dummy
+	   && (!lsym->attr.dimension || lsym->as->type == AS_ASSUMED_SHAPE))
+	  || (rsym->attr.dummy
+	      && (!rsym->attr.dimension
+		  || rsym->as->type == AS_ASSUMED_SHAPE))))
+    return 1;
+
   return 0;
 }
 
@@ -3795,6 +3806,9 @@
   formal_arg = gfc_get_formal_arglist ();
   /* Add arg to list of formal args (the CPTR arg).  */
   add_formal_arg (head, tail, formal_arg, param_sym);
+
+  /* Validate changes.  */
+  gfc_commit_symbol (param_sym);
 }
 
 
@@ -3840,6 +3854,9 @@
   formal_arg = gfc_get_formal_arglist ();
   /* Add arg to list of formal args.  */
   add_formal_arg (head, tail, formal_arg, param_sym);
+
+  /* Validate changes.  */
+  gfc_commit_symbol (param_sym);
 }
 
 
@@ -3911,6 +3928,9 @@
   formal_arg = gfc_get_formal_arglist ();
   /* Add arg to list of formal args.  */
   add_formal_arg (head, tail, formal_arg, param_sym);
+
+  /* Validate changes.  */
+  gfc_commit_symbol (param_sym);
 }
 
 
@@ -3973,6 +3993,9 @@
 
       /* Add arg to list of formal args.  */
       add_formal_arg (&head, &tail, formal_arg, formal_arg->sym);
+
+      /* Validate changes.  */
+      gfc_commit_symbol (formal_arg->sym);
     }
 
   /* Add the interface to the symbol.  */
@@ -4030,6 +4053,9 @@
 
       /* Add arg to list of formal args.  */
       add_formal_arg (&head, &tail, formal_arg, formal_arg->sym);
+
+      /* Validate changes.  */
+      gfc_commit_symbol (formal_arg->sym);
     }
 
   /* Add the interface to the symbol.  */
@@ -4083,6 +4109,9 @@
 
       /* Add arg to list of formal args.  */
       add_formal_arg (&head, &tail, formal_arg, formal_arg->sym);
+
+      /* Validate changes.  */
+      gfc_commit_symbol (formal_arg->sym);
     }
 
   /* Add the interface to the symbol.  */
@@ -4465,6 +4494,7 @@
       default:
 	gcc_unreachable ();
     }
+  gfc_commit_symbol (tmp_sym);
 }
 
 
@@ -4837,10 +4867,12 @@
 		  c->ts.u.derived = vtype;
 		  c->initializer->expr_type = EXPR_NULL;
 		}
+	      gfc_commit_symbol (vtype);
 	    }
 	  vtab->ts.u.derived = vtype;
 
 	  vtab->value = gfc_default_initializer (&vtab->ts);
+	  gfc_commit_symbol (vtab);
 	}
     }
 
Index: gcc/fortran/gfortran.texi
===================================================================
--- gcc/fortran/gfortran.texi	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/fortran/gfortran.texi	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -2639,9 +2639,6 @@
 User-specified alignment rules for structures.
 
 @item
-Flag to generate @code{Makefile} info.
-
-@item
 Automatically extend single precision constants to double.
 
 @item
Index: gcc/fortran/cpp.c
===================================================================
--- gcc/fortran/cpp.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/fortran/cpp.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -35,6 +35,7 @@
 #include "../../libcpp/internal.h"
 #include "cpp.h"
 #include "incpath.h"
+#include "mkdeps.h"
 
 #ifndef TARGET_OS_CPP_BUILTINS
 # define TARGET_OS_CPP_BUILTINS()
@@ -84,6 +85,12 @@
   int no_predefined;                    /* -undef */
   int standard_include_paths;           /* -nostdinc */
   int verbose;                          /* -v */
+  int deps;                             /* -M */
+  int deps_skip_system;                 /* -MM */
+  const char *deps_filename;            /* -M[M]D */
+  const char *deps_filename_user;       /* -MF <arg> */
+  int deps_missing_are_generated;       /* -MG */
+  int deps_phony;                       /* -MP */
 
   const char *multilib;                 /* -imultilib <dir>  */
   const char *prefix;                   /* -iprefix <dir>  */
@@ -270,6 +277,26 @@
   return gfc_cpp_option.preprocess_only;
 }
 
+bool
+gfc_cpp_makedep (void)
+{
+  return gfc_cpp_option.deps;
+}
+
+void
+gfc_cpp_add_dep (const char *name, bool system)
+{
+  if (!gfc_cpp_option.deps_skip_system || !system)
+    deps_add_dep (cpp_get_deps (cpp_in), name);
+}
+
+void
+gfc_cpp_add_target (const char *name)
+{
+  deps_add_target (cpp_get_deps (cpp_in), name, 0);
+}
+
+
 const char *
 gfc_cpp_temporary_file (void)
 {
@@ -299,6 +326,12 @@
   gfc_cpp_option.no_predefined = 0;
   gfc_cpp_option.standard_include_paths = 1;
   gfc_cpp_option.verbose = 0;
+  gfc_cpp_option.deps = 0;
+  gfc_cpp_option.deps_skip_system = 0;
+  gfc_cpp_option.deps_phony = 0;
+  gfc_cpp_option.deps_missing_are_generated = 0;
+  gfc_cpp_option.deps_filename = NULL;
+  gfc_cpp_option.deps_filename_user = NULL;
 
   gfc_cpp_option.multilib = NULL;
   gfc_cpp_option.prefix = NULL;
@@ -414,6 +447,43 @@
       gfc_cpp_option.print_include_names = 1;
       break;
 
+    case OPT_MM:
+      gfc_cpp_option.deps_skip_system = 1;
+      /* fall through */
+
+    case OPT_M:
+      gfc_cpp_option.deps = 1;
+      break;
+
+    case OPT_MMD:
+      gfc_cpp_option.deps_skip_system = 1;
+      /* fall through */
+
+    case OPT_MD:
+      gfc_cpp_option.deps = 1;
+      gfc_cpp_option.deps_filename = arg;
+      break;
+
+    case OPT_MF:
+      /* If specified multiple times, last one wins.  */
+      gfc_cpp_option.deps_filename_user = arg;
+      break;
+
+    case OPT_MG:
+      gfc_cpp_option.deps_missing_are_generated = 1;
+      break;
+
+    case OPT_MP:
+      gfc_cpp_option.deps_phony = 1;
+      break;
+
+    case OPT_MQ:
+    case OPT_MT:
+      gfc_cpp_option.deferred_opt[gfc_cpp_option.deferred_opt_count].code = code;
+      gfc_cpp_option.deferred_opt[gfc_cpp_option.deferred_opt_count].arg = arg;
+      gfc_cpp_option.deferred_opt_count++;
+      break;
+
     case OPT_P:
       gfc_cpp_option.no_line_commands = 1;
       break;
@@ -430,16 +500,17 @@
      an error.  */
   if (!gfc_cpp_enabled ()
       && (gfc_cpp_preprocess_only ()
-          || !gfc_cpp_option.discard_comments
-          || !gfc_cpp_option.discard_comments_in_macro_exp
-          || gfc_cpp_option.print_include_names
-          || gfc_cpp_option.no_line_commands
-          || gfc_cpp_option.dump_macros
-          || gfc_cpp_option.dump_includes))
+	  || gfc_cpp_makedep ()
+	  || !gfc_cpp_option.discard_comments
+	  || !gfc_cpp_option.discard_comments_in_macro_exp
+	  || gfc_cpp_option.print_include_names
+	  || gfc_cpp_option.no_line_commands
+	  || gfc_cpp_option.dump_macros
+	  || gfc_cpp_option.dump_includes))
     gfc_fatal_error("To enable preprocessing, use -cpp");
 
   cpp_in = cpp_create_reader (CLK_GNUC89, NULL, line_table);
-  if (!gfc_cpp_enabled())
+  if (!gfc_cpp_enabled ())
     return;
 
   gcc_assert (cpp_in);
@@ -462,6 +533,17 @@
   cpp_option->print_include_names = gfc_cpp_option.print_include_names;
   cpp_option->preprocessed = gfc_option.flag_preprocessed;
 
+  if (gfc_cpp_makedep ())
+    {
+      cpp_option->deps.style = DEPS_USER;
+      cpp_option->deps.phony_targets = gfc_cpp_option.deps_phony;
+      cpp_option->deps.missing_files = gfc_cpp_option.deps_missing_are_generated;
+
+      /* -MF <arg> overrides -M[M]D.  */
+      if (gfc_cpp_option.deps_filename_user)
+	gfc_cpp_option.deps_filename = gfc_cpp_option.deps_filename_user;
+  }
+
   if (gfc_cpp_option.working_directory == -1)
     gfc_cpp_option.working_directory = (debug_info_level != DINFO_LEVEL_NONE);
 
@@ -571,6 +653,9 @@
 	  else
 	    cpp_assert (cpp_in, opt->arg);
 	}
+      else if (opt->code == OPT_MT || opt->code == OPT_MQ)
+	deps_add_target (cpp_get_deps (cpp_in),
+			 opt->arg, opt->code == OPT_MQ);
     }
 
   if (gfc_cpp_option.working_directory
@@ -614,14 +699,27 @@
   if (!gfc_cpp_enabled ())
     return;
 
-  /* TODO: if dependency tracking was enabled, call
-     cpp_finish() here to write dependencies.
+  gcc_assert (cpp_in);
 
-     Use cpp_get_deps() to access the current source's
-     dependencies during parsing. Add dependencies using
-     the mkdeps-interface (defined in libcpp).  */
+  if (gfc_cpp_makedep ())
+    {
+      if (gfc_cpp_option.deps_filename)
+	{
+	  FILE *f = fopen (gfc_cpp_option.deps_filename, "w");
+	  if (f)
+	    {
+	      cpp_finish (cpp_in, f);
+	      fclose (f);
+	    }
+	  else
+	    gfc_fatal_error ("opening output file %s: %s",
+			     gfc_cpp_option.deps_filename,
+			     xstrerror (errno));
+	}
+      else
+	cpp_finish (cpp_in, stdout);
+    }
 
-  gcc_assert (cpp_in);
   cpp_undef_all (cpp_in);
   cpp_clear_file_cache (cpp_in);
 }
Index: gcc/fortran/cpp.h
===================================================================
--- gcc/fortran/cpp.h	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/fortran/cpp.h	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -24,6 +24,12 @@
 
 bool gfc_cpp_preprocess_only (void);
 
+bool gfc_cpp_makedep (void);
+
+void gfc_cpp_add_dep (const char *name, bool system);
+
+void gfc_cpp_add_target (const char *name);
+
 const char *gfc_cpp_temporary_file (void);
 
 
Index: gcc/fortran/gfortran.h
===================================================================
--- gcc/fortran/gfortran.h	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/fortran/gfortran.h	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1326,7 +1326,7 @@
   struct gfc_code *code;
 
   /* Points to the equivalences set up in this namespace.  */
-  struct gfc_equiv *equiv;
+  struct gfc_equiv *equiv, *old_equiv;
 
   /* Points to the equivalence groups produced by trans_common.  */
   struct gfc_equiv_list *equiv_lists;
@@ -2569,6 +2569,7 @@
 void gfc_free_alloc_list (gfc_alloc *);
 void gfc_free_namelist (gfc_namelist *);
 void gfc_free_equiv (gfc_equiv *);
+void gfc_free_equiv_until (gfc_equiv *, gfc_equiv *);
 void gfc_free_data (gfc_data *);
 void gfc_free_case_list (gfc_case *);
 
Index: gcc/fortran/lang.opt
===================================================================
--- gcc/fortran/lang.opt	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/fortran/lang.opt	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -56,6 +56,42 @@
 Fortran Joined Separate
 -J<directory>	Put MODULE files in 'directory'
 
+M
+Fortran
+; Documented in C
+
+MD
+Fortran Separate
+; Documented in C
+
+MF
+Fortran Joined Separate
+; Documented in C
+
+MG
+Fortran
+; Documented in C
+
+MM
+Fortran
+; Documented in C
+
+MMD
+Fortran Separate
+; Documented in C
+
+MP
+Fortran
+; Documented in C
+
+MT
+Fortran Joined Separate
+; Documented in C
+
+MQ
+Fortran Joined Separate
+; Documented in C
+
 P
 Fortran
 ; Documented in C
Index: gcc/fortran/ChangeLog
===================================================================
--- gcc/fortran/ChangeLog	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/fortran/ChangeLog	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1,3 +1,129 @@
+2010-10-09  Janus Weil  <janus@gcc.gnu.org>
+
+	PR fortran/45748
+	* resolve.c (resolve_formal_arglist): Avoid setting default type for
+	formal arguments of intrinsic procedures.
+
+2010-09-20  Paul Thomas  <pault@gcc.gnu.org>
+
+	PR fortran/45081
+	* simplify.c (is_constant_array_expr): Allow structure array
+	elements as well as constants.
+	(gfc_simplify_pack, gfc_simplify_reshape, gfc_simplify_spread,
+	gfc_simplify_transpose, gfc_simplify_unpack): Copy the derived
+	type of source to the result.
+
+2010-09-08  Jakub Jelinek  <jakub@redhat.com>
+
+	PR fortran/45595
+	* openmp.c (resolve_omp_do): Report not enough do loops for
+	collapse even if block->next is NULL.
+
+2010-09-04  Tobias Burnus  <burnus@net-b.de>
+
+	PR fortran/45530
+	* resolve.c (resolve_fl_namelist): Change constraint checking
+	order to prevent endless loop.
+
+2010-09-04  Tobias Burnus  <burnus@net-b.de>
+
+	PR fortran/45489
+	* resolve.c (apply_default_init): Mark symbol as referenced,
+	if it is initialized.
+	(resolve_symbol): Change intialized check for BT_DERIVED such
+	that also function results get initialized.
+
+2010-09-04  Tobias Burnus  <burnus@net-b.de>
+
+	PR fortran/45019
+	* dependency.c (gfc_check_dependency): Add argument alising check.
+	* symbol.c (gfc_symbols_could_alias): Add argument alising check.
+
+2010-08-20  Jakub Jelinek  <jakub@redhat.com>
+
+	PR fortran/45344
+	Backport from mainline
+	2010-05-14  Jakub Jelinek  <jakub@redhat.com>
+
+	* trans.c (trans_code): Set backend locus early.
+	* trans-decl.c (gfc_get_fake_result_decl): Use source location
+	of the function instead of current input_location.
+
+2010-08-17  Jakub Jelinek  <jakub@redhat.com>
+
+	PR fortran/45186
+	* trans.c (gfc_annotate_with_location): New function.
+	(trans_code): Use it.
+
+2010-08-09  Janus Weil  <janus@gcc.gnu.org>
+
+	* intrinsic.texi: Correct documentation of ASINH, ACOSH and ATANH.
+
+2010-08-07  Daniel Franke  <franke.daniel@gmail.com>
+
+	2010-06-13  Daniel Franke  <franke.daniel@gmail.com>
+
+	PR fortran/31588
+	PR fortran/43954
+	Backport from mainline:
+	* gfortranspec.c (lang_specific_driver): Removed deprecation
+	warning for -M.
+	* lang.opt: Add options -M, -MM, -MD, -MMD, -MF, -MG, -MP, -MT, -MQ.
+	* lang-specs.h (CPP_FORWARD_OPTIONS): Add -M* options.
+	* cpp.h (gfc_cpp_makedep): New.
+	(gfc_cpp_add_dep): New.
+	(gfc_cpp_add_target): New.
+	* cpp.c (gfc_cpp_option): Add deps* members.
+	(gfc_cpp_makedep): New.
+	(gfc_cpp_add_dep): New.
+	(gfc_cpp_add_target): New.
+	(gfc_cpp_init_options): Initialize new options.
+	(gfc_cpp_handle_option): Handle new options.
+	(gfc_cpp_post_options): Map new options to libcpp-options.
+	(gfc_cpp_init): Handle deferred -MQ and -MT options.
+	(gfc_cpp_done): If requested, write dependencies to file.
+	* module.c (gfc_dump_module): Add a module filename as target.
+	* scanner.c (open_included_file): New parameter system; add the
+	included file as dependency.
+	(gfc_open_included_file): Add the included file as dependency.
+	(gfc_open_intrinsic_module): Likewise.
+	* invoke.texi: Removed deprecation warning for -M.
+	* gfortran.texi: Removed Makefile-dependencies project.
+
+2010-08-05  Mikael Morin  <mikael@gcc.gnu.org>
+
+	PR fortran/44660
+	* gfortran.h (gfc_namespace): New field old_equiv.
+	(gfc_free_equiv_until): New prototype.
+	* match.c (gfc_free_equiv_until): New, renamed from gfc_free_equiv with
+	a parameterized stop condition.
+	(gfc_free_equiv): Use gfc_free_equiv_until.
+	* parse.c (next_statement): Save equivalence list.
+	(reject_statement): Restore equivalence list. 
+
+2010-08-05  Mikael Morin  <mikael@gcc.gnu.org>
+	    Janus Weil  <janus@gcc.gnu.org>
+
+	PR fortran/42051
+	PR fortran/44064
+	PR fortran/45151
+	* intrinsic.c (gfc_get_intrinsic_sub_symbol): Commit changed symbol. 
+	* symbol.c (gen_cptr_param, gen_fptr_param, gen_shape_param,
+	gfc_copy_formal_args, gfc_copy_formal_args_intr,
+	gfc_copy_formal_args_ppc, generate_isocbinding_symbol): Ditto.
+	(gfc_find_derived_vtab): Commit newly created symbols.
+	* parse.c (parse_derived_contains, parse_spec, parse_progunit): 
+	Call reject_statement in case of error. 
+	(match_deferred_characteritics): Call gfc_undo_symbols in case match
+	fails.
+
+2010-08-05  Janus Weil  <janus@gcc.gnu.org>
+	    Steven G. Kargl  <kargl@gcc.gnu.org>
+
+	PR fortran/44929
+	* match.c (match_type_spec): Try to parse derived types before
+	intrinsic types.
+
 2010-07-31  Release Manager
 
 	* GCC 4.5.1 released.
Index: gcc/fortran/invoke.texi
===================================================================
--- gcc/fortran/invoke.texi	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/fortran/invoke.texi	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -148,8 +148,7 @@
 
 @item Directory Options
 @xref{Directory Options,,Options for directory search}.
-@gccoptlist{-I@var{dir}  -J@var{dir}  -M@var{dir}  @gol
--fintrinsic-modules-path @var{dir}}
+@gccoptlist{-I@var{dir}  -J@var{dir} -fintrinsic-modules-path @var{dir}}
 
 @item Link Options
 @xref{Link Options,,Options for influencing the linking step}.
@@ -949,7 +948,6 @@
 @option{-I} option.
 
 @item -J@var{dir}
-@item -M@var{dir}
 @opindex @code{J}@var{dir}
 @opindex @code{M}@var{dir}
 @cindex paths, search
@@ -960,8 +958,6 @@
 
 The default is the current directory.
 
-@option{-M} is deprecated to avoid conflicts with existing GCC options.
-
 @item -fintrinsic-modules-path @var{dir}
 @opindex @code{fintrinsic-modules-path} @var{dir}
 @cindex paths, search
Index: gcc/fortran/module.c
===================================================================
--- gcc/fortran/module.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/fortran/module.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -73,6 +73,7 @@
 #include "match.h"
 #include "parse.h" /* FIXME */
 #include "md5.h"
+#include "cpp.h"
 
 #define MODULE_EXTENSION ".mod"
 
@@ -5100,6 +5101,9 @@
       return;
     }
 
+  if (gfc_cpp_makedep ())
+    gfc_cpp_add_target (filename);
+
   /* Write the module to the temporary file.  */
   module_fp = fopen (filename_tmp, "w");
   if (module_fp == NULL)
Index: gcc/fortran/trans.c
===================================================================
--- gcc/fortran/trans.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/fortran/trans.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1041,7 +1041,30 @@
   input_location = loc->lb->location;
 }
 
+/* Annotate statement or statement list T with location LOC.  */
 
+static void
+gfc_annotate_with_location (tree t, location_t loc)
+{
+  if (TREE_CODE (t) == STATEMENT_LIST)
+    {
+      tree_stmt_iterator i;
+
+      for (i = tsi_start (t); !tsi_end_p (i); tsi_next (&i))
+	gfc_annotate_with_location (tsi_stmt (i), loc);
+      return;
+    }
+  if (TREE_CODE (t) == COMPOUND_EXPR)
+    {
+      gfc_annotate_with_location (TREE_OPERAND (t, 0), loc);
+      gfc_annotate_with_location (TREE_OPERAND (t, 1), loc);
+    }
+  if (TREE_CODE (t) == LABEL_EXPR || !TREE_SIDE_EFFECTS (t))
+    return;
+  if (CAN_HAVE_LOCATION_P (t) && ! EXPR_HAS_LOCATION (t))
+    SET_EXPR_LOCATION (t, loc);
+}
+
 /* Translate an executable statement. The tree cond is used by gfc_trans_do.
    This static function is wrapped by gfc_trans_code_cond and
    gfc_trans_code.  */
@@ -1067,6 +1090,8 @@
 	  gfc_add_expr_to_block (&block, res);
 	}
 
+      gfc_set_backend_locus (&code->loc);
+
       switch (code->op)
 	{
 	case EXEC_NOP:
@@ -1281,9 +1306,8 @@
 
       if (res != NULL_TREE && ! IS_EMPTY_STMT (res))
 	{
-	  if (TREE_CODE (res) != STATEMENT_LIST)
-	    SET_EXPR_LOCATION (res, input_location);
-	    
+	  gfc_annotate_with_location (res, input_location);
+
 	  /* Add the new statement to the block.  */
 	  gfc_add_expr_to_block (&block, res);
 	}
Index: gcc/fortran/scanner.c
===================================================================
--- gcc/fortran/scanner.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/fortran/scanner.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -390,7 +390,8 @@
 
 
 static FILE *
-open_included_file (const char *name, gfc_directorylist *list, bool module)
+open_included_file (const char *name, gfc_directorylist *list,
+		    bool module, bool system)
 {
   char *fullname;
   gfc_directorylist *p;
@@ -407,7 +408,12 @@
 
       f = gfc_open_file (fullname);
       if (f != NULL)
-	return f;
+	{
+	  if (gfc_cpp_makedep ())
+	    gfc_cpp_add_dep (fullname, system);
+
+	  return f;
+	}
     }
 
   return NULL;
@@ -421,28 +427,37 @@
 FILE *
 gfc_open_included_file (const char *name, bool include_cwd, bool module)
 {
-  FILE *f;
+  FILE *f = NULL;
 
-  if (IS_ABSOLUTE_PATH (name))
-    return gfc_open_file (name);
-
-  if (include_cwd)
+  if (IS_ABSOLUTE_PATH (name) || include_cwd)
     {
       f = gfc_open_file (name);
-      if (f != NULL)
-	return f;
+      if (f && gfc_cpp_makedep ())
+	gfc_cpp_add_dep (name, false);
     }
 
-  return open_included_file (name, include_dirs, module);
+  if (!f)
+    f = open_included_file (name, include_dirs, module, false);
+
+  return f;
 }
 
 FILE *
 gfc_open_intrinsic_module (const char *name)
 {
+  FILE *f = NULL;
+
   if (IS_ABSOLUTE_PATH (name))
-    return gfc_open_file (name);
+    {
+      f = gfc_open_file (name);
+      if (f && gfc_cpp_makedep ())
+	gfc_cpp_add_dep (name, true);
+    }
 
-  return open_included_file (name, intrinsic_modules_dirs, true);
+  if (!f)
+    f = open_included_file (name, intrinsic_modules_dirs, true, true);
+
+  return f;
 }
 
 
Index: gcc/fortran/gfortranspec.c
===================================================================
--- gcc/fortran/gfortranspec.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/fortran/gfortranspec.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -415,36 +415,6 @@
 	  continue;
 	}
 
-      if ((argv[i][0] == '-') && (argv[i][1] == 'M'))
-	{
-	  char *p;
-
-	  fprintf (stderr, _("Warning: Using -M <directory> is deprecated, "
-	           "use -J instead\n"));
-	  if (argv[i][2] == '\0')
-	    {
-	      if (i+1 < argc)
-		{
-		  p = XNEWVEC (char, strlen (argv[i + 1]) + 3);
-		  p[0] = '-';
-		  p[1] = 'J';
-		  strcpy (&p[2], argv[i + 1]);
-		  i++;
-		}
-	      else
-		fatal ("argument to '%s' missing", argv[i]);
-	    }
-	  else
-	    {
-	      p = XNEWVEC (char, strlen (argv[i]) + 1);
-	      p[0] = '-';
-	      p[1] = 'J';
-	      strcpy (&p[2], argv[i] + 2);
-	    }
-	  append_arg (p);
-	  continue;
-	}
-
       if ((argv[i][0] == '-') && (argv[i][1] != 'l'))
 	{
 	  /* Not a filename or library.  */
Index: gcc/fortran/lang-specs.h
===================================================================
--- gcc/fortran/lang-specs.h	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/fortran/lang-specs.h	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -28,7 +28,7 @@
 			     %{O*} %{undef}"
 
 /* Options that f951 should know about, even if not preprocessing.  */
-#define CPP_FORWARD_OPTIONS "%{i*} %{I*}"
+#define CPP_FORWARD_OPTIONS "%{i*} %{I*} %{M*}"
 
 #define F951_CPP_OPTIONS    "%{!nocpp: -cpp %g.f90 %{E} %(cpp_unique_options) \
 			     %{E|M|MM:%(cpp_debug_options) " CPP_ONLY_OPTIONS \
Index: gcc/fortran/resolve.c
===================================================================
--- gcc/fortran/resolve.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/fortran/resolve.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -208,11 +208,9 @@
 	  continue;
 	}
 
-      if (sym->ts.type == BT_UNKNOWN)
-	{
-	  if (!sym->attr.function || sym->result == sym)
-	    gfc_set_default_type (sym, 1, sym->ns);
-	}
+      if (sym->ts.type == BT_UNKNOWN && !proc->attr.intrinsic
+	  && (!sym->attr.function || sym->result == sym))
+	gfc_set_default_type (sym, 1, sym->ns);
 
       gfc_resolve_array_spec (sym->as, 0);
 
@@ -8854,6 +8852,7 @@
     return;
 
   build_init_assign (sym, init);
+  sym->attr.referenced = 1;
 }
 
 /* Build an initializer for a local integer, real, complex, logical, or
@@ -10852,6 +10851,46 @@
   gfc_namelist *nl;
   gfc_symbol *nlsym;
 
+  for (nl = sym->namelist; nl; nl = nl->next)
+    {
+      /* Reject namelist arrays of assumed shape.  */
+      if (nl->sym->as && nl->sym->as->type == AS_ASSUMED_SHAPE
+	  && gfc_notify_std (GFC_STD_F2003, "NAMELIST array object '%s' "
+			     "must not have assumed shape in namelist "
+			     "'%s' at %L", nl->sym->name, sym->name,
+			     &sym->declared_at) == FAILURE)
+	    return FAILURE;
+
+      /* Reject namelist arrays that are not constant shape.  */
+      if (is_non_constant_shape_array (nl->sym))
+	{
+	  gfc_error ("NAMELIST array object '%s' must have constant "
+		     "shape in namelist '%s' at %L", nl->sym->name,
+		     sym->name, &sym->declared_at);
+	  return FAILURE;
+	}
+
+      /* Namelist objects cannot have allocatable or pointer components.  */
+      if (nl->sym->ts.type != BT_DERIVED)
+	continue;
+
+      if (nl->sym->ts.u.derived->attr.alloc_comp)
+	{
+	  gfc_error ("NAMELIST object '%s' in namelist '%s' at %L cannot "
+		     "have ALLOCATABLE components",
+		     nl->sym->name, sym->name, &sym->declared_at);
+	  return FAILURE;
+	}
+
+      if (nl->sym->ts.u.derived->attr.pointer_comp)
+	{
+	  gfc_error ("NAMELIST object '%s' in namelist '%s' at %L cannot "
+		     "have POINTER components", 
+		     nl->sym->name, sym->name, &sym->declared_at);
+	  return FAILURE;
+	}
+    }
+
   /* Reject PRIVATE objects in a PUBLIC namelist.  */
   if (gfc_check_access(sym->attr.access, sym->ns->default_access))
     {
@@ -10893,47 +10932,7 @@
 	}
     }
 
-  for (nl = sym->namelist; nl; nl = nl->next)
-    {
-      /* Reject namelist arrays of assumed shape.  */
-      if (nl->sym->as && nl->sym->as->type == AS_ASSUMED_SHAPE
-	  && gfc_notify_std (GFC_STD_F2003, "NAMELIST array object '%s' "
-			     "must not have assumed shape in namelist "
-			     "'%s' at %L", nl->sym->name, sym->name,
-			     &sym->declared_at) == FAILURE)
-	    return FAILURE;
 
-      /* Reject namelist arrays that are not constant shape.  */
-      if (is_non_constant_shape_array (nl->sym))
-	{
-	  gfc_error ("NAMELIST array object '%s' must have constant "
-		     "shape in namelist '%s' at %L", nl->sym->name,
-		     sym->name, &sym->declared_at);
-	  return FAILURE;
-	}
-
-      /* Namelist objects cannot have allocatable or pointer components.  */
-      if (nl->sym->ts.type != BT_DERIVED)
-	continue;
-
-      if (nl->sym->ts.u.derived->attr.alloc_comp)
-	{
-	  gfc_error ("NAMELIST object '%s' in namelist '%s' at %L cannot "
-		     "have ALLOCATABLE components",
-		     nl->sym->name, sym->name, &sym->declared_at);
-	  return FAILURE;
-	}
-
-      if (nl->sym->ts.u.derived->attr.pointer_comp)
-	{
-	  gfc_error ("NAMELIST object '%s' in namelist '%s' at %L cannot "
-		     "have POINTER components", 
-		     nl->sym->name, sym->name, &sym->declared_at);
-	  return FAILURE;
-	}
-    }
-
-
   /* 14.1.2 A module or internal procedure represent local entities
      of the same type as a namelist member and so are not allowed.  */
   for (nl = sym->namelist; nl; nl = nl->next)
@@ -11445,7 +11444,6 @@
      described in 14.7.5, to those variables that have not already
      been assigned one.  */
   if (sym->ts.type == BT_DERIVED
-      && sym->attr.referenced
       && sym->ns == gfc_current_ns
       && !sym->value
       && !sym->attr.allocatable
@@ -11455,6 +11453,7 @@
 
       if ((!a->save && !a->dummy && !a->pointer
 	   && !a->in_common && !a->use_assoc
+	   && (a->referenced || a->result)
 	   && !(a->function && sym != sym->result))
 	  || (a->dummy && a->intent == INTENT_OUT && !a->pointer))
 	apply_default_init (sym);
Index: gcc/fortran/trans-decl.c
===================================================================
--- gcc/fortran/trans-decl.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/fortran/trans-decl.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -2252,11 +2252,11 @@
 	       IDENTIFIER_POINTER (DECL_NAME (this_function_decl)));
 
       if (!sym->attr.mixed_entry_master && sym->attr.function)
-	decl = build_decl (input_location,
+	decl = build_decl (DECL_SOURCE_LOCATION (this_function_decl),
 			   VAR_DECL, get_identifier (name),
 			   gfc_sym_type (sym));
       else
-	decl = build_decl (input_location,
+	decl = build_decl (DECL_SOURCE_LOCATION (this_function_decl),
 			   VAR_DECL, get_identifier (name),
 			   TREE_TYPE (TREE_TYPE (this_function_decl)));
       DECL_ARTIFICIAL (decl) = 1;
Index: gcc/fortran/match.c
===================================================================
--- gcc/fortran/match.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/fortran/match.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -2303,7 +2303,7 @@
    gfc_match_decl_type_spec() from decl.c, with the following exceptions:
    It only includes the intrinsic types from the Fortran 2003 standard
    (thus, neither BYTE nor forms like REAL*4 are allowed). Additionally,
-   the implicit_flag is not needed, so it was removed.  Derived types are
+   the implicit_flag is not needed, so it was removed. Derived types are
    identified by their name alone.  */
 
 static match
@@ -2313,8 +2313,30 @@
   locus old_locus;
 
   gfc_clear_ts (ts);
+  gfc_gobble_whitespace();
   old_locus = gfc_current_locus;
 
+  m = match_derived_type_spec (ts);
+  if (m == MATCH_YES)
+    {
+      old_locus = gfc_current_locus;
+      if (gfc_match (" :: ") != MATCH_YES)
+	return MATCH_ERROR;
+      gfc_current_locus = old_locus;
+      /* Enfore F03:C401.  */
+      if (ts->u.derived->attr.abstract)
+	{
+	  gfc_error ("Derived type '%s' at %L may not be ABSTRACT",
+		     ts->u.derived->name, &old_locus);
+	  return MATCH_ERROR;
+	}
+      return MATCH_YES;
+    }
+  else if (m == MATCH_ERROR && gfc_match (" :: ") == MATCH_YES)
+    return MATCH_ERROR;
+
+  gfc_current_locus = old_locus;
+
   if (gfc_match ("integer") == MATCH_YES)
     {
       ts->type = BT_INTEGER;
@@ -2356,25 +2378,6 @@
       goto kind_selector;
     }
 
-  m = match_derived_type_spec (ts);
-  if (m == MATCH_YES)
-    {
-      old_locus = gfc_current_locus;
-      if (gfc_match (" :: ") != MATCH_YES)
-	return MATCH_ERROR;
-      gfc_current_locus = old_locus;
-      /* Enfore F03:C401.  */
-      if (ts->u.derived->attr.abstract)
-	{
-	  gfc_error ("Derived type '%s' at %L may not be ABSTRACT",
-		     ts->u.derived->name, &old_locus);
-	  return MATCH_ERROR;
-	}
-      return MATCH_YES;
-    }
-  else if (m == MATCH_ERROR && gfc_match (" :: ") == MATCH_YES)
-    return MATCH_ERROR;
-
   /* If a type is not matched, simply return MATCH_NO.  */
   gfc_current_locus = old_locus;
   return MATCH_NO;
@@ -3580,18 +3583,25 @@
    do this.  */
 
 void
-gfc_free_equiv (gfc_equiv *eq)
+gfc_free_equiv_until (gfc_equiv *eq, gfc_equiv *stop)
 {
-  if (eq == NULL)
+  if (eq == stop)
     return;
 
   gfc_free_equiv (eq->eq);
-  gfc_free_equiv (eq->next);
+  gfc_free_equiv_until (eq->next, stop);
   gfc_free_expr (eq->expr);
   gfc_free (eq);
 }
 
 
+void
+gfc_free_equiv (gfc_equiv *eq)
+{
+  gfc_free_equiv_until (eq, NULL);
+}
+
+
 /* Match an EQUIVALENCE statement.  */
 
 match
Index: gcc/fortran/parse.c
===================================================================
--- gcc/fortran/parse.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/fortran/parse.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -876,6 +876,7 @@
   gfc_new_block = NULL;
 
   gfc_current_ns->old_cl_list = gfc_current_ns->cl_list;
+  gfc_current_ns->old_equiv = gfc_current_ns->equiv;
   for (;;)
     {
       gfc_statement_label = NULL;
@@ -1608,6 +1609,9 @@
   gfc_free_charlen (gfc_current_ns->cl_list, gfc_current_ns->old_cl_list);
   gfc_current_ns->cl_list = gfc_current_ns->old_cl_list;
 
+  gfc_free_equiv_until (gfc_current_ns->equiv, gfc_current_ns->old_equiv);
+  gfc_current_ns->equiv = gfc_current_ns->old_equiv;
+
   gfc_new_block = NULL;
   gfc_undo_symbols ();
   gfc_clear_warning ();
@@ -1841,13 +1845,12 @@
 
 	case ST_DATA_DECL:
 	  gfc_error ("Components in TYPE at %C must precede CONTAINS");
-	  error_flag = true;
-	  break;
+	  goto error;
 
 	case ST_PROCEDURE:
 	  if (gfc_notify_std (GFC_STD_F2003, "Fortran 2003:  Type-bound"
 					     " procedure at %C") == FAILURE)
-	    error_flag = true;
+	    goto error;
 
 	  accept_statement (ST_PROCEDURE);
 	  seen_comps = true;
@@ -1856,7 +1859,7 @@
 	case ST_GENERIC:
 	  if (gfc_notify_std (GFC_STD_F2003, "Fortran 2003:  GENERIC binding"
 					     " at %C") == FAILURE)
-	    error_flag = true;
+	    goto error;
 
 	  accept_statement (ST_GENERIC);
 	  seen_comps = true;
@@ -1866,7 +1869,7 @@
 	  if (gfc_notify_std (GFC_STD_F2003,
 			      "Fortran 2003:  FINAL procedure declaration"
 			      " at %C") == FAILURE)
-	    error_flag = true;
+	    goto error;
 
 	  accept_statement (ST_FINAL);
 	  seen_comps = true;
@@ -1879,7 +1882,7 @@
 	      && (gfc_notify_std (GFC_STD_F2008, "Fortran 2008: Derived type "
 				  "definition at %C with empty CONTAINS "
 				  "section") == FAILURE))
-	    error_flag = true;
+	    goto error;
 
 	  /* ST_END_TYPE is accepted by parse_derived after return.  */
 	  break;
@@ -1889,22 +1892,20 @@
 	    {
 	      gfc_error ("PRIVATE statement in TYPE at %C must be inside "
 			 "a MODULE");
-	      error_flag = true;
-	      break;
+	      goto error;
 	    }
 
 	  if (seen_comps)
 	    {
 	      gfc_error ("PRIVATE statement at %C must precede procedure"
 			 " bindings");
-	      error_flag = true;
-	      break;
+	      goto error;
 	    }
 
 	  if (seen_private)
 	    {
 	      gfc_error ("Duplicate PRIVATE statement at %C");
-	      error_flag = true;
+	      goto error;
 	    }
 
 	  accept_statement (ST_PRIVATE);
@@ -1914,18 +1915,22 @@
 
 	case ST_SEQUENCE:
 	  gfc_error ("SEQUENCE statement at %C must precede CONTAINS");
-	  error_flag = true;
-	  break;
+	  goto error;
 
 	case ST_CONTAINS:
 	  gfc_error ("Already inside a CONTAINS block at %C");
-	  error_flag = true;
-	  break;
+	  goto error;
 
 	default:
 	  unexpected_statement (st);
 	  break;
 	}
+
+      continue;
+
+error:
+      error_flag = true;
+      reject_statement ();
     }
 
   pop_state ();
@@ -2361,7 +2366,10 @@
       gfc_commit_symbols ();
     }
   else
-    gfc_error_check ();
+    {
+      gfc_error_check ();
+      gfc_undo_symbols ();
+    }
 
   gfc_current_locus =loc;
   return m;
@@ -2433,6 +2441,7 @@
 	case ST_STATEMENT_FUNCTION:
 	  gfc_error ("%s statement is not allowed inside of BLOCK at %C",
 		     gfc_ascii_statement (st));
+	  reject_statement ();
 	  break;
 
 	default:
@@ -2519,6 +2528,7 @@
 	    {
 	      gfc_error ("%s statement must appear in a MODULE",
 			 gfc_ascii_statement (st));
+	      reject_statement ();
 	      break;
 	    }
 
@@ -2526,6 +2536,7 @@
 	    {
 	      gfc_error ("%s statement at %C follows another accessibility "
 			 "specification", gfc_ascii_statement (st));
+	      reject_statement ();
 	      break;
 	    }
 
@@ -3822,6 +3833,7 @@
     {
       gfc_error ("CONTAINS statement at %C is already in a contained "
 		 "program unit");
+      reject_statement ();
       st = next_statement ();
       goto loop;
     }
Index: gcc/fortran/dependency.c
===================================================================
--- gcc/fortran/dependency.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/fortran/dependency.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -805,6 +805,19 @@
 
 	      return 1;
 	    }
+	  else
+	    {
+	      gfc_symbol *sym1 = expr1->symtree->n.sym;
+	      gfc_symbol *sym2 = expr2->symtree->n.sym;
+	      if (sym1->attr.target && sym2->attr.target
+		  && ((sym1->attr.dummy
+		       && (!sym1->attr.dimension
+		           || sym2->as->type == AS_ASSUMED_SHAPE))
+		      || (sym2->attr.dummy
+			  && (!sym2->attr.dimension
+			      || sym2->as->type == AS_ASSUMED_SHAPE))))
+		return 1;
+	    }
 
 	  /* Otherwise distinct symbols have no dependencies.  */
 	  return 0;
Index: gcc/fortran/intrinsic.texi
===================================================================
--- gcc/fortran/intrinsic.texi	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/fortran/intrinsic.texi	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -44,7 +44,7 @@
 * @code{ACCESS}:        ACCESS,    Checks file access modes
 * @code{ACHAR}:         ACHAR,     Character in @acronym{ASCII} collating sequence
 * @code{ACOS}:          ACOS,      Arccosine function
-* @code{ACOSH}:         ACOSH,     Hyperbolic arccosine function
+* @code{ACOSH}:         ACOSH,     Inverse hyperbolic cosine function
 * @code{ADJUSTL}:       ADJUSTL,   Left adjust a string
 * @code{ADJUSTR}:       ADJUSTR,   Right adjust a string
 * @code{AIMAG}:         AIMAG,     Imaginary part of complex number
@@ -56,11 +56,11 @@
 * @code{ANINT}:         ANINT,     Nearest whole number
 * @code{ANY}:           ANY,       Determine if any values are true
 * @code{ASIN}:          ASIN,      Arcsine function
-* @code{ASINH}:         ASINH,     Hyperbolic arcsine function
+* @code{ASINH}:         ASINH,     Inverse hyperbolic sine function
 * @code{ASSOCIATED}:    ASSOCIATED, Status of a pointer or pointer/target pair
 * @code{ATAN}:          ATAN,      Arctangent function
 * @code{ATAN2}:         ATAN2,     Arctangent function
-* @code{ATANH}:         ATANH,     Hyperbolic arctangent function
+* @code{ATANH}:         ATANH,     Inverse hyperbolic tangent function
 * @code{BESSEL_J0}:     BESSEL_J0, Bessel function of the first kind of order 0
 * @code{BESSEL_J1}:     BESSEL_J1, Bessel function of the first kind of order 1
 * @code{BESSEL_JN}:     BESSEL_JN, Bessel function of the first kind
@@ -572,18 +572,17 @@
 
 
 @node ACOSH
-@section @code{ACOSH} --- Hyperbolic arccosine function
+@section @code{ACOSH} --- Inverse hyperbolic cosine function
 @fnindex ACOSH
 @fnindex DACOSH
 @cindex area hyperbolic cosine
-@cindex hyperbolic arccosine
+@cindex inverse hyperbolic cosine
 @cindex hyperbolic function, cosine, inverse
 @cindex cosine, hyperbolic, inverse
 
 @table @asis
 @item @emph{Description}:
-@code{ACOSH(X)} computes the hyperbolic arccosine of @var{X} (inverse of
-@code{COSH(X)}).
+@code{ACOSH(X)} computes the inverse hyperbolic cosine of @var{X}.
 
 @item @emph{Standard}:
 Fortran 2008 and later
@@ -1213,17 +1212,17 @@
 
 
 @node ASINH
-@section @code{ASINH} --- Hyperbolic arcsine function
+@section @code{ASINH} --- Inverse hyperbolic sine function
 @fnindex ASINH
 @fnindex DASINH
 @cindex area hyperbolic sine
-@cindex hyperbolic arcsine
+@cindex inverse hyperbolic sine
 @cindex hyperbolic function, sine, inverse
 @cindex sine, hyperbolic, inverse
 
 @table @asis
 @item @emph{Description}:
-@code{ASINH(X)} computes the hyperbolic arcsine of @var{X} (inverse of @code{SINH(X)}).
+@code{ASINH(X)} computes the inverse hyperbolic sine of @var{X}.
 
 @item @emph{Standard}:
 Fortran 2008 and later
@@ -1455,18 +1454,17 @@
 
 
 @node ATANH
-@section @code{ATANH} --- Hyperbolic arctangent function
-@fnindex ASINH
-@fnindex DASINH
+@section @code{ATANH} --- Inverse hyperbolic tangent function
+@fnindex ATANH
+@fnindex DATANH
 @cindex area hyperbolic tangent
-@cindex hyperbolic arctangent
+@cindex inverse hyperbolic tangent
 @cindex hyperbolic function, tangent, inverse
 @cindex tangent, hyperbolic, inverse
 
 @table @asis
 @item @emph{Description}:
-@code{ATANH(X)} computes the hyperbolic arctangent of @var{X} (inverse
-of @code{TANH(X)}).
+@code{ATANH(X)} computes the inverse hyperbolic tangent of @var{X}.
 
 @item @emph{Standard}:
 Fortran 2008 and later
Index: gcc/fortran/simplify.c
===================================================================
--- gcc/fortran/simplify.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/fortran/simplify.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -228,7 +228,8 @@
     return false;
 
   for (c = e->value.constructor; c; c = c->next)
-    if (c->expr->expr_type != EXPR_CONSTANT)
+    if (c->expr->expr_type != EXPR_CONSTANT
+	  && c->expr->expr_type != EXPR_STRUCTURE)
       return false;
 
   return true;
@@ -4023,6 +4024,8 @@
 
   if (array->ts.type == BT_CHARACTER)
     result->ts.u.cl = array->ts.u.cl;
+  else if (array->ts.type == BT_DERIVED)
+    result->ts.u.derived = array->ts.u.derived;
 
   return result;
 }
@@ -4472,6 +4475,11 @@
   e->ts = source->ts;
   e->rank = rank;
 
+  if (source->ts.type == BT_CHARACTER)
+    e->ts.u.cl = source->ts.u.cl;
+  else if (source->ts.type == BT_DERIVED)
+    e->ts.u.derived = source->ts.u.derived;
+
   return e;
 }
 
@@ -5158,6 +5166,8 @@
 
   if (source->ts.type == BT_CHARACTER)
     result->ts.u.cl = source->ts.u.cl;
+  else if (source->ts.type == BT_DERIVED)
+    result->ts.u.derived = source->ts.u.derived;
 
   return result;
 }
@@ -5420,6 +5430,8 @@
 
   if (matrix->ts.type == BT_CHARACTER)
     result->ts.u.cl = matrix->ts.u.cl;
+  else if (matrix->ts.type == BT_DERIVED)
+    result->ts.u.derived = matrix->ts.u.derived;
 
   matrix_rows = mpz_get_si (matrix->shape[0]);
   matrix_ctor = matrix->value.constructor;
@@ -5503,6 +5515,8 @@
 
   if (vector->ts.type == BT_CHARACTER)
     result->ts.u.cl = vector->ts.u.cl;
+  else if (vector->ts.type == BT_DERIVED)
+    result->ts.u.derived = vector->ts.u.derived;
 
   vector_ctor = vector->value.constructor;
   mask_ctor = mask->value.constructor;
Index: gcc/ira-lives.c
===================================================================
--- gcc/ira-lives.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/ira-lives.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -820,7 +820,7 @@
 static void
 process_single_reg_class_operands (bool in_p, int freq)
 {
-  int i, regno, cost;
+  int i, regno;
   unsigned int px;
   enum reg_class cl;
   rtx operand;
@@ -847,32 +847,46 @@
       if (REG_P (operand)
 	  && (regno = REGNO (operand)) >= FIRST_PSEUDO_REGISTER)
 	{
-	  enum machine_mode mode;
 	  enum reg_class cover_class;
 
 	  operand_a = ira_curr_regno_allocno_map[regno];
-	  mode = ALLOCNO_MODE (operand_a);
 	  cover_class = ALLOCNO_COVER_CLASS (operand_a);
 	  if (ira_class_subset_p[cl][cover_class]
-	      && ira_class_hard_regs_num[cl] != 0
-	      && (ira_class_hard_reg_index[cover_class]
-		  [ira_class_hard_regs[cl][0]]) >= 0
-	      && reg_class_size[cl] <= (unsigned) CLASS_MAX_NREGS (cl, mode))
+	      && ira_class_hard_regs_num[cl] != 0)
 	    {
-	      int i, size;
-	      cost
-		= (freq
-		   * (in_p
-		      ? ira_get_register_move_cost (mode, cover_class, cl)
-		      : ira_get_register_move_cost (mode, cl, cover_class)));
-	      ira_allocate_and_set_costs
-		(&ALLOCNO_CONFLICT_HARD_REG_COSTS (operand_a), cover_class, 0);
-	      size = ira_reg_class_nregs[cover_class][mode];
-	      for (i = 0; i < size; i++)
-	        ALLOCNO_CONFLICT_HARD_REG_COSTS (operand_a)
-		  [ira_class_hard_reg_index
-		   [cover_class][ira_class_hard_regs[cl][i]]]
-		  -= cost;
+	      /* View the desired allocation of OPERAND as:
+
+		    (REG:YMODE YREGNO),
+
+		 a simplification of:
+
+		    (subreg:YMODE (reg:XMODE XREGNO) OFFSET).  */
+	      enum machine_mode ymode, xmode;
+	      int xregno, yregno;
+	      HOST_WIDE_INT offset;
+
+	      xmode = recog_data.operand_mode[i];
+	      xregno = ira_class_hard_regs[cl][0];
+	      ymode = ALLOCNO_MODE (operand_a);
+	      offset = subreg_lowpart_offset (ymode, xmode);
+	      yregno = simplify_subreg_regno (xregno, xmode, offset, ymode);
+	      if (yregno >= 0
+		  && ira_class_hard_reg_index[cover_class][yregno] >= 0)
+		{
+		  int cost;
+
+		  ira_allocate_and_set_costs
+		    (&ALLOCNO_CONFLICT_HARD_REG_COSTS (operand_a),
+		     cover_class, 0);
+		  cost
+		    = (freq
+		       * (in_p
+			  ? ira_get_register_move_cost (xmode, cover_class, cl)
+			  : ira_get_register_move_cost (xmode, cl,
+							cover_class)));
+		  ALLOCNO_CONFLICT_HARD_REG_COSTS (operand_a)
+		    [ira_class_hard_reg_index[cover_class][yregno]] -= cost;
+		}
 	    }
 	}
 
Index: gcc/c-pretty-print.c
===================================================================
--- gcc/c-pretty-print.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/c-pretty-print.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -2144,6 +2144,10 @@
       pp_string (pp, "({...})");
       break;
 
+    case C_MAYBE_CONST_EXPR:
+      pp_c_expression (pp, C_MAYBE_CONST_EXPR_EXPR (e));
+      break;
+
     default:
       pp_unsupported_tree (pp, e);
       break;
Index: gcc/configure.ac
===================================================================
--- gcc/configure.ac	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/configure.ac	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -4542,24 +4542,52 @@
 enable_plugin=yes; default_plugin=yes)
 
 pluginlibs=
+
+case "${host}" in
+  *-*-darwin*)
+    if test x$build = x$host; then
+      export_sym_check="nm${exeext} -g"
+    elif test x$host = x$target; then
+      export_sym_check="$gcc_cv_nm -g"
+    else
+      export_sym_check=
+    fi
+  ;;
+  *)
+    if test x$build = x$host; then
+      export_sym_check="objdump${exeext} -T"
+    elif test x$host = x$target; then
+      export_sym_check="$gcc_cv_objdump -T"
+    else
+      export_sym_check=
+    fi
+  ;;
+esac
+
 if test x"$enable_plugin" = x"yes"; then
 
   AC_MSG_CHECKING([for exported symbols])
-  echo "int main() {return 0;} int foobar() {return 0;}" > conftest.c
-  ${CC} ${CFLAGS} ${LDFLAGS} conftest.c -o conftest > /dev/null 2>&1
-  if $gcc_cv_objdump -T conftest | grep foobar > /dev/null; then
-    : # No need to use a flag
-  else
-    AC_MSG_CHECKING([for -rdynamic])
-    ${CC} ${CFLAGS} ${LDFLAGS} -rdynamic conftest.c -o conftest > /dev/null 2>&1
-    if $gcc_cv_objdump -T conftest | grep foobar > /dev/null; then
-      plugin_rdynamic=yes
-      pluginlibs="-rdynamic"
+  if test "x$export_sym_check" != x; then
+    echo "int main() {return 0;} int foobar() {return 0;}" > conftest.c
+    ${CC} ${CFLAGS} ${LDFLAGS} conftest.c -o conftest > /dev/null 2>&1
+    if $export_sym_check conftest | grep foobar > /dev/null; then
+      : # No need to use a flag
+      AC_MSG_RESULT([yes])
     else
-      plugin_rdynamic=no
-      enable_plugin=no
+      AC_MSG_RESULT([yes])
+      AC_MSG_CHECKING([for -rdynamic])
+      ${CC} ${CFLAGS} ${LDFLAGS} -rdynamic conftest.c -o conftest > /dev/null 2>&1
+      if $export_sym_check conftest | grep foobar > /dev/null; then
+        plugin_rdynamic=yes
+        pluginlibs="-rdynamic"
+      else
+        plugin_rdynamic=no
+        enable_plugin=no
+      fi
+      AC_MSG_RESULT([$plugin_rdynamic])
     fi
-    AC_MSG_RESULT([$plugin_rdynamic])
+  else
+    AC_MSG_RESULT([unable to check])
   fi
 
   # Check -ldl
@@ -4572,7 +4600,14 @@
 
   # Check that we can build shared objects with -fPIC -shared
   saved_LDFLAGS="$LDFLAGS"
-  LDFLAGS="$LDFLAGS -fPIC -shared"
+  case "${host}" in
+    *-*-darwin*)
+      LDFLAGS="$LDFLAGS -fPIC -shared -undefined dynamic_lookup"
+    ;;
+    *)
+      LDFLAGS="$LDFLAGS -fPIC -shared"
+    ;;
+  esac
   AC_MSG_CHECKING([for -fPIC -shared])
   AC_TRY_LINK(
     [extern int X;],[return X == 0;],
Index: gcc/BASE-VER
===================================================================
--- gcc/BASE-VER	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/BASE-VER	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1 +1 @@
-4.5.1
+4.5.2
Index: gcc/function.c
===================================================================
--- gcc/function.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/function.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -3423,12 +3423,10 @@
 		  DECL_IGNORED_P (local) = 0;
 		  /* If PARM was addressable, move that flag over
 		     to the local copy, as its address will be taken,
-		     not the PARMs.  */
+		     not the PARMs.  Keep the parms address taken
+		     as we'll query that flag during gimplification.  */
 		  if (TREE_ADDRESSABLE (parm))
-		    {
-		      TREE_ADDRESSABLE (parm) = 0;
-		      TREE_ADDRESSABLE (local) = 1;
-		    }
+		    TREE_ADDRESSABLE (local) = 1;
 		}
 	      else
 		{
Index: gcc/c-typeck.c
===================================================================
--- gcc/c-typeck.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/c-typeck.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -9091,6 +9091,10 @@
      precision.  */
   bool may_need_excess_precision;
 
+  /* True means this is a boolean operation that converts both its
+     operands to truth-values.  */
+  bool boolean_op = false;
+
   if (location == UNKNOWN_LOCATION)
     location = input_location;
 
@@ -9318,6 +9322,7 @@
 	  op0 = c_common_truthvalue_conversion (location, op0);
 	  op1 = c_common_truthvalue_conversion (location, op1);
 	  converted = 1;
+	  boolean_op = true;
 	}
       if (code == TRUTH_ANDIF_EXPR)
 	{
@@ -9828,7 +9833,8 @@
   if (build_type == NULL_TREE)
     {
       build_type = result_type;
-      if (type0 != orig_type0 || type1 != orig_type1)
+      if ((type0 != orig_type0 || type1 != orig_type1)
+	  && !boolean_op)
 	{
 	  gcc_assert (may_need_excess_precision && common);
 	  semantic_result_type = c_common_type (orig_type0, orig_type1);
Index: gcc/gimplify.c
===================================================================
--- gcc/gimplify.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/gimplify.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -3776,11 +3776,12 @@
 	      }
 	  }
 
-	/* If the target is volatile and we have non-zero elements
-	   initialize the target from a temporary.  */
+	/* If the target is volatile, we have non-zero elements and more than
+	   one field to assign, initialize the target from a temporary.  */
 	if (TREE_THIS_VOLATILE (object)
 	    && !TREE_ADDRESSABLE (type)
-	    && num_nonzero_elements > 0)
+	    && num_nonzero_elements > 0
+	    && VEC_length (constructor_elt, elts) > 1)
 	  {
 	    tree temp = create_tmp_var (TYPE_MAIN_VARIANT (type), NULL);
 	    TREE_OPERAND (*expr_p, 0) = temp;
@@ -4147,9 +4148,13 @@
 	     This kind of code arises in C++ when an object is bound
 	     to a const reference, and if "x" is a TARGET_EXPR we want
 	     to take advantage of the optimization below.  */
+	    bool volatile_p = TREE_THIS_VOLATILE (*from_p);
 	    tree t = gimple_fold_indirect_ref_rhs (TREE_OPERAND (*from_p, 0));
-	    if (t)
+	    if (t
+		&& (TREE_THIS_VOLATILE (t) == volatile_p
+		    || REFERENCE_CLASS_P (t)))
 	      {
+		TREE_THIS_VOLATILE (t) = volatile_p;
 		*from_p = t;
 		ret = GS_OK;
 		changed = true;
@@ -6336,8 +6341,12 @@
 	{
 	case TRUTH_ANDIF_EXPR:
 	case TRUTH_ORIF_EXPR:
+	case TRUTH_AND_EXPR:
+	case TRUTH_OR_EXPR:
+	case TRUTH_XOR_EXPR:
 	  saw_lhs |= goa_stabilize_expr (&TREE_OPERAND (expr, 1), pre_p,
 					 lhs_addr, lhs_var);
+	case TRUTH_NOT_EXPR:
 	  saw_lhs |= goa_stabilize_expr (&TREE_OPERAND (expr, 0), pre_p,
 					 lhs_addr, lhs_var);
 	  break;
Index: gcc/expmed.c
===================================================================
--- gcc/expmed.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/expmed.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -3006,9 +3006,11 @@
       switch (alg->op[opno])
 	{
 	case alg_shift:
-	  accum = expand_shift (LSHIFT_EXPR, mode, accum,
-				build_int_cst (NULL_TREE, log),
-				NULL_RTX, 0);
+	  tem = expand_shift (LSHIFT_EXPR, mode, accum,
+			      build_int_cst (NULL_TREE, log),
+			      NULL_RTX, 0);
+	  /* REG_EQUAL note will be attached to the following insn.  */
+	  emit_move_insn (accum, tem);
 	  val_so_far <<= log;
 	  break;
 
Index: gcc/emit-rtl.c
===================================================================
--- gcc/emit-rtl.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/emit-rtl.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -3162,6 +3162,38 @@
   return insn;
 }
 
+/* Return the next insn after INSN that is not a NOTE nor DEBUG_INSN.
+   This routine does not look inside SEQUENCEs.  */
+
+rtx
+next_nonnote_nondebug_insn (rtx insn)
+{
+  while (insn)
+    {
+      insn = NEXT_INSN (insn);
+      if (insn == 0 || (!NOTE_P (insn) && !DEBUG_INSN_P (insn)))
+	break;
+    }
+
+  return insn;
+}
+
+/* Return the previous insn before INSN that is not a NOTE nor DEBUG_INSN.
+   This routine does not look inside SEQUENCEs.  */
+
+rtx
+prev_nonnote_nondebug_insn (rtx insn)
+{
+  while (insn)
+    {
+      insn = PREV_INSN (insn);
+      if (insn == 0 || (!NOTE_P (insn) && !DEBUG_INSN_P (insn)))
+	break;
+    }
+
+  return insn;
+}
+
 /* Return the next INSN, CALL_INSN or JUMP_INSN after INSN;
    or 0, if there is none.  This routine does not look inside
    SEQUENCEs.  */
Index: gcc/cfgexpand.c
===================================================================
--- gcc/cfgexpand.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/cfgexpand.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -705,7 +705,7 @@
 expand_one_stack_var_at (tree decl, HOST_WIDE_INT offset)
 {
   /* Alignment is unsigned.   */
-  unsigned HOST_WIDE_INT align;
+  unsigned HOST_WIDE_INT align, max_align;
   rtx x;
 
   /* If this fails, we've overflowed the stack frame.  Error nicely?  */
@@ -722,10 +722,9 @@
       offset -= frame_phase;
       align = offset & -offset;
       align *= BITS_PER_UNIT;
-      if (align == 0)
-	align = STACK_BOUNDARY;
-      else if (align > MAX_SUPPORTED_STACK_ALIGNMENT)
-	align = MAX_SUPPORTED_STACK_ALIGNMENT;
+      max_align = crtl->max_used_stack_slot_alignment;
+      if (align == 0 || align > max_align)
+	align = max_align;
 
       DECL_ALIGN (decl) = align;
       DECL_USER_ALIGN (decl) = 0;
Index: gcc/tree-ssa-live.c
===================================================================
--- gcc/tree-ssa-live.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/tree-ssa-live.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -381,6 +381,14 @@
 	}
       set_is_used (t);
     }
+  /* remove_unused_scope_block_p requires information about labels
+     which are not DECL_IGNORED_P to tell if they might be used in the IL.  */
+  if (TREE_CODE (t) == LABEL_DECL)
+    /* Although the TREE_USED values that the frontend uses would be
+       acceptable (albeit slightly over-conservative) for our purposes,
+       init_vars_expansion clears TREE_USED for LABEL_DECLs too, so we
+       must re-compute it here.  */
+    TREE_USED (t) = 1;
 
   if (IS_TYPE_OR_DECL_P (t))
     *walk_subtrees = 0;
@@ -460,6 +468,19 @@
       else if ((ann = var_ann (*t)) != NULL
 		&& ann->used)
 	unused = false;
+      else if (TREE_CODE (*t) == LABEL_DECL && TREE_USED (*t))
+	/* For labels that are still used in the IL, the decision to
+	   preserve them must not depend DEBUG_INFO_LEVEL, otherwise we
+	   risk having different ordering in debug vs.  non-debug builds
+	   during inlining or versioning.
+	   A label appearing here (we have already checked DECL_IGNORED_P)
+	   should not be used in the IL unless it has been explicitly used
+	   before, so we use TREE_USED as an approximation.  */
+	/* In principle, we should do the same here as for the debug case
+	   below, however, when debugging, there might be additional nested
+	   levels that keep an upper level with a label live, so we have to
+	   force this block to be considered used, too.  */
+	unused = false;
 
       /* When we are not doing full debug info, we however can keep around
 	 only the used variables for cfgexpand's memory packing saving quite
Index: gcc/tree-sra.c
===================================================================
--- gcc/tree-sra.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/tree-sra.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -276,6 +276,9 @@
    arguments than formal parameters..  */
 static bool encountered_unchangable_recursive_call;
 
+/* Set by scan_function when it changes the control flow graph.  */
+static bool cfg_changed;
+
 /* This is a table in which for each basic block and parameter there is a
    distance (offset + size) in that parameter which is dereferenced and
    accessed in that BB.  */
@@ -570,6 +573,7 @@
   memset (&sra_stats, 0, sizeof (sra_stats));
   encountered_apply_args = false;
   encountered_unchangable_recursive_call = false;
+  cfg_changed = false;
 }
 
 /* Hook fed to pointer_map_traverse, deallocate stored vectors.  */
@@ -1114,8 +1118,6 @@
 
   FOR_EACH_BB (bb)
     {
-      bool bb_changed = false;
-
       if (handle_ssa_defs)
 	for (gsi = gsi_start_phis (bb); !gsi_end_p (gsi); gsi_next (&gsi))
 	  ret |= handle_ssa_defs (gsi_stmt (gsi), data);
@@ -1220,21 +1222,15 @@
 
 	      if (!analysis_stage)
 		{
-		  bb_changed = true;
 		  update_stmt (stmt);
-		  maybe_clean_eh_stmt (stmt);
+		  if (maybe_clean_eh_stmt (stmt)
+		      && gimple_purge_dead_eh_edges (bb))
+		    cfg_changed = true;
 		}
 	    }
-	  if (deleted)
-	    bb_changed = true;
-	  else
-	    {
-	      gsi_next (&gsi);
-	      ret = true;
-	    }
+	  if (!deleted)
+	    gsi_next (&gsi);
 	}
-      if (!analysis_stage && bb_changed && sra_mode == SRA_MODE_EARLY_IPA)
-	gimple_purge_dead_eh_edges (bb);
     }
 
   return ret;
@@ -2871,7 +2867,10 @@
   statistics_counter_event (cfun, "Separate LHS and RHS handling",
 			    sra_stats.separate_lhs_rhs_handling);
 
-  ret = TODO_update_ssa;
+  if (cfg_changed)
+    ret = TODO_update_ssa | TODO_cleanup_cfg;
+  else
+    ret = TODO_update_ssa;
 
  out:
   sra_deinitialize ();
@@ -4236,7 +4235,10 @@
 
   modify_function (node, adjustments);
   VEC_free (ipa_parm_adjustment_t, heap, adjustments);
-  ret = TODO_update_ssa;
+  if (cfg_changed)
+    ret = TODO_update_ssa | TODO_cleanup_cfg;
+  else
+    ret = TODO_update_ssa;
 
   statistics_counter_event (cfun, "Unused parameters deleted",
 			    sra_stats.deleted_unused_parameters);
Index: gcc/lto/lto-elf.c
===================================================================
--- gcc/lto/lto-elf.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/lto/lto-elf.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -38,7 +38,19 @@
 # define EM_SPARC32PLUS 18
 #endif
 
+#ifndef ELFOSABI_NONE
+# define ELFOSABI_NONE 0
+#endif
 
+#ifndef ELFOSABI_LINUX
+# define ELFOSABI_LINUX 3
+#endif
+
+#ifndef SHN_XINDEX
+# define SHN_XINDEX 0xffff
+#endif
+
+
 /* Handle opening elf files on hosts, such as Windows, that may use 
    text file handling that will break binary access.  */
 #ifndef O_BINARY
@@ -496,7 +508,6 @@
       error ("could not read ELF identification information: %s",
 	      elf_errmsg (0));
       return false;
-	     
     }
 
   if (!cached_file_attrs.initialized)
@@ -519,11 +530,32 @@
       memcpy (cached_file_attrs.elf_ident, elf_ident,
 	      sizeof cached_file_attrs.elf_ident);
     }
+  else
+    {
+      char elf_ident_buf[EI_NIDENT];
 
-  if (memcmp (elf_ident, cached_file_attrs.elf_ident,
-	      sizeof cached_file_attrs.elf_ident))
-    return false;
+      memcpy (elf_ident_buf, elf_ident, sizeof elf_ident_buf);
 
+      if (elf_ident_buf[EI_OSABI] != cached_file_attrs.elf_ident[EI_OSABI])
+	{
+	  /* Allow mixing ELFOSABI_NONE with ELFOSABI_LINUX, with the result
+	     ELFOSABI_LINUX.  */
+	  if (elf_ident_buf[EI_OSABI] == ELFOSABI_NONE
+	      && cached_file_attrs.elf_ident[EI_OSABI] == ELFOSABI_LINUX)
+	    elf_ident_buf[EI_OSABI] = cached_file_attrs.elf_ident[EI_OSABI];
+	  else if (elf_ident_buf[EI_OSABI] == ELFOSABI_LINUX
+		   && cached_file_attrs.elf_ident[EI_OSABI] == ELFOSABI_NONE)
+	    cached_file_attrs.elf_ident[EI_OSABI] = elf_ident_buf[EI_OSABI];
+	}
+
+      if (memcmp (elf_ident_buf, cached_file_attrs.elf_ident,
+		  sizeof cached_file_attrs.elf_ident))
+	{
+	  error ("incompatible ELF identification");
+	  return false;
+	}
+    }
+
   /* Check that the input file is a relocatable object file with the correct
      architecture.  */
   switch (cached_file_attrs.bits)
Index: gcc/lto/ChangeLog
===================================================================
--- gcc/lto/ChangeLog	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/lto/ChangeLog	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1,3 +1,21 @@
+2010-10-14  Eric Botcazou  <ebotcazou@adacore.com>
+
+	* lto-elf.c (SHN_XINDEX): Define if not already defined.
+
+2010-09-03  Richard Guenther  <rguenther@suse.de>
+
+	* lto-elf.c (validate_file): Always error if validation fails.
+
+2010-09-03  Richard Guenther  <rguenther@suse.de>
+
+	PR lto/45496
+	Backport from mainline
+	2010-07-07  Jakub Jelinek  <jakub@redhat.com>
+
+	* lto-elf.c (ELFOSABI_NONE, ELFOSABI_LINUX): Define if not defined.
+	(validate_file): Allow merging of ELFOSABI_NONE with ELFOSABI_LINUX
+	objects.
+
 2010-07-31  Release Manager
 
 	* GCC 4.5.1 released.
Index: gcc/ipa-prop.c
===================================================================
--- gcc/ipa-prop.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/ipa-prop.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1597,7 +1597,7 @@
        || (VEC_index (ipa_parm_adjustment_t, adjustments, 0)->copy_param
 	 && VEC_index (ipa_parm_adjustment_t, adjustments, 0)->base_index == 0))
     {
-      new_type = copy_node (orig_type);
+      new_type = build_distinct_type_copy (orig_type);
       TYPE_ARG_TYPES (new_type) = new_reversed;
     }
   else
Index: gcc/po/ChangeLog
===================================================================
--- gcc/po/ChangeLog	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/po/ChangeLog	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1,3 +1,11 @@
+2010-10-13  Joseph Myers  <joseph@codesourcery.com>
+
+	* vi.po: Update.
+
+2010-10-07  Joseph Myers  <joseph@codesourcery.com>
+
+	* vi.po: New.
+
 2010-07-31  Release Manager
 
 	* GCC 4.5.1 released.
Index: gcc/po/vi.po
===================================================================
--- gcc/po/vi.po	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ gcc/po/vi.po	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,38037 @@
+# Vietnamese translation for GCC.
+# Copyright © 2010 Free Software Foundation, Inc.
+# This file is distributed under the same license as the gcc package.
+# Clytie Siddall <clytie@riverland.net.au>, 2010.
+#
+msgid ""
+msgstr ""
+"Project-Id-Version: gcc 4.5.0\n"
+"Report-Msgid-Bugs-To: http://gcc.gnu.org/bugs.html\n"
+"POT-Creation-Date: 2010-04-06 14:11+0000\n"
+"PO-Revision-Date: 2010-10-13 22:15+1030\n"
+"Last-Translator: Clytie Siddall <clytie@riverland.net.au>\n"
+"Language-Team: Vietnamese <vi-VN@googlegroups.com>\n"
+"MIME-Version: 1.0\n"
+"Content-Type: text/plain; charset=UTF-8\n"
+"Content-Transfer-Encoding: 8bit\n"
+"Language: vi\n"
+"Plural-Forms: nplurals=1; plural=0;\n"
+"X-Generator: LocFactoryEditor 1.8\n"
+
+#: c-decl.c:4573 c-pretty-print.c:403 c-typeck.c:5590 toplev.c:1652
+#: cp/error.c:581 cp/error.c:854
+msgid "<anonymous>"
+msgstr "<nặc danh>"
+
+#: c-format.c:363 c-format.c:387 config/i386/msformat-c.c:50
+msgid "' ' flag"
+msgstr "cờ « »"
+
+#: c-format.c:363 c-format.c:387 config/i386/msformat-c.c:50
+msgid "the ' ' printf flag"
+msgstr "cờ printf « »"
+
+#: c-format.c:364 c-format.c:388 c-format.c:422 c-format.c:434 c-format.c:493
+#: config/i386/msformat-c.c:51
+msgid "'+' flag"
+msgstr "cờ « + »"
+
+#: c-format.c:364 c-format.c:388 c-format.c:422 c-format.c:434
+#: config/i386/msformat-c.c:51
+msgid "the '+' printf flag"
+msgstr "cờ printf « + »"
+
+#: c-format.c:365 c-format.c:389 c-format.c:435 c-format.c:469
+#: config/i386/msformat-c.c:52 config/i386/msformat-c.c:87
+msgid "'#' flag"
+msgstr "cờ « # »"
+
+#: c-format.c:365 c-format.c:389 c-format.c:435 config/i386/msformat-c.c:52
+msgid "the '#' printf flag"
+msgstr "cờ printf « # »"
+
+#: c-format.c:366 c-format.c:390 c-format.c:467 config/i386/msformat-c.c:53
+msgid "'0' flag"
+msgstr "cờ « 0 »"
+
+#: c-format.c:366 c-format.c:390 config/i386/msformat-c.c:53
+msgid "the '0' printf flag"
+msgstr "cờ printf « 0 »"
+
+#: c-format.c:367 c-format.c:391 c-format.c:466 c-format.c:496
+#: config/i386/msformat-c.c:54
+msgid "'-' flag"
+msgstr "cờ « - »"
+
+#: c-format.c:367 c-format.c:391 config/i386/msformat-c.c:54
+msgid "the '-' printf flag"
+msgstr "cờ printf « - »"
+
+#: c-format.c:368 c-format.c:449 config/i386/msformat-c.c:55
+#: config/i386/msformat-c.c:75
+msgid "''' flag"
+msgstr "cờ « ' »"
+
+#: c-format.c:368 config/i386/msformat-c.c:55
+msgid "the ''' printf flag"
+msgstr "cờ printf « ' »"
+
+#: c-format.c:369 c-format.c:450
+msgid "'I' flag"
+msgstr "cờ « I »"
+
+#: c-format.c:369
+msgid "the 'I' printf flag"
+msgstr "cờ printf « I »"
+
+#: c-format.c:370 c-format.c:392 c-format.c:447 c-format.c:470 c-format.c:497
+#: c-format.c:1621 config/sol2-c.c:45 config/i386/msformat-c.c:56
+#: config/i386/msformat-c.c:73
+msgid "field width"
+msgstr "bề rộng trường"
+
+#: c-format.c:370 c-format.c:392 config/sol2-c.c:45
+#: config/i386/msformat-c.c:56
+msgid "field width in printf format"
+msgstr "chiều rộng của trường theo định dạng printf"
+
+#: c-format.c:371 c-format.c:393 c-format.c:424 c-format.c:437
+#: config/i386/msformat-c.c:57
+msgid "precision"
+msgstr "độ chính xác"
+
+#: c-format.c:371 c-format.c:393 c-format.c:424 c-format.c:437
+#: config/i386/msformat-c.c:57
+msgid "precision in printf format"
+msgstr "độ chính xác theo định dạng printf"
+
+#: c-format.c:372 c-format.c:394 c-format.c:425 c-format.c:438 c-format.c:448
+#: c-format.c:500 config/sol2-c.c:46 config/i386/msformat-c.c:58
+#: config/i386/msformat-c.c:74
+msgid "length modifier"
+msgstr "đồ sửa đổi bề dài"
+
+#: c-format.c:372 c-format.c:394 c-format.c:425 c-format.c:438
+#: config/sol2-c.c:46 config/i386/msformat-c.c:58
+msgid "length modifier in printf format"
+msgstr "đồ sửa đổi chiều dài theo định dạng printf"
+
+#: c-format.c:423 c-format.c:436
+msgid "'q' flag"
+msgstr "cờ « q »"
+
+#: c-format.c:423 c-format.c:436
+msgid "the 'q' diagnostic flag"
+msgstr "cờ chẩn đoán « q »"
+
+#: c-format.c:444 config/i386/msformat-c.c:71
+msgid "assignment suppression"
+msgstr "thu hồi sự gán"
+
+#: c-format.c:444 config/i386/msformat-c.c:71
+msgid "the assignment suppression scanf feature"
+msgstr "tính năng scanf để thu hồi sự gán"
+
+#: c-format.c:445 config/i386/msformat-c.c:72
+msgid "'a' flag"
+msgstr "cờ « a »"
+
+#: c-format.c:445 config/i386/msformat-c.c:72
+msgid "the 'a' scanf flag"
+msgstr "cờ scanf « a »"
+
+#: c-format.c:446
+msgid "'m' flag"
+msgstr "cờ « m »"
+
+#: c-format.c:446
+msgid "the 'm' scanf flag"
+msgstr "cờ scanf « m »"
+
+#: c-format.c:447 config/i386/msformat-c.c:73
+msgid "field width in scanf format"
+msgstr "chiều rộng của trường theo định dạng scanf"
+
+#: c-format.c:448 config/i386/msformat-c.c:74
+msgid "length modifier in scanf format"
+msgstr "đồ sửa đổi chiều dài theo định dạng scanf"
+
+#: c-format.c:449 config/i386/msformat-c.c:75
+msgid "the ''' scanf flag"
+msgstr "cờ scanf « ' »"
+
+#: c-format.c:450
+msgid "the 'I' scanf flag"
+msgstr "cờ scanf « I »"
+
+#: c-format.c:465
+msgid "'_' flag"
+msgstr "cờ « _ »"
+
+#: c-format.c:465
+msgid "the '_' strftime flag"
+msgstr "cờ strftime « _ »"
+
+#: c-format.c:466
+msgid "the '-' strftime flag"
+msgstr "cờ strftime « - »"
+
+#: c-format.c:467
+msgid "the '0' strftime flag"
+msgstr "cờ strftime « 0 »"
+
+#: c-format.c:468 c-format.c:492
+msgid "'^' flag"
+msgstr "cờ « ^ »"
+
+#: c-format.c:468
+msgid "the '^' strftime flag"
+msgstr "cờ strftime « ^ »"
+
+#: c-format.c:469 config/i386/msformat-c.c:87
+msgid "the '#' strftime flag"
+msgstr "cờ strftime « # »"
+
+#: c-format.c:470
+msgid "field width in strftime format"
+msgstr "chiều rộng của trường theo định dạng stfrtime"
+
+#: c-format.c:471
+msgid "'E' modifier"
+msgstr "đồ sửa đổi « E »"
+
+#: c-format.c:471
+msgid "the 'E' strftime modifier"
+msgstr "đồ sửa đổi « E » của strftime"
+
+#: c-format.c:472
+msgid "'O' modifier"
+msgstr "đồ sửa đổi « O »"
+
+#: c-format.c:472
+msgid "the 'O' strftime modifier"
+msgstr "đồ sửa đổi « O » của strftime"
+
+#: c-format.c:473
+msgid "the 'O' modifier"
+msgstr "đồ sửa đổi « O »"
+
+#: c-format.c:491
+msgid "fill character"
+msgstr "ký tự điền vào"
+
+#: c-format.c:491
+msgid "fill character in strfmon format"
+msgstr "ký tự điền vào theo định dạng strftime"
+
+#: c-format.c:492
+msgid "the '^' strfmon flag"
+msgstr "cờ strfmon « ^ »"
+
+#: c-format.c:493
+msgid "the '+' strfmon flag"
+msgstr "cờ strfmon « + »"
+
+#: c-format.c:494
+msgid "'(' flag"
+msgstr "cờ « ( »"
+
+#: c-format.c:494
+msgid "the '(' strfmon flag"
+msgstr "cờ strfmon « ( »"
+
+#: c-format.c:495
+msgid "'!' flag"
+msgstr "cờ « ! »"
+
+#: c-format.c:495
+msgid "the '!' strfmon flag"
+msgstr "cờ strfmon « ! »"
+
+#: c-format.c:496
+msgid "the '-' strfmon flag"
+msgstr "cờ strfmon « - »"
+
+#: c-format.c:497
+msgid "field width in strfmon format"
+msgstr "chiều rộng của trường theo định dạng strfmon"
+
+#: c-format.c:498
+msgid "left precision"
+msgstr "đồ chính xác bên trái"
+
+#: c-format.c:498
+msgid "left precision in strfmon format"
+msgstr "đồ chính xác bên trái theo định dạng strfmon"
+
+#: c-format.c:499
+msgid "right precision"
+msgstr "đồ chính xác bên phải"
+
+#: c-format.c:499
+msgid "right precision in strfmon format"
+msgstr "đồ chính xác bên phải theo định dạng strfmon"
+
+#: c-format.c:500
+msgid "length modifier in strfmon format"
+msgstr "đồ sửa đổi chiều dài theo định dạng strfmon"
+
+#: c-format.c:1724
+msgid "field precision"
+msgstr "ồ chính xác trường"
+
+#: c-objc-common.c:164
+msgid "({anonymous})"
+msgstr "({nặc danh})"
+
+#: c-opts.c:1501 tree.c:3970 cp/error.c:999 fortran/cpp.c:552
+msgid "<built-in>"
+msgstr "<có sẵn>"
+
+#. Handle deferred options from command-line.
+#: c-opts.c:1519 fortran/cpp.c:557
+msgid "<command-line>"
+msgstr "<dòng lệnh>"
+
+#: c-parser.c:736
+msgid "expected end of line"
+msgstr "mong đợi kết thúc dòng"
+
+#: c-parser.c:1375 c-parser.c:3463 c-parser.c:3897 c-parser.c:4158
+#: c-parser.c:4228 c-parser.c:4239 c-parser.c:4389 c-parser.c:6264
+#: c-parser.c:6298 c-parser.c:6330 c-parser.c:6377 c-parser.c:6513
+#: c-parser.c:7899 c-parser.c:8043 c-parser.c:8081 c-parser.c:1944
+#, gcc-internal-format
+msgid "expected %<;%>"
+msgstr "mong đợi %<;%>"
+
+#: c-parser.c:1883 c-parser.c:2147 c-parser.c:2788 c-parser.c:2840
+#: c-parser.c:2845 c-parser.c:3941 c-parser.c:4074 c-parser.c:4189
+#: c-parser.c:4325 c-parser.c:4451 c-parser.c:5492 c-parser.c:5529
+#: c-parser.c:5615 c-parser.c:5653 c-parser.c:5692 c-parser.c:5707
+#: c-parser.c:5731 c-parser.c:6721 c-parser.c:6761 c-parser.c:7253
+#: c-parser.c:7274 c-parser.c:7324 c-parser.c:7434 c-parser.c:7507
+#: c-parser.c:7575 c-parser.c:8006 c-parser.c:7397
+#, gcc-internal-format
+msgid "expected %<(%>"
+msgstr "mong đợi %<(%>"
+
+#: c-parser.c:1898 c-parser.c:2182 c-parser.c:2389 c-parser.c:2550
+#: c-parser.c:2610 c-parser.c:2684 c-parser.c:2795 c-parser.c:2962
+#: c-parser.c:2973 c-parser.c:2982 c-parser.c:3944 c-parser.c:4078
+#: c-parser.c:4246 c-parser.c:4383 c-parser.c:4462 c-parser.c:5017
+#: c-parser.c:5203 c-parser.c:5262 c-parser.c:5438 c-parser.c:5455
+#: c-parser.c:5476 c-parser.c:5508 c-parser.c:5609 c-parser.c:5637
+#: c-parser.c:5677 c-parser.c:5700 c-parser.c:5723 c-parser.c:5744
+#: c-parser.c:5884 c-parser.c:6134 c-parser.c:6558 c-parser.c:6578
+#: c-parser.c:6729 c-parser.c:6765 c-parser.c:7256 c-parser.c:7277
+#: c-parser.c:7355 c-parser.c:7440 c-parser.c:7556 c-parser.c:7638
+#: c-parser.c:7935 c-parser.c:8051 c-parser.c:8092
+msgid "expected %<)%>"
+msgstr "mong đợi %<)%>"
+
+#: c-parser.c:2472 c-parser.c:3254 c-parser.c:3286 c-parser.c:4443
+#: c-parser.c:5601 c-parser.c:5764 c-parser.c:5871
+msgid "expected %<]%>"
+msgstr "mong đợi %<]%>"
+
+#: c-parser.c:2654
+msgid "expected %<;%>, %<,%> or %<)%>"
+msgstr "mong đợi %<;%>, %<,%> or %<)%>"
+
+#: c-parser.c:3124
+msgid "expected %<}%>"
+msgstr "mong đợi %<}%>"
+
+#: c-parser.c:3404 c-parser.c:6731 c-parser.c:8335 c-parser.c:1765
+#: c-parser.c:1960 c-parser.c:6441
+#, gcc-internal-format
+msgid "expected %<{%>"
+msgstr "mong đợi %<{%>"
+
+#: c-parser.c:3622 c-parser.c:3631 c-parser.c:4347 c-parser.c:4683
+#: c-parser.c:6571 c-parser.c:6871 c-parser.c:6928 c-parser.c:7545
+msgid "expected %<:%>"
+msgstr "mong đợi %<:%>"
+
+#: c-parser.c:4152
+msgid "expected %<while%>"
+msgstr "mong đợi %<while%>"
+
+#: c-parser.c:5499 c-parser.c:5540 c-parser.c:5622 c-parser.c:5629
+#: c-parser.c:5664
+msgid "expected %<,%>"
+msgstr "mong đợi %<,%>"
+
+#: c-parser.c:6144 c-parser.c:6176 c-parser.c:6390
+msgid "expected %<@end%>"
+msgstr "mong đợi %<@end%>"
+
+#: c-parser.c:6692
+msgid "expected %<>%>"
+msgstr "mong đợi %<>%>"
+
+#: c-parser.c:7642
+msgid "expected %<,%> or %<)%>"
+msgstr "mong đợi %<,%> hoặc %<)%>"
+
+#: c-parser.c:8033 c-parser.c:3309
+#, gcc-internal-format
+msgid "expected %<=%>"
+msgstr "mong đợi %<=%>"
+
+#: c-parser.c:8392 c-parser.c:8382
+#, gcc-internal-format
+msgid "expected %<#pragma omp section%> or %<}%>"
+msgstr "mong đợi %<#pragma omp section%> hoặc %<}%>"
+
+#: c-pretty-print.c:324
+msgid "<type-error>"
+msgstr "<loại sai>"
+
+#: c-pretty-print.c:363
+msgid "<unnamed-unsigned:"
+msgstr "<không tên không ký:"
+
+#: c-pretty-print.c:364
+msgid "<unnamed-signed:"
+msgstr "<không tên có ký:"
+
+#: c-pretty-print.c:367
+msgid "<unnamed-float:"
+msgstr "<không tên nổi:"
+
+#: c-pretty-print.c:370
+msgid "<unnamed-fixed:"
+msgstr "<không tên cố định:"
+
+#: c-pretty-print.c:385
+msgid "<typedef-error>"
+msgstr "<lỗi xác định loại>"
+
+#: c-pretty-print.c:398
+msgid "<tag-error>"
+msgstr "<lỗi thẻ>"
+
+#: c-pretty-print.c:1142
+msgid "<erroneous-expression>"
+msgstr "<biểu tượng bị lỗi>"
+
+#: c-pretty-print.c:1146 cp/cxx-pretty-print.c:154
+msgid "<return-value>"
+msgstr "<giá trị trả lại>"
+
+#: c-typeck.c:5707
+msgid "array initialized from parenthesized string constant"
+msgstr "mảng bị sơ khởi từ hằng số chuỗi nằm trong ngoặc đơn"
+
+#: c-typeck.c:5780 c-typeck.c:6651
+msgid "initialization of a flexible array member"
+msgstr "đã sơ khởi một bộ phận mảng dẻo"
+
+#: c-typeck.c:5790 cp/typeck2.c:851
+#, gcc-internal-format
+msgid "char-array initialized from wide string"
+msgstr "mảng ký tự bị sơ khởi từ chuỗi rộng"
+
+#: c-typeck.c:5798
+msgid "wide character array initialized from non-wide string"
+msgstr "mảng ký tự rộng bị sơ khởi từ chuỗi không phải rộng"
+
+#: c-typeck.c:5804
+msgid "wide character array initialized from incompatible wide string"
+msgstr "mảng ký tự rộng bị sơ khởi từ chuỗi rộng không tương thích"
+
+#: c-typeck.c:5838
+msgid "array of inappropriate type initialized from string constant"
+msgstr "mảng loại không thích hợp bị sơ khởi từ hằng số chuỗi"
+
+#. ??? This should not be an error when inlining calls to
+#. unprototyped functions.
+#: c-typeck.c:5906 c-typeck.c:5359 cp/typeck.c:1862
+#, gcc-internal-format
+msgid "invalid use of non-lvalue array"
+msgstr "sai sử dụng mảng không phải lvalue"
+
+#: c-typeck.c:5932
+msgid "array initialized from non-constant array expression"
+msgstr "mảng bị sơ khởi từ biểu tượng mảng không phải hằng số"
+
+#: c-typeck.c:5946 c-typeck.c:5949 c-typeck.c:5957 c-typeck.c:5996
+#: c-typeck.c:7450
+msgid "initializer element is not constant"
+msgstr "yếu tố sơ khởi không phải hằng số"
+
+#: c-typeck.c:5962 c-typeck.c:6008 c-typeck.c:7460
+msgid "initializer element is not a constant expression"
+msgstr "yếu tố sơ khởi không phải là một biểu tượng hằng số"
+
+#: c-typeck.c:6003 c-typeck.c:7455
+#, gcc-internal-format
+msgid "initializer element is not computable at load time"
+msgstr "yếu tố sơ khởi không tính được vào lúc nạp"
+
+#. Although C99 is unclear about whether incomplete arrays
+#. of VLAs themselves count as VLAs, it does not make
+#. sense to permit them to be initialized given that
+#. ordinary VLAs may not be initialized.
+#: c-typeck.c:6017 c-decl.c:3954 c-decl.c:3969
+#, gcc-internal-format
+msgid "variable-sized object may not be initialized"
+msgstr "không thể sơ khởi một đối tượng có kích cỡ biến đổi"
+
+#: c-typeck.c:6021
+msgid "invalid initializer"
+msgstr "bộ sơ khởi sai"
+
+#: c-typeck.c:6230
+msgid "(anonymous)"
+msgstr "(nặc danh)"
+
+#: c-typeck.c:6508
+msgid "extra brace group at end of initializer"
+msgstr "gặp nhóm ngoặc móc thừa tại kết thúc của bộ sơ khởi"
+
+#: c-typeck.c:6529
+msgid "missing braces around initializer"
+msgstr "thiếu ngoặc móc chung quanh bộ sơ khởi"
+
+#: c-typeck.c:6590
+msgid "braces around scalar initializer"
+msgstr "ngoặc chung quanh bộ sơ khởi vô hướng"
+
+#: c-typeck.c:6648
+msgid "initialization of flexible array member in a nested context"
+msgstr "bộ phận mảng dẻo bị sơ khởi trong một ngữ cảnh lồng nhau"
+
+#: c-typeck.c:6679
+msgid "missing initializer"
+msgstr "bộ sơ khởi còn thiếu"
+
+#: c-typeck.c:6701
+msgid "empty scalar initializer"
+msgstr "bộ sơ khởi vô hướng vẫn trống"
+
+#: c-typeck.c:6706
+msgid "extra elements in scalar initializer"
+msgstr "gặp yếu tố thừa trong bộ sơ khởi vô hướng"
+
+#: c-typeck.c:6814 c-typeck.c:6892
+msgid "array index in non-array initializer"
+msgstr "gặp chỉ mục mảng trong bộ sơ khởi không phải mảng"
+
+#: c-typeck.c:6819 c-typeck.c:6948
+msgid "field name not in record or union initializer"
+msgstr "không có tên trường trong bộ sơ khởi hợp hoặc mục ghi"
+
+#: c-typeck.c:6865
+msgid "array index in initializer not of integer type"
+msgstr "bộ sơ khởi chứa một chỉ mục mảng không có loại số nguyên"
+
+#: c-typeck.c:6874 c-typeck.c:6883
+msgid "array index in initializer is not an integer constant expression"
+msgstr "bộ sơ khởi chứa một chỉ mục mảng không phải là một biểu tượng hằng số nguyên"
+
+#: c-typeck.c:6888 c-typeck.c:6890
+msgid "nonconstant array index in initializer"
+msgstr "bộ sơ khởi chứa một chỉ mục mảng không phải hằng số"
+
+#: c-typeck.c:6894 c-typeck.c:6897
+msgid "array index in initializer exceeds array bounds"
+msgstr "bộ sơ khởi chứa một chỉ mục mảng vượt quá giới hạn mảng"
+
+#: c-typeck.c:6911
+msgid "empty index range in initializer"
+msgstr "bộ sơ khởi chứa phạm vi chỉ mục vẫn trống"
+
+#: c-typeck.c:6920
+msgid "array index range in initializer exceeds array bounds"
+msgstr "bộ sơ khởi chứa một phạm vi chỉ mục mảng vượt quá giới hạn mảng"
+
+#: c-typeck.c:7003 c-typeck.c:7030 c-typeck.c:7549
+msgid "initialized field with side-effects overwritten"
+msgstr "trường đã sơ khởi với hiệu ứng khác bị ghi đè"
+
+#: c-typeck.c:7005 c-typeck.c:7032 c-typeck.c:7551
+msgid "initialized field overwritten"
+msgstr "trường đã sơ khởi bị ghi đè"
+
+#: c-typeck.c:7477 c-typeck.c:4965
+#, gcc-internal-format
+msgid "enum conversion in initialization is invalid in C++"
+msgstr "chuyển đổi enum trong bộ sơ khởi thì không hợp lệ trong C++"
+
+#: c-typeck.c:7766
+msgid "excess elements in char array initializer"
+msgstr "gặp yếu tố thừa trong bộ sơ khởi mảng ký tự"
+
+#: c-typeck.c:7773 c-typeck.c:7832
+msgid "excess elements in struct initializer"
+msgstr "gặp yếu tố thừa trong bộ sơ khởi cấu trúc"
+
+#: c-typeck.c:7847
+msgid "non-static initialization of a flexible array member"
+msgstr "một bộ phận mảng dẻo bị sơ khởi một cách không phải tĩnh"
+
+#: c-typeck.c:7917
+msgid "excess elements in union initializer"
+msgstr "gặp yếu tố thừa trong bộ sơ khởi hợp"
+
+#: c-typeck.c:8006
+msgid "excess elements in array initializer"
+msgstr "gặp yếu tố thừa trong bộ sơ khởi mảng"
+
+#: c-typeck.c:8039
+msgid "excess elements in vector initializer"
+msgstr "gặp yếu tố thừa trong bộ sơ khởi véc-tơ"
+
+#: c-typeck.c:8070
+msgid "excess elements in scalar initializer"
+msgstr "gặp yếu tố thừa trong bộ sơ khởi vô hướng"
+
+#: cfgrtl.c:2013
+msgid "flow control insn inside a basic block"
+msgstr "gặp lệnh điều khiển luồng bên trong một khối cơ bản"
+
+#: cfgrtl.c:2144
+msgid "wrong insn in the fallthru edge"
+msgstr "gặp lệnh không đúng trong cạnh failthru"
+
+#: cfgrtl.c:2198
+msgid "insn outside basic block"
+msgstr "gặp lệnh bên ngoài khối cơ bản"
+
+#: cfgrtl.c:2205
+msgid "return not followed by barrier"
+msgstr "trả lại không có hàng rào theo sau"
+
+#: collect2.c:497 gcc.c:7734
+#, c-format
+msgid "internal gcc abort in %s, at %s:%d"
+msgstr "gcc bị hủy bỏ nội bộ trong %s, vào %s:%d"
+
+#: collect2.c:950
+#, c-format
+msgid "COLLECT_LTO_WRAPPER must be set."
+msgstr "COLLECT_LTO_WRAPPER phải được lập."
+
+#: collect2.c:1092
+#, c-format
+msgid "too many lto output files"
+msgstr "quá nhiều tập tin kết xuất lto"
+
+#: collect2.c:1308
+#, c-format
+msgid "no arguments"
+msgstr "không có đối số nào"
+
+# Literal: don't translate; Nghĩa chữ : dừng dịch
+#: collect2.c:1715 collect2.c:1886 collect2.c:1921
+#, c-format
+msgid "fopen %s"
+msgstr "fopen %s"
+
+# Literal: don't translate; Nghĩa chữ : dừng dịch
+#: collect2.c:1718 collect2.c:1891 collect2.c:1924
+#, c-format
+msgid "fclose %s"
+msgstr "fclose %s"
+
+#: collect2.c:1727
+#, c-format
+msgid "collect2 version %s"
+msgstr "collect2 phiên bản %s"
+
+#: collect2.c:1823
+#, c-format
+msgid "%d constructor found\n"
+msgid_plural "%d constructors found\n"
+msgstr[0] "Tìm thấy %d bộ cấu trúc\n"
+
+#: collect2.c:1827
+#, c-format
+msgid "%d destructor found\n"
+msgid_plural "%d destructors found\n"
+msgstr[0] "Tìm thấy %d bộ hủy cấu trúc\n"
+
+#: collect2.c:1831
+#, c-format
+msgid "%d frame table found\n"
+msgid_plural "%d frame tables found\n"
+msgstr[0] "Tìm thấy %d bảng khung\n"
+
+#: collect2.c:1985 lto-wrapper.c:175
+#, c-format
+msgid "can't get program status"
+msgstr "không thể lấy trạng thái về chương trình"
+
+#: collect2.c:2054
+#, c-format
+msgid "could not open response file %s"
+msgstr "không thể mở tập tin đáp ứng %s"
+
+#: collect2.c:2059
+#, c-format
+msgid "could not write to response file %s"
+msgstr "không thể ghi vào tập tin đáp ứng %s"
+
+#: collect2.c:2064
+#, c-format
+msgid "could not close response file %s"
+msgstr "không thể đóng đáp ứng tập tin %s"
+
+#: collect2.c:2082
+#, c-format
+msgid "[cannot find %s]"
+msgstr "[không tìm thấy %s]"
+
+#: collect2.c:2097
+#, c-format
+msgid "cannot find '%s'"
+msgstr "không tìm thấy « %s »"
+
+#: collect2.c:2101 collect2.c:2624 collect2.c:2820 gcc.c:3085
+#: lto-wrapper.c:147
+#, c-format
+msgid "pex_init failed"
+msgstr "pex_init bị lỗi"
+
+#: collect2.c:2139
+#, c-format
+msgid "[Leaving %s]\n"
+msgstr "[Đang rời khỏi %s]\n"
+
+#: collect2.c:2371
+#, c-format
+msgid ""
+"\n"
+"write_c_file - output name is %s, prefix is %s\n"
+msgstr ""
+"\n"
+"write_c_file - tên kết xuất là %s, tiền tố là %s\n"
+
+#: collect2.c:2598
+#, c-format
+msgid "cannot find 'nm'"
+msgstr "không tìm thấy « nm »"
+
+#: collect2.c:2646
+#, c-format
+msgid "can't open nm output"
+msgstr "không thể mở kết xuất nm"
+
+#: collect2.c:2729
+#, c-format
+msgid "init function found in object %s"
+msgstr "hàm init được tìm trong đối tượng %s"
+
+#: collect2.c:2739
+#, c-format
+msgid "fini function found in object %s"
+msgstr "hàm fini được tìm trong đối tượng %s"
+
+#: collect2.c:2841
+#, c-format
+msgid "can't open ldd output"
+msgstr "không thể mở kết xuất ldd"
+
+#: collect2.c:2844
+#, c-format
+msgid ""
+"\n"
+"ldd output with constructors/destructors.\n"
+msgstr ""
+"\n"
+"kết xuất ldd với bộ (hủy) cấu trúc.\n"
+
+#: collect2.c:2859
+#, c-format
+msgid "dynamic dependency %s not found"
+msgstr "không tìm thấy quan hệ phụ thuộc năng động %s"
+
+#: collect2.c:2871
+#, c-format
+msgid "unable to open dynamic dependency '%s'"
+msgstr "không thể mở quan hệ phụ thuộc năng động « %s »"
+
+#: collect2.c:3032
+#, c-format
+msgid "%s: not a COFF file"
+msgstr "%s: không phải là một tập tin COFF"
+
+#: collect2.c:3162
+#, c-format
+msgid "%s: cannot open as COFF file"
+msgstr "%s: không thể mở dưới dạng tập tin COFF"
+
+#: collect2.c:3220
+#, c-format
+msgid "library lib%s not found"
+msgstr "không tìm thấy thư viện lib%s"
+
+#: cppspec.c:106
+#, c-format
+msgid "\"%s\" is not a valid option to the preprocessor"
+msgstr "« %s » không phải là một tuỳ chọn hợp lệ cho bộ tiền xử lý"
+
+#: cppspec.c:128
+#, c-format
+msgid "too many input files"
+msgstr "quá nhiều tập tin nhập vào"
+
+#: diagnostic.c:186
+#, c-format
+msgid "compilation terminated due to -Wfatal-errors.\n"
+msgstr "tiến trình biên dịch bị chấm dứt do « -Wfatal-errors ».\n"
+
+#: diagnostic.c:195
+#, c-format
+msgid ""
+"Please submit a full bug report,\n"
+"with preprocessed source if appropriate.\n"
+"See %s for instructions.\n"
+msgstr ""
+"Hãy gửi một báo cáo lỗi đầy đủ,\n"
+"gồm có mã nguồn tiền xử lý nếu thích hợp.\n"
+"Xem %s để tìm hướng dẫn.\n"
+
+#: diagnostic.c:204
+#, c-format
+msgid "compilation terminated.\n"
+msgstr "tiến trình biên dịch bị chấm dứt.\n"
+
+#: diagnostic.c:382
+#, c-format
+msgid "*** WARNING *** there are active plugins, do not report this as a bug unless you can reproduce it without enabling any plugins.\n"
+msgstr "*** CẢNH BÁO *** có phần bổ sung vẫn hoạt động: đừng thông báo trường hợp này như là một lỗi nếu bạn có thể tạo nó lần nữa mà không hiệu lực phần bổ sung nào.\n"
+
+#: diagnostic.c:399
+#, c-format
+msgid "%s:%d: confused by earlier errors, bailing out\n"
+msgstr "%s:%d: lộn xộn do lỗi trước nên hủy bỏ\n"
+
+#: diagnostic.c:744
+#, c-format
+msgid "Internal compiler error: Error reporting routines re-entered.\n"
+msgstr "Lỗi biên dịch nội bộ : đã nhập lại hàm thông báo lỗi.\n"
+
+#: final.c:1153
+msgid "negative insn length"
+msgstr "chiều dài lệnh âm"
+
+#: final.c:2650
+msgid "could not split insn"
+msgstr "không thể chia tách lệnh"
+
+#: final.c:3084
+msgid "invalid 'asm': "
+msgstr "« asm » sai"
+
+#: final.c:3267
+#, c-format
+msgid "nested assembly dialect alternatives"
+msgstr "các sự xen kẽ phương ngôn assembly lồng nhau"
+
+#: final.c:3284 final.c:3296
+#, c-format
+msgid "unterminated assembly dialect alternative"
+msgstr "sự xen kẽ phương ngôn assembly chưa chấm dứt"
+
+#: final.c:3343
+#, c-format
+msgid "operand number missing after %%-letter"
+msgstr "số thứ tự toán hạng còn thiếu đằng sau %%-letter"
+
+#: final.c:3346 final.c:3387
+#, c-format
+msgid "operand number out of range"
+msgstr "số thứ tự toán hạng ở ngoại phạm vi"
+
+#: final.c:3406
+#, c-format
+msgid "invalid %%-code"
+msgstr "%%-code sai"
+
+#: final.c:3436
+#, c-format
+msgid "'%%l' operand isn't a label"
+msgstr "toán hạng « %%l » không phải là một nhãn"
+
+#. We can't handle floating point constants;
+#. PRINT_OPERAND must handle them.
+#. We can't handle floating point constants; PRINT_OPERAND must
+#. handle them.
+#. We can't handle floating point constants;
+#. PRINT_OPERAND must handle them.
+#: final.c:3582 vmsdbgout.c:496 config/i386/i386.c:10813
+#: config/pdp11/pdp11.c:1682
+#, c-format
+msgid "floating constant misused"
+msgstr "sai sử dụng hằng số nổi"
+
+#: final.c:3644 vmsdbgout.c:553 config/i386/i386.c:10900
+#: config/pdp11/pdp11.c:1729
+#, c-format
+msgid "invalid expression as operand"
+msgstr "sai lập biểu tượng dưới dạng toán hạng"
+
+#: gcc.c:1799
+#, c-format
+msgid "Using built-in specs.\n"
+msgstr "Đang sử dụng các đặc tả dựng sẵn.\n"
+
+#: gcc.c:1984
+#, c-format
+msgid ""
+"Setting spec %s to '%s'\n"
+"\n"
+msgstr ""
+"Đang lập đặc tả %s thành « %s »\n"
+"\n"
+
+#: gcc.c:2099
+#, c-format
+msgid "Reading specs from %s\n"
+msgstr "Đang đọc các đặc tả từ %s\n"
+
+#: gcc.c:2195 gcc.c:2214
+#, c-format
+msgid "specs %%include syntax malformed after %ld characters"
+msgstr "đặc tả chứa cú pháp %%include dạng sai sau %ld ký tự"
+
+#: gcc.c:2222
+#, c-format
+msgid "could not find specs file %s\n"
+msgstr "không tìm thấy tập tin đặc tả %s\n"
+
+#: gcc.c:2239 gcc.c:2247 gcc.c:2256 gcc.c:2265
+#, c-format
+msgid "specs %%rename syntax malformed after %ld characters"
+msgstr "đặc tả chứa cú pháp %%rename dạng sai sau %ld ký tự"
+
+#: gcc.c:2274
+#, c-format
+msgid "specs %s spec was not found to be renamed"
+msgstr "đặc tả chứa đặc tả %s không có tên mới"
+
+#: gcc.c:2281
+#, c-format
+msgid "%s: attempt to rename spec '%s' to already defined spec '%s'"
+msgstr "%s: đã thử thay đổi tên của đặc tả « %s » thành đặc tả đã xác định « %s »"
+
+#: gcc.c:2286
+#, c-format
+msgid "rename spec %s to %s\n"
+msgstr "thay đổi tên của đặc tả %s thành %s\n"
+
+#: gcc.c:2288
+#, c-format
+msgid ""
+"spec is '%s'\n"
+"\n"
+msgstr ""
+"đặc tả là « %s »\n"
+"\n"
+
+#: gcc.c:2301
+#, c-format
+msgid "specs unknown %% command after %ld characters"
+msgstr "đặc tả chứa một lệnh %% không rõ sai sau %ld ký tự"
+
+#: gcc.c:2312 gcc.c:2325
+#, c-format
+msgid "specs file malformed after %ld characters"
+msgstr "tập tin đặc tả dạng sai sau %ld ký tự"
+
+#: gcc.c:2377
+#, c-format
+msgid "spec file has no spec for linking"
+msgstr "tập tin đặc tả không có đặc tả để liên kết"
+
+#: gcc.c:2705 gcc.c:5280
+#, c-format
+msgid "%s\n"
+msgstr "%s\n"
+
+#: gcc.c:2906
+#, c-format
+msgid "system path '%s' is not absolute"
+msgstr "đường dẫn « %s » không phải tuyệt đối"
+
+#: gcc.c:2978
+#, c-format
+msgid "-pipe not supported"
+msgstr "không hỗ trợ « -pipe »"
+
+#: gcc.c:3040
+#, c-format
+msgid ""
+"\n"
+"Go ahead? (y or n) "
+msgstr ""
+"\n"
+"Tiếp tục ? (c/k)"
+
+#: gcc.c:3124
+msgid "failed to get exit status"
+msgstr "không lấy được trạng thái thoát"
+
+#: gcc.c:3130
+msgid "failed to get process times"
+msgstr "không lấy được thời gian tiến trình"
+
+#: gcc.c:3156
+#, c-format
+msgid ""
+"Internal error: %s (program %s)\n"
+"Please submit a full bug report.\n"
+"See %s for instructions."
+msgstr ""
+"Gặp lỗi nội bộ : %s (chương trình %s)\n"
+"Hãy gửi một báo cáo lỗi đầy đủ.\n"
+"Xem %s để tìm hướng dẫn."
+
+# Variable: don't translate; Biến: đừng dịch
+#: gcc.c:3184
+#, c-format
+msgid "# %s %.2f %.2f\n"
+msgstr "# %s %.2f %.2f\n"
+
+#: gcc.c:3378
+#, c-format
+msgid "Usage: %s [options] file...\n"
+msgstr "Sử dụng: %s [tuỳ_chọn] tệp...\n"
+
+#: gcc.c:3379
+msgid "Options:\n"
+msgstr "Tùy chọn:\n"
+
+#: gcc.c:3381
+msgid "  -pass-exit-codes         Exit with highest error code from a phase\n"
+msgstr "  -pass-exit-codes         Thoát với mã lỗi cao nhất từ một giai đoạn nào đó\n"
+
+#: gcc.c:3382
+msgid "  --help                   Display this information\n"
+msgstr "  --help                   Hiển thị trợ giúp này\n"
+
+#: gcc.c:3383
+msgid "  --target-help            Display target specific command line options\n"
+msgstr "  --target-help            Hiển thị những tuỳ chọn dòng lệnh đặc trưng cho đích\n"
+
+#: gcc.c:3384
+msgid "  --help={target|optimizers|warnings|params|[^]{joined|separate|undocumented}}[,...]\n"
+msgstr ""
+"  --help={target|optimizers|warnings|params|[^]{joined|separate|undocumented}}[,...]\n"
+"\n"
+"help\t\t\t\ttrợ giúp\n"
+"optimizers\t\tbộ tối ưu hoá\n"
+"warnings\t\t\tcảnh báo\n"
+"params\t\t\t(viết tắt parameters) tham số\n"
+"joined\t\t\tnối lại\n"
+"separate\t\t\tkhông nối lại\n"
+"undocumented\t\tkhông có tài liệu diễn tả\n"
+
+#: gcc.c:3385
+msgid "                           Display specific types of command line options\n"
+msgstr "                           Hiển thị một số loại tuỳ chọn dòng lệnh nào đó\n"
+
+#: gcc.c:3387
+msgid "  (Use '-v --help' to display command line options of sub-processes)\n"
+msgstr "  (Hãy sử dụng « -v --help » để hiển thị các tuỳ chọn dòng lệnh của tiến trình con)\n"
+
+#: gcc.c:3388
+msgid "  --version                Display compiler version information\n"
+msgstr "  --version                Hiển thị thông tin về phiên bản của bộ biên dịch\n"
+
+#: gcc.c:3389
+msgid "  -dumpspecs               Display all of the built in spec strings\n"
+msgstr "  -dumpspecs               Hiển thị tất cả các chuỗi đặc tả dựng sẵn\n"
+
+#: gcc.c:3390
+msgid "  -dumpversion             Display the version of the compiler\n"
+msgstr "  -dumpversion             Hiển thị phiên bản của bộ biên dịch\n"
+
+#: gcc.c:3391
+msgid "  -dumpmachine             Display the compiler's target processor\n"
+msgstr "  -dumpmachine             Hiển thị bộ xử lý đích của bộ biên dịch\n"
+
+#: gcc.c:3392
+msgid "  -print-search-dirs       Display the directories in the compiler's search path\n"
+msgstr ""
+"  -print-search-dirs\n"
+"        Hiển thị những thư mục nằm trên đường dẫn tìm kiếm của bộ biên dịch\n"
+
+#: gcc.c:3393
+msgid "  -print-libgcc-file-name  Display the name of the compiler's companion library\n"
+msgstr "  -print-libgcc-file-name    Hiển thị tên của thư viện bổ trợ của bộ biên dịch\n"
+
+#: gcc.c:3394
+msgid "  -print-file-name=<lib>   Display the full path to library <lib>\n"
+msgstr "  -print-file-name=<thư_viện>    Hiển thị đường dẫn đầy đủ đến thư viện này\n"
+
+#: gcc.c:3395
+msgid "  -print-prog-name=<prog>  Display the full path to compiler component <prog>\n"
+msgstr ""
+"  -print-prog-name=<trình>\n"
+"        Hiển thị đường dẫn đầy đủ đến thành phần bộ biên dịch này\n"
+
+#: gcc.c:3396
+msgid "  -print-multi-directory   Display the root directory for versions of libgcc\n"
+msgstr "  -print-multi-directory    Hiển thị thư mục gốc cho các phiên bản thư viện libgcc\n"
+
+#: gcc.c:3397
+msgid ""
+"  -print-multi-lib         Display the mapping between command line options and\n"
+"                           multiple library search directories\n"
+msgstr ""
+"  -print-multi-lib\n"
+"    Hiển thị sự ánh xạ giữa các tuỳ chọn dòng lệnh và nhiều thư mục tìm kiếm thư viện\n"
+
+#: gcc.c:3400
+msgid "  -print-multi-os-directory Display the relative path to OS libraries\n"
+msgstr "  -print-multi-os-directory    Hiển thị đường dẫn tương đối đến các thư mục HĐH\n"
+
+#: gcc.c:3401
+msgid "  -print-sysroot           Display the target libraries directory\n"
+msgstr "  -print-sysroot           Hiển thị thư mục chứa các thư viện đích\n"
+
+#: gcc.c:3402
+msgid "  -print-sysroot-headers-suffix Display the sysroot suffix used to find headers\n"
+msgstr "  -print-sysroot-headers-suffix    Hiển thị hậu tố sysroot dùng để tìm phần đầu\n"
+
+#: gcc.c:3403
+msgid "  -Wa,<options>            Pass comma-separated <options> on to the assembler\n"
+msgstr ""
+"  -Wa,<tuỳ_chọn>\n"
+"    Gửi cho chương trình dịch mã số các tuỳ chọn này định giới bằng dấu phẩy\n"
+
+#: gcc.c:3404
+msgid "  -Wp,<options>            Pass comma-separated <options> on to the preprocessor\n"
+msgstr ""
+"  -Wp,<tuỳ_chọn>\n"
+"    Gửi cho bộ tiền xử lý các tuỳ chọn này định giới bằng dấu phẩy\n"
+
+#: gcc.c:3405
+msgid "  -Wl,<options>            Pass comma-separated <options> on to the linker\n"
+msgstr ""
+"  -Wl,<tuỳ_chọn>\n"
+"    Gửi cho bộ liên kết các tuỳ chọn này định giới bằng dấu phẩy\n"
+
+#: gcc.c:3406
+msgid "  -Xassembler <arg>        Pass <arg> on to the assembler\n"
+msgstr "  -Xassembler <đối_số>        Gửi đối số này cho chương trình dịch mã số\n"
+
+#: gcc.c:3407
+msgid "  -Xpreprocessor <arg>     Pass <arg> on to the preprocessor\n"
+msgstr "  -Xpreprocessor <đối_số>     Gửi đối số này cho bộ tiền xử lý\n"
+
+#: gcc.c:3408
+msgid "  -Xlinker <arg>           Pass <arg> on to the linker\n"
+msgstr "  -Xlinker <đối_số>           Gửi đối số này cho bộ liên kết\n"
+
+#: gcc.c:3409
+msgid "  -combine                 Pass multiple source files to compiler at once\n"
+msgstr "  -combine                 Gửi đồng thời nhiều tập tin nguồn cho bộ biên dịch\n"
+
+#: gcc.c:3410
+msgid "  -save-temps              Do not delete intermediate files\n"
+msgstr "  -save-temps              Đừng xoá bỏ tập tin trung gian\n"
+
+#: gcc.c:3411
+msgid "  -save-temps=<arg>        Do not delete intermediate files\n"
+msgstr "  -save-temps=<đối_số>        Đừng xoá bỏ tập tin trung gian\n"
+
+#: gcc.c:3412
+msgid ""
+"  -no-canonical-prefixes   Do not canonicalize paths when building relative\n"
+"                           prefixes to other gcc components\n"
+msgstr ""
+"  -no-canonical-prefixes    Đừng làm cho đường dẫn theo đúng quy tắc\n"
+"        khi xây dựng tiền tố tương ứng với thành phần gcc khác\n"
+
+#: gcc.c:3415
+msgid "  -pipe                    Use pipes rather than intermediate files\n"
+msgstr "  -pipe                    Dùng ống dẫn thay cho tập tin trung gian\n"
+
+#: gcc.c:3416
+msgid "  -time                    Time the execution of each subprocess\n"
+msgstr "  -time                    Đếm thời gian chạy mỗi tiến trình con\n"
+
+#: gcc.c:3417
+msgid "  -specs=<file>            Override built-in specs with the contents of <file>\n"
+msgstr "  -specs=<tệp>    Ghi đè lên đặc tả dựng sẵn bằng nội dung của tập tin này\n"
+
+#: gcc.c:3418
+msgid "  -std=<standard>          Assume that the input sources are for <standard>\n"
+msgstr "  -std=<tiêu_chuẩn>          Giả sử là các nguồn đầu vào là theo tiêu chuẩn này\n"
+
+#: gcc.c:3419
+msgid ""
+"  --sysroot=<directory>    Use <directory> as the root directory for headers\n"
+"                           and libraries\n"
+msgstr ""
+"  --sysroot=<thư_mục>\n"
+"        Dùng thư mục này làm thư mục gốc cho các phần đầu và thư viện\n"
+
+#: gcc.c:3422
+msgid "  -B <directory>           Add <directory> to the compiler's search paths\n"
+msgstr "  -B <thư_mục>    Thêm thư mục này vào các đường dẫn tìm kiếm của bộ biên dịch\n"
+
+#: gcc.c:3423
+msgid "  -b <machine>             Run gcc for target <machine>, if installed\n"
+msgstr "  -b <máy>             Chạy gcc cho máy đích này (nếu được cài đặt)\n"
+
+#: gcc.c:3424
+msgid "  -V <version>             Run gcc version number <version>, if installed\n"
+msgstr "  -V <phiên_bản>             Chạy gcc phiên bản này (nếu được cài đặt)\n"
+
+#: gcc.c:3425
+msgid "  -v                       Display the programs invoked by the compiler\n"
+msgstr "  -v                       Hiển thị những chương trình được gọi bởi bộ biên dịch\n"
+
+#: gcc.c:3426
+msgid "  -###                     Like -v but options quoted and commands not executed\n"
+msgstr ""
+"  -###                     Giống như « -v » nhưng mà tuỳ chọn nằm trong dấu nháy\n"
+"        và lệnh không được thực hiện\n"
+
+#: gcc.c:3427
+msgid "  -E                       Preprocess only; do not compile, assemble or link\n"
+msgstr "  -E                  Chỉ tiền xử lý, đừng biên dịch, dịch mã số hoặc liên kết\n"
+
+#: gcc.c:3428
+msgid "  -S                       Compile only; do not assemble or link\n"
+msgstr "  -S                       Chỉ biên dịch, đừng dịch mã số hoặc liên kết\n"
+
+#: gcc.c:3429
+msgid "  -c                       Compile and assemble, but do not link\n"
+msgstr "  -c                       Biên dịch và dịch mã số mà đừng liên kết\n"
+
+#: gcc.c:3430
+msgid "  -o <file>                Place the output into <file>\n"
+msgstr "  -o <tệp>                Để kết xuất vào tập tin này\n"
+
+#: gcc.c:3431
+msgid ""
+"  -x <language>            Specify the language of the following input files\n"
+"                           Permissible languages include: c c++ assembler none\n"
+"                           'none' means revert to the default behavior of\n"
+"                           guessing the language based on the file's extension\n"
+msgstr ""
+"  -x <ngôn_ngữ>    Ghi rõ ngôn ngữ của những tập tin nhập vào mà theo sau\n"
+"    \t\t               Các ngôn ngữ có thể sử dụng: c, c++, none\n"
+"                                  « none » (không có) = hoàn nguyên về ứng dụng mặc định\n"
+"                                  là đoán ngôn ngữ dựa vào phần mở rộng của tập tin\n"
+
+#: gcc.c:3438
+#, c-format
+msgid ""
+"\n"
+"Options starting with -g, -f, -m, -O, -W, or --param are automatically\n"
+" passed on to the various sub-processes invoked by %s.  In order to pass\n"
+" other options on to these processes the -W<letter> options must be used.\n"
+msgstr ""
+"\n"
+"Tuỳ chọn bắt đầu với một của « -g, -f, -m, -O, -W, --param »\n"
+"thì được tự động gửi cho những tiến trình con khác nhau được %s gọi.\n"
+"Phải sử dụng tuỳ chọn « -W<chữ> » để gửi thêm tuỳ chọn cho những tiến trình này.\n"
+
+#: gcc.c:3570
+#, c-format
+msgid "'-%c' option must have argument"
+msgstr "Tuỳ chọn « -%c » phải có đối số"
+
+#: gcc.c:3596
+#, c-format
+msgid "couldn't run '%s': %s"
+msgstr "không thể chạy « %s »: %s"
+
+#: gcc.c:3598
+#, c-format
+msgid "couldn't run '%s': %s: %s"
+msgstr "không thể chạy « %s »: %s: %s"
+
+#: gcc.c:3976
+#, c-format
+msgid "argument to '-Xlinker' is missing"
+msgstr "đối số tới « -Xlinker » còn thiếu"
+
+#: gcc.c:3984
+#, c-format
+msgid "argument to '-Xpreprocessor' is missing"
+msgstr "đối số tới « -Xpreprocessor » còn thiếu"
+
+#: gcc.c:3991
+#, c-format
+msgid "argument to '-Xassembler' is missing"
+msgstr "đối số tới « -Xassembler » còn thiếu"
+
+#: gcc.c:3998
+#, c-format
+msgid "argument to '-l' is missing"
+msgstr "đối số tới « -l » còn thiếu"
+
+#: gcc.c:4019
+#, c-format
+msgid "'%s' is an unknown -save-temps option"
+msgstr "« %s » là một tuỳ chọn « -save-temps » không rõ"
+
+#: gcc.c:4033
+#, c-format
+msgid "argument to '-specs' is missing"
+msgstr "đối số tới « -specs » còn thiếu"
+
+#: gcc.c:4047
+#, c-format
+msgid "argument to '-specs=' is missing"
+msgstr "đối số tới « -specs= » còn thiếu"
+
+#: gcc.c:4075
+#, c-format
+msgid "argument to '-wrapper' is missing"
+msgstr "đối số tới « -wrapper » còn thiếu"
+
+#: gcc.c:4103
+#, c-format
+msgid "'-%c' must come at the start of the command line"
+msgstr "« -%c » phải nằm ở đầu của dòng lệnh"
+
+#: gcc.c:4112
+#, c-format
+msgid "argument to '-B' is missing"
+msgstr "đối số tới « -B » còn thiếu"
+
+#: gcc.c:4505
+#, c-format
+msgid "argument to '-x' is missing"
+msgstr "đối số tới « -x » còn thiếu"
+
+#: gcc.c:4533 gcc.c:4998
+#, c-format
+msgid "argument to '-%s' is missing"
+msgstr "đối số tới « -%s » còn thiếu"
+
+#: gcc.c:4786
+#, c-format
+msgid "unable to locate default linker script '%s' in the library search paths"
+msgstr "không tìm thấy văn lệnh liên kết mặc định « %s » trong các đường dẫn tìm kiếm thư viện"
+
+#: gcc.c:4974
+#, c-format
+msgid "switch '%s' does not start with '-'"
+msgstr "cái chuyển « %s » không bắt đầu bằng « - »"
+
+#: gcc.c:5090
+#, c-format
+msgid "could not open temporary response file %s"
+msgstr "không thể mở tập tin đáp ứng tạm thời %s"
+
+#: gcc.c:5096
+#, c-format
+msgid "could not write to temporary response file %s"
+msgstr "không thể ghi vào tập tin đáp ứng tạm thời %s"
+
+#: gcc.c:5102
+#, c-format
+msgid "could not close temporary response file %s"
+msgstr "không thể đóng tập tin đáp ứng tạm thời %s"
+
+#: gcc.c:5204
+#, c-format
+msgid "spec '%s' invalid"
+msgstr "đặc tả « %s » không hợp lệ"
+
+#: gcc.c:5353
+#, c-format
+msgid "spec '%s' has invalid '%%0%c'"
+msgstr "đặc tả « %s » có « %%0%c » không hợp lệ"
+
+#: gcc.c:5662
+#, c-format
+msgid "spec '%s' has invalid '%%W%c"
+msgstr "đặc tả « %s » có « %%W%c » không hợp lệ"
+
+#: gcc.c:5682
+#, c-format
+msgid "spec '%s' has invalid '%%x%c'"
+msgstr "đặc tả « %s » có « %%x%c » không hợp lệ"
+
+#: gcc.c:5904
+#, c-format
+msgid "Processing spec %c%s%c, which is '%s'\n"
+msgstr "Đang xử lý đặc tả %c%s%c, mà « %s »\n"
+
+#: gcc.c:6029
+#, c-format
+msgid "unknown spec function '%s'"
+msgstr "không rõ hàm đặc tả « %s »"
+
+#: gcc.c:6049
+#, c-format
+msgid "error in args to spec function '%s'"
+msgstr "gặp lỗi trong các đối số tới hàm đặc tả « %s »"
+
+#: gcc.c:6098
+#, c-format
+msgid "malformed spec function name"
+msgstr "tên hàm đặc tả dạng sai"
+
+#. )
+#: gcc.c:6101
+#, c-format
+msgid "no arguments for spec function"
+msgstr "không có đối số tới hàm đặc tả"
+
+#: gcc.c:6120
+#, c-format
+msgid "malformed spec function arguments"
+msgstr "đối số hàm đặc tả dạng sai"
+
+#: gcc.c:6366
+#, c-format
+msgid "braced spec '%s' is invalid at '%c'"
+msgstr "đặc tả giữa ngoặc móc « %s » không hợp lệ tại « %c »"
+
+#: gcc.c:6454
+#, c-format
+msgid "braced spec body '%s' is invalid"
+msgstr "sai lập thân của đặc tả giữa ngoặc móc « %s »"
+
+#: gcc.c:7154
+#, c-format
+msgid "install: %s%s\n"
+msgstr "cài đặt: %s%s\n"
+
+#: gcc.c:7157
+#, c-format
+msgid "programs: %s\n"
+msgstr "chương trình: %s\n"
+
+#: gcc.c:7159
+#, c-format
+msgid "libraries: %s\n"
+msgstr "thư viện: %s\n"
+
+#. The error status indicates that only one set of fixed
+#. headers should be built.
+#: gcc.c:7225
+#, c-format
+msgid "not configured with sysroot headers suffix"
+msgstr "không được cấu hình với hậu số phần đầu sysroot"
+
+#: gcc.c:7234
+#, c-format
+msgid ""
+"\n"
+"For bug reporting instructions, please see:\n"
+msgstr ""
+"\n"
+"Để tìm hướng dẫn về thông báo lỗi, thăm địa chỉ:\n"
+
+# Variable: don't translate / Biến: đừng dịch
+#: gcc.c:7250
+#, c-format
+msgid "%s %s%s\n"
+msgstr "%s %s%s\n"
+
+#: gcc.c:7253 gcov.c:430 fortran/gfortranspec.c:373 java/jcf-dump.c:1170
+msgid "(C)"
+msgstr "©"
+
+#: gcc.c:7254 java/jcf-dump.c:1171
+#, c-format
+msgid ""
+"This is free software; see the source for copying conditions.  There is NO\n"
+"warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n"
+"\n"
+msgstr ""
+"Đây là phần mềm tự do; hãy xem mã nguồn để tìm thấy điều kiện sao chép.\n"
+"KHÔNG CÓ BẢO HÀNH GÌ CẢ, THẬM CHÍ KHÔNG CÓ BẢO ĐẢM ĐƯỢC NGỤ Ý\n"
+"KHẢ NĂNG BÁN HAY KHẢ NĂNG LÀM ĐƯỢC VIỆC DỨT KHOÁT.\n"
+"\n"
+
+#: gcc.c:7271
+#, c-format
+msgid "Target: %s\n"
+msgstr "Đích: %s\n"
+
+#: gcc.c:7272
+#, c-format
+msgid "Configured with: %s\n"
+msgstr "Cấu hình bằng %s\n"
+
+#: gcc.c:7286
+#, c-format
+msgid "Thread model: %s\n"
+msgstr "Mẫu nhánh: %s\n"
+
+#: gcc.c:7297
+#, c-format
+msgid "gcc version %s %s\n"
+msgstr "gcc phiên bản %s %s\n"
+
+#: gcc.c:7299
+#, c-format
+msgid "gcc driver version %s %sexecuting gcc version %s\n"
+msgstr "Trình điều khiển gcc phiên bản %s %sexecuting gcc phiên bản %s\n"
+
+#: gcc.c:7307
+#, c-format
+msgid "no input files"
+msgstr "không có tập tin nhập vào"
+
+#: gcc.c:7356
+#, c-format
+msgid "cannot specify -o with -c, -S or -E with multiple files"
+msgstr "không thể ghi rõ nhiều tập tin với tuỳ chọn « -S » hoặc « -E », và hai tuỳ chọn « -o » và « c » loại từ lẫn nhau"
+
+#: gcc.c:7390
+#, c-format
+msgid "spec '%s' is invalid"
+msgstr "đặc tả « %s » không hợp lệ"
+
+#: gcc.c:7581
+#, c-format
+msgid "-fuse-linker-plugin, but liblto_plugin.so not found"
+msgstr "-fuse-linker-plugin, mà không tìm thấy liblto_plugin.so"
+
+#: gcc.c:7586
+#, c-format
+msgid "could not find libgcc.a"
+msgstr "không tìm thấy libgcc.a"
+
+#: gcc.c:7597
+#, c-format
+msgid ""
+"\n"
+"Linker options\n"
+"==============\n"
+"\n"
+msgstr ""
+"\n"
+"Tuỳ chọn liên kết\n"
+"==============\n"
+"\n"
+
+#: gcc.c:7598
+#, c-format
+msgid ""
+"Use \"-Wl,OPTION\" to pass \"OPTION\" to the linker.\n"
+"\n"
+msgstr ""
+"Hãy sử dụng « -Wl,tùy_chọn » để gửi tuỳ chọn đó cho bộ liên kết.\n"
+"\n"
+
+#: gcc.c:7950
+#, c-format
+msgid "multilib spec '%s' is invalid"
+msgstr "đặc tả đa thư viện « %s » không hợp lệ"
+
+#: gcc.c:8141
+#, c-format
+msgid "multilib exclusions '%s' is invalid"
+msgstr "sự loại từ đa thư viện « %s » không hợp lệ"
+
+#: gcc.c:8199 gcc.c:8340
+#, c-format
+msgid "multilib select '%s' is invalid"
+msgstr "sự lựa chọn đa thư viện « %s » không hợp lệ"
+
+#: gcc.c:8378
+#, c-format
+msgid "multilib exclusion '%s' is invalid"
+msgstr "sự loại từ đa thư viện « %s » không hợp lệ"
+
+#: gcc.c:8584
+#, c-format
+msgid "environment variable \"%s\" not defined"
+msgstr "chưa xác định biến môi trường « %s »"
+
+#: gcc.c:8675 gcc.c:8680
+#, c-format
+msgid "invalid version number `%s'"
+msgstr "số thứ tự phiên bản không hợp lệ « %s »"
+
+#: gcc.c:8723
+#, c-format
+msgid "too few arguments to %%:version-compare"
+msgstr "quá ít đối số tới %%:version-compare"
+
+#: gcc.c:8729
+#, c-format
+msgid "too many arguments to %%:version-compare"
+msgstr "quá nhiều đối số tới %%:version-compare"
+
+#: gcc.c:8770
+#, c-format
+msgid "unknown operator '%s' in %%:version-compare"
+msgstr "không rõ toán tử « %s » trong %%:version-compare"
+
+#: gcc.c:8804
+#, c-format
+msgid ""
+"Assembler options\n"
+"=================\n"
+"\n"
+msgstr ""
+"Tuỳ chọn dịch mã số\n"
+"=================\n"
+"\n"
+
+#: gcc.c:8805
+#, c-format
+msgid ""
+"Use \"-Wa,OPTION\" to pass \"OPTION\" to the assembler.\n"
+"\n"
+msgstr ""
+"Hãy sử dụng « -Wl,tùy_chọn » để gửi tuỳ chọn đó cho chương trình dịch mã số.\n"
+"\n"
+
+#: gcc.c:8851
+#, c-format
+msgid "too many arguments to %%:compare-debug-dump-opt"
+msgstr "quá nhiều đối số tới %%:compare-debug-dump-opt"
+
+#: gcc.c:8918
+#, c-format
+msgid "too many arguments to %%:compare-debug-self-opt"
+msgstr "quá nhiều đối số tới %%:compare-debug-self-opt"
+
+#: gcc.c:8953
+#, c-format
+msgid "too few arguments to %%:compare-debug-auxbase-opt"
+msgstr "quá ít đối số tới %%:compare-debug-auxbase-opt"
+
+#: gcc.c:8956
+#, c-format
+msgid "too many arguments to %%:compare-debug-auxbase-opt"
+msgstr "quá nhiều đối số tới %%:compare-debug-auxbase-opt"
+
+#: gcc.c:8963
+#, c-format
+msgid "argument to %%:compare-debug-auxbase-opt does not end in .gk"
+msgstr "đối số tới %%:compare-debug-auxbase-opt không kết thúc bằng « .gk »"
+
+#: gcov.c:403
+#, c-format
+msgid ""
+"Usage: gcov [OPTION]... SOURCEFILE...\n"
+"\n"
+msgstr ""
+"Sử dụng: gcov [TÙY_CHỌN]... TỆP_NGUỒN...\n"
+"\n"
+
+#: gcov.c:404
+#, c-format
+msgid ""
+"Print code coverage information.\n"
+"\n"
+msgstr ""
+"In ra thông tin về bao quát của mã\n"
+"\n"
+
+#: gcov.c:405
+#, c-format
+msgid "  -h, --help                      Print this help, then exit\n"
+msgstr "  -h, --help                  Hiển thị trợ giúp này, sau đó thoát.\n"
+
+#: gcov.c:406
+#, c-format
+msgid "  -v, --version                   Print version number, then exit\n"
+msgstr "  -v, --version               Hiển thị số thứ tự phiên bản, sau đó thoát.\n"
+
+#: gcov.c:407
+#, c-format
+msgid "  -a, --all-blocks                Show information for every basic block\n"
+msgstr "  -a, --all-blocks                Hiển thị thông tin cho mọi khối cơ bản\n"
+
+#: gcov.c:408
+#, c-format
+msgid "  -b, --branch-probabilities      Include branch probabilities in output\n"
+msgstr "  -b, --branch-probabilities      Bao gồm trong kết xuất các xác xuất nhánh\n"
+
+#: gcov.c:409
+#, c-format
+msgid ""
+"  -c, --branch-counts             Given counts of branches taken\n"
+"                                    rather than percentages\n"
+msgstr "  -c, --branch-counts    Đưa ra số đếm các nhánh được theo, thay cho phần trăm\n"
+
+#: gcov.c:411
+#, c-format
+msgid "  -n, --no-output                 Do not create an output file\n"
+msgstr "  -n, --no-output                 Đừng tạo tập tin kết xuất\n"
+
+#: gcov.c:412
+#, c-format
+msgid ""
+"  -l, --long-file-names           Use long output file names for included\n"
+"                                    source files\n"
+msgstr "  -l, --long-file-names    Dùng tên tập tin kết xuất dài cho tập tin nguồn được bao gồm\n"
+
+#: gcov.c:414
+#, c-format
+msgid "  -f, --function-summaries        Output summaries for each function\n"
+msgstr "  -f, --function-summaries        Xuất bản tóm tắt cho mỗi hàm\n"
+
+#: gcov.c:415
+#, c-format
+msgid "  -o, --object-directory DIR|FILE Search for object files in DIR or called FILE\n"
+msgstr ""
+"  -o, --object-directory TMỤC|TỆP\n"
+"        Quét thư mục này hoặc tập tin được gọi này tìm tập tin đối tượng\n"
+
+#: gcov.c:416
+#, c-format
+msgid "  -p, --preserve-paths            Preserve all pathname components\n"
+msgstr "  -p, --preserve-paths            Bảo tồn tất cả các thành phần tên đường dẫn\n"
+
+#: gcov.c:417
+#, c-format
+msgid "  -u, --unconditional-branches    Show unconditional branch counts too\n"
+msgstr "  -u, --unconditional-branches    Cũng hiển thị số đếm các nhánh không điều khiển\n"
+
+#: gcov.c:418
+#, c-format
+msgid ""
+"\n"
+"For bug reporting instructions, please see:\n"
+"%s.\n"
+msgstr ""
+"\n"
+"Để tìm hướng dẫn về thông báo lỗi, thăm địa chỉ:\n"
+"%s.\n"
+
+# Literal: don't translate; Nghĩa chữ : dừng dịch
+#: gcov.c:428
+#, c-format
+msgid "gcov %s%s\n"
+msgstr "gcov %s%s\n"
+
+#: gcov.c:432
+#, c-format
+msgid ""
+"This is free software; see the source for copying conditions.\n"
+"There is NO warranty; not even for MERCHANTABILITY or \n"
+"FITNESS FOR A PARTICULAR PURPOSE.\n"
+"\n"
+msgstr ""
+"Đây là phần mềm tự do : bạn có quyền sửa đổi và phát hành lại nó.\n"
+"KHÔNG CÓ BẢO HÀNH GÌ CẢ, THẬM CHÍ KHÔNG CÓ BẢO ĐẢM ĐƯỢC NGỤ Ý\n"
+"KHẢ NĂNG BÁN HAY KHẢ NĂNG LÀM ĐƯỢC VIỆC DỨT KHOÁT.\n"
+"\n"
+
+#: gcov.c:528
+#, c-format
+msgid "%s:no functions found\n"
+msgstr "%s: không tìm thấy hàm\n"
+
+#: gcov.c:560 gcov.c:588
+#, c-format
+msgid "\n"
+msgstr "\n"
+
+#: gcov.c:575
+#, c-format
+msgid "%s:creating '%s'\n"
+msgstr "%s: đang tạo « %s »\n"
+
+#: gcov.c:579
+#, c-format
+msgid "%s:error writing output file '%s'\n"
+msgstr "%s: gặp lỗi khi ghi tập tin kết xuất « %s »\n"
+
+#: gcov.c:584
+#, c-format
+msgid "%s:could not open output file '%s'\n"
+msgstr "%s: không thể mở tập tin kết xuất « %s »\n"
+
+#: gcov.c:733
+#, c-format
+msgid "%s:source file is newer than graph file '%s'\n"
+msgstr "%s: tập tin nguồn vẫn mới hơn tập tin đồ thị « %s »\n"
+
+#: gcov.c:738
+#, c-format
+msgid "(the message is only displayed one per source file)\n"
+msgstr "(thông điệp này được hiển thị chỉ một lần cho mỗi tập tin nguồn)\n"
+
+#: gcov.c:762
+#, c-format
+msgid "%s:cannot open graph file\n"
+msgstr "%s: không thể mở tập tin đồ thị\n"
+
+#: gcov.c:768
+#, c-format
+msgid "%s:not a gcov graph file\n"
+msgstr "%s: không phải là một tập tin đồ thị gcov\n"
+
+#: gcov.c:781
+#, c-format
+msgid "%s:version '%.4s', prefer '%.4s'\n"
+msgstr "%s: phiên bản « %.4s » mà thích « %.4s » hơn\n"
+
+#: gcov.c:833
+#, c-format
+msgid "%s:already seen blocks for '%s'\n"
+msgstr "%s: đã thấy khối cho « %s »\n"
+
+#: gcov.c:951
+#, c-format
+msgid "%s:corrupted\n"
+msgstr "%s: bị hỏng\n"
+
+#: gcov.c:1027
+#, c-format
+msgid "%s:cannot open data file, assuming not executed\n"
+msgstr "%s: không thể mở tập tin dữ liệu, giả sử là nó chưa thực hiện\n"
+
+#: gcov.c:1034
+#, c-format
+msgid "%s:not a gcov data file\n"
+msgstr "%s: không phải là một tập tin dữ liệu gcov\n"
+
+#: gcov.c:1047
+#, c-format
+msgid "%s:version '%.4s', prefer version '%.4s'\n"
+msgstr "%s: phiên bản « %.4s » mà thích phiên bản « %.4s » hơn\n"
+
+#: gcov.c:1053
+#, c-format
+msgid "%s:stamp mismatch with graph file\n"
+msgstr "%s: dấu hiệu không tương ứng với tập tin đồ thị\n"
+
+#: gcov.c:1083
+#, c-format
+msgid "%s:unknown function '%u'\n"
+msgstr "%s: không rõ hàm « %u »\n"
+
+#: gcov.c:1097
+#, c-format
+msgid "%s:profile mismatch for '%s'\n"
+msgstr "%s: hồ sơ không tương ứng với « %s »\n"
+
+#: gcov.c:1116
+#, c-format
+msgid "%s:overflowed\n"
+msgstr "%s: bị tràn\n"
+
+#: gcov.c:1140
+#, c-format
+msgid "%s:'%s' lacks entry and/or exit blocks\n"
+msgstr "%s: « %s » còn thiếu khối đi vào và/hay đi ra\n"
+
+#: gcov.c:1145
+#, c-format
+msgid "%s:'%s' has arcs to entry block\n"
+msgstr "%s: « %s » có cung đến khối đi vào\n"
+
+#: gcov.c:1153
+#, c-format
+msgid "%s:'%s' has arcs from exit block\n"
+msgstr "%s: « %s » có cung từ khối đi vào\n"
+
+#: gcov.c:1361
+#, c-format
+msgid "%s:graph is unsolvable for '%s'\n"
+msgstr "%s: đồ thị không thể giải được cho « %s »\n"
+
+#: gcov.c:1441
+#, c-format
+msgid "%s '%s'\n"
+msgstr "%s « %s »\n"
+
+#: gcov.c:1444
+#, c-format
+msgid "Lines executed:%s of %d\n"
+msgstr "Dòng được thực hiện: %s trên %d\n"
+
+#: gcov.c:1448
+#, c-format
+msgid "No executable lines\n"
+msgstr "Không có dòng thực thị\n"
+
+#: gcov.c:1454
+#, c-format
+msgid "Branches executed:%s of %d\n"
+msgstr "Nhánh được thực hiện: %s trên %d\n"
+
+#: gcov.c:1458
+#, c-format
+msgid "Taken at least once:%s of %d\n"
+msgstr "Đã lấy ít nhất một lần: %s trên %d\n"
+
+#: gcov.c:1464
+#, c-format
+msgid "No branches\n"
+msgstr "Không có nhánh\n"
+
+#: gcov.c:1466
+#, c-format
+msgid "Calls executed:%s of %d\n"
+msgstr "Cuộc gọi được thực hiện: %s trên %d\n"
+
+#: gcov.c:1470
+#, c-format
+msgid "No calls\n"
+msgstr "Không có cuộc gọi\n"
+
+#: gcov.c:1630
+#, c-format
+msgid "%s:no lines for '%s'\n"
+msgstr "%s: không có dòng cho « %s »\n"
+
+#: gcov.c:1825
+#, c-format
+msgid "call   %2d returned %s\n"
+msgstr "cuộc gọi   %2d trả lại %s\n"
+
+#: gcov.c:1830
+#, c-format
+msgid "call   %2d never executed\n"
+msgstr "cuộc gọi   %2d chưa bao giờ thực hiện\n"
+
+#: gcov.c:1835
+#, c-format
+msgid "branch %2d taken %s%s\n"
+msgstr "nhánh %2d được lấy %s%s\n"
+
+#: gcov.c:1839
+#, c-format
+msgid "branch %2d never executed\n"
+msgstr "nhánh %2d chưa bao giờ thực hiện\n"
+
+#: gcov.c:1844
+#, c-format
+msgid "unconditional %2d taken %s\n"
+msgstr "%2d không điều kiện được lấy %s\n"
+
+#: gcov.c:1847
+#, c-format
+msgid "unconditional %2d never executed\n"
+msgstr "%2d không điều kiện chưa bao giờ thực hiện\n"
+
+#: gcov.c:1883
+#, c-format
+msgid "%s:cannot open source file\n"
+msgstr "%s: không thể mở tập tin nguồn\n"
+
+#: gcse.c:3952
+msgid "PRE disabled"
+msgstr "PRE bị tắt"
+
+#: gcse.c:4433
+msgid "GCSE disabled"
+msgstr "GCSE bị tắt"
+
+#: gcse.c:4950
+msgid "const/copy propagation disabled"
+msgstr "Chức năng lan truyền hằng số / sao chép bị tắt"
+
+#: incpath.c:76
+#, c-format
+msgid "ignoring duplicate directory \"%s\"\n"
+msgstr "đang bỏ qua thư mục trùng « %s »\n"
+
+#: incpath.c:79
+#, c-format
+msgid "  as it is a non-system directory that duplicates a system directory\n"
+msgstr "  vì nó là một thư mục không phải hệ thống mà nhân đôi một thư mục hệ thống\n"
+
+#: incpath.c:83
+#, c-format
+msgid "ignoring nonexistent directory \"%s\"\n"
+msgstr "đang bỏ qua thư mục không tồn tại « %s »\n"
+
+#: incpath.c:345
+#, c-format
+msgid "#include \"...\" search starts here:\n"
+msgstr "#include \"...\" việc tìm kiếm bắt đầu ở đây:\n"
+
+#: incpath.c:349
+#, c-format
+msgid "#include <...> search starts here:\n"
+msgstr "#include <...> việc tìm kiếm bắt đầu ở đây:\n"
+
+#: incpath.c:354
+#, c-format
+msgid "End of search list.\n"
+msgstr "Kết thúc danh sách tìm kiếm.\n"
+
+#. Opening quotation mark.
+#: intl.c:64
+msgid "`"
+msgstr "« "
+
+#. Closing quotation mark.
+#: intl.c:67
+msgid "'"
+msgstr " »"
+
+#: langhooks.c:355
+msgid "At top level:"
+msgstr "Ở cấp đầu :"
+
+#: langhooks.c:375 cp/error.c:2690
+#, c-format
+msgid "In member function %qs"
+msgstr "Trong hàm bộ phận %qs"
+
+#: langhooks.c:379 cp/error.c:2693
+#, c-format
+msgid "In function %qs"
+msgstr "Trong hàm %qs"
+
+#: langhooks.c:430 cp/error.c:2643
+#, c-format
+msgid "    inlined from %qs at %s:%d:%d"
+msgstr "    trực tiếp từ %qs tại %s:%d:%d"
+
+#: langhooks.c:435 cp/error.c:2648
+#, c-format
+msgid "    inlined from %qs at %s:%d"
+msgstr "    trực tiếp từ %qs tại %s:%d"
+
+#: langhooks.c:441 cp/error.c:2654
+#, c-format
+msgid "    inlined from %qs"
+msgstr "    trực tiếp từ %qs"
+
+#: loop-iv.c:2966 tree-ssa-loop-niter.c:1876
+msgid "assuming that the loop is not infinite"
+msgstr "giả sử rằng vòng lặp có giới hạn"
+
+#: loop-iv.c:2967 tree-ssa-loop-niter.c:1877
+msgid "cannot optimize possibly infinite loops"
+msgstr "không thể tối ưu hoá vòng lặp có thể là vô hạn"
+
+#: loop-iv.c:2975 tree-ssa-loop-niter.c:1881
+msgid "assuming that the loop counter does not overflow"
+msgstr "giả sử rằng bộ đếm vòng lặp không bị tràn"
+
+#: loop-iv.c:2976 tree-ssa-loop-niter.c:1882
+msgid "cannot optimize loop, the loop counter may overflow"
+msgstr "không thể tối ưu hoá vòng lặp vì bộ đếm vòng lặp có thể bị tràn"
+
+#: lto-wrapper.c:184
+#, c-format
+msgid "%s terminated with signal %d [%s], core dumped"
+msgstr "%s bị chấm dứt với tín hiệu %d [%s], cũng đổ lõi"
+
+#: lto-wrapper.c:187
+#, c-format
+msgid "%s terminated with signal %d [%s]"
+msgstr "%s bị chấm dứt với tín hiệu %d [%s]"
+
+#: lto-wrapper.c:192 collect2.c:2011
+#, gcc-internal-format
+msgid "%s returned %d exit status"
+msgstr "%s trả lại trạng thái thoát %d"
+
+#: lto-wrapper.c:207
+#, c-format
+msgid "deleting LTRANS file %s"
+msgstr "đang xoá bỏ tập tin LTRANS %s"
+
+#: lto-wrapper.c:229
+#, c-format
+msgid "failed to open %s"
+msgstr "không mở được %s"
+
+#: lto-wrapper.c:234
+#, c-format
+msgid "could not write to temporary file %s"
+msgstr "không thể ghi vào tập tin tạm thời %s"
+
+#: lto-wrapper.c:296 lto-wrapper.c:377
+#, c-format
+msgid "invalid LTO mode"
+msgstr "sai lập chế độ LTO"
+
+# Literal: don't translate; Nghĩa chữ : dừng dịch
+#: lto-wrapper.c:368
+#, c-format
+msgid "fopen: %s"
+msgstr "fopen: %s"
+
+#. What to print when a switch has no documentation.
+#: opts.c:341
+msgid "This switch lacks documentation"
+msgstr "Cái chuyển này còn thiếu tài liệu hướng dẫn"
+
+#: opts.c:1310
+msgid "[enabled]"
+msgstr "[đã bật]"
+
+#: opts.c:1310
+msgid "[disabled]"
+msgstr "[bị tắt]"
+
+#: opts.c:1325
+#, c-format
+msgid " No options with the desired characteristics were found\n"
+msgstr " Không tìm thấy tuỳ chọn có những đặc điểm đã muốn\n"
+
+#: opts.c:1334
+#, c-format
+msgid " None found.  Use --help=%s to show *all* the options supported by the %s front-end\n"
+msgstr " Không tìm thấy. Hãy sử dụng « --help=%s » để hiển thị * tất cả * các tuỳ chọn được giao diện %s hỗ trợ\n"
+
+#: opts.c:1340
+#, c-format
+msgid " All options with the desired characteristics have already been displayed\n"
+msgstr " Đã hiển thị tất cả các tuỳ chọn có những đặc điểm đã muốn\n"
+
+#: opts.c:1394
+msgid "The following options are target specific"
+msgstr "Theo đây có những tuỳ chọn đặc trưng cho đích"
+
+#: opts.c:1397
+msgid "The following options control compiler warning messages"
+msgstr "Theo đây có những tuỳ chọn điều khiển các thông điệp cảnh báo của bộ biên dịch"
+
+#: opts.c:1400
+msgid "The following options control optimizations"
+msgstr "Theo đây có những tuỳ chọn điều khiển việc tối ưu hoá"
+
+#: opts.c:1403 opts.c:1442
+msgid "The following options are language-independent"
+msgstr "Theo đây có những tuỳ chọn không phụ thuộc vào ngôn ngữ"
+
+#: opts.c:1406
+msgid "The --param option recognizes the following as parameters"
+msgstr "Tuỳ chọn « --param » nhận ra những điều theo đây như là tham số"
+
+#: opts.c:1412
+msgid "The following options are specific to just the language "
+msgstr "Theo đây có những tuỳ chọn đặc trưng cho chỉ ngôn ngữ "
+
+#: opts.c:1414
+msgid "The following options are supported by the language "
+msgstr "Theo đây có những tuỳ chọn được hỗ trợ bởi ngôn ngữ "
+
+#: opts.c:1425
+msgid "The following options are not documented"
+msgstr "Theo đây có những tuỳ chọn không có tài liệu diễn tả"
+
+#: opts.c:1427
+msgid "The following options take separate arguments"
+msgstr "Theo đây có những tuỳ chọn chấp nhận các đối số riêng"
+
+#: opts.c:1429
+msgid "The following options take joined arguments"
+msgstr "Theo đây có những tuỳ chọn chấp nhận các đối số nối lại"
+
+#: opts.c:1440
+msgid "The following options are language-related"
+msgstr "Theo đây có những tuỳ chọn liên quan đến ngôn ngữ"
+
+#: opts.c:1600
+#, c-format
+msgid "warning: --help argument %.*s is ambiguous, please be more specific\n"
+msgstr "cảnh báo : đối số « --help » %.*s vẫn mơ hồ, hãy chính xác hơn\n"
+
+#: opts.c:1608
+#, c-format
+msgid "warning: unrecognized argument to --help= option: %.*s\n"
+msgstr "cảnh báo : không nhận ra đối số tới tuỳ chọn « --help= »: %.*s\n"
+
+#: plugin.c:765
+msgid "Event"
+msgstr "Dữ kiện"
+
+#: plugin.c:765
+msgid "Plugins"
+msgstr "Phần bổ sung"
+
+#: reload.c:3821
+msgid "unable to generate reloads for:"
+msgstr "không thể tạo ra việc nạp lại cho :"
+
+#: reload1.c:2158
+msgid "this is the insn:"
+msgstr "đây là lệnh:"
+
+#. It's the compiler's fault.
+#: reload1.c:5693
+msgid "could not find a spill register"
+msgstr "không tìm thấy một thanh ghi làm tràn"
+
+#. It's the compiler's fault.
+#: reload1.c:7678
+msgid "VOIDmode on an output"
+msgstr "Chế độ VOIDmode trên một đầu ra"
+
+#: reload1.c:8433
+msgid "Failure trying to reload:"
+msgstr "Không thành công khi thử nạp lại:"
+
+#: rtl-error.c:120
+msgid "unrecognizable insn:"
+msgstr "không nhận ra lệnh:"
+
+#: rtl-error.c:122
+msgid "insn does not satisfy its constraints:"
+msgstr "lệnh không thỏa những ràng buộc của nó :"
+
+#: timevar.c:411
+msgid ""
+"\n"
+"Execution times (seconds)\n"
+msgstr ""
+"\n"
+"Thời gian thực hiện (giây)\n"
+
+#. Print total time.
+#: timevar.c:469
+msgid " TOTAL                 :"
+msgstr " TỔNG                 :"
+
+#: timevar.c:502
+#, c-format
+msgid "time in %s: %ld.%06ld (%ld%%)\n"
+msgstr "thời gian theo %s: %ld.%06ld (%ld%%)\n"
+
+#: tlink.c:383
+#, c-format
+msgid "collect: reading %s\n"
+msgstr "tập hợp: đang đọc %s\n"
+
+#: tlink.c:477
+#, c-format
+msgid "removing .rpo file"
+msgstr "đang gỡ bỏ tập tin .rpo"
+
+#: tlink.c:479
+#, c-format
+msgid "renaming .rpo file"
+msgstr "đang thay tên tập tin .rpo"
+
+#: tlink.c:533
+#, c-format
+msgid "collect: recompiling %s\n"
+msgstr "tập hợp: đang biên dịch lại %s\n"
+
+#: tlink.c:740
+#, c-format
+msgid "collect: tweaking %s in %s\n"
+msgstr "tập hợp: đang điều chỉnh %s trong %s\n"
+
+#: tlink.c:790
+#, c-format
+msgid "collect: relinking\n"
+msgstr "tập hợp: đang liên kết lại\n"
+
+#: toplev.c:625
+#, c-format
+msgid "unrecoverable error"
+msgstr "lỗi không thể phục hồi được"
+
+#: toplev.c:1217
+#, c-format
+msgid ""
+"%s%s%s %sversion %s (%s)\n"
+"%s\tcompiled by GNU C version %s, "
+msgstr ""
+"%s%s%s %sversion %s (%s)\n"
+"%s\tbiên dịch bằng GNU C phiên bản %s, "
+
+#: toplev.c:1219
+#, c-format
+msgid "%s%s%s %sversion %s (%s) compiled by CC, "
+msgstr "%s%s%s %sversion %s (%s) biên dịch bằng CC, "
+
+#: toplev.c:1223
+#, c-format
+msgid "GMP version %s, MPFR version %s, MPC version %s\n"
+msgstr "GMP phiên bản %s, MPFR phiên bản %s, MPC phiên bản %s\n"
+
+#: toplev.c:1225
+#, c-format
+msgid "%s%swarning: %s header version %s differs from library version %s.\n"
+msgstr "%s%swarning: phiên bản phần đầu %s %s vẫn khác với phiên bản thư viện %s.\n"
+
+#: toplev.c:1227
+#, c-format
+msgid "%s%sGGC heuristics: --param ggc-min-expand=%d --param ggc-min-heapsize=%d\n"
+msgstr "%s%sGGC tìm ra: --param ggc-min-expand=%d --param ggc-min-heapsize=%d\n"
+
+#: toplev.c:1390
+msgid "options passed: "
+msgstr "tuỳ chọn được gửi: "
+
+#: toplev.c:1425
+msgid "options enabled: "
+msgstr "tuỳ chọn đã bật: "
+
+#: toplev.c:1560
+#, c-format
+msgid "created and used with differing settings of '%s'"
+msgstr "được tạo và sử dụng với thiết lập khác nhau của « %s »"
+
+#: toplev.c:1562
+msgid "out of memory"
+msgstr "không đủ bộ nhớ"
+
+#: toplev.c:1577
+msgid "created and used with different settings of -fpic"
+msgstr "được tạo và sử dụng với thiết lập khác nhau của « -fpic »"
+
+#: toplev.c:1579
+msgid "created and used with different settings of -fpie"
+msgstr "được tạo và sử dụng với thiết lập khác nhau của « -fpie »"
+
+#: tree-vrp.c:6503
+msgid "assuming signed overflow does not occur when simplifying && or || to & or |"
+msgstr "giả sử rằng sự tràn đã ký không xảy ra khi giản dị hoá && hoặc || tới & hoặc |"
+
+#: tree-vrp.c:6507
+msgid "assuming signed overflow does not occur when simplifying ==, != or ! to identity or ^"
+msgstr "giả sử rằng sự tràn đã ký không xảy ra khi giản dị hoá ==, != hoặc ! tới đặc tính hoặc ^"
+
+#: cif-code.def:39
+msgid "function not considered for inlining"
+msgstr "hàm không phải được tính để chèn vào trực tiếp"
+
+#. Inlining failed owing to unavailable function body.
+#: cif-code.def:42
+msgid "function body not available"
+msgstr "thân hàm không sẵn sàng"
+
+#: cif-code.def:45
+msgid "redefined extern inline functions are not considered for inlining"
+msgstr "hàm trực tiếp bên ngoài đã xác định lại thì không phải được tính để chèn vào trực tiếp"
+
+#. Function is not inlinable.
+#: cif-code.def:49
+msgid "function not inlinable"
+msgstr "hàm không thể chèn vào trực tiếp"
+
+#. Function is not an inlining candidate.
+#: cif-code.def:52
+msgid "function not inline candidate"
+msgstr "hàm không phải là ứng xử để chèn vào trực tiếp"
+
+#: cif-code.def:56
+msgid "--param large-function-growth limit reached"
+msgstr "đã tới giới hạn « --param large-function-growth »"
+
+#: cif-code.def:58
+msgid "--param large-stack-frame-growth limit reached"
+msgstr "đã tới giới hạn « --param large-stack-frame-growth »"
+
+#: cif-code.def:60
+msgid "--param max-inline-insns-single limit reached"
+msgstr "đã tới giới hạn « --param max-inline-insns-single »"
+
+#: cif-code.def:62
+msgid "--param max-inline-insns-auto limit reached"
+msgstr "đã tới giới hạn « --param max-inline-insns-auto »"
+
+#: cif-code.def:64
+msgid "--param inline-unit-growth limit reached"
+msgstr "đã tới giới hạn « --param inline-unit-growth »"
+
+#. Recursive inlining.
+#: cif-code.def:67
+msgid "recursive inlining"
+msgstr "chèn vào trực tiếp một cách đệ quy"
+
+#. Call is unlikely.
+#: cif-code.def:70
+msgid "call is unlikely and code size would grow"
+msgstr "cuộc gọi không chắc, và kích cỡ mã sẽ tăng lại"
+
+#: cif-code.def:74
+msgid "function not declared inline and code size would grow"
+msgstr "hàm không phải được tuyên bố trực tiếp, và kích cỡ mã sẽ tăng lại"
+
+#: cif-code.def:78
+msgid "optimizing for size and code size would grow"
+msgstr "đang tối ưu hoá cho kích cỡ, và kích cỡ mã sẽ tăng lại"
+
+#. Inlining failed because of mismatched options or arguments.
+#: cif-code.def:81
+msgid "target specific option mismatch"
+msgstr "tuỳ chọn đặc trưng cho đích vẫn không tương ứng"
+
+#: cif-code.def:82
+msgid "mismatched arguments"
+msgstr "các đối số không tương ứng với nhau"
+
+#: cif-code.def:86
+msgid "originally indirect function call not considered for inlining"
+msgstr "cuộc gọi hàm gián tiếp lần đầu tiên không phải được tính để chèn vào trực tiếp"
+
+#. The remainder are real diagnostic types.
+#: diagnostic.def:33
+msgid "fatal error: "
+msgstr "lỗi nghiêm trọng: "
+
+#: diagnostic.def:34
+msgid "internal compiler error: "
+msgstr "lỗi biên dịch nôi bộ : "
+
+#: diagnostic.def:35
+msgid "error: "
+msgstr "lỗi: "
+
+#: diagnostic.def:36
+msgid "sorry, unimplemented: "
+msgstr "tiếc là chưa thực hiện: "
+
+#: diagnostic.def:37
+msgid "warning: "
+msgstr "cảnh báo : "
+
+#: diagnostic.def:38
+msgid "anachronism: "
+msgstr "lỗi thời: "
+
+#: diagnostic.def:39
+msgid "note: "
+msgstr "ghi chú : "
+
+#: diagnostic.def:40
+msgid "debug: "
+msgstr "gỡ rối: "
+
+# Name: don't translate; Tên: đừng dịch
+#. These two would be re-classified as DK_WARNING or DK_ERROR, so the
+#. prefix does not matter.
+#: diagnostic.def:43
+msgid "pedwarn: "
+msgstr "pedwarn: "
+
+# Name: don't translate; Tên: đừng dịch
+#: diagnostic.def:44
+msgid "permerror: "
+msgstr "permerror: "
+
+#: params.def:48
+msgid "The threshold ratio between current and hottest structure counts"
+msgstr "Tỷ lệ ngưỡng giữa số đếm cấu trúc hiện thời và nóng nhất"
+
+#: params.def:55
+msgid "Maximal estimated outcome of branch considered predictable"
+msgstr "Kết quả tối đa ước lượng của nhánh được thấy là dự đoán được"
+
+#: params.def:72
+msgid "The maximum number of instructions in a single function eligible for inlining"
+msgstr "Số tối đa các lệnh trong một lệnh riêng lẻ mà thích hợp với việc chèn vào trực tiếp"
+
+#: params.def:84
+msgid "The maximum number of instructions when automatically inlining"
+msgstr "Số tối đa các lệnh khi tự động chèn vào trực tiếp"
+
+#: params.def:89
+msgid "The maximum number of instructions inline function can grow to via recursive inlining"
+msgstr "Số tối đa các lệnh đến đó hàm trực tiếp có thể tới bằng cách chèn vào trực tiếp một cách đệ quy"
+
+#: params.def:94
+msgid "The maximum number of instructions non-inline function can grow to via recursive inlining"
+msgstr "Số tối đa các lệnh đến đó hàm không phải trực tiếp có thể tới bằng cách chèn vào trực tiếp một cách đệ quy"
+
+#: params.def:99
+msgid "The maximum depth of recursive inlining for inline functions"
+msgstr "Độ sâu tối đa của việc chèn vào trực tiếp một cách đệ quy cho hàm trực tiếp"
+
+#: params.def:104
+msgid "The maximum depth of recursive inlining for non-inline functions"
+msgstr "Độ sâu tối đa của việc chèn vào trực tiếp một cách đệ quy cho hàm không phải trực tiếp"
+
+#: params.def:109
+msgid "Inline recursively only when the probability of call being executed exceeds the parameter"
+msgstr "Chèn vào trực tiếp một cách đệ quy chỉ khi xác xuất cuộc gọi được thực hiện cũng vượt quá tham số"
+
+#: params.def:117
+msgid "The maximum number of nested indirect inlining performed by early inliner"
+msgstr "Số tối đa các lần chèn vào trực tiếp loại gián tiếp lồng nhau được làm bởi bộ chèn vào trực tiếp sớm"
+
+#: params.def:124
+msgid "If -fvariable-expansion-in-unroller is used, the maximum number of times that an individual variable will be expanded during loop unrolling"
+msgstr "Dùng « -fvariable-expansion-in-unroller » thì số tối đa các lần mở rộng một biến nào đó trong khi bỏ cuộn vòng lặp"
+
+#: params.def:130
+msgid "If -ftree-vectorize is used, the minimal loop bound of a loop to be considered for vectorization"
+msgstr "Dùng « -ftree-vectorize » thì biên giới vòng lặp tối thiểu của một vòng lặp cần tính để véc-tơ hoá"
+
+#: params.def:141
+msgid "The maximum number of instructions to consider to fill a delay slot"
+msgstr "Số tối đa các lệnh cần tính để điền vào một khe đợi"
+
+#: params.def:152
+msgid "The maximum number of instructions to consider to find accurate live register information"
+msgstr "Số tối đa các lệnh cần tính để tìm thông tin thanh ghi vẫn hiện thời và chính xác"
+
+#: params.def:162
+msgid "The maximum length of scheduling's pending operations list"
+msgstr "Chiều dài tối đa của danh sách các thao tác bị hoãn của tiến trình định thời"
+
+#: params.def:167
+msgid "The size of function body to be considered large"
+msgstr "Kích cỡ thân hàm cần thấy là lớn"
+
+#: params.def:171
+msgid "Maximal growth due to inlining of large function (in percent)"
+msgstr "Độ tăng lên tối đa (theo phần trăm) do chèn hàm lớn vào trực tiếp"
+
+#: params.def:175
+msgid "The size of translation unit to be considered large"
+msgstr "Kích cỡ đơn vị thông dịch cần thấy là lớn"
+
+#: params.def:179
+msgid "How much can given compilation unit grow because of the inlining (in percent)"
+msgstr "Độ tăng lên (theo phần trăm) được phép cho đơn vị biên dịch đưa ra do việc chèn vào trực tiếp"
+
+#: params.def:183
+msgid "How much can given compilation unit grow because of the interprocedural constant propagation (in percent)"
+msgstr "Độ tăng lên (theo phần trăm) được phép cho đơn vị biên dịch đưa ra do sự lan truyền bất biến thuộc liên quá trình"
+
+#: params.def:187
+msgid "Maximal estimated growth of function body caused by early inlining of single call"
+msgstr "Độ tăng lên tối đa ước lượng của thân hàm do chèn vào trực tiếp sớm một cuộc gọi riêng lẻ"
+
+#: params.def:191
+msgid "The size of stack frame to be considered large"
+msgstr "Kích cỡ khung đống nên thấy là lớn"
+
+#: params.def:195
+msgid "Maximal stack frame growth due to inlining (in percent)"
+msgstr "Độ tăng lên khung đống tối đa (theo phần trăm) do chèn vào trực tiếp"
+
+#: params.def:202
+msgid "The maximum amount of memory to be allocated by GCSE"
+msgstr "Vùng nhớ tối đa cho GCSE cấp phát"
+
+#: params.def:213
+msgid "The threshold ratio for performing partial redundancy elimination after reload"
+msgstr "Tỷ lệ ngững để thực hiện việc khử bộ phận sự thửa sau khi nạp lại"
+
+#: params.def:220
+msgid "The threshold ratio of critical edges execution count that permit performing redundancy elimination after reload"
+msgstr "Tỷ lệ ngững của số đếm lần thực hiện cạnh tới hạn cũng cho phép thực hiện việc khử sự thửa sau khi nạp lại"
+
+#: params.def:231
+msgid "The maximum number of instructions to consider to unroll in a loop"
+msgstr "Số tối đa các lệnh cần tính nên bỏ cuộn trong một vòng lặp"
+
+#: params.def:237
+msgid "The maximum number of instructions to consider to unroll in a loop on average"
+msgstr "Số tối đa các lệnh trung bình cần tính nên bỏ cuộn trong một vòng lặp"
+
+#: params.def:242
+msgid "The maximum number of unrollings of a single loop"
+msgstr "Số tối đa các lần bỏ cuộn một vòng lặp riêng lẻ"
+
+#: params.def:247
+msgid "The maximum number of insns of a peeled loop"
+msgstr "Số tối đa các lệnh của một vòng lặp được lột"
+
+#: params.def:252
+msgid "The maximum number of peelings of a single loop"
+msgstr "Số tối đa các lần lột một vòng lặp riêng lẻ"
+
+#: params.def:257
+msgid "The maximum number of insns of a completely peeled loop"
+msgstr "Số tối đa các lệnh của một vòng lặp được lột hoàn toàn"
+
+#: params.def:262
+msgid "The maximum number of peelings of a single loop that is peeled completely"
+msgstr "Số tối đa các lần lột một vòng lặp riêng lẻ được lột hoàn toàn"
+
+#: params.def:267
+msgid "The maximum number of insns of a peeled loop that rolls only once"
+msgstr "Số tối đa các lệnh của một vòng lặp được lột mà cuộn chỉ một lần"
+
+#: params.def:272
+msgid "The maximum depth of a loop nest we completely peel"
+msgstr "Độ sâu tối đa của một bộ vòng lặp xếp lồng vào nhau được chúng ta lột hoàn toàn"
+
+#: params.def:278
+msgid "The maximum number of insns of an unswitched loop"
+msgstr "Số tối đa các lệnh của một vòng lặp chưa chuyển đổi nhánh"
+
+#: params.def:283
+msgid "The maximum number of unswitchings in a single loop"
+msgstr "Số tối đa các lần hủy chuyển đổi nhánh trong một vòng lặp riêng lẻ"
+
+#: params.def:290
+msgid "Bound on the number of iterations the brute force # of iterations analysis algorithm evaluates"
+msgstr "Đóng kết với số các lần lặp lại được ước lượng bởi thuật toán phân tích số sức mạnh vũ phu các lần lặp lại "
+
+#: params.def:296
+msgid "Bound on the cost of an expression to compute the number of iterations"
+msgstr "Đóng kết với giá của một biểu tượng để tính số các lần lặp lại"
+
+#: params.def:302
+msgid "A factor for tuning the upper bound that swing modulo scheduler uses for scheduling a loop"
+msgstr "Một hệ số để điều hưởng giới hạn trên được bộ định thời mô-đu-lô swing sử dụng để định thời một vòng lặp"
+
+#: params.def:306
+msgid "The number of cycles the swing modulo scheduler considers when checking conflicts using DFA"
+msgstr "Số các chu kỳ được bộ định thời mô-đu-lô swing tính khi kiểm tra sự xung đột bằng DFA"
+
+#: params.def:310
+msgid "A threshold on the average loop count considered by the swing modulo scheduler"
+msgstr "Một ngưỡng trên số trung bình đếm vòng lặp được bộ định thời mô-đu-lô swing tính"
+
+#: params.def:315
+msgid "Select fraction of the maximal count of repetitions of basic block in program given basic block needs to have to be considered hot"
+msgstr "Chọn phân số của số tối đa đếm lần lặp lại khối cơ bản trong chương trình mà cũng quy định rằng khối cơ bản cần phải được thấy là nóng"
+
+#: params.def:319
+msgid "Select fraction of the maximal frequency of executions of basic block in function given basic block needs to have to be considered hot"
+msgstr "Chọn phân số của tần số tối đa lần thực hiện khối cơ bản trong hàm mà cũng quy định rằng khối cơ bản cần phải được thấy là nóng"
+
+#: params.def:324
+msgid "Select fraction of the maximal frequency of executions of basic block in function given basic block get alignment"
+msgstr "Chọn phân số của tần số tối đa lần thực hiện khối cơ bản trong hàm mà cũng quy định rằng khối cơ bản được xếp hàng"
+
+#: params.def:329
+msgid "Loops iterating at least selected number of iterations will get loop alignement."
+msgstr "Vòng lặp nào lặp lại ít nhất số lần lặp lại được chọn thì được xếp hàng các vòng lặp"
+
+#: params.def:345
+msgid "The maximum number of loop iterations we predict statically"
+msgstr "Số tối đa các lần lặp lại vòng lặp dự đoán một cách tĩnh"
+
+#: params.def:349
+msgid "The percentage of function, weighted by execution frequency, that must be covered by trace formation. Used when profile feedback is available"
+msgstr "Phần trăm hàm (tăng cấp theo tần số thực hiện) mà phải được bao quát bởi việc tạo vết. Được sử dụng khi có sẵn sàng thông tin phản hồi từ hồ sơ"
+
+#: params.def:353
+msgid "The percentage of function, weighted by execution frequency, that must be covered by trace formation. Used when profile feedback is not available"
+msgstr "Phần trăm hàm (tăng cấp theo tần số thực hiện) mà phải được bao quát bởi việc tạo vết. Được sử dụng khi không có sẵn sàng thông tin phản hồi từ hồ sơ"
+
+#: params.def:357
+msgid "Maximal code growth caused by tail duplication (in percent)"
+msgstr "Độ tâng lên tối đa (theo phần trăm) do đuôi bị nhân đôi"
+
+#: params.def:361
+msgid "Stop reverse growth if the reverse probability of best edge is less than this threshold (in percent)"
+msgstr "Dừng tăng lên ngược nếu xác xuất ngược có cạnh tốt nhất vẫn nhỏ hơn ngưỡng này (theo phần trăm)"
+
+#: params.def:365
+msgid "Stop forward growth if the probability of best edge is less than this threshold (in percent). Used when profile feedback is available"
+msgstr "Dừng tăng lên tiếp nếu xác xuất có cạnh tốt nhất vẫn nhỏ hơn ngưỡng này (theo phần trăm). Được sử dụng khi có sẵn sàng thông tin phản hồi từ hồ sơ"
+
+#: params.def:369
+msgid "Stop forward growth if the probability of best edge is less than this threshold (in percent). Used when profile feedback is not available"
+msgstr "Dừng tăng lên tiếp nếu xác xuất có cạnh tốt nhất vẫn nhỏ hơn ngưỡng này (theo phần trăm). Được sử dụng khi không có sẵn sàng thông tin phản hồi từ hồ sơ"
+
+#: params.def:375
+msgid "The maximum number of incoming edges to consider for crossjumping"
+msgstr "Số tối đa các cạnh gửi đến cần tính để nhảy chéo"
+
+#: params.def:381
+msgid "The minimum number of matching instructions to consider for crossjumping"
+msgstr "Số tối thiểu các lệnh tương ứng cần tính để nhảy chéo"
+
+#: params.def:387
+msgid "The maximum expansion factor when copying basic blocks"
+msgstr "Hệ số mở rộng tối đa khi sao chép khối cơ bản"
+
+#: params.def:393
+msgid "The maximum number of insns to duplicate when unfactoring computed gotos"
+msgstr "Số tối đa các lệnh cần nhân đôi khi gỡ bỏ hệ số khỏi goto đã tính"
+
+#: params.def:399
+msgid "The maximum length of path considered in cse"
+msgstr "Chiều dài tối đa của đường dẫn được tính trong CSE"
+
+#: params.def:403
+msgid "The maximum instructions CSE process before flushing"
+msgstr "Số tối đa các lệnh được CSE xử lý trước khi chuyển hết ra ngoài"
+
+#: params.def:410
+msgid "The minimum cost of an expensive expression in the loop invariant motion"
+msgstr "Giá tối thiểu của một biểu tượng giá rất cao trong sự chuyển động bất biến vòng lặp"
+
+#: params.def:419
+msgid "Bound on number of candidates below that all candidates are considered in iv optimizations"
+msgstr "Đóng kết với số các điều ứng cử dưới đó tất cả các điều ứng cử được tính trong sự tối ưu hoá iv"
+
+#: params.def:427
+msgid "Bound on number of iv uses in loop optimized in iv optimizations"
+msgstr "Đóng kết với số các lần sử dụng iv trong vòng lặp được tối ưu hoá bằng sự tối ưu hoá iv"
+
+#: params.def:435
+msgid "If number of candidates in the set is smaller, we always try to remove unused ivs during its optimization"
+msgstr "Gặp tập hợp chứa số nhỏ hơn các điều ứng cử thì lúc nào cũng thử gỡ bỏ iv chưa dùng nào trong khi tối ưu hoá nó"
+
+#: params.def:440
+msgid "Bound on size of expressions used in the scalar evolutions analyzer"
+msgstr "Đóng kết với kích cỡ biểu tượng được sử dụng trong bộ phân tích sự khai căn vô hướng"
+
+#: params.def:445
+msgid "Bound on the number of variables in Omega constraint systems"
+msgstr "Đóng kết với số các biến trong hệ thống ràng buộc Omega"
+
+#: params.def:450
+msgid "Bound on the number of inequalities in Omega constraint systems"
+msgstr "Đóng kết với số các bất đẳng thức trong hệ thống ràng buộc Omega"
+
+#: params.def:455
+msgid "Bound on the number of equalities in Omega constraint systems"
+msgstr "Đóng kết với số các đẳng thức trong hệ thống ràng buộc Omega"
+
+#: params.def:460
+msgid "Bound on the number of wild cards in Omega constraint systems"
+msgstr "Đóng kết với số các yếu tố đại diện trong hệ thống ràng buộc Omega"
+
+#: params.def:465
+msgid "Bound on the size of the hash table in Omega constraint systems"
+msgstr "Đóng kết với kích cỡ của bảng chuỗi duy nhất trong hệ thống ràng buộc Omega"
+
+#: params.def:470
+msgid "Bound on the number of keys in Omega constraint systems"
+msgstr "Đóng kết với số các khoá trong hệ thống ràng buộc Omega"
+
+#: params.def:475
+msgid "When set to 1, use expensive methods to eliminate all redundant constraints"
+msgstr "Nếu lập thành 1 thì sử dụng phương pháp giá cao để loại trừ tất cả các ràng buộc thừa"
+
+#: params.def:480
+msgid "Bound on number of runtime checks inserted by the vectorizer's loop versioning for alignment check"
+msgstr "Đóng kết với số các sự kiểm tra lúc chạy được chèn bởi việc kiểm tra phiên bản vòng lặp để xếp hàng của bộ véc-tơ hoá"
+
+#: params.def:485
+msgid "Bound on number of runtime checks inserted by the vectorizer's loop versioning for alias check"
+msgstr "Đóng kết với số các sự kiểm tra lúc chạy được chèn bởi việc kiểm tra phiên bản vòng lặp cho bí danh của bộ véc-tơ hoá"
+
+#: params.def:490
+msgid "The maximum memory locations recorded by cselib"
+msgstr "Số tối đa các vị trí bộ nhớ được thư viện cselib ghi lưu"
+
+#: params.def:503
+msgid "Minimum heap expansion to trigger garbage collection, as a percentage of the total size of the heap"
+msgstr "Sự mở rộng miền nhớ tối thiểu để gây ra tập hợp rác, theo phần trăm của kích cỡ miền nhớ hoàn toàn"
+
+#: params.def:508
+msgid "Minimum heap size before we start collecting garbage, in kilobytes"
+msgstr "Sự mở rộng miền nhớ tối thiểu (theo kilô-byte) trước khi bắt đầu tập hợp rác"
+
+#: params.def:516
+msgid "The maximum number of instructions to search backward when looking for equivalent reload"
+msgstr "Số tối đa các lệnh cần quét ngược khi tìm một sự nạp lại tương đương"
+
+#: params.def:521 params.def:531
+msgid "The maximum number of blocks in a region to be considered for interblock scheduling"
+msgstr "Số tối đa các khối mỗi vùng cần tính để định thời giữa các khối"
+
+#: params.def:526 params.def:536
+msgid "The maximum number of insns in a region to be considered for interblock scheduling"
+msgstr "Số tối đa các lệnh mỗi vùng cần tính để định thời giữa các khối"
+
+#: params.def:541
+msgid "The minimum probability of reaching a source block for interblock speculative scheduling"
+msgstr "Xác xuất tối thiểu có thể tới một khối nguồn để định thời giữa các khối một cách lý thuyết có tính chất suy đoán"
+
+#: params.def:546
+msgid "The maximum number of iterations through CFG to extend regions"
+msgstr "Số tối đa các lần lặp lại qua CFG để kéo dài vùng"
+
+#: params.def:551
+msgid "The maximum conflict delay for an insn to be considered for speculative motion"
+msgstr "Khoảng đợi xung đột tối đa trước khi một lệnh được tính để di chuyển một cách lý thuyết có tính chất suy đoán"
+
+#: params.def:556
+msgid "The minimal probability of speculation success (in percents), so that speculative insn will be scheduled."
+msgstr "Xác xuất tối thiểu (theo phần trăm) có suy đoán đúng, để định thời lệnh thuộc lý thuyết có tính chất suy đoán"
+
+#: params.def:561
+msgid "The maximum size of the lookahead window of selective scheduling"
+msgstr "Kích cỡ tối đa của cửa sổ nhìn trước của việc định thời lựa chọn"
+
+#: params.def:566
+msgid "Maximum number of times that an insn could be scheduled"
+msgstr "Số tối đa các lần có thể định thời một lệnh nào đó"
+
+#: params.def:571
+msgid "Maximum number of instructions in the ready list that are considered eligible for renaming"
+msgstr "Số tối đa các lệnh trong danh sách sẵn sàng mà được thấy là thích hợp với chức năng thay đổi tên"
+
+#: params.def:576
+msgid "Minimal distance between possibly conflicting store and load"
+msgstr "Khoảng cách tối thiểu giữa vị trí lưu và nạp có thể xung đột với nhau"
+
+#: params.def:581
+msgid "The maximum number of RTL nodes that can be recorded as combiner's last value"
+msgstr "Số tối đa các nút RTL có thể ghi lưu như là giá trị cuối cùng của bộ kết hợp"
+
+#: params.def:589
+msgid "The upper bound for sharing integer constants"
+msgstr "Biên giới trên để chia sẻ hằng số nguyên"
+
+#: params.def:608
+msgid "Minimum number of virtual mappings to consider switching to full virtual renames"
+msgstr "Số tối thiểu các sự ánh xạ ảo cần suy tính nên chuyển đổi sang tên ảo đầy đủ"
+
+#: params.def:613
+msgid "Ratio between virtual mappings and virtual symbols to do full virtual renames"
+msgstr "Tỷ lệ giữa sự ánh xạ ảo và ký hiệu ảo để thực hiện việc thay đổi tên ảo đầy đủ"
+
+#: params.def:618
+msgid "The lower bound for a buffer to be considered for stack smashing protection"
+msgstr "Biên giới dưới của một vùng đệm được tính để bảo vệ chống đống bị đập tan ra"
+
+#: params.def:636
+msgid "Maximum number of statements allowed in a block that needs to be duplicated when threading jumps"
+msgstr "Số tối đa các câu lệnh được phép trong một khối cần được nhân đôi khi sắp xếp bước nhảy theo nhánh"
+
+#: params.def:645
+msgid "Maximum number of fields in a structure before pointer analysis treats the structure as a single variable"
+msgstr "Số tối đa các trường trong một cấu trúc trước khi tiến trình phân tích hàm trỏ thấy cấu trúc đó là một biến riêng lẻ"
+
+#: params.def:650
+msgid "The maximum number of instructions ready to be issued to be considered by the scheduler during the first scheduling pass"
+msgstr "Số tối đa các câu lệnh sẵn sàng đưa ra cần được tính bởi bộ định thời trong lần đầu tiên chạy thủ tục định thời"
+
+#: params.def:660
+msgid "The number of insns executed before prefetch is completed"
+msgstr "Số các lệnh được thực hiện trước khi hoàn tất quá trình lấy sẵn (prefetch)"
+
+#: params.def:667
+msgid "The number of prefetches that can run at the same time"
+msgstr "Số các quá trình lấy sẵn có thể chạy đồng thời"
+
+#: params.def:674
+msgid "The size of L1 cache"
+msgstr "Kích cỡ của vùng nhớ tạm cấp 1"
+
+#: params.def:681
+msgid "The size of L1 cache line"
+msgstr "Kích cỡ của đường vùng nhớ tạm cấp 1"
+
+#: params.def:688
+msgid "The size of L2 cache"
+msgstr "Kích cỡ của vùng nhớ tạm cấp 2"
+
+#: params.def:699
+msgid "Whether to use canonical types"
+msgstr "Có nên sử dụng loại hợp nguyên tắc hay không"
+
+#: params.def:704
+msgid "Maximum length of partial antic set when performing tree pre optimization"
+msgstr "Chiều dài tối đa của tập hợp antic bộ phận khi thực hiện sự tối ưu hoá sẵn cây"
+
+#: params.def:714
+msgid "Maximum size of a SCC before SCCVN stops processing a function"
+msgstr "Kích cỡ tối đa của một SCC trước khi SCCVN dừng xử lý một hàm"
+
+#: params.def:719
+msgid "Max loops number for regional RA"
+msgstr "Số tối đa các vòng lặp cho RA thuộc miền"
+
+#: params.def:724
+msgid "Max size of conflict table in MB"
+msgstr "Kích cỡ tối đa (theo MB) của bảng xung đột"
+
+#: params.def:729
+msgid "The number of registers in each class kept unused by loop invariant motion"
+msgstr "Số các thanh ghi mỗi hạng còn lại chưa dùng do chuyển động bất biến vòng lặp"
+
+#: params.def:737
+msgid "The maximum ratio between array size and switch branches for a switch conversion to take place"
+msgstr "Tỷ lệ tối đa giữa kích cỡ mảng và các nhánh chuyển đổi để chuyển đổi nhánh"
+
+#: params.def:745
+msgid "size of tiles for loop blocking"
+msgstr "kích cỡ tile (đơn vị dữ liệu) để chặn vòng lặp"
+
+#: params.def:752
+msgid "maximum number of parameters in a SCoP"
+msgstr "số tối đa các tham số trong một SCoP"
+
+#: params.def:759
+msgid "maximum number of basic blocks per function to be analyzed by Graphite"
+msgstr "số tối đa các khối cơ bản mỗi hàm cần được Graphite phân tích"
+
+#: params.def:766
+msgid "Max basic blocks number in loop for loop invariant motion"
+msgstr "số tối đa các khối cơ bản trong vòng lặp để chuyển động bất biến vòng lặp"
+
+#: params.def:772
+msgid "Maximum number of instructions in basic block to be considered for SLP vectorization"
+msgstr "Số tối đa các lệnh trong khối cơ bản cần tính để véc-tơ hoá SLP"
+
+#: params.def:777
+msgid "Min. ratio of insns to prefetches to enable prefetching for a loop with an unknown trip count"
+msgstr "Tỷ lệ tối thiểu giữa các lệnh và các lần lấy sẵn để hiệu lực lấy sẵn cho một vòng lặp không rõ số đếm lần đi qua"
+
+#: params.def:783
+msgid "Min. ratio of insns to mem ops to enable prefetching in a loop"
+msgstr "Tỷ lệ tối thiểu giữa các lệnh và các thao tác vùng nhớ để hiệu lực lấy sẵn trong một vòng lặp"
+
+#: params.def:790
+msgid "Max. size of var tracking hash tables"
+msgstr "Kích cỡ tối đa của bảng chuỗi duy nhất theo dõi var"
+
+#: params.def:797
+msgid "The minimum UID to be used for a nondebug insn"
+msgstr "UID tối thiểu cần sử dụng cho một lệnh không gỡ rối"
+
+#: params.def:802
+msgid "Maximum allowed growth of size of new parameters ipa-sra replaces a pointer to an aggregate with"
+msgstr "Độ tăng lên tối đa được pháp của kích cỡ tham số mới ipa-sra thì thay thế một hàm trỏ theo một chiều rộng tập hợp"
+
+#: config/alpha/alpha.c:5135
+#, c-format
+msgid "invalid %%H value"
+msgstr "giá trị %%H sai"
+
+#: config/alpha/alpha.c:5156 config/bfin/bfin.c:1683
+#, c-format
+msgid "invalid %%J value"
+msgstr "giá trị %%J sai"
+
+#: config/alpha/alpha.c:5186 config/ia64/ia64.c:4975
+#, c-format
+msgid "invalid %%r value"
+msgstr "giá trị %%r sai"
+
+#: config/alpha/alpha.c:5196 config/ia64/ia64.c:4929
+#: config/rs6000/rs6000.c:14626 config/xtensa/xtensa.c:2253
+#, c-format
+msgid "invalid %%R value"
+msgstr "giá trị %%R sai"
+
+#: config/alpha/alpha.c:5202 config/rs6000/rs6000.c:14545
+#: config/xtensa/xtensa.c:2220
+#, c-format
+msgid "invalid %%N value"
+msgstr "giá trị %%N sai"
+
+#: config/alpha/alpha.c:5210 config/rs6000/rs6000.c:14573
+#, c-format
+msgid "invalid %%P value"
+msgstr "giá trị %%P sai"
+
+#: config/alpha/alpha.c:5218
+#, c-format
+msgid "invalid %%h value"
+msgstr "giá trị %%h sai"
+
+#: config/alpha/alpha.c:5226 config/xtensa/xtensa.c:2246
+#, c-format
+msgid "invalid %%L value"
+msgstr "giá trị %%L sai"
+
+#: config/alpha/alpha.c:5265 config/rs6000/rs6000.c:14527
+#, c-format
+msgid "invalid %%m value"
+msgstr "giá trị %%m sai"
+
+#: config/alpha/alpha.c:5273 config/rs6000/rs6000.c:14535
+#, c-format
+msgid "invalid %%M value"
+msgstr "giá trị %%M sai"
+
+#: config/alpha/alpha.c:5317
+#, c-format
+msgid "invalid %%U value"
+msgstr "giá trị %%U sai"
+
+#: config/alpha/alpha.c:5329 config/alpha/alpha.c:5343
+#: config/rs6000/rs6000.c:14634
+#, c-format
+msgid "invalid %%s value"
+msgstr "giá trị %%s sai"
+
+#: config/alpha/alpha.c:5366
+#, c-format
+msgid "invalid %%C value"
+msgstr "giá trị %%C sai"
+
+#: config/alpha/alpha.c:5403 config/rs6000/rs6000.c:14381
+#, c-format
+msgid "invalid %%E value"
+msgstr "giá trị %%E sai"
+
+#: config/alpha/alpha.c:5428 config/alpha/alpha.c:5476
+#, c-format
+msgid "unknown relocation unspec"
+msgstr "không rõ bỏ ghi rõ bố trí lại"
+
+#: config/alpha/alpha.c:5437 config/crx/crx.c:1092
+#: config/rs6000/rs6000.c:14988 config/spu/spu.c:1695
+#, c-format
+msgid "invalid %%xn code"
+msgstr "mã %%xn sai"
+
+#: config/arc/arc.c:1724 config/m32r/m32r.c:1980
+#, c-format
+msgid "invalid operand to %%R code"
+msgstr "sai lập toán hạng tới mã %%R"
+
+#: config/arc/arc.c:1756 config/m32r/m32r.c:2003
+#, c-format
+msgid "invalid operand to %%H/%%L code"
+msgstr "sai lập toán hạng tới mã %%H/%%L"
+
+#: config/arc/arc.c:1778 config/m32r/m32r.c:2074
+#, c-format
+msgid "invalid operand to %%U code"
+msgstr "sai lập toán hạng tới mã %%U"
+
+#: config/arc/arc.c:1789
+#, c-format
+msgid "invalid operand to %%V code"
+msgstr "sai lập toán hạng tới mã %%V"
+
+#. Unknown flag.
+#. Undocumented flag.
+#: config/arc/arc.c:1796 config/m32r/m32r.c:2101 config/sparc/sparc.c:7164
+#, c-format
+msgid "invalid operand output code"
+msgstr "sai lập mã kết xuất toán hạng"
+
+#: config/arm/arm.c:14854 config/arm/arm.c:14872
+#, c-format
+msgid "predicated Thumb instruction"
+msgstr "lệnh Thumb căn cứ vào"
+
+#: config/arm/arm.c:14860
+#, c-format
+msgid "predicated instruction in conditional sequence"
+msgstr "gặp lệnh căn cứ vào trong dãy có điều kiện"
+
+#: config/arm/arm.c:15030
+#, c-format
+msgid "invalid shift operand"
+msgstr "sai lập toán hạng dời"
+
+#: config/arm/arm.c:15077 config/arm/arm.c:15087 config/arm/arm.c:15097
+#: config/arm/arm.c:15107 config/arm/arm.c:15117 config/arm/arm.c:15156
+#: config/arm/arm.c:15174 config/arm/arm.c:15209 config/arm/arm.c:15228
+#: config/arm/arm.c:15243 config/arm/arm.c:15270 config/arm/arm.c:15277
+#: config/arm/arm.c:15295 config/arm/arm.c:15302 config/arm/arm.c:15310
+#: config/arm/arm.c:15331 config/arm/arm.c:15338 config/arm/arm.c:15428
+#: config/arm/arm.c:15435 config/arm/arm.c:15453 config/arm/arm.c:15460
+#: config/bfin/bfin.c:1696 config/bfin/bfin.c:1703 config/bfin/bfin.c:1710
+#: config/bfin/bfin.c:1717 config/bfin/bfin.c:1726 config/bfin/bfin.c:1733
+#: config/bfin/bfin.c:1740 config/bfin/bfin.c:1747
+#, c-format
+msgid "invalid operand for code '%c'"
+msgstr "sai lập toán hạng cho mã « %c »"
+
+#: config/arm/arm.c:15169
+#, c-format
+msgid "instruction never executed"
+msgstr "lệnh chưa bao giờ thực hiện"
+
+#: config/arm/arm.c:15472
+#, c-format
+msgid "missing operand"
+msgstr "toán hạng còn thiếu"
+
+#: config/arm/arm.c:17746
+msgid "function parameters cannot have __fp16 type"
+msgstr "tham số hàm không thể có loại « __fp16 »"
+
+#: config/arm/arm.c:17756
+msgid "functions cannot return __fp16 type"
+msgstr "hàm không thể trả lại loại « __fp16 »"
+
+#: config/avr/avr.c:1069
+#, c-format
+msgid "address operand requires constraint for X, Y, or Z register"
+msgstr "toán hạng địa chỉ yêu cầu ràng buộc cho thanh ghi X, Y, hay Z"
+
+#: config/avr/avr.c:1195
+msgid "bad address, not a constant):"
+msgstr "địa chỉ sai, không phải là một hằng số):"
+
+#: config/avr/avr.c:1208
+msgid "bad address, not (reg+disp):"
+msgstr "địa chỉ sai, không phải (reg+disp):"
+
+#: config/avr/avr.c:1215
+msgid "bad address, not post_inc or pre_dec:"
+msgstr "địa chỉ sai, không phải post_inc hoặc pre_dec:"
+
+#: config/avr/avr.c:1226
+msgid "internal compiler error.  Bad address:"
+msgstr "lỗi biên dịch nội bộ : địa chỉ sai:"
+
+#: config/avr/avr.c:1251
+msgid "internal compiler error.  Unknown mode:"
+msgstr "lỗi biên dịch nội bộ : không rõ chế độ :"
+
+#: config/avr/avr.c:1838 config/avr/avr.c:2526
+msgid "invalid insn:"
+msgstr "lệnh sai:"
+
+#: config/avr/avr.c:1877 config/avr/avr.c:1963 config/avr/avr.c:2012
+#: config/avr/avr.c:2040 config/avr/avr.c:2135 config/avr/avr.c:2304
+#: config/avr/avr.c:2565 config/avr/avr.c:2677
+msgid "incorrect insn:"
+msgstr "lệnh không đúng:"
+
+#: config/avr/avr.c:2059 config/avr/avr.c:2220 config/avr/avr.c:2375
+#: config/avr/avr.c:2743
+msgid "unknown move insn:"
+msgstr "không rõ lệnh di chuyển:"
+
+#: config/avr/avr.c:2973
+msgid "bad shift insn:"
+msgstr "lệnh dời sai:"
+
+#: config/avr/avr.c:3089 config/avr/avr.c:3509 config/avr/avr.c:3867
+msgid "internal compiler error.  Incorrect shift:"
+msgstr "lỗi biên dịch nội bộ : dời không đúng:"
+
+#: config/bfin/bfin.c:1645
+#, c-format
+msgid "invalid %%j value"
+msgstr "giá trị %%j sai"
+
+#: config/bfin/bfin.c:1838
+#, c-format
+msgid "invalid const_double operand"
+msgstr "toán hạng const_double sai"
+
+#: config/cris/cris.c:528 config/moxie/moxie.c:91 c-typeck.c:5656
+#: c-typeck.c:5672 c-typeck.c:5689 final.c:3089 final.c:3091 fold-const.c:990
+#: gcc.c:5266 loop-iv.c:2968 loop-iv.c:2977 rtl-error.c:105 toplev.c:629
+#: tree-ssa-loop-niter.c:1885 tree-vrp.c:5707 cp/typeck.c:5126 java/expr.c:411
+#, gcc-internal-format
+msgid "%s"
+msgstr "%s"
+
+#: config/cris/cris.c:579
+msgid "unexpected index-type in cris_print_index"
+msgstr "gặp loại chỉ mục (index-type) bất thường trong cris_print_index"
+
+#: config/cris/cris.c:596
+msgid "unexpected base-type in cris_print_base"
+msgstr "gặp loại cơ bản (base-type) bất thường trong cris_print_index"
+
+#: config/cris/cris.c:712
+msgid "invalid operand for 'b' modifier"
+msgstr "sai lập toán hạng cho sự sửa đổi « b »"
+
+#: config/cris/cris.c:729
+msgid "invalid operand for 'o' modifier"
+msgstr "sai lập toán hạng cho sự sửa đổi « o »"
+
+#: config/cris/cris.c:748
+msgid "invalid operand for 'O' modifier"
+msgstr "sai lập toán hạng cho sự sửa đổi « O »"
+
+#: config/cris/cris.c:781
+msgid "invalid operand for 'p' modifier"
+msgstr "sai lập toán hạng cho sự sửa đổi « p »"
+
+#: config/cris/cris.c:820
+msgid "invalid operand for 'z' modifier"
+msgstr "sai lập toán hạng cho sự sửa đổi « z »"
+
+#: config/cris/cris.c:884 config/cris/cris.c:918
+msgid "invalid operand for 'H' modifier"
+msgstr "sai lập toán hạng cho sự sửa đổi « H »"
+
+#: config/cris/cris.c:894
+msgid "bad register"
+msgstr "thanh ghi sai"
+
+#: config/cris/cris.c:938
+msgid "invalid operand for 'e' modifier"
+msgstr "sai lập toán hạng cho sự sửa đổi « e »"
+
+#: config/cris/cris.c:955
+msgid "invalid operand for 'm' modifier"
+msgstr "sai lập toán hạng cho sự sửa đổi « m »"
+
+#: config/cris/cris.c:980
+msgid "invalid operand for 'A' modifier"
+msgstr "sai lập toán hạng cho sự sửa đổi « A »"
+
+#: config/cris/cris.c:1003
+msgid "invalid operand for 'D' modifier"
+msgstr "sai lập toán hạng cho sự sửa đổi « D »"
+
+#: config/cris/cris.c:1017
+msgid "invalid operand for 'T' modifier"
+msgstr "sai lập toán hạng cho sự sửa đổi « T »"
+
+#: config/cris/cris.c:1037 config/moxie/moxie.c:161
+msgid "invalid operand modifier letter"
+msgstr "sai lập chữ sửa đổi toán hạng"
+
+#: config/cris/cris.c:1094
+msgid "unexpected multiplicative operand"
+msgstr "gặp toán hạng nhân lên bất thường"
+
+#: config/cris/cris.c:1114 config/moxie/moxie.c:186
+msgid "unexpected operand"
+msgstr "gặp toán hạng bất thường"
+
+#: config/cris/cris.c:1147 config/cris/cris.c:1157
+msgid "unrecognized address"
+msgstr "không nhận ra địa chỉ"
+
+#: config/cris/cris.c:2265
+msgid "unrecognized supposed constant"
+msgstr "không nhận ra điều nên là hằng số"
+
+#: config/cris/cris.c:2694 config/cris/cris.c:2758
+msgid "unexpected side-effects in address"
+msgstr "gặp hiệu ứng khác bất thường trong địa chỉ"
+
+#. Can't possibly get a GOT-needing-fixup for a function-call,
+#. right?
+#: config/cris/cris.c:3595
+msgid "Unidentifiable call op"
+msgstr "Không thể nhận diện toán tử gọi"
+
+#: config/cris/cris.c:3647
+#, c-format
+msgid "PIC register isn't set up"
+msgstr "Chưa thiết lập thanh ghi PIC"
+
+#: config/fr30/fr30.c:481
+#, c-format
+msgid "fr30_print_operand_address: unhandled address"
+msgstr "fr30_print_operand_address: địa chỉ chưa quản lý"
+
+#: config/fr30/fr30.c:505
+#, c-format
+msgid "fr30_print_operand: unrecognized %%p code"
+msgstr "fr30_print_operand: không nhận ra mã %%p"
+
+#: config/fr30/fr30.c:525
+#, c-format
+msgid "fr30_print_operand: unrecognized %%b code"
+msgstr "fr30_print_operand: không nhận ra mã %%b"
+
+#: config/fr30/fr30.c:546
+#, c-format
+msgid "fr30_print_operand: unrecognized %%B code"
+msgstr "fr30_print_operand: không nhận ra mã %%B"
+
+#: config/fr30/fr30.c:554
+#, c-format
+msgid "fr30_print_operand: invalid operand to %%A code"
+msgstr "fr30_print_operand: không nhận ra mã %%A"
+
+#: config/fr30/fr30.c:571
+#, c-format
+msgid "fr30_print_operand: invalid %%x code"
+msgstr "fr30_print_operand: sai lập mã %%x"
+
+#: config/fr30/fr30.c:578
+#, c-format
+msgid "fr30_print_operand: invalid %%F code"
+msgstr "fr30_print_operand: sai lập mã %%F"
+
+#: config/fr30/fr30.c:595
+#, c-format
+msgid "fr30_print_operand: unknown code"
+msgstr "fr30_print_operand: không rõ mã"
+
+#: config/fr30/fr30.c:623 config/fr30/fr30.c:632 config/fr30/fr30.c:643
+#: config/fr30/fr30.c:656
+#, c-format
+msgid "fr30_print_operand: unhandled MEM"
+msgstr "fr30_print_operand: MEM chưa quản lý"
+
+#: config/frv/frv.c:2601
+msgid "bad insn to frv_print_operand_address:"
+msgstr "sai lập lệnh tới frv_print_operand_address:"
+
+#: config/frv/frv.c:2612
+msgid "bad register to frv_print_operand_memory_reference_reg:"
+msgstr "sai lập thanh ghi tới frv_print_operand_memory_reference_reg:"
+
+#: config/frv/frv.c:2651 config/frv/frv.c:2661 config/frv/frv.c:2670
+#: config/frv/frv.c:2691 config/frv/frv.c:2696
+msgid "bad insn to frv_print_operand_memory_reference:"
+msgstr "sai lập lệnh tới frv_print_operand_memory_reference:"
+
+#: config/frv/frv.c:2782
+#, c-format
+msgid "bad condition code"
+msgstr "mã điều kiện sai"
+
+#: config/frv/frv.c:2857
+msgid "bad insn in frv_print_operand, bad const_double"
+msgstr "gặp lệnh sai trong frv_print_operand, lập sai const_double"
+
+#: config/frv/frv.c:2918
+msgid "bad insn to frv_print_operand, 'e' modifier:"
+msgstr "lệnh sai tới frv_print_operand, bộ sửa đổi « e »:"
+
+#: config/frv/frv.c:2926
+msgid "bad insn to frv_print_operand, 'F' modifier:"
+msgstr "lệnh sai tới frv_print_operand, bộ sửa đổi « F »:"
+
+#: config/frv/frv.c:2942
+msgid "bad insn to frv_print_operand, 'f' modifier:"
+msgstr "lệnh sai tới frv_print_operand, bộ sửa đổi « f »:"
+
+#: config/frv/frv.c:2956
+msgid "bad insn to frv_print_operand, 'g' modifier:"
+msgstr "lệnh sai tới frv_print_operand, bộ sửa đổi « g »:"
+
+#: config/frv/frv.c:3004
+msgid "bad insn to frv_print_operand, 'L' modifier:"
+msgstr "lệnh sai tới frv_print_operand, bộ sửa đổi « L »:"
+
+#: config/frv/frv.c:3017
+msgid "bad insn to frv_print_operand, 'M/N' modifier:"
+msgstr "lệnh sai tới frv_print_operand, bộ sửa đổi « M/N »:"
+
+#: config/frv/frv.c:3038
+msgid "bad insn to frv_print_operand, 'O' modifier:"
+msgstr "lệnh sai tới frv_print_operand, bộ sửa đổi « O »:"
+
+#: config/frv/frv.c:3056
+msgid "bad insn to frv_print_operand, P modifier:"
+msgstr "lệnh sai tới frv_print_operand, bộ sửa đổi « P »:"
+
+#: config/frv/frv.c:3076
+msgid "bad insn in frv_print_operand, z case"
+msgstr "lệnh sai tới frv_print_operand, trường hợp « z »"
+
+#: config/frv/frv.c:3107
+msgid "bad insn in frv_print_operand, 0 case"
+msgstr "lệnh sai tới frv_print_operand, trường hợp « 0 »"
+
+#: config/frv/frv.c:3112
+msgid "frv_print_operand: unknown code"
+msgstr "frv_print_operand: gặp mã không rõ"
+
+#: config/frv/frv.c:4494
+msgid "bad output_move_single operand"
+msgstr "lập sai toán hạng output_move_single"
+
+#: config/frv/frv.c:4621
+msgid "bad output_move_double operand"
+msgstr "lập sai toán hạng output_move_double"
+
+#: config/frv/frv.c:4763
+msgid "bad output_condmove_single operand"
+msgstr "lập sai toán hạng output_condmove_single"
+
+# Unsure of meaning; có nghĩa không chắc lắm
+#. This macro is a C statement to print on `stderr' a string describing the
+#. particular machine description choice.  Every machine description should
+#. define `TARGET_VERSION'.  For example:
+#.
+#. #ifdef MOTOROLA
+#. #define TARGET_VERSION           fprintf (stderr, " (68k, Motorola syntax)");
+#. #else
+#. #define TARGET_VERSION           fprintf (stderr, " (68k, MIT syntax)");
+#. #endif
+#: config/frv/frv.h:328
+#, c-format
+msgid " (frv)"
+msgstr " (frv)"
+
+#: config/i386/i386.c:10894
+#, c-format
+msgid "invalid UNSPEC as operand"
+msgstr "lập sai UNSPEC như là toán hạng"
+
+#: config/i386/i386.c:11440
+#, c-format
+msgid "'%%&' used without any local dynamic TLS references"
+msgstr "« %%& » bị sử dụng mà không có tham chiếu TLS năng động cục bộ"
+
+#: config/i386/i386.c:11531 config/i386/i386.c:11606
+#, c-format
+msgid "invalid operand size for operand code '%c'"
+msgstr "sai lập kích cỡ toán hạng cho mã toán hạng « %c »"
+
+#: config/i386/i386.c:11601
+#, c-format
+msgid "invalid operand type used with operand code '%c'"
+msgstr "sử dụng loại toán hạng không hợp lệ với mã toán hạng « %c »"
+
+#: config/i386/i386.c:11681 config/i386/i386.c:11721
+#, c-format
+msgid "operand is not a condition code, invalid operand code 'D'"
+msgstr "toán hạng không phải là một mã điều kiện, mã toán hạng sai « D »"
+
+#: config/i386/i386.c:11747
+#, c-format
+msgid "operand is neither a constant nor a condition code, invalid operand code 'C'"
+msgstr "toán hạng không phải là hằng số, cũng không phải là một mã điều kiện, mã toán hạng sai « C »"
+
+#: config/i386/i386.c:11757
+#, c-format
+msgid "operand is neither a constant nor a condition code, invalid operand code 'F'"
+msgstr "toán hạng không phải là hằng số, cũng không phải là một mã điều kiện, mã toán hạng sai « F »"
+
+#: config/i386/i386.c:11775
+#, c-format
+msgid "operand is neither a constant nor a condition code, invalid operand code 'c'"
+msgstr "toán hạng không phải là hằng số, cũng không phải là một mã điều kiện, mã toán hạng sai « c »"
+
+#: config/i386/i386.c:11785
+#, c-format
+msgid "operand is neither a constant nor a condition code, invalid operand code 'f'"
+msgstr "toán hạng không phải là hằng số, cũng không phải là một mã điều kiện, mã toán hạng sai « f »"
+
+#: config/i386/i386.c:11888
+#, c-format
+msgid "operand is not a condition code, invalid operand code 'Y'"
+msgstr "toán hạng không phải là một mã điều kiện, mã toán hạng sai « Y »"
+
+#: config/i386/i386.c:11903
+#, c-format
+msgid "invalid operand code '%c'"
+msgstr "mã toán hạng sai « %c »"
+
+#: config/i386/i386.c:11953
+#, c-format
+msgid "invalid constraints for operand"
+msgstr "sai lập ràng buộc cho toán hạng"
+
+#: config/i386/i386.c:19549
+msgid "unknown insn mode"
+msgstr "không rõ chế độ lệnh"
+
+#. If the environment variable DJDIR is not defined, then DJGPP is not        installed correctly and GCC will quickly become confused with the        default prefix settings. Report the problem now so the user doesn't        receive deceptive "file not found" error messages later.
+#. DJDIR is automatically defined by the DJGPP environment config            file pointed to by the environment variable DJGPP. Examine DJGPP            to try and figure out what's wrong.
+#: config/i386/xm-djgpp.h:61
+#, c-format
+msgid "environment variable DJGPP not defined"
+msgstr "chưa xác định biến môi trường DJGPP"
+
+#: config/i386/xm-djgpp.h:63
+#, c-format
+msgid "environment variable DJGPP points to missing file '%s'"
+msgstr "biến môi trường DJGPP chỉ tới tập tin còn thiếu « %s »"
+
+#: config/i386/xm-djgpp.h:66
+#, c-format
+msgid "environment variable DJGPP points to corrupt file '%s'"
+msgstr "biến môi trường DJGPP chỉ tới tập tin bị hỏng « %s »"
+
+#: config/ia64/ia64.c:4857
+#, c-format
+msgid "invalid %%G mode"
+msgstr "chế độ %%G không hợp lệ"
+
+#: config/ia64/ia64.c:5027
+#, c-format
+msgid "ia64_print_operand: unknown code"
+msgstr "ia64_print_operand: gặp mã không hợp lệ"
+
+#: config/ia64/ia64.c:10572
+msgid "invalid conversion from %<__fpreg%>"
+msgstr "sai chuyển đổi từ %<__fpreg%>"
+
+#: config/ia64/ia64.c:10575
+msgid "invalid conversion to %<__fpreg%>"
+msgstr "sai chuyển đổi sang %<__fpreg%>"
+
+#: config/ia64/ia64.c:10588 config/ia64/ia64.c:10599
+msgid "invalid operation on %<__fpreg%>"
+msgstr "thao tác sai %<__fpreg%>"
+
+#: config/iq2000/iq2000.c:3165
+#, c-format
+msgid "invalid %%P operand"
+msgstr "gặp toán hạng %%P sai"
+
+#: config/iq2000/iq2000.c:3173 config/rs6000/rs6000.c:14563
+#, c-format
+msgid "invalid %%p value"
+msgstr "gặp giá trị %%p sai"
+
+#: config/iq2000/iq2000.c:3229
+#, c-format
+msgid "invalid use of %%d, %%x, or %%X"
+msgstr "sai sử dụng %%d, %%x hoặc %%X"
+
+#: config/lm32/lm32.c:500
+#, c-format
+msgid "Only 0.0 can be loaded as an immediate"
+msgstr "Chỉ 0.0 nạp được như là một điều ngay lập tức"
+
+#: config/lm32/lm32.c:570
+msgid "bad operand"
+msgstr "toán hạng sai"
+
+#: config/lm32/lm32.c:582
+msgid "can't use non gp relative absolute address"
+msgstr "không cho phép sử dụng địa chỉ tuyệt đối tương đối không phải gp"
+
+#: config/lm32/lm32.c:586
+msgid "invalid addressing mode"
+msgstr "sai lập chế độ đặt địa chỉ"
+
+#: config/m32r/m32r.c:1950
+#, c-format
+msgid "invalid operand to %%s code"
+msgstr "sai lập toán hạng tới mã %%s"
+
+#: config/m32r/m32r.c:1957
+#, c-format
+msgid "invalid operand to %%p code"
+msgstr "sai lập toán hạng tới mã %%p"
+
+#: config/m32r/m32r.c:2012
+msgid "bad insn for 'A'"
+msgstr "sai lập lệnh cho « A »"
+
+#: config/m32r/m32r.c:2059
+#, c-format
+msgid "invalid operand to %%T/%%B code"
+msgstr "sai lập toán hạng tới mã %%T/%%B"
+
+#: config/m32r/m32r.c:2082
+#, c-format
+msgid "invalid operand to %%N code"
+msgstr "sai lập toán hạng tới mã %%N"
+
+#: config/m32r/m32r.c:2115
+msgid "pre-increment address is not a register"
+msgstr "địa chỉ tiền gia không phải là một thanh ghi"
+
+#: config/m32r/m32r.c:2122
+msgid "pre-decrement address is not a register"
+msgstr "địa chỉ tiền giảm không phải là một thanh ghi"
+
+#: config/m32r/m32r.c:2129
+msgid "post-increment address is not a register"
+msgstr "địa chỉ hậu gia không phải là một thanh ghi"
+
+#: config/m32r/m32r.c:2205 config/m32r/m32r.c:2219
+#: config/rs6000/rs6000.c:23777
+msgid "bad address"
+msgstr "địa chỉ sai"
+
+#: config/m32r/m32r.c:2224
+msgid "lo_sum not of register"
+msgstr "lo_sum không phải thanh ghi"
+
+#. !!!! SCz wrong here.
+#: config/m68hc11/m68hc11.c:3204 config/m68hc11/m68hc11.c:3582
+msgid "move insn not handled"
+msgstr "lệnh di chuyển chưa quản lý"
+
+#: config/m68hc11/m68hc11.c:3428 config/m68hc11/m68hc11.c:3512
+#: config/m68hc11/m68hc11.c:3785
+msgid "invalid register in the move instruction"
+msgstr "gặp thanh ghi sai trong lệnh di chuyển"
+
+#: config/m68hc11/m68hc11.c:3462
+msgid "invalid operand in the instruction"
+msgstr "lệnh chứa một toán hạng sai"
+
+#: config/m68hc11/m68hc11.c:3759
+msgid "invalid register in the instruction"
+msgstr "lệnh chứa một thanh ghi sai"
+
+#: config/m68hc11/m68hc11.c:3792
+msgid "operand 1 must be a hard register"
+msgstr "toán hạng 1 phải là một thanh ghi cứng"
+
+#: config/m68hc11/m68hc11.c:3806
+msgid "invalid rotate insn"
+msgstr "lệnh quay sai"
+
+#: config/m68hc11/m68hc11.c:4234
+msgid "registers IX, IY and Z used in the same INSN"
+msgstr "sử dụng ba thanh ghi IX, IY, Z trong cùng một lệnh"
+
+#: config/m68hc11/m68hc11.c:4567 config/m68hc11/m68hc11.c:4867
+msgid "cannot do z-register replacement"
+msgstr "không thể làm sự thay thế thanh ghi Z"
+
+#: config/m68hc11/m68hc11.c:4930
+msgid "invalid Z register replacement for insn"
+msgstr "lệnh chứa một sự thay thế thanh ghi Z sai"
+
+#: config/mep/mep.c:3394
+#, c-format
+msgid "invalid %%L code"
+msgstr "mã %%L sai"
+
+#: config/mips/mips.c:7424 config/mips/mips.c:7445 config/mips/mips.c:7557
+#, c-format
+msgid "'%%%c' is not a valid operand prefix"
+msgstr "« %%%c » không phải là một tiền tố toán hạng đúng"
+
+#: config/mips/mips.c:7494 config/mips/mips.c:7501 config/mips/mips.c:7508
+#: config/mips/mips.c:7515 config/mips/mips.c:7575 config/mips/mips.c:7589
+#: config/mips/mips.c:7602 config/mips/mips.c:7611
+#, c-format
+msgid "invalid use of '%%%c'"
+msgstr "sai sử dụng « %%%c »"
+
+#: config/mips/mips.c:7833
+msgid "mips_debugger_offset called with non stack/frame/arg pointer"
+msgstr "mips_debugger_offset bị gọi mà không có hàm trỏ tới đống/khung/đối_số"
+
+#: config/mmix/mmix.c:1494 config/mmix/mmix.c:1624
+msgid "MMIX Internal: Expected a CONST_INT, not this"
+msgstr "MMIX nội bộ : mong đợi một CONST_INT, không phải như thế"
+
+#: config/mmix/mmix.c:1573
+msgid "MMIX Internal: Bad value for 'm', not a CONST_INT"
+msgstr "MMIX nội bộ : sai lập giá trị cho « m », không phải là một CONST_INT"
+
+#: config/mmix/mmix.c:1592
+msgid "MMIX Internal: Expected a register, not this"
+msgstr "MMIX nội bộ : mong đợi một thanh ghi, không phải như thế"
+
+#: config/mmix/mmix.c:1602
+msgid "MMIX Internal: Expected a constant, not this"
+msgstr "MMIX nội bộ : mong đợi một rằng buộc, không phải như thế"
+
+#. We need the original here.
+#: config/mmix/mmix.c:1686
+msgid "MMIX Internal: Cannot decode this operand"
+msgstr "MMIX nội bộ : không thể giải mã toán hạng này"
+
+#: config/mmix/mmix.c:1743
+msgid "MMIX Internal: This is not a recognized address"
+msgstr "MMIX nội bộ : đây không phải là một địa chỉ nhận ra"
+
+#: config/mmix/mmix.c:2620
+msgid "MMIX Internal: Trying to output invalidly reversed condition:"
+msgstr "MMIX nội bộ : đang thử xuất điều kiện sai đảo ngược:"
+
+#: config/mmix/mmix.c:2627
+msgid "MMIX Internal: What's the CC of this?"
+msgstr "MMIX nội bộ : CC của điều này là gì?"
+
+#: config/mmix/mmix.c:2631
+msgid "MMIX Internal: What is the CC of this?"
+msgstr "MMIX nội bộ : CC của điều này là gì?"
+
+#: config/mmix/mmix.c:2695
+msgid "MMIX Internal: This is not a constant:"
+msgstr "MMIX nội bộ : đây không phải là một hằng số :"
+
+#: config/picochip/picochip.c:2410
+msgid "picochip_print_memory_address - Operand isn't memory based"
+msgstr "picochip_print_memory_address : toán hạng không phải dựa vào vùng nhớ"
+
+#: config/picochip/picochip.c:2669
+msgid "Unknown mode in print_operand (CONST_DOUBLE) :"
+msgstr "Không rõ chế độ trong print_operand (CONST_DOUBLE) :"
+
+#: config/picochip/picochip.c:2715 config/picochip/picochip.c:2747
+msgid "Bad address, not (reg+disp):"
+msgstr "Địa chỉ sai, không phải (reg+disp):"
+
+#: config/picochip/picochip.c:2761
+msgid "Bad address, not register:"
+msgstr "Địa chỉ sai, không phải thanh ghi:"
+
+#: config/rs6000/host-darwin.c:97
+#, c-format
+msgid "Out of stack space.\n"
+msgstr "Không đủ sức chứa trong đống.\n"
+
+#: config/rs6000/host-darwin.c:118
+#, c-format
+msgid "Try running '%s' in the shell to raise its limit.\n"
+msgstr "Hãy thử chạy « %s » trong trình bao để tăng giới hạn.\n"
+
+#: config/rs6000/rs6000.c:2419
+msgid "-mvsx requires hardware floating point"
+msgstr "« -mvsx » yêu cầu điểm phù động loại phần cứng"
+
+#: config/rs6000/rs6000.c:2424
+msgid "-mvsx and -mpaired are incompatible"
+msgstr "« -mvsx » và « -mpaired » không tương thích với nhau"
+
+#: config/rs6000/rs6000.c:2429
+msgid "-mvsx used with little endian code"
+msgstr "« -mvsx » bị sử dụng với mã về cuối nhỏ"
+
+#: config/rs6000/rs6000.c:2431
+msgid "-mvsx needs indexed addressing"
+msgstr "« -mvsx » yêu cầu đặt địa chỉ một cách phụ lục"
+
+#: config/rs6000/rs6000.c:2435
+msgid "-mvsx and -mno-altivec are incompatible"
+msgstr "« -mvsx » và « -mno-altivec » không tương thích với nhau"
+
+#: config/rs6000/rs6000.c:2437
+msgid "-mno-altivec disables vsx"
+msgstr "« -mno-altivec » thì tắt vsx"
+
+#: config/rs6000/rs6000.c:6691
+msgid "bad move"
+msgstr "sai di chuyển"
+
+#: config/rs6000/rs6000.c:14362
+#, c-format
+msgid "invalid %%c value"
+msgstr "giá trị %%c sai"
+
+#: config/rs6000/rs6000.c:14390
+#, c-format
+msgid "invalid %%f value"
+msgstr "giá trị %%f sai"
+
+#: config/rs6000/rs6000.c:14399
+#, c-format
+msgid "invalid %%F value"
+msgstr "giá trị %%F sai"
+
+#: config/rs6000/rs6000.c:14408
+#, c-format
+msgid "invalid %%G value"
+msgstr "giá trị %%G sai"
+
+#: config/rs6000/rs6000.c:14443
+#, c-format
+msgid "invalid %%j code"
+msgstr "mã %%j sai"
+
+#: config/rs6000/rs6000.c:14453
+#, c-format
+msgid "invalid %%J code"
+msgstr "mã %%J sai"
+
+#: config/rs6000/rs6000.c:14463
+#, c-format
+msgid "invalid %%k value"
+msgstr "giá trị %%k sai"
+
+#: config/rs6000/rs6000.c:14483 config/xtensa/xtensa.c:2239
+#, c-format
+msgid "invalid %%K value"
+msgstr "giá trị %%K sai"
+
+#: config/rs6000/rs6000.c:14553
+#, c-format
+msgid "invalid %%O value"
+msgstr "giá trị %%O sai"
+
+#: config/rs6000/rs6000.c:14600
+#, c-format
+msgid "invalid %%q value"
+msgstr "giá trị %%q sai"
+
+#: config/rs6000/rs6000.c:14644
+#, c-format
+msgid "invalid %%S value"
+msgstr "giá trị %%S sai"
+
+#: config/rs6000/rs6000.c:14684
+#, c-format
+msgid "invalid %%T value"
+msgstr "giá trị %%T sai"
+
+#: config/rs6000/rs6000.c:14694
+#, c-format
+msgid "invalid %%u value"
+msgstr "giá trị %%u sai"
+
+#: config/rs6000/rs6000.c:14703 config/xtensa/xtensa.c:2209
+#, c-format
+msgid "invalid %%v value"
+msgstr "giá trị %%v sai"
+
+#: config/rs6000/rs6000.c:14802 config/xtensa/xtensa.c:2260
+#, c-format
+msgid "invalid %%x value"
+msgstr "giá trị %%x sai"
+
+#: config/rs6000/rs6000.c:14947
+#, c-format
+msgid "invalid %%y value, try using the 'Z' constraint"
+msgstr "giá trị %%y sai, hãy thử sử dụng ràng buộc « Z »"
+
+#: config/rs6000/rs6000.c:25750
+msgid "AltiVec argument passed to unprototyped function"
+msgstr "đối số AltiVec bị gửi cho hàm không nguyên mẫu"
+
+#: config/s390/s390.c:4952
+#, c-format
+msgid "cannot decompose address"
+msgstr "không thể phân ly địa chỉ"
+
+#: config/s390/s390.c:5175
+msgid "UNKNOWN in print_operand !?"
+msgstr "KHÔNG RÕ trong print_operand !?"
+
+#: config/score/score3.c:1282 config/score/score3.c:1302
+#: config/score/score7.c:1270
+#, c-format
+msgid "invalid operand for code: '%c'"
+msgstr "sai lập toán hạng cho mã: « %c »"
+
+#: config/sh/sh.c:1125
+#, c-format
+msgid "invalid operand to %%R"
+msgstr "sai lập toán hạng tới %%R"
+
+#: config/sh/sh.c:1152
+#, c-format
+msgid "invalid operand to %%S"
+msgstr "sai lập toán hạng tới %%S"
+
+#: config/sh/sh.c:8968
+msgid "created and used with different architectures / ABIs"
+msgstr "tạo và sử dụng với các kiến trúc hoặc ABI khác nhau"
+
+#: config/sh/sh.c:8970
+msgid "created and used with different ABIs"
+msgstr "tạo và sử dụng với các ABI khác nhau"
+
+#: config/sh/sh.c:8972
+msgid "created and used with different endianness"
+msgstr "tạo và sử dụng với các trình trạng cuối khác nhau"
+
+#: config/sparc/sparc.c:6972 config/sparc/sparc.c:6978
+#, c-format
+msgid "invalid %%Y operand"
+msgstr "toán hạng %%Y sai"
+
+#: config/sparc/sparc.c:7048
+#, c-format
+msgid "invalid %%A operand"
+msgstr "toán hạng %%A sai"
+
+#: config/sparc/sparc.c:7058
+#, c-format
+msgid "invalid %%B operand"
+msgstr "toán hạng %%B sai"
+
+#: config/sparc/sparc.c:7097
+#, c-format
+msgid "invalid %%c operand"
+msgstr "toán hạng %%c sai"
+
+#: config/sparc/sparc.c:7119
+#, c-format
+msgid "invalid %%d operand"
+msgstr "toán hạng %%d sai"
+
+#: config/sparc/sparc.c:7136
+#, c-format
+msgid "invalid %%f operand"
+msgstr "toán hạng %%f sai"
+
+#: config/sparc/sparc.c:7150
+#, c-format
+msgid "invalid %%s operand"
+msgstr "toán hạng %%s sai"
+
+#: config/sparc/sparc.c:7204
+#, c-format
+msgid "long long constant not a valid immediate operand"
+msgstr "hằng số dài dài không phải là một toán hạng ngay lập tức đúng"
+
+#: config/sparc/sparc.c:7207
+#, c-format
+msgid "floating point constant not a valid immediate operand"
+msgstr "hằng số điểm phù động không phải là một toán hạng ngay lập tức đúng"
+
+#: config/stormy16/stormy16.c:1755 config/stormy16/stormy16.c:1826
+#, c-format
+msgid "'B' operand is not constant"
+msgstr "toán hạng « B » không phải là một hằng số"
+
+#: config/stormy16/stormy16.c:1782
+#, c-format
+msgid "'B' operand has multiple bits set"
+msgstr "toán hạng « B » có nhiều bit được lập"
+
+#: config/stormy16/stormy16.c:1808
+#, c-format
+msgid "'o' operand is not constant"
+msgstr "toán hạng « o » không phải là một hằng số"
+
+#: config/stormy16/stormy16.c:1840
+#, c-format
+msgid "xstormy16_print_operand: unknown code"
+msgstr "xstormy16_print_operand: gặp mã không rõ"
+
+#: config/v850/v850.c:408
+msgid "const_double_split got a bad insn:"
+msgstr "const_double_split nhận một lệnh sai:"
+
+#: config/v850/v850.c:979
+msgid "output_move_single:"
+msgstr "output_move_single:"
+
+#: config/vax/vax.c:399
+#, c-format
+msgid "symbol used with both base and indexed registers"
+msgstr "ký hiệu dùng với thanh ghi cả hai loại cơ bản và phụ lục"
+
+#: config/vax/vax.c:408
+#, c-format
+msgid "symbol with offset used in PIC mode"
+msgstr "ký hiệu với hiệu số dùng trong chế độ PIC"
+
+#: config/vax/vax.c:494
+#, c-format
+msgid "symbol used as immediate operand"
+msgstr "ký hiệu dùng như là toán hạng ngay lập tức"
+
+#: config/vax/vax.c:1519
+msgid "illegal operand detected"
+msgstr "phát hiện toán hạng cấm"
+
+#: config/xtensa/xtensa.c:705 config/xtensa/xtensa.c:737
+#: config/xtensa/xtensa.c:746
+msgid "bad test"
+msgstr "sai kiểm tra"
+
+#: config/xtensa/xtensa.c:2197
+#, c-format
+msgid "invalid %%D value"
+msgstr "giá trị %%D sai"
+
+#: config/xtensa/xtensa.c:2234
+msgid "invalid mask"
+msgstr "bộ lọc sai"
+
+#: config/xtensa/xtensa.c:2267
+#, c-format
+msgid "invalid %%d value"
+msgstr "giá trị %%d sai"
+
+#: config/xtensa/xtensa.c:2288 config/xtensa/xtensa.c:2298
+#, c-format
+msgid "invalid %%t/%%b value"
+msgstr "giá trị %%t/%%b sai"
+
+#: config/xtensa/xtensa.c:2340
+msgid "invalid address"
+msgstr "địa chỉ sai"
+
+#: config/xtensa/xtensa.c:2365
+msgid "no register in address"
+msgstr "địa chỉ không chứa thanh ghi"
+
+#: config/xtensa/xtensa.c:2373
+msgid "address offset not a constant"
+msgstr "hiệu số địa chỉ không phải là một hằng số"
+
+#: cp/call.c:2779 cp/pt.c:1701 cp/pt.c:16017
+msgid "candidates are:"
+msgstr "ứng cử là:"
+
+#: cp/call.c:2779 cp/pt.c:16017
+msgid "candidate is:"
+msgstr "ứng cử là:"
+
+#: cp/call.c:7360
+msgid "candidate 1:"
+msgstr "ứng cử 1:"
+
+#: cp/call.c:7361
+msgid "candidate 2:"
+msgstr "ứng cử 2:"
+
+#: cp/cxx-pretty-print.c:173 cp/error.c:923 objc/objc-act.c:7141
+msgid "<unnamed>"
+msgstr "<không tên>"
+
+#: cp/cxx-pretty-print.c:2067
+msgid "template-parameter-"
+msgstr "template-parameter-"
+
+#: cp/decl2.c:721
+msgid "candidates are: %+#D"
+msgstr "ứng cử là: %+#D"
+
+#: cp/decl2.c:723 cp/pt.c:1697
+#, gcc-internal-format
+msgid "candidate is: %+#D"
+msgstr "ứng cử là: %+#D"
+
+#: cp/error.c:297
+msgid "<missing>"
+msgstr "<còn thiếu>"
+
+#: cp/error.c:338
+msgid "<brace-enclosed initializer list>"
+msgstr "<danh sách bộ sơ khởi nằm trong dấu ngoặc>"
+
+#: cp/error.c:340
+msgid "<unresolved overloaded function type>"
+msgstr "<chưa giải quyết loại hàm quá tải>"
+
+#: cp/error.c:483
+msgid "<type error>"
+msgstr "<lỗi loại>"
+
+#: cp/error.c:583
+#, c-format
+msgid "<anonymous %s>"
+msgstr "<%s nặc danh>"
+
+# Literal: don't translate; Nghĩa chữ : dừng dịch
+#. A lambda's "type" is essentially its signature.
+#: cp/error.c:588
+msgid "<lambda"
+msgstr "<lambda"
+
+#: cp/error.c:714
+msgid "<typeprefixerror>"
+msgstr "<lỗi sửa sẵn loại>"
+
+#: cp/error.c:825
+#, c-format
+msgid "(static initializers for %s)"
+msgstr "(bộ sơ khởi tĩnh cho %s)"
+
+#: cp/error.c:827
+#, c-format
+msgid "(static destructors for %s)"
+msgstr "(bộ hủy tĩnh cho %s)"
+
+#: cp/error.c:898
+msgid "vtable for "
+msgstr "bảng vtable cho"
+
+#: cp/error.c:910
+msgid "<return value> "
+msgstr "<giá trị trả lại>"
+
+#: cp/error.c:1038
+msgid "<enumerator>"
+msgstr "<bộ đếm>"
+
+#: cp/error.c:1078
+msgid "<declaration error>"
+msgstr "<lỗi tuyên bố>"
+
+#: cp/error.c:1318
+msgid "with"
+msgstr "với"
+
+#: cp/error.c:1481 cp/error.c:1501
+msgid "<template parameter error>"
+msgstr "<lỗi tham số mẫu>"
+
+#: cp/error.c:1627
+msgid "<statement>"
+msgstr "<lời tuyên bố>"
+
+#. While waiting for caret diagnostics, avoid printing
+#. __cxa_allocate_exception, __cxa_throw, and the like.
+#: cp/error.c:1656
+msgid "<throw-expression>"
+msgstr "<biểu thức ném>"
+
+#: cp/error.c:2102
+msgid "<unparsed>"
+msgstr "<chưa phân tích cú pháp>"
+
+#: cp/error.c:2251
+msgid "<expression error>"
+msgstr "<lỗi biểu thức>"
+
+#: cp/error.c:2265
+msgid "<unknown operator>"
+msgstr "<không rõ toán hạng>"
+
+#: cp/error.c:2472
+msgid "<unknown>"
+msgstr "<không rõ>"
+
+#: cp/error.c:2492
+msgid "{unknown}"
+msgstr "{không rõ}"
+
+#: cp/error.c:2574
+msgid "At global scope:"
+msgstr "Theo phạm vi toàn cục:"
+
+#: cp/error.c:2680
+#, c-format
+msgid "In static member function %qs"
+msgstr "Trong hàm bộ phận tĩnh %qs"
+
+#: cp/error.c:2682
+#, c-format
+msgid "In copy constructor %qs"
+msgstr "Trong bộ dựng bản sao %qs"
+
+#: cp/error.c:2684
+#, c-format
+msgid "In constructor %qs"
+msgstr "Trong bộ dựng %qs"
+
+#: cp/error.c:2686
+#, c-format
+msgid "In destructor %qs"
+msgstr "Trong bộ hủy %qs"
+
+#: cp/error.c:2688
+msgid "In lambda function"
+msgstr "Trong hàm λ"
+
+#: cp/error.c:2718
+#, c-format
+msgid "%s: In instantiation of %qs:\n"
+msgstr "%s: Trong bộ tạo lần %qs:\n"
+
+#: cp/error.c:2747
+#, c-format
+msgid "%s:%d:%d:   instantiated from %qs\n"
+msgstr "%s:%d:%d:   lần tạo từ %qs\n"
+
+#: cp/error.c:2751
+#, c-format
+msgid "%s:%d:   instantiated from %qs\n"
+msgstr "%s:%d:   lần tạo từ %qs\n"
+
+#: cp/error.c:2755
+#, c-format
+msgid "%s:%d:%d:   instantiated from here"
+msgstr "%s:%d:%d:   lần tạo từ đây"
+
+#: cp/error.c:2758
+#, c-format
+msgid "%s:%d:   instantiated from here"
+msgstr "%s:%d:   lần tạo từ đây"
+
+#: cp/error.c:2794
+#, c-format
+msgid "%s:%d:%d:   [ skipping %d instantiation contexts ]\n"
+msgstr "%s:%d:%d:   [ đang bỏ qua %d ngữ cảnh tạo lần ]\n"
+
+#: cp/error.c:2798
+#, c-format
+msgid "%s:%d:   [ skipping %d instantiation contexts ]\n"
+msgstr "%s:%d:   [ đang bỏ qua %d ngữ cảnh tạo lần ]\n"
+
+#: cp/g++spec.c:261 java/jvspec.c:403
+#, c-format
+msgid "argument to '%s' missing\n"
+msgstr "thiếu đối số tới « %s »\n"
+
+#: cp/rtti.c:529
+msgid "target is not pointer or reference to class"
+msgstr "đích không phải là hàm trỏ hoặc tham chiếu đến hạng"
+
+#: cp/rtti.c:534
+msgid "target is not pointer or reference to complete type"
+msgstr "đích không phải là hàm trỏ hoặc tham chiếu đến loại hoàn toàn"
+
+#: cp/rtti.c:540
+msgid "target is not pointer or reference"
+msgstr "đích không phải là một hàm trỏ hoặc một tham chiếu"
+
+#: cp/rtti.c:551
+msgid "source is not a pointer"
+msgstr "nguồn không phải là một hàm trỏ"
+
+#: cp/rtti.c:556
+msgid "source is not a pointer to class"
+msgstr "nguồn không phải là một hàm trỏ tới hạng"
+
+#: cp/rtti.c:561
+msgid "source is a pointer to incomplete type"
+msgstr "nguồn là một hàm trỏ tới loại không hoàn toàn"
+
+#: cp/rtti.c:574
+msgid "source is not of class type"
+msgstr "nguồn không phải có loại hạng"
+
+#: cp/rtti.c:579
+msgid "source is of incomplete class type"
+msgstr "nguồn có loại hạng không hoàn toàn"
+
+#: cp/rtti.c:592
+msgid "conversion casts away constness"
+msgstr "việc chuyển đổi cũng bỏ trình trạng bất biến"
+
+#: cp/rtti.c:752
+msgid "source type is not polymorphic"
+msgstr "nguồn không có loại nhiều dạng"
+
+#: cp/typeck.c:4679 c-typeck.c:3345
+#, gcc-internal-format
+msgid "wrong type argument to unary minus"
+msgstr "đối số có loại sai đối với dấu trừ nguyên phân"
+
+#: cp/typeck.c:4680 c-typeck.c:3332
+#, gcc-internal-format
+msgid "wrong type argument to unary plus"
+msgstr "đối số có loại sai đối với dấu cộng nguyên phân"
+
+#: cp/typeck.c:4703 c-typeck.c:3371
+#, gcc-internal-format
+msgid "wrong type argument to bit-complement"
+msgstr "đối số có loại sai đối với phần bù bit"
+
+#: cp/typeck.c:4710 c-typeck.c:3379
+#, gcc-internal-format
+msgid "wrong type argument to abs"
+msgstr "đối số có loại sai đối với bộ tuyệt đối"
+
+#: cp/typeck.c:4718 c-typeck.c:3391
+#, gcc-internal-format
+msgid "wrong type argument to conjugation"
+msgstr "đối số có loại sai đối với phần chia"
+
+#: cp/typeck.c:4729
+msgid "in argument to unary !"
+msgstr "trong đối số tới bộ nguyên phân !"
+
+#: cp/typeck.c:4790
+msgid "no pre-increment operator for type"
+msgstr "không có toán tử tiền gia cho loại"
+
+#: cp/typeck.c:4792
+msgid "no post-increment operator for type"
+msgstr "không có toán tử hậu gia cho loại"
+
+#: cp/typeck.c:4794
+msgid "no pre-decrement operator for type"
+msgstr "không có toán tử giảm gia cho loại"
+
+#: cp/typeck.c:4796
+msgid "no post-decrement operator for type"
+msgstr "không có toán tử hậu giảm cho loại"
+
+#: fortran/arith.c:94
+msgid "Arithmetic OK at %L"
+msgstr "Số học đúng tại %L"
+
+#: fortran/arith.c:97
+msgid "Arithmetic overflow at %L"
+msgstr "Số học bị tràn tại %L"
+
+#: fortran/arith.c:100
+msgid "Arithmetic underflow at %L"
+msgstr "Số học bị tràn ngược tại %L"
+
+#: fortran/arith.c:103
+msgid "Arithmetic NaN at %L"
+msgstr "Số học NaN (không phải là một con số) tại %L"
+
+#: fortran/arith.c:106
+msgid "Division by zero at %L"
+msgstr "Chia cho không tại %L"
+
+#: fortran/arith.c:109
+msgid "Array operands are incommensurate at %L"
+msgstr "Các toán hạng mảng không tương xứng với nhau tại %L"
+
+#: fortran/arith.c:113
+msgid "Integer outside symmetric range implied by Standard Fortran at %L"
+msgstr "số nguyên nằm ở ngoại phạm vi đối xứng ngụ ý bởi ngôn ngữ Fortran Tiêu Chuẩn tại %L"
+
+#: fortran/arith.c:1398
+msgid "elemental binary operation"
+msgstr "thao tác nhị phân loại yếu tố"
+
+#: fortran/check.c:1171 fortran/check.c:2024 fortran/check.c:2078
+#, c-format
+msgid "arguments '%s' and '%s' for intrinsic %s"
+msgstr "đối số « %s » và « %s » cho %s thực chất"
+
+#: fortran/check.c:1830
+#, c-format
+msgid "arguments 'a%d' and 'a%d' for intrinsic '%s'"
+msgstr "đối số « a%d » và « a%d » cho « %s » thực chất"
+
+#: fortran/check.c:2238 fortran/intrinsic.c:3640
+#, c-format
+msgid "arguments '%s' and '%s' for intrinsic '%s'"
+msgstr "đối số « %s » và « %s » cho « %s » thực chất"
+
+#: fortran/error.c:738 fortran/error.c:792 fortran/error.c:827
+#: fortran/error.c:902
+msgid "Warning:"
+msgstr "Cảnh báo :"
+
+#: fortran/error.c:794 fortran/error.c:882 fortran/error.c:932
+msgid "Error:"
+msgstr "Lỗi:"
+
+#: fortran/error.c:956
+msgid "Fatal Error:"
+msgstr "Lỗi nghiêm trọng:"
+
+#: fortran/expr.c:257
+#, c-format
+msgid "Constant expression required at %C"
+msgstr "Tại %C thì yêu cầu biểu thức bất biến"
+
+#: fortran/expr.c:260
+#, c-format
+msgid "Integer expression required at %C"
+msgstr "Tại %C thì yêu cầu biểu thức số nguyên"
+
+#: fortran/expr.c:265
+#, c-format
+msgid "Integer value too large in expression at %C"
+msgstr "Giá trị số nguyên quá lớn trong biểu thức tại %C"
+
+#: fortran/expr.c:3023
+msgid "array assignment"
+msgstr "sự gán mảng"
+
+#: fortran/gfortranspec.c:245
+#, c-format
+msgid "overflowed output arg list for '%s'"
+msgstr "tràn danh sách đối số kết xuất cho « %s »"
+
+#: fortran/gfortranspec.c:374
+#, c-format
+msgid ""
+"GNU Fortran comes with NO WARRANTY, to the extent permitted by law.\n"
+"You may redistribute copies of GNU Fortran\n"
+"under the terms of the GNU General Public License.\n"
+"For more information about these matters, see the file named COPYING\n"
+"\n"
+msgstr ""
+"GNU Fortran được phát hành mà KHÔNG BẢO ĐẢM GÌ CẢ,\n"
+"với điều khiển được pháp luật cho phép.\n"
+"Bạn có thể phân phối nó với điều kiện của\n"
+"Giấy Phép Công Cộng Gnu (GPL).\n"
+"Để tìm thấy thông tin thêm thì hãy xem tập tin có tên COPYING.\n"
+"\n"
+
+#: fortran/gfortranspec.c:396 fortran/gfortranspec.c:435
+#, c-format
+msgid "argument to '%s' missing"
+msgstr "thiếu đối số tới « %s »"
+
+#: fortran/gfortranspec.c:400
+#, c-format
+msgid "no input files; unwilling to write output files"
+msgstr "không có tập tin nhập vào ; không sẵn sàng ghi tập tin kết xuất"
+
+#: fortran/gfortranspec.c:422
+#, c-format
+msgid "Warning: Using -M <directory> is deprecated, use -J instead\n"
+msgstr "Cảnh báo : dùng « -M <thư_mục> » bị phản đối: nên dùng « -J » để thay thế\n"
+
+#: fortran/gfortranspec.c:557
+#, c-format
+msgid "Driving:"
+msgstr "Đang điều khiển:"
+
+#: fortran/io.c:548
+msgid "Positive width required"
+msgstr "Yêu cầu chiều rộng dương"
+
+#: fortran/io.c:549
+msgid "Nonnegative width required"
+msgstr "Yêu cầu chiều rộng không phải âm"
+
+#: fortran/io.c:550
+msgid "Unexpected element '%c' in format string at %L"
+msgstr "Gặp yếu tố bất thường « %c » trong chuỗi định dạng tại %L"
+
+#: fortran/io.c:552
+msgid "Unexpected end of format string"
+msgstr "Gặp kết thức chuỗi định dạng bất thường"
+
+#: fortran/io.c:553
+msgid "Zero width in format descriptor"
+msgstr "Bộ mô tả định dạng chứa chiều rộng số không"
+
+#: fortran/io.c:573
+msgid "Missing leading left parenthesis"
+msgstr "Thiếu dấu ngoặc đơn mở đi trước"
+
+#: fortran/io.c:602
+msgid "Left parenthesis required after '*'"
+msgstr "Đẳng sau « * » thì yêu cầu một dấu ngoặc đơn mở"
+
+#: fortran/io.c:633
+msgid "Expected P edit descriptor"
+msgstr "Mong đợi bộ mô tả chỉnh sửa « P »"
+
+#. P requires a prior number.
+#: fortran/io.c:641
+msgid "P descriptor requires leading scale factor"
+msgstr "Bộ mô tả « P » yêu cầu hệ số tỷ lệ đi trước"
+
+#: fortran/io.c:736 fortran/io.c:750
+msgid "Comma required after P descriptor"
+msgstr "Đẳng sau bộ mô tả « P » thì yêu cầu một dấu phẩy"
+
+#: fortran/io.c:764
+msgid "Positive width required with T descriptor"
+msgstr "Dùng bộ mô tả « T » thì yêu cầu chiều rộng dương"
+
+#: fortran/io.c:843
+msgid "E specifier not allowed with g0 descriptor"
+msgstr "Dùng bộ mô tả « g0 » thì không cho phép bộ ghi rõ « E »"
+
+#: fortran/io.c:913
+msgid "Positive exponent width required"
+msgstr "Yêu cầu chiều rộng lũy thừa dương"
+
+#: fortran/io.c:943
+msgid "Period required in format specifier"
+msgstr "Bộ ghi rõ định dạng thì yêu cầu một dấu chấm"
+
+#: fortran/matchexp.c:28
+#, c-format
+msgid "Syntax error in expression at %C"
+msgstr "Gặp lỗi cú pháp trong biểu thức tại %C"
+
+#: fortran/module.c:983
+msgid "Unexpected EOF"
+msgstr "Gặp kết thúc tập tin bất thường"
+
+#: fortran/module.c:1015
+msgid "Unexpected end of module in string constant"
+msgstr "Gặp kết thúc mô-đun bất thường trong hằng số chuỗi"
+
+#: fortran/module.c:1069
+msgid "Integer overflow"
+msgstr "Tràn số nguyên"
+
+#: fortran/module.c:1100
+msgid "Name too long"
+msgstr "Tên quá dài"
+
+#: fortran/module.c:1207
+msgid "Bad name"
+msgstr "Tên sai"
+
+#: fortran/module.c:1251
+msgid "Expected name"
+msgstr "Mong đợi một tên"
+
+#: fortran/module.c:1254
+msgid "Expected left parenthesis"
+msgstr "Mong đợi một dấu ngoặc đơn mở"
+
+#: fortran/module.c:1257
+msgid "Expected right parenthesis"
+msgstr "Mong đợi một dấu ngoặc đơn đóng"
+
+#: fortran/module.c:1260
+msgid "Expected integer"
+msgstr "Mong đợi một số nguyên"
+
+#: fortran/module.c:1263
+msgid "Expected string"
+msgstr "Mong đợi một chuỗi"
+
+#: fortran/module.c:1287
+msgid "find_enum(): Enum not found"
+msgstr "find_enum(): không tìm thấy bộ đếm"
+
+#: fortran/module.c:1887
+msgid "Expected attribute bit name"
+msgstr "Mong đợi một tên bit thuộc tính"
+
+#: fortran/module.c:2746
+msgid "Expected integer string"
+msgstr "Mong đợi một chuỗi số nguyên"
+
+#: fortran/module.c:2750
+msgid "Error converting integer"
+msgstr "Gặp lỗi khi chuyển đổi số nguyên"
+
+#: fortran/module.c:2772
+msgid "Expected real string"
+msgstr "Mong đợi một chuỗi thật"
+
+#: fortran/module.c:2989
+msgid "Expected expression type"
+msgstr "Mong đợi một loại biểu thức"
+
+#: fortran/module.c:3043
+msgid "Bad operator"
+msgstr "Toán tử sai"
+
+#: fortran/module.c:3132
+msgid "Bad type in constant expression"
+msgstr "Gặp loại saio trong biểu thức bất biến"
+
+#: fortran/module.c:5522
+msgid "Unexpected end of module"
+msgstr "Gặp kết thức mô-đun bất thường"
+
+#: fortran/parse.c:1144
+msgid "arithmetic IF"
+msgstr "IF (nếu) số học"
+
+#: fortran/parse.c:1150
+msgid "attribute declaration"
+msgstr "lời tuyên bố thuộc tính"
+
+#: fortran/parse.c:1183
+msgid "data declaration"
+msgstr "lời tuyên bố dữ liệu"
+
+#: fortran/parse.c:1192
+msgid "derived type declaration"
+msgstr "lời tuyên bố loại có hướng"
+
+#: fortran/parse.c:1277
+msgid "block IF"
+msgstr "IF (nếu) loại khối"
+
+#: fortran/parse.c:1286
+msgid "implied END DO"
+msgstr "ngụ ý END DO (kết thúc làm)"
+
+#: fortran/parse.c:1362
+msgid "assignment"
+msgstr "sự gán"
+
+#: fortran/parse.c:1365
+msgid "pointer assignment"
+msgstr "sự gán hàm trỏ"
+
+#: fortran/parse.c:1383
+msgid "simple IF"
+msgstr "IF (nếu) đơn giản"
+
+#: fortran/resolve.c:386
+msgid "module procedure"
+msgstr "thủ tục mô-đun"
+
+#: fortran/resolve.c:387
+msgid "internal function"
+msgstr "hàm nội bộ"
+
+#: fortran/resolve.c:1686
+msgid "elemental procedure"
+msgstr "thủ tục loại yếu tố"
+
+#: fortran/resolve.c:3330
+#, c-format
+msgid "Invalid context for NULL() pointer at %%L"
+msgstr "Gặp ngữ cảnh sai cho hàm trỏ NULL() tại %%L"
+
+#: fortran/resolve.c:3346
+#, c-format
+msgid "Operand of unary numeric operator '%s' at %%L is %s"
+msgstr "Tại %%L có một toán tử thuộc số nguyên phân « %s » với toán hạng %s"
+
+#: fortran/resolve.c:3362
+#, c-format
+msgid "Operands of binary numeric operator '%s' at %%L are %s/%s"
+msgstr "Tại %%L có một toán tử thuộc số nhị phân « %s » với các toán hạng %s/%s"
+
+#: fortran/resolve.c:3377
+#, c-format
+msgid "Operands of string concatenation operator at %%L are %s/%s"
+msgstr "Tại %%L có một toán tử ghép nối chuỗi với các toán hạng %s/%s"
+
+#: fortran/resolve.c:3396
+#, c-format
+msgid "Operands of logical operator '%s' at %%L are %s/%s"
+msgstr "Tại %%L có một toán tử hợp lý « %s » với các toán hạng %s/%s"
+
+#: fortran/resolve.c:3410
+#, c-format
+msgid "Operand of .not. operator at %%L is %s"
+msgstr "Tại %%L có một toán tử « .not. » với toán hạng %s"
+
+#: fortran/resolve.c:3424
+msgid "COMPLEX quantities cannot be compared at %L"
+msgstr "Không thể so sánh các số lượng PHỨC TẠP tại %L"
+
+#: fortran/resolve.c:3453
+#, c-format
+msgid "Logicals at %%L must be compared with %s instead of %s"
+msgstr "Tại %%L thì các bộ hợp lý phải được so sánh với %s thay cho %s"
+
+#: fortran/resolve.c:3459
+#, c-format
+msgid "Operands of comparison operator '%s' at %%L are %s/%s"
+msgstr "Tại %%L có một toán tử so sánh « %s » với các toán hạng %s/%s"
+
+#: fortran/resolve.c:3467
+#, c-format
+msgid "Unknown operator '%s' at %%L"
+msgstr "Không rõ toán tử « %s » tại %%L"
+
+#: fortran/resolve.c:3469
+#, c-format
+msgid "Operand of user operator '%s' at %%L is %s"
+msgstr "Tại %%L có một toán tử người dùng « %s » với toán hạng %s"
+
+#: fortran/resolve.c:3472
+#, c-format
+msgid "Operands of user operator '%s' at %%L are %s/%s"
+msgstr "Tại %%L có một toán tử người dùng « %s » với các toán hạng %s/%s"
+
+#: fortran/resolve.c:3558
+#, c-format
+msgid "Inconsistent ranks for operator at %%L and %%L"
+msgstr "Tại %%L và %%L có một toán tử với các phân hàng mâu thuẫn nhau"
+
+#: fortran/resolve.c:5722
+msgid "Loop variable"
+msgstr "Biến vòng lặp"
+
+#: fortran/resolve.c:5734
+msgid "Start expression in DO loop"
+msgstr "Biểu thức bắt đầu trong vòng lặp DO (làm)"
+
+#: fortran/resolve.c:5738
+msgid "End expression in DO loop"
+msgstr "Biểu thức kết thúc trong vòng lặp DO (làm)"
+
+#: fortran/resolve.c:5742
+msgid "Step expression in DO loop"
+msgstr "Biểu thức bước trong vòng lặp DO (làm)"
+
+#: fortran/trans-array.c:1134
+#, c-format
+msgid "Different CHARACTER lengths (%ld/%ld) in array constructor"
+msgstr "Bộ dựng mảng chứa các chiều dài KÝ_TỰ khác nhau (%ld/%ld)"
+
+#: fortran/trans-decl.c:3982
+#, c-format
+msgid "Actual string length does not match the declared one for dummy argument '%s' (%ld/%ld)"
+msgstr "Chiều dài chuỗi thật không tương ứng với điều tuyên bố cho đối số giả « %s » (%ld/%ld)"
+
+#: fortran/trans-decl.c:3990
+#, c-format
+msgid "Actual string length is shorter than the declared one for dummy argument '%s' (%ld/%ld)"
+msgstr "Chiều dài chuỗi thật vẫn nhỏ hơn điều tuyên bố cho đối số giả « %s » (%ld/%ld)"
+
+#: fortran/trans-expr.c:1624
+msgid "internal error: bad hash value in dynamic dispatch"
+msgstr "gặp lỗi nội bộ : giá trị chuỗi duy nhất sai trong điều vận năng động"
+
+#: fortran/trans-intrinsic.c:777
+#, c-format
+msgid "Unequal character lengths (%ld/%ld) in %s"
+msgstr "%3$s chứa các chiều dài ký tự khác nhau (%1$ld/%2$ld)"
+
+#: fortran/trans-intrinsic.c:4863
+#, c-format
+msgid "Argument NCOPIES of REPEAT intrinsic is negative (its value is %lld)"
+msgstr "Điều thực chất REPEAT (lặp lại) có đối số NCOPIES (số các bản sao) với giá trị âm (%lld)"
+
+#: fortran/trans-intrinsic.c:4895
+msgid "Argument NCOPIES of REPEAT intrinsic is too large"
+msgstr "Điều thực chất REPEAT (lặp lại) có đối số NCOPIES (số các bản sao) quá lớn"
+
+#: fortran/trans-io.c:488
+msgid "Unit number in I/O statement too small"
+msgstr "Câu lệnh V/R chứa con số đơn vị quá nhỏ"
+
+#: fortran/trans-io.c:496
+msgid "Unit number in I/O statement too large"
+msgstr "Câu lệnh V/R chứa con số đơn vị quá lớn"
+
+#: fortran/trans-stmt.c:158
+msgid "Assigned label is not a target label"
+msgstr "Nhãn đã gán không phải là một nhãn đích"
+
+#: fortran/trans-stmt.c:882 fortran/trans-stmt.c:1152
+msgid "Loop variable has been modified"
+msgstr "Biến vòng lặp bị sửa đổi"
+
+#: fortran/trans-stmt.c:1015
+msgid "DO step value is zero"
+msgstr "Giá trị bước DO (làm) là số không"
+
+#: fortran/trans.c:50
+msgid "Array bound mismatch"
+msgstr "Biên giới mảng không tương ứng"
+
+#: fortran/trans.c:51
+msgid "Array reference out of bounds"
+msgstr "Tham chiếu mảng ở ngoại phạm vi"
+
+#: fortran/trans.c:52
+msgid "Incorrect function return value"
+msgstr "Giá trị trả lại hàm không đúng"
+
+#: fortran/trans.c:533
+msgid "Memory allocation failed"
+msgstr "Lỗi cấp phát vùng nhớ"
+
+#: fortran/trans.c:619
+msgid "Attempt to allocate negative amount of memory. Possible integer overflow"
+msgstr "Thử cấp phát một vùng nhớ âm. Có thể tràn số nguyên"
+
+#: fortran/trans.c:653 fortran/trans.c:966
+msgid "Out of memory"
+msgstr "Không đủ bộ nhớ"
+
+#: fortran/trans.c:746
+#, c-format
+msgid "Attempting to allocate already allocated array '%s'"
+msgstr "Đang thử cấp phát một mảng đã cấp phát « %s »"
+
+#: fortran/trans.c:752
+msgid "Attempting to allocate already allocatedarray"
+msgstr "Đang thử cấp phát một mảng đã cấp phát"
+
+#: fortran/trans.c:863
+#, c-format
+msgid "Attempt to DEALLOCATE unallocated '%s'"
+msgstr "Đang thử BỎ cấp phát một mảng đã bỏ cấp phát « %s »"
+
+#: fortran/trans.c:947
+msgid "Attempt to allocate a negative amount of memory."
+msgstr "Đang thử cấp phát một vùng nhớ âm."
+
+#: java/jcf-dump.c:1068
+#, c-format
+msgid "Not a valid Java .class file.\n"
+msgstr "Không phải là một tập tin .class Java đúng.\n"
+
+#: java/jcf-dump.c:1074
+#, c-format
+msgid "error while parsing constant pool\n"
+msgstr "gặp lỗi khi phân tích cú pháp của vùng gộp hằng số\n"
+
+#: java/jcf-dump.c:1080 java/jcf-parse.c:1433
+#, gcc-internal-format
+msgid "error in constant pool entry #%d\n"
+msgstr "gặp lỗi trong mục nhập vùng gộp hằng số #%d\n"
+
+#: java/jcf-dump.c:1090
+#, c-format
+msgid "error while parsing fields\n"
+msgstr "gặp lỗi khi phân tích cú pháp của các trường\n"
+
+#: java/jcf-dump.c:1096
+#, c-format
+msgid "error while parsing methods\n"
+msgstr "gặp lỗi khi phân tích cú pháp của các phương pháp\n"
+
+#: java/jcf-dump.c:1102
+#, c-format
+msgid "error while parsing final attributes\n"
+msgstr "gặp lỗi khi phân tích cú pháp của các thuộc tính cuối cùng\n"
+
+#: java/jcf-dump.c:1139
+#, c-format
+msgid "Try 'jcf-dump --help' for more information.\n"
+msgstr "Hãy thử chạy câu lệnh trợ giúp « jcf-dump --help » để xem thêm thông tin.\n"
+
+#: java/jcf-dump.c:1146
+#, c-format
+msgid ""
+"Usage: jcf-dump [OPTION]... CLASS...\n"
+"\n"
+msgstr ""
+"Sử dụng: jcf-dump [TÙY_CHỌN]... HẠNG...\n"
+"\n"
+
+#: java/jcf-dump.c:1147
+#, c-format
+msgid ""
+"Display contents of a class file in readable form.\n"
+"\n"
+msgstr ""
+"Hiển thị nội dung của một tập tin hạng theo một định dạng cho người đọc được.\n"
+"\n"
+
+#: java/jcf-dump.c:1148
+#, c-format
+msgid "  -c                      Disassemble method bodies\n"
+msgstr "  -c                      Tháo rời các thân phương pháp\n"
+
+#: java/jcf-dump.c:1149
+#, c-format
+msgid "  --javap                 Generate output in 'javap' format\n"
+msgstr "  --javap                 Tạo kết xuất bằng định dạng « javap »\n"
+
+#: java/jcf-dump.c:1151
+#, c-format
+msgid "  --classpath PATH        Set path to find .class files\n"
+msgstr "  --classpath ĐƯỜNG_DẪN    Lập đường dẫn theo đó cần tìm tập tin .class (hạng)\n"
+
+#: java/jcf-dump.c:1152
+#, c-format
+msgid "  -IDIR                   Append directory to class path\n"
+msgstr "  -ITHƯ_MỤC                   Phụ thêm thư mục vào đường dẫn hạng\n"
+
+#: java/jcf-dump.c:1153
+#, c-format
+msgid "  --bootclasspath PATH    Override built-in class path\n"
+msgstr "  --bootclasspath ĐƯỜNG_DẪN    Có quyền cao hơn đường dẫn hạng dựng sẵn\n"
+
+#: java/jcf-dump.c:1154
+#, c-format
+msgid "  --extdirs PATH          Set extensions directory path\n"
+msgstr "  --extdirs ĐƯỜNG_DẪN          Lập đường dẫn đến thư mục phần mở rộng\n"
+
+#: java/jcf-dump.c:1155
+#, c-format
+msgid "  -o FILE                 Set output file name\n"
+msgstr "  -o TỆP                 Lập tên tập tin kết xuất\n"
+
+#: java/jcf-dump.c:1157
+#, c-format
+msgid "  --help                  Print this help, then exit\n"
+msgstr "  --help                  Hiển thị trợ giúp này, sau đó thoát\n"
+
+#: java/jcf-dump.c:1158
+#, c-format
+msgid "  --version               Print version number, then exit\n"
+msgstr "  --version               Hiển thị số thứ tự phiên bản, sau đó thoát\n"
+
+#: java/jcf-dump.c:1159
+#, c-format
+msgid "  -v, --verbose           Print extra information while running\n"
+msgstr "  -v, --verbose           Hiển thị thêm thông tin trong khi chạy\n"
+
+#: java/jcf-dump.c:1161
+#, c-format
+msgid ""
+"For bug reporting instructions, please see:\n"
+"%s.\n"
+msgstr ""
+"Để tìm hướng dẫn về thông báo lỗi, hãy xem:\n"
+"%s.\n"
+
+#: java/jcf-dump.c:1189 java/jcf-dump.c:1257
+#, c-format
+msgid "jcf-dump: no classes specified\n"
+msgstr "jcf-dump: chưa ghi rõ hạng nào\n"
+
+#: java/jcf-dump.c:1277
+#, c-format
+msgid "Cannot open '%s' for output.\n"
+msgstr "Không thể mở « %s » cho kết xuất.\n"
+
+#: java/jcf-dump.c:1322
+#, c-format
+msgid "bad format of .zip/.jar archive\n"
+msgstr "kho nén .zip/.jar có định dạng dai\n"
+
+#: java/jcf-dump.c:1440
+#, c-format
+msgid "Bad byte codes.\n"
+msgstr "Mã byte sai.\n"
+
+#: java/jvgenmain.c:47
+#, c-format
+msgid "Usage: %s [OPTIONS]... CLASSNAMEmain [OUTFILE]\n"
+msgstr "Sử dụng: %s [TÙY_CHỌN]... TÊN_HẠNGmain [TỆP_XUẤT]\n"
+
+#: java/jvgenmain.c:109
+#, c-format
+msgid "%s: Cannot open output file: %s\n"
+msgstr "%s: Không thể mở tập tin kết xuất: %s\n"
+
+#: java/jvgenmain.c:151
+#, c-format
+msgid "%s: Failed to close output file %s\n"
+msgstr "%s: Không đóng được tập tin kết xuất %s\n"
+
+#: java/jvspec.c:406
+#, c-format
+msgid "can't specify '-D' without '--main'\n"
+msgstr "không thể ghi rõ tùy chọn « -D » mà không có « --main »\n"
+
+#: java/jvspec.c:409
+#, c-format
+msgid "'%s' is not a valid class name"
+msgstr "« %s » không phải là một tên hạng đúng"
+
+#: java/jvspec.c:415
+#, c-format
+msgid "--resource requires -o"
+msgstr "« --resource » cũng yêu cầu « -o »"
+
+#: java/jvspec.c:429
+#, c-format
+msgid "cannot specify both -C and -o"
+msgstr "không thể ghi rõ đồng thời hai tùy chọn « --C » và « -o »"
+
+#: java/jvspec.c:441
+#, c-format
+msgid "cannot create temporary file"
+msgstr "không thể tạo tập tin tạm thời"
+
+#: java/jvspec.c:463
+#, c-format
+msgid "using both @FILE with multiple files not implemented"
+msgstr "chưa thực hiện chức năng sử dụng @FILE với nhiều tập tin"
+
+#: java/jvspec.c:585
+#, c-format
+msgid "cannot specify 'main' class when not linking"
+msgstr "không liên kết thì cũng không thể ghi rõ hạng « main » (chính)"
+
+#: config/vax/netbsd-elf.h:51
+msgid "the -shared option is not currently supported for VAX ELF"
+msgstr "tuỳ chọn « -shared » (chia sẻ) hiện thời không được hỗ trợ cho VAX ELF"
+
+#: config/vax/vax.h:50 config/vax/vax.h:51
+msgid "profiling not supported with -mg"
+msgstr "không hỗ trợ sử dụng chức năng đo hiệu năng sử dụng với « -mg »"
+
+#: config/i386/linux-unwind.h:186
+msgid "ax ; {int $0x80 | syscall"
+msgstr "ax ; {int $0x80 | cuộc_gọi_hệ_thống"
+
+#: config/darwin.h:311
+msgid "-current_version only allowed with -dynamiclib"
+msgstr "chỉ cho phép sử dụng « -current_version » với « -dynamiclib »"
+
+#: config/darwin.h:313
+msgid "-install_name only allowed with -dynamiclib"
+msgstr "chỉ cho phép sử dụng « -install_name » với « -dynamiclib »"
+
+#: config/darwin.h:318
+msgid "-bundle not allowed with -dynamiclib"
+msgstr "không cho phép sử dụng « -bundle » với « -dynamiclib »"
+
+#: config/darwin.h:319
+msgid "-bundle_loader not allowed with -dynamiclib"
+msgstr "không cho phép sử dụng « -bundle_loader » với « -dynamiclib »"
+
+#: config/darwin.h:320
+msgid "-client_name not allowed with -dynamiclib"
+msgstr "không cho phép sử dụng « -client_name » với « -dynamiclib »"
+
+#: config/darwin.h:325
+msgid "-force_flat_namespace not allowed with -dynamiclib"
+msgstr "không cho phép sử dụng « -force_flat_namespace » với « -dynamiclib »"
+
+#: config/darwin.h:327
+msgid "-keep_private_externs not allowed with -dynamiclib"
+msgstr "không cho phép sử dụng « -keep_private_externs » với « -dynamiclib »"
+
+#: config/darwin.h:328
+msgid "-private_bundle not allowed with -dynamiclib"
+msgstr "không cho phép sử dụng « -private_bundle » với « -dynamiclib »"
+
+#: fortran/lang-specs.h:55 fortran/lang-specs.h:69
+msgid "gfortran does not support -E without -cpp"
+msgstr "gfortran không hỗ trợ sử dụng « -E » mà không có « -cpp »"
+
+#: config/arc/arc.h:61 config/mips/mips.h:1230
+msgid "may not use both -EB and -EL"
+msgstr "không cho phép sử dụng đồng thời hai tuỳ chọn « -EB » và « -EL »"
+
+#: config/mcore/mcore.h:54
+msgid "the m210 does not have little endian support"
+msgstr "m210 không có hỗ trợ về cuối nhỏ"
+
+#: ada/gcc-interface/lang-specs.h:33 gcc.c:896 java/jvspec.c:81
+msgid "-pg and -fomit-frame-pointer are incompatible"
+msgstr "hai tùy chọn « --pg » và « --fomit-frame-pointer » không tương thích với nhau"
+
+#: ada/gcc-interface/lang-specs.h:34
+msgid "-c or -S required for Ada"
+msgstr "sử dụng Ada thì cũng yêu cầu « -c » hoặc « -S »"
+
+#: config/sparc/freebsd.h:34 config/rs6000/sysv4.h:870
+#: config/ia64/freebsd.h:26 config/i386/freebsd.h:103
+#: config/alpha/freebsd.h:33
+msgid "consider using `-pg' instead of `-p' with gprof(1)"
+msgstr "sử dụng gprof(1) thì đề nghị bạn lập « -pg » thay cho « -p »"
+
+#: config/sparc/linux64.h:165 config/sparc/linux64.h:176
+#: config/sparc/netbsd-elf.h:125 config/sparc/netbsd-elf.h:144
+#: config/sparc/sol2-bi.h:240 config/sparc/sol2-bi.h:250
+msgid "may not use both -m32 and -m64"
+msgstr "không cho phép sử dụng đồng thời hai tuỳ chọn « -m32 » và « -m64 »"
+
+#: java/lang-specs.h:33
+msgid "-fjni and -femit-class-files are incompatible"
+msgstr "hai tùy chọn « --fjni » và « --femit-class-files » không tương thích với nhau"
+
+#: java/lang-specs.h:34
+msgid "-fjni and -femit-class-file are incompatible"
+msgstr "hai tùy chọn « --fjni » và « --femit-class-file » không tương thích với nhau"
+
+#: java/lang-specs.h:35 java/lang-specs.h:36
+msgid "-femit-class-file should used along with -fsyntax-only"
+msgstr "có nên kết hợp tuỳ chọn « --femit-class-file »với « -fsyntax-only »"
+
+#: config/sparc/sol2-bi.h:212 config/sparc/sol2-bi.h:217
+#: config/sparc/sol2-gld-bi.h:40 config/sparc/sol2-gld-bi.h:45
+msgid "does not support multilib"
+msgstr "không hỗ trợ chức năng đa thư viện"
+
+#: gcc.c:868
+msgid "GCC does not support -C or -CC without -E"
+msgstr "GCC không hỗ trợ « -C » hoặc « -CC » mà không có « -E »"
+
+#: gcc.c:1073
+msgid "GNU C no longer supports -traditional without -E"
+msgstr "C của GNU không còn hỗ trợ « -traditional » mà không có « -E »"
+
+#: gcc.c:1089
+msgid "-E or -x required when input is from standard input"
+msgstr "Nhập từ đầu vào tiêu chuẩn thì cũng yêu cầu tuỳ chọn « -E » hoặc « -x »"
+
+#: config/i386/mingw-w64.h:61 config/i386/mingw32.h:81
+#: config/i386/cygwin.h:123
+msgid "shared and mdll are not compatible"
+msgstr "« shared » và « mdll » không tương thích với nhau"
+
+#: config/rs6000/sysv4.h:907 config/rs6000/sysv4.h:909
+#: config/alpha/linux-elf.h:33 config/alpha/linux-elf.h:35
+#: config/rs6000/linux64.h:356 config/rs6000/linux64.h:358 config/linux.h:111
+#: config/linux.h:113
+msgid "-mglibc and -muclibc used together"
+msgstr "« -mglibc » và « -muclibc » bị dùng với nhau"
+
+#: config/pa/pa-hpux10.h:87 config/pa/pa-hpux10.h:90 config/pa/pa-hpux10.h:98
+#: config/pa/pa-hpux10.h:101 config/pa/pa-hpux11.h:108
+#: config/pa/pa-hpux11.h:111 config/pa/pa64-hpux.h:30 config/pa/pa64-hpux.h:33
+#: config/pa/pa64-hpux.h:42 config/pa/pa64-hpux.h:45
+msgid "Warning: consider linking with `-static' as system libraries with"
+msgstr "Cảnh báo : đề nghị bạn liên kết dùng « -static » vì thư viện hệ thống"
+
+#: config/pa/pa-hpux10.h:88 config/pa/pa-hpux10.h:91 config/pa/pa-hpux10.h:99
+#: config/pa/pa-hpux10.h:102 config/pa/pa-hpux11.h:109
+#: config/pa/pa-hpux11.h:112 config/pa/pa64-hpux.h:31 config/pa/pa64-hpux.h:34
+#: config/pa/pa64-hpux.h:43 config/pa/pa64-hpux.h:46
+msgid "  profiling support are only provided in archive format"
+msgstr "  cũng hỗ trợ chức năng đo hiệu năng sử dụng chỉ được cung cấp theo định dạng kho lưu"
+
+#: config/rs6000/darwin.h:95
+msgid " conflicting code gen style switches are used"
+msgstr " sử dụng các cái chuyển loại tạo mã xung đột với nhau"
+
+#: config/arm/arm.h:154
+msgid "-msoft-float and -mhard_float may not be used together"
+msgstr "không cho phép sử dụng đồng thời hai tuỳ chọn « -msoft-float » (loại mềm) và « -mhard_float » (loại cứng)"
+
+#: config/arm/arm.h:156
+msgid "-mbig-endian and -mlittle-endian may not be used together"
+msgstr "không cho phép sử dụng đồng thời hai tuỳ chọn « -mbig-endian » (về cuối lớn) và « -mlittle-endian » (về cuối nhỏ)"
+
+#: config/vxworks.h:71
+msgid "-Xbind-now and -Xbind-lazy are incompatible"
+msgstr "hai tùy chọn « -Xbind-now » và « -Xbind-lazy » không tương thích với nhau"
+
+#: config/bfin/elf.h:54
+msgid "no processor type specified for linking"
+msgstr "chưa ghi rõ loại bộ xử lý cần liên kết"
+
+#: config/i386/nwld.h:34
+msgid "Static linking is not supported."
+msgstr "Không hỗ trợ chức năng liên kết tĩnh."
+
+#: config/i386/cygwin.h:28
+msgid "mno-cygwin and mno-win32 are not compatible"
+msgstr "hai tùy chọn « mno-cygwin » và « mno-win32 » không tương thích với nhau"
+
+#: config/sh/sh.h:463
+msgid "SH2a does not support little-endian"
+msgstr "SH2a không hỗ trợ tình trạng về cuối nhỏ"
+
+#: config/rx/rx.h:63
+msgid "-mas100-syntax is incompatible with -gdwarf"
+msgstr "« -mas100-syntax » không tương thích với « -gdwarf »"
+
+#: config/rx/rx.h:64
+msgid "rx200 cpu does not have FPU hardware"
+msgstr "CPU rx200 không có phần cứng đơn vị điểm phù động (FPU)"
+
+#: config/arm/freebsd.h:31
+msgid "consider using `-pg' instead of `-p' with gprof(1) "
+msgstr "sử dụng gprof(1) thì đề nghị bạn sử dụng « -pg » thay cho « -p »"
+
+#: objc/lang-specs.h:31 objc/lang-specs.h:46
+msgid "GNU Objective C no longer supports traditional compilation"
+msgstr "Objective C của GNU không còn hỗ trợ chức năng biên dịch truyền thống"
+
+#: config/cris/cris.h:207
+msgid "Do not specify both -march=... and -mcpu=..."
+msgstr "Đừng ghi rõ đồng thời hai tuỳ chọn « -march=... » và « -mcpu=... »"
+
+#: config/i386/i386.h:543
+msgid "`-mcpu=' is deprecated. Use `-mtune=' or '-march=' instead."
+msgstr "« -mcpu » bị phản đối. Hãy sử dụng « -mtune » hoặc « -march » để thay thế."
+
+#: config/i386/i386.h:546
+msgid "`-mintel-syntax' is deprecated. Use `-masm=intel' instead."
+msgstr "« -mintel-syntax » bị phản đối. Hãy sử dụng « -masm=intel » để thay thế."
+
+#: config/i386/i386.h:548
+msgid "'-msse5' was removed."
+msgstr "« -msse5 » đã bị gỡ bỏ."
+
+#: config/i386/i386.h:550
+msgid "`-mno-intel-syntax' is deprecated. Use `-masm=att' instead."
+msgstr "« -mno-intel-syntax » bị phản đối. Hãy sử dụng « -masm=att » để thay thế."
+
+#: config/s390/tpf.h:119
+msgid "static is not supported on TPF-OS"
+msgstr "trên TPF-OS thì không hỗ trợ « static »"
+
+#: config/mips/r3900.h:34
+msgid "-mhard-float not supported"
+msgstr "không hỗ trợ « -mhard-float »"
+
+#: config/mips/r3900.h:36
+msgid "-msingle-float and -msoft-float cannot both be specified"
+msgstr "không cho phép sử dụng đồng thời hai tuỳ chọn « -msingle-float » và « -msoft-float »"
+
+#: config/lynx.h:70
+msgid "cannot use mthreads and mlegacy-threads together"
+msgstr "không cho phép sử dụng đồng thời hai tuỳ chọn « mthreads » và « mlegacy-threads »"
+
+#: config/lynx.h:95
+msgid "cannot use mshared and static together"
+msgstr "không cho phép sử dụng đồng thời hai tuỳ chọn « mshared » và « static »"
+
+#: java/lang.opt:69
+msgid "Warn if deprecated empty statements are found"
+msgstr "Cảnh báo nếu tìm câu lệnh trống bị phản đối"
+
+#: java/lang.opt:73
+msgid "Warn if .class files are out of date"
+msgstr "Cảnh báo nếu có tập tin .class quá cũ"
+
+#: java/lang.opt:77
+msgid "Warn if modifiers are specified when not necessary"
+msgstr "Cảnh báo nếu ghi rõ bộ sửa đổi không cần thiết"
+
+#: java/lang.opt:81
+msgid "--CLASSPATH\tDeprecated; use --classpath instead"
+msgstr "--CLASSPATH\tBị phản đối; có nên sử dụng « --classpath » để thay thế"
+
+#: java/lang.opt:88
+msgid "Permit the use of the assert keyword"
+msgstr "Cho phép sử dụng từ khoá « assert »"
+
+#: java/lang.opt:110
+msgid "--bootclasspath=<path>\tReplace system path"
+msgstr "--bootclasspath=<đường_dẫn>\tThay thế đường dẫn hệ thống"
+
+#: java/lang.opt:114
+msgid "Generate checks for references to NULL"
+msgstr "Tạo ra sự kiểm tra có tham chiếu đến NULL (vô giá trị)"
+
+#: java/lang.opt:118
+msgid "--classpath=<path>\tSet class path"
+msgstr "--classpath=<đường_dẫn>\tLập đường dẫn hạng"
+
+#: java/lang.opt:125
+msgid "Output a class file"
+msgstr "Xuất một tập tin hạng"
+
+#: java/lang.opt:129
+msgid "Alias for -femit-class-file"
+msgstr "Bí danh cho « -femit-class-file »"
+
+#: java/lang.opt:133
+msgid "--encoding=<encoding>\tChoose input encoding (defaults from your locale)"
+msgstr "--encoding=<mã_ký_tự>\tChọn mã ký tự của đầu vào (mặc định là miền địa phương)"
+
+#: java/lang.opt:137
+msgid "--extdirs=<path>\tSet the extension directory path"
+msgstr "--extdirs=<đường_dẫn>\tLập đường dẫn đến thư mục phần mở rộng"
+
+#: java/lang.opt:144
+msgid "Input file is a file with a list of filenames to compile"
+msgstr "Tập tin nhập vào là một tập tin chứa danh sách các tên tập tin cần biên dịch"
+
+#: java/lang.opt:151
+msgid "Always check for non gcj generated classes archives"
+msgstr "Lúc nào cũng kiểm tra có kho lưu hạng không phải được gcj tạo ra"
+
+#: java/lang.opt:155
+msgid "Assume the runtime uses a hash table to map an object to its synchronization structure"
+msgstr "Giả sử là lúc chạy thì sử dụng một bảng chuỗi duy nhất để ánh xạ một đối tượng tới cấu trúc đồng bộ của nó"
+
+#: java/lang.opt:159
+msgid "Generate instances of Class at runtime"
+msgstr "Lúc chạy thì tạo ra các thể hiện Hạng"
+
+#: java/lang.opt:163
+msgid "Use offset tables for virtual method calls"
+msgstr "Sử dụng bảng hiệu số cho cuộc gọi phương pháp ảo"
+
+#: java/lang.opt:170
+msgid "Assume native functions are implemented using JNI"
+msgstr "Giả sử là các hàm sở hữu được thực hiện dùng JNI"
+
+#: java/lang.opt:174
+msgid "Enable optimization of static class initialization code"
+msgstr "Hiệu lực sự tối ưu hoá mã sơ khởi hạng tĩnh"
+
+#: java/lang.opt:181
+msgid "Reduce the amount of reflection meta-data generated"
+msgstr "Giảm số lượng siêu dữ liệu phản chiếu được tạo ra"
+
+#: java/lang.opt:185
+msgid "Enable assignability checks for stores into object arrays"
+msgstr "Hiệu lực sự kiểm tra khả năng sự gán cho việc lưu vào mảng đối tượng"
+
+#: java/lang.opt:189
+msgid "Generate code for the Boehm GC"
+msgstr "Tạo ra mã cho Boehm GC"
+
+#: java/lang.opt:193
+msgid "Call a library routine to do integer divisions"
+msgstr "Gọi một hàm thư viện để chia số nguyên"
+
+#: java/lang.opt:197
+msgid "Generate code for built-in atomic operations"
+msgstr "Tạo ra mã cho các thao tác atomic dựng sẵn"
+
+#: java/lang.opt:201
+msgid "Generated should be loaded by bootstrap loader"
+msgstr "Điều được tạo ra thì nên được nạp bởi bộ nạp và khởi động"
+
+#: java/lang.opt:205
+msgid "Set the source language version"
+msgstr "Lập phiên bản ngôn ngữ nguồn"
+
+#: java/lang.opt:209
+msgid "Set the target VM version"
+msgstr "Lập phiên bản VM đích"
+
+#: ada/gcc-interface/lang.opt:100
+msgid "-gnat<options>\tSpecify options to GNAT"
+msgstr "-gnat<tuỳ_chọn>\tGhi rõ các tuỳ chọn tới GNAT"
+
+#: fortran/lang.opt:57
+msgid "-J<directory>\tPut MODULE files in 'directory'"
+msgstr "-J<thư_mục>\tĐể vào thư mục này các tập tin MÔ-ĐUN"
+
+#: fortran/lang.opt:73
+msgid "Warn about possible aliasing of dummy arguments"
+msgstr "Cảnh báo về đối số giả có thể bị chồng lấp"
+
+#: fortran/lang.opt:77
+msgid "Warn about alignment of COMMON blocks"
+msgstr "Cảnh báo về sự xếp hàng các khối CHUNG"
+
+#: fortran/lang.opt:81
+msgid "Warn about missing ampersand in continued character constants"
+msgstr "Cảnh báo về ký hiệu « & » còn thiếu trong hằng ký tự tiếp tục"
+
+#: fortran/lang.opt:85
+msgid "Warn about creation of array temporaries"
+msgstr "Cảnh báo về sự tạo mục mảng tạm thời"
+
+#: fortran/lang.opt:89
+msgid "Warn about truncated character expressions"
+msgstr "Cảnh báo về biểu thức ký tự bị cắt ngắn"
+
+#: fortran/lang.opt:97
+msgid "Warn about calls with implicit interface"
+msgstr "Cảnh báo về cuộc gọi có giao diện ngầm"
+
+#: fortran/lang.opt:101
+msgid "Warn about called procedures not explicitly declared"
+msgstr "Cảnh báo về thủ tục được gọi mà không phải được tuyên bố dứt khoát"
+
+#: fortran/lang.opt:105
+msgid "Warn about truncated source lines"
+msgstr "Cảnh báo về dòng nguồn bị cắt ngắn"
+
+#: fortran/lang.opt:109
+msgid "Warn on intrinsics not part of the selected standard"
+msgstr "Cảnh báo về điều thực chất không phải thuộc về tiêu chuẩn được chọn"
+
+#: fortran/lang.opt:117
+msgid "Warn about \"suspicious\" constructs"
+msgstr "Cảnh báo về cấu trúc « đáng ngờ"
+
+#: fortran/lang.opt:121
+msgid "Permit nonconforming uses of the tab character"
+msgstr "Cho phép sử dụng ký tự tab một cách không phù hợp"
+
+#: fortran/lang.opt:125
+msgid "Warn about underflow of numerical constant expressions"
+msgstr "Cảnh báo về biểu thức hằng thuộc số bị tràn ngược"
+
+#: fortran/lang.opt:129
+msgid "Warn if a user-procedure has the same name as an intrinsic"
+msgstr "Cảnh báo nếu một thủ tục người dùng có cùng một tên với một điều thực chất"
+
+#: fortran/lang.opt:133
+msgid "Enable preprocessing"
+msgstr "Bật khả năng tiền xử lý"
+
+#: fortran/lang.opt:137
+msgid "Disable preprocessing"
+msgstr "Tắt khả năng tiền xử lý"
+
+#: fortran/lang.opt:145
+msgid "Enable alignment of COMMON blocks"
+msgstr "Bật sự xếp hàng các khối CHUNG"
+
+#: fortran/lang.opt:149
+msgid "All intrinsics procedures are available regardless of selected standard"
+msgstr "Tất cả các thủ tục về điều thực chất vẫn sẵn sàng bất chấp tiêu chuẩn được chọn"
+
+#: fortran/lang.opt:157
+msgid "Do not treat local variables and COMMON blocks as if they were named in SAVE statements"
+msgstr "Đừng xử lý giá trị cục bộ hoặc khối CHUNG như là nó được đặt tên trong câu lệnh LƯU"
+
+#: fortran/lang.opt:161
+msgid "Specify that backslash in string introduces an escape character"
+msgstr "Ghi rõ rằng một dấu chéo ngược trong một chuỗi thì giới thiệu một ký tự thoát"
+
+#: fortran/lang.opt:165
+msgid "Produce a backtrace when a runtime error is encountered"
+msgstr "Xuất một vết ngược khi gặp lỗi lúc chạy"
+
+#: fortran/lang.opt:169
+msgid "-fblas-matmul-limit=<n>\tSize of the smallest matrix for which matmul will use BLAS"
+msgstr "-fblas-matmul-limit=<số>\tKích cỡ của ma trận nhỏ nhất cho đó matmul sẽ sử dụng BLAS"
+
+#: fortran/lang.opt:173
+msgid "Produce a warning at runtime if a array temporary has been created for a procedure argument"
+msgstr "Cảnh báo lúc chạy nếu một mục mảng tạm thời đã được tạo cho một đối số thủ tục"
+
+#: fortran/lang.opt:177
+msgid "Use big-endian format for unformatted files"
+msgstr "Có tập tin chưa định dạng thì sử dụng định dạng về cuối lớn"
+
+#: fortran/lang.opt:181
+msgid "Use little-endian format for unformatted files"
+msgstr "Có tập tin chưa định dạng thì sử dụng định dạng về cuối nhỏ"
+
+#: fortran/lang.opt:185
+msgid "Use native format for unformatted files"
+msgstr "Có tập tin chưa định dạng thì sử dụng định dạng sở hữu"
+
+#: fortran/lang.opt:189
+msgid "Swap endianness for unformatted files"
+msgstr "Có tập tin chưa định dạng thì trao đổi tình trạng cuối"
+
+#: fortran/lang.opt:193
+msgid "Use the Cray Pointer extension"
+msgstr "Sử dụng phần mở rộng hàm trỏ Cray Pointer"
+
+#: fortran/lang.opt:197
+msgid "Ignore 'D' in column one in fixed form"
+msgstr "Có dạng cố định thì qua chữ « D » trong cột đầu tiên"
+
+#: fortran/lang.opt:201
+msgid "Treat lines with 'D' in column one as comments"
+msgstr "Thấy dòng có chữ « D » trong cột đầu tiên là ghi chú"
+
+#: fortran/lang.opt:205
+msgid "Set the default double precision kind to an 8 byte wide type"
+msgstr "Lập loại độ chính xác đôi mặc định thành một loại có chiều rộng 8 byte"
+
+#: fortran/lang.opt:209
+msgid "Set the default integer kind to an 8 byte wide type"
+msgstr "Lập loại số nguyên mặc định thành một loại có chiều rộng 8 byte"
+
+#: fortran/lang.opt:213
+msgid "Set the default real kind to an 8 byte wide type"
+msgstr "Lập loại thật mặc định thành một loại có chiều rộng 8 byte"
+
+#: fortran/lang.opt:217
+msgid "Allow dollar signs in entity names"
+msgstr "Cho phép tên thực thể chứa dấu đồng đô la « $ »"
+
+#: fortran/lang.opt:221
+msgid "Dump a core file when a runtime error occurs"
+msgstr "Gặp lỗi lúc chạy thì đổ một tập tin lõi"
+
+#: fortran/lang.opt:225
+msgid "Display the code tree after parsing"
+msgstr "Một khi phân tích cú pháp thì hiển thị cây mã nguồn"
+
+#: fortran/lang.opt:229
+msgid "Specify that an external BLAS library should be used for matmul calls on large-size arrays"
+msgstr "Ghi rõ rằng có nên sử dụng một thư viện BLAS bên ngoài cho cuộc gọi matmul trên mạng có kích cỡ lớn"
+
+#: fortran/lang.opt:233
+msgid "Use f2c calling convention"
+msgstr "Sử dụng quy ước gọi f2c"
+
+#: fortran/lang.opt:237
+msgid "Assume that the source file is fixed form"
+msgstr "Giả sử là tập tin nguồn có dạng cố định"
+
+#: fortran/lang.opt:241
+msgid "Specify where to find the compiled intrinsic modules"
+msgstr "Ghi rõ vị trí ở đó có các mô-đun thực chất đã biên dịch"
+
+#: fortran/lang.opt:245
+msgid "Allow arbitrary character line width in fixed mode"
+msgstr "Trong chế độ cố định thì cũng cho phép chiều rộng dòng ký tự tùy ý"
+
+#: fortran/lang.opt:249
+msgid "-ffixed-line-length-<n>\tUse n as character line width in fixed mode"
+msgstr "-ffixed-line-length-<số>\tTrong chế độ cố định thì chiều rộng dòng ký tự là số này"
+
+#: fortran/lang.opt:253
+msgid "-ffpe-trap=[...]\tStop on following floating point exceptions"
+msgstr "-ffpe-trap=[...]\tĐừng lại theo ngoại lệ điểm phù động"
+
+#: fortran/lang.opt:257
+msgid "Assume that the source file is free form"
+msgstr "Giả sử là tập tin nguồn có dạng tự do"
+
+#: fortran/lang.opt:261
+msgid "Allow arbitrary character line width in free mode"
+msgstr "Trong chế độ tự do thì cũng cho phép chiều rộng dòng ký tự tùy ý"
+
+#: fortran/lang.opt:265
+msgid "-ffree-line-length-<n>\tUse n as character line width in free mode"
+msgstr "-ffree-line-length-<số>\tTrong chế độ tự do thì chiều rộng dòng ký tự là số này"
+
+#: fortran/lang.opt:269
+msgid "Specify that no implicit typing is allowed, unless overridden by explicit IMPLICIT statements"
+msgstr "Ghi rõ rằng không cho phép tạo loại ngầm nào, nếu không bị ghi đè bởi câu lệnh THỰC CHẤT dứt khoát"
+
+#: fortran/lang.opt:273
+msgid "-finit-character=<n>\tInitialize local character variables to ASCII value n"
+msgstr "-finit-character=<số>\tSơ khởi các biến ký tự cục bộ thành giá trị ASCII này"
+
+#: fortran/lang.opt:277
+msgid "-finit-integer=<n>\tInitialize local integer variables to n"
+msgstr "-finit-integer=<số>\tSơ khởi các biến số nguyên cục bộ thành giá trị này"
+
+#: fortran/lang.opt:281
+msgid "Initialize local variables to zero (from g77)"
+msgstr "Sơ khởi các biến cục bộ thành số không (từ g77)"
+
+#: fortran/lang.opt:285
+msgid "-finit-logical=<true|false>\tInitialize local logical variables"
+msgstr "-finit-logical=<true|false>\tSơ khởi các biến hợp lý cục bộ (true=đúng, false=sai)"
+
+#: fortran/lang.opt:289
+msgid "-finit-real=<zero|nan|inf|-inf>\tInitialize local real variables"
+msgstr ""
+"-finit-real=<zero|nan|inf|-inf>\tSơ khởi các biến thật cục bộ\n"
+"\tzero\t\tsố không\n"
+"\tnan\t\tkhông phải là một con số\n"
+"\tinf\t\tvô hạn\n"
+"\t-inf\t\tkhông vô hạn"
+
+#: fortran/lang.opt:293
+msgid "-fmax-array-constructor=<n>\tMaximum number of objects in an array constructor"
+msgstr "-fmax-array-constructor=<số>\tSố tối đa các đối tượng trong một bộ cấu tạo mảng"
+
+#: fortran/lang.opt:297
+msgid "-fmax-errors=<n>\tMaximum number of errors to report"
+msgstr "-fmax-errors=<số>\tSố tối đa các lỗi cần thông báo"
+
+#: fortran/lang.opt:301
+msgid "-fmax-identifier-length=<n>\tMaximum identifier length"
+msgstr "-fmax-identifier-length=<số>\tChiều dài tối đa của bộ nhận diện"
+
+#: fortran/lang.opt:305
+msgid "-fmax-subrecord-length=<n>\tMaximum length for subrecords"
+msgstr "-fmax-subrecord-length=<số>\tChiều dài tối đa của mục ghi phụ"
+
+#: fortran/lang.opt:309
+msgid "-fmax-stack-var-size=<n>\tSize in bytes of the largest array that will be put on the stack"
+msgstr "-fmax-stack-var-size=<số>\tKích cỡ theo byte của mảng lớn nhất sẽ được để vào đống"
+
+#: fortran/lang.opt:313
+msgid "Set default accessibility of module entities to PRIVATE."
+msgstr "Lập thành PRIVATE (riêng) tình trạng truy cập của thực thể mô-đun."
+
+#: fortran/lang.opt:321
+msgid "Try to lay out derived types as compactly as possible"
+msgstr "Thử bố trí các loại có hướng một cách tóm gọn nhất có thể"
+
+#: fortran/lang.opt:329
+msgid "Protect parentheses in expressions"
+msgstr "Bảo vệ dấu ngoặc đơn trong biểu thức"
+
+#: fortran/lang.opt:333
+msgid "Enable range checking during compilation"
+msgstr "Hiệu lực chức năng kiểm tra phạm vi trong khi biên dịch"
+
+#: fortran/lang.opt:337
+msgid "Use a 4-byte record marker for unformatted files"
+msgstr "Có tập tin chưa định dạng thì sử dụng một ký hiệu đánh dấu mục ghi loại 4 byte"
+
+#: fortran/lang.opt:341
+msgid "Use an 8-byte record marker for unformatted files"
+msgstr "Có tập tin chưa định dạng thì sử dụng một ký hiệu đánh dấu mục ghi loại 8 byte"
+
+#: fortran/lang.opt:345
+msgid "Allocate local variables on the stack to allow indirect recursion"
+msgstr "Cấp phát các biến cúc bộ trên đống để cho phép đệ quy một cách gián tiếp"
+
+#: fortran/lang.opt:349
+msgid "Copy array sections into a contiguous block on procedure entry"
+msgstr "Vào thủ tục thì cũng sao chép các phần mảng vào một khối kề nhau"
+
+#: fortran/lang.opt:353
+msgid "-fcheck=[...]\tSpecify which runtime checks are to be performed"
+msgstr "-fcheck=[...]\tGhi rõ có nên thực hiện những hàm kiểm tra lúc chạy nào"
+
+#: fortran/lang.opt:357
+msgid "Append a second underscore if the name already contains an underscore"
+msgstr "Tên đã chứa một dấu gạch dưới thì phụ thêm một dấu gạch dưới bổ sung"
+
+#: fortran/lang.opt:365
+msgid "Apply negative sign to zero values"
+msgstr "Có giá trị số không thì áp dụng ký hiệu trừ"
+
+#: fortran/lang.opt:369
+msgid "Append underscores to externally visible names"
+msgstr "Có tên hiển thị bên ngoài thì phụ thêm dấu gạch dưới"
+
+#: fortran/lang.opt:373
+msgid "Compile all program units at once and check all interfaces"
+msgstr "Biên dịch đồng thời tất cả các đơn vị chương trình, và kiểm tra tất cả các giao diện"
+
+#: fortran/lang.opt:413
+msgid "Statically link the GNU Fortran helper library (libgfortran)"
+msgstr "Liên kết tĩnh thư viện bổ trợ Fortran của GNU (libgfortran)"
+
+#: fortran/lang.opt:417
+msgid "Conform to the ISO Fortran 2003 standard"
+msgstr "Làm cho hợp với tiêu chuẩn ISO Fortran 2003"
+
+#: fortran/lang.opt:421
+msgid "Conform to the ISO Fortran 2008 standard"
+msgstr "Làm cho hợp với tiêu chuẩn ISO Fortran 2008"
+
+#: fortran/lang.opt:425
+msgid "Conform to the ISO Fortran 95 standard"
+msgstr "Làm cho hợp với tiêu chuẩn ISO Fortran 95"
+
+#: fortran/lang.opt:429
+msgid "Conform to nothing in particular"
+msgstr "Làm cho hợp với không gì đặc biệt"
+
+#: fortran/lang.opt:433
+msgid "Accept extensions to support legacy code"
+msgstr "Chấp nhận phần mở rộng để hỗ trợ mã nguồn thừa tự"
+
+#: config/alpha/alpha.opt:23 config/i386/i386.opt:201
+msgid "Do not use hardware fp"
+msgstr "Đừng sử dụng điểm phù động loại phần cứng"
+
+#: config/alpha/alpha.opt:27
+msgid "Use fp registers"
+msgstr "Sử dụng thanh ghi loại điểm phù động"
+
+#: config/alpha/alpha.opt:31
+msgid "Assume GAS"
+msgstr "Giả sử GAS"
+
+#: config/alpha/alpha.opt:35
+msgid "Do not assume GAS"
+msgstr "Đừng giả sử GAS"
+
+#: config/alpha/alpha.opt:39
+msgid "Request IEEE-conformant math library routines (OSF/1)"
+msgstr "Yêu cầu hàm thư viện toán học thích hợp với IEEE (OSF/1)"
+
+#: config/alpha/alpha.opt:43
+msgid "Emit IEEE-conformant code, without inexact exceptions"
+msgstr "Xuất mã thích hợp với IEEE mà không có ngoại lệ không chính xác"
+
+#: config/alpha/alpha.opt:50
+msgid "Do not emit complex integer constants to read-only memory"
+msgstr "Đừng xuất hằng số nguyên phức tạp vào vùng nhớ chỉ đọc"
+
+#: config/alpha/alpha.opt:54
+msgid "Use VAX fp"
+msgstr "Sử dụng điểm phù động loại VAX"
+
+#: config/alpha/alpha.opt:58
+msgid "Do not use VAX fp"
+msgstr "Đừng sử dụng điểm phù động loại VAX"
+
+#: config/alpha/alpha.opt:62
+msgid "Emit code for the byte/word ISA extension"
+msgstr "Xuất mã cho phần mở rộng ISA byte/từ"
+
+#: config/alpha/alpha.opt:66
+msgid "Emit code for the motion video ISA extension"
+msgstr "Xuất mã cho phần mở rộng ISA ảnh động di chuyển"
+
+#: config/alpha/alpha.opt:70
+msgid "Emit code for the fp move and sqrt ISA extension"
+msgstr "Xuất mã cho phần mở rộng ISA loại điểm phù động về di chuyển v tính căn bậc hai"
+
+#: config/alpha/alpha.opt:74
+msgid "Emit code for the counting ISA extension"
+msgstr "Xuất mã cho phần mở rộng ISA đếm"
+
+#: config/alpha/alpha.opt:78
+msgid "Emit code using explicit relocation directives"
+msgstr "Xuất mã dùng chỉ thị định vị lại dứt khoát"
+
+#: config/alpha/alpha.opt:82
+msgid "Emit 16-bit relocations to the small data areas"
+msgstr "Xuất vào vùng dữ liệu nhỏ sự định vị lại 16-bit"
+
+#: config/alpha/alpha.opt:86
+msgid "Emit 32-bit relocations to the small data areas"
+msgstr "Xuất vào vùng dữ liệu nhỏ sự định vị lại 32-bit"
+
+#: config/alpha/alpha.opt:90
+msgid "Emit direct branches to local functions"
+msgstr "Xuất nhánh trực tiếp tới hàm cục bộ"
+
+#: config/alpha/alpha.opt:94
+msgid "Emit indirect branches to local functions"
+msgstr "Xuất nhánh gián tiếp tới hàm cục bộ"
+
+#: config/alpha/alpha.opt:98
+msgid "Emit rdval instead of rduniq for thread pointer"
+msgstr "Đối với hàm trỏ nhánh thì xuất rdval thay cho rduniq"
+
+#: config/alpha/alpha.opt:102 config/s390/s390.opt:59
+#: config/sparc/long-double-switch.opt:23
+msgid "Use 128-bit long double"
+msgstr "Sử dụng đôi dài 128-bit"
+
+#: config/alpha/alpha.opt:106 config/s390/s390.opt:63
+#: config/sparc/long-double-switch.opt:27
+msgid "Use 64-bit long double"
+msgstr "Sử dụng đôi dài 64-bit"
+
+#: config/alpha/alpha.opt:110
+msgid "Use features of and schedule given CPU"
+msgstr "Sử dụng các tính năng của CPU đưa ra, và định thời CPU đó"
+
+#: config/alpha/alpha.opt:114
+msgid "Schedule given CPU"
+msgstr "Định thời CPU đưa ra"
+
+#: config/alpha/alpha.opt:118
+msgid "Control the generated fp rounding mode"
+msgstr "Điều khiển chế độ làm tròn loại điểm phù động đã tạo ra"
+
+#: config/alpha/alpha.opt:122
+msgid "Control the IEEE trap mode"
+msgstr "Điều khiển chế độ đặt bẫy IEEE"
+
+#: config/alpha/alpha.opt:126
+msgid "Control the precision given to fp exceptions"
+msgstr "Điều khiển độ chính xác đưa ra cho ngoại lệ về điểm phù động"
+
+#: config/alpha/alpha.opt:130
+msgid "Tune expected memory latency"
+msgstr "Điều chỉnh độ ngấm ngầm vùng nhớ mong đợi"
+
+#: config/alpha/alpha.opt:134 config/ia64/ia64.opt:111
+#: config/rs6000/sysv4.opt:32
+msgid "Specify bit size of immediate TLS offsets"
+msgstr "Ghi rõ kích cỡ bit của hiệu số TLS lập tức"
+
+#: config/frv/frv.opt:23
+msgid "Use 4 media accumulators"
+msgstr "Sử dụng 4 bộ tích luỹ môi giới"
+
+#: config/frv/frv.opt:27
+msgid "Use 8 media accumulators"
+msgstr "Sử dụng 8 bộ tích luỹ môi giới"
+
+#: config/frv/frv.opt:31
+msgid "Enable label alignment optimizations"
+msgstr "Hiệu lực sự tối ưu hoá cách xếp hàng nhãn"
+
+#: config/frv/frv.opt:35
+msgid "Dynamically allocate cc registers"
+msgstr "Cấp phát động các thanh ghi CC"
+
+#: config/frv/frv.opt:42
+msgid "Set the cost of branches"
+msgstr "Lập giá của nhánh"
+
+#: config/frv/frv.opt:46
+msgid "Enable conditional execution other than moves/scc"
+msgstr "Hiệu lực sự thực hiện có điều kiện mà khác với moves/scc"
+
+#: config/frv/frv.opt:50
+msgid "Change the maximum length of conditionally-executed sequences"
+msgstr "Thay đổi chiều dài tối đa của dãy được thực hiện có điều kiện"
+
+#: config/frv/frv.opt:54
+msgid "Change the number of temporary registers that are available to conditionally-executed sequences"
+msgstr "Thay đổi số các thanh ghi tạm thời còn sẵn sàng cho dãy được thực hiện có điều kiện"
+
+#: config/frv/frv.opt:58
+msgid "Enable conditional moves"
+msgstr "Hiệu lực sự di chuyển có điều kiện"
+
+#: config/frv/frv.opt:62
+msgid "Set the target CPU type"
+msgstr "Lập loại CPU đích"
+
+#: config/frv/frv.opt:84
+msgid "Use fp double instructions"
+msgstr "Sử dụng câu lệnh đôi loại điểm phù động"
+
+#: config/frv/frv.opt:88
+msgid "Change the ABI to allow double word insns"
+msgstr "Sửa đổi ABI để cho phép câu lệnh từ đôi"
+
+#: config/frv/frv.opt:92 config/bfin/bfin.opt:73
+msgid "Enable Function Descriptor PIC mode"
+msgstr "Hiệu lực chế độ PIC Mô tả Hàm"
+
+#: config/frv/frv.opt:96
+msgid "Just use icc0/fcc0"
+msgstr "Chỉ sử dụng icc0/fcc0"
+
+#: config/frv/frv.opt:100
+msgid "Only use 32 FPRs"
+msgstr "Chỉ sử dụng 32 FPR"
+
+#: config/frv/frv.opt:104
+msgid "Use 64 FPRs"
+msgstr "Sử dụng 64 FPR"
+
+#: config/frv/frv.opt:108
+msgid "Only use 32 GPRs"
+msgstr "Chỉ sử dụng 32 GPR"
+
+#: config/frv/frv.opt:112
+msgid "Use 64 GPRs"
+msgstr "Sử dụng 64 GPR"
+
+#: config/frv/frv.opt:116
+msgid "Enable use of GPREL for read-only data in FDPIC"
+msgstr "Hiệu lực sử dụng GPREL cho dữ liệu chỉ đọc trong FDPIC"
+
+#: config/frv/frv.opt:120 config/rs6000/rs6000.opt:112
+#: config/pdp11/pdp11.opt:71
+msgid "Use hardware floating point"
+msgstr "Sử dụng điểm phù động loại phần cứng"
+
+#: config/frv/frv.opt:124 config/bfin/bfin.opt:77
+msgid "Enable inlining of PLT in function calls"
+msgstr "Hiệu lực sự chèn trực tiếp PLT vào cuộc gọi hàm"
+
+#: config/frv/frv.opt:128
+msgid "Enable PIC support for building libraries"
+msgstr "Hiệu lực sự hỗ trợ PIC để xây dựng thư viện"
+
+#: config/frv/frv.opt:132
+msgid "Follow the EABI linkage requirements"
+msgstr "Tùy theo các yêu cầu của sự liên kết EABI"
+
+#: config/frv/frv.opt:136
+msgid "Disallow direct calls to global functions"
+msgstr "Không cho phép gọi trực tiếp cho hàm toàn cục"
+
+#: config/frv/frv.opt:140
+msgid "Use media instructions"
+msgstr "Sử dụng câu lệnh môi giới"
+
+#: config/frv/frv.opt:144
+msgid "Use multiply add/subtract instructions"
+msgstr "Sử dụng nhiều câu lệnh nhân_cộng/trừ"
+
+#: config/frv/frv.opt:148
+msgid "Enable optimizing &&/|| in conditional execution"
+msgstr "Hiệu lực sự tối ưu hoá &&/|| trong quá trình thực hiện có điều kiện"
+
+#: config/frv/frv.opt:152
+msgid "Enable nested conditional execution optimizations"
+msgstr "Hiệu lực sự tối ưu hoá quá trình thực hiện có điều kiện mà cũng lồng nhau"
+
+#: config/frv/frv.opt:157
+msgid "Do not mark ABI switches in e_flags"
+msgstr "Đừng đánh dấu cái chuyển ABI trong e_flags"
+
+#: config/frv/frv.opt:161
+msgid "Remove redundant membars"
+msgstr "Gỡ bỏ thanh vùng nhớ thừa"
+
+#: config/frv/frv.opt:165
+msgid "Pack VLIW instructions"
+msgstr "Đóng gói các câu lệnh VLIW"
+
+#: config/frv/frv.opt:169
+msgid "Enable setting GPRs to the result of comparisons"
+msgstr "Hiệu lực chức năng lập GPR thành kết quả của phép so sánh"
+
+#: config/frv/frv.opt:173
+msgid "Change the amount of scheduler lookahead"
+msgstr "Sửa đổi khoảng thời gian nhìn trước của công cụ định thời"
+
+#: config/frv/frv.opt:177 config/pa/pa.opt:104
+msgid "Use software floating point"
+msgstr "Sử dụng điểm phù động loại phần mềm"
+
+#: config/frv/frv.opt:181
+msgid "Assume a large TLS segment"
+msgstr "Giả sử một đoạn TLS lớn"
+
+#: config/frv/frv.opt:185
+msgid "Do not assume a large TLS segment"
+msgstr "Đừng giả sử một đoạn TLS lớn"
+
+#: config/frv/frv.opt:190
+msgid "Cause gas to print tomcat statistics"
+msgstr "Gây ra chương trình gas in ra thống kê về tomcat"
+
+#: config/frv/frv.opt:195
+msgid "Link with the library-pic libraries"
+msgstr "Liên kết với các thư viện library-pic"
+
+#: config/frv/frv.opt:199
+msgid "Allow branches to be packed with other instructions"
+msgstr "Cho phép đóng gói nhánh với câu lệnh khác"
+
+#: config/mn10300/mn10300.opt:23
+msgid "Target the AM33 processor"
+msgstr "Đặt mục đích là bộ xử lý AM33"
+
+#: config/mn10300/mn10300.opt:27
+msgid "Target the AM33/2.0 processor"
+msgstr "Đặt mục đích là bộ xử lý AM33/2.0"
+
+#: config/mn10300/mn10300.opt:31
+msgid "Work around hardware multiply bug"
+msgstr "Khắc phục lỗi nhân lên phần cứng"
+
+#: config/mn10300/mn10300.opt:36
+msgid "Enable linker relaxations"
+msgstr "Hiệu lực hàm yếu về bộ liên kết"
+
+#: config/mn10300/mn10300.opt:40
+msgid "Return pointers in both a0 and d0"
+msgstr "Trả lại hàm trỏ trong cả hai a0 và d0"
+
+#: config/s390/tpf.opt:23
+msgid "Enable TPF-OS tracing code"
+msgstr "Hiệu lực mã tìm đường TFP-OS"
+
+#: config/s390/tpf.opt:27
+msgid "Specify main object for TPF-OS"
+msgstr "Ghi rõ đối tượng chính cho TFP-OS"
+
+#: config/s390/s390.opt:23
+msgid "31 bit ABI"
+msgstr "ABI 31-bit"
+
+#: config/s390/s390.opt:27
+msgid "64 bit ABI"
+msgstr "ABI 64-bit"
+
+#: config/s390/s390.opt:31 config/i386/i386.opt:97 config/spu/spu.opt:80
+msgid "Generate code for given CPU"
+msgstr "Tạo ra mã cho CPU đưa ra"
+
+#: config/s390/s390.opt:35
+msgid "Maintain backchain pointer"
+msgstr "Bảo tồn hàm trỏ dây chuyền ngược"
+
+#: config/s390/s390.opt:39
+msgid "Additional debug prints"
+msgstr "Lần bổ sung in ra thông tin gỡ rối"
+
+#: config/s390/s390.opt:43
+msgid "ESA/390 architecture"
+msgstr "Kiến trúc ESA/390"
+
+#: config/s390/s390.opt:47
+msgid "Enable fused multiply/add instructions"
+msgstr "Hiệu lực câu lệnh nhân/cộng hợp nhau"
+
+#: config/s390/s390.opt:51
+msgid "Enable decimal floating point hardware support"
+msgstr "Hiệu lực sự hỗ trợ phần cứng điểm phù động thập phân"
+
+#: config/s390/s390.opt:55
+msgid "Enable hardware floating point"
+msgstr "Hiệu lực điểm phù động loại phần cứng"
+
+#: config/s390/s390.opt:67
+msgid "Use packed stack layout"
+msgstr "Sử dụng bố trí đống đóng gói"
+
+#: config/s390/s390.opt:71
+msgid "Use bras for executable < 64k"
+msgstr "Sử dụng BRAS cho tập tin thực thị < 64k"
+
+#: config/s390/s390.opt:75
+msgid "Disable hardware floating point"
+msgstr "Tắt điểm phù động loại phần cứng"
+
+#: config/s390/s390.opt:79
+msgid "Set the max. number of bytes which has to be left to stack size before a trap instruction is triggered"
+msgstr "Lập số tối đa các byte cần để cho kích cỡ đống trước khi gây ra một câu lệnh đặt bẫy"
+
+#: config/s390/s390.opt:83
+msgid "Emit extra code in the function prologue in order to trap if the stack size exceeds the given limit"
+msgstr "Xuất mã bổ sung trong đoạn mở đầu hàm để đặt bẫy nếu kích cỡ đống vượt quá giới hạn đưa ra"
+
+#: config/s390/s390.opt:87 config/ia64/ia64.opt:115 config/sparc/sparc.opt:95
+#: config/i386/i386.opt:229 config/spu/spu.opt:84
+msgid "Schedule code for given CPU"
+msgstr "Định thời mã cho CPU đưa ra"
+
+#: config/s390/s390.opt:91
+msgid "mvcle use"
+msgstr "Cách sử dụng mvcle"
+
+#: config/s390/s390.opt:95
+msgid "Warn if a function uses alloca or creates an array with dynamic size"
+msgstr "Cảnh báo nếu một hàm sử dụng alloca hoặc tạo một mảng có kích cỡ năng động"
+
+#: config/s390/s390.opt:99
+msgid "Warn if a single function's framesize exceeds the given framesize"
+msgstr "Cảnh báo nếu có một hàm riêng lẻ với kích cỡ khung vượt quá kích cỡ khung đưa ra"
+
+#: config/s390/s390.opt:103
+msgid "z/Architecture"
+msgstr "z/Kiến trúc"
+
+#: config/ia64/ilp32.opt:3
+msgid "Generate ILP32 code"
+msgstr "Tạo ra mã ILP32"
+
+#: config/ia64/ilp32.opt:7
+msgid "Generate LP64 code"
+msgstr "Tạo ra mã LP64"
+
+#: config/ia64/ia64.opt:21
+msgid "Generate big endian code"
+msgstr "Tạo ra mã về cuối lớn"
+
+#: config/ia64/ia64.opt:25
+msgid "Generate little endian code"
+msgstr "Tạo ra mã về cuối nhỏ"
+
+#: config/ia64/ia64.opt:29
+msgid "Generate code for GNU as"
+msgstr "Tạo ra mã cho as của GNU"
+
+#: config/ia64/ia64.opt:33
+msgid "Generate code for GNU ld"
+msgstr "Tạo ra mã cho ld của GNU"
+
+#: config/ia64/ia64.opt:37
+msgid "Emit stop bits before and after volatile extended asms"
+msgstr "Xuất bit dừng lại đẳng trước và sau asm mở rộng hay thay đổi"
+
+#: config/ia64/ia64.opt:41
+msgid "Use in/loc/out register names"
+msgstr "Sử dụng tên thanh ghi loại in/loc/out"
+
+#: config/ia64/ia64.opt:48
+msgid "Enable use of sdata/scommon/sbss"
+msgstr "Hiệu lực sử dụng « sdata/scommon/sbss »"
+
+#: config/ia64/ia64.opt:52
+msgid "Generate code without GP reg"
+msgstr "Tạo ra mã không có GP reg"
+
+#: config/ia64/ia64.opt:56
+msgid "gp is constant (but save/restore gp on indirect calls)"
+msgstr "gp bất biến (mà lưu/phục_hồi gp khi được gọi gián tiếp)"
+
+#: config/ia64/ia64.opt:60
+msgid "Generate self-relocatable code"
+msgstr "Tạo ra mã có thể tự định vị lại"
+
+#: config/ia64/ia64.opt:64
+msgid "Generate inline floating point division, optimize for latency"
+msgstr "Tạo ra phép chia điểm phù động trực tiếp, tối ưu hoá cho sự ngấm ngầm"
+
+#: config/ia64/ia64.opt:68
+msgid "Generate inline floating point division, optimize for throughput"
+msgstr "Tạo ra phép chia điểm phù động trực tiếp, tối ưu hoá cho tốc độ truyền dữ liệu"
+
+#: config/ia64/ia64.opt:75
+msgid "Generate inline integer division, optimize for latency"
+msgstr "Tạo ra phép chia số nguyên trực tiếp, tối ưu hoá cho sự ngấm ngầm"
+
+#: config/ia64/ia64.opt:79
+msgid "Generate inline integer division, optimize for throughput"
+msgstr "Tạo ra phép chia số nguyên trực tiếp, tối ưu hoá cho tốc độ truyền dữ liệu"
+
+#: config/ia64/ia64.opt:83
+msgid "Do not inline integer division"
+msgstr "Đừng chèn vào trực tiếp phép chia số nguyên"
+
+#: config/ia64/ia64.opt:87
+msgid "Generate inline square root, optimize for latency"
+msgstr "Tạo ra căn bậc hai trực tiếp, tối ưu cho sự ngấm ngầm"
+
+#: config/ia64/ia64.opt:91
+msgid "Generate inline square root, optimize for throughput"
+msgstr "Tạo ra căn bậc hai trực tiếp, tối ưu cho tốc độ truyền dữ liệu"
+
+#: config/ia64/ia64.opt:95
+msgid "Do not inline square root"
+msgstr "Đừng chèn vào trực tiếp căn bậc hai"
+
+#: config/ia64/ia64.opt:99
+msgid "Enable Dwarf 2 line debug info via GNU as"
+msgstr "Hiệu lực thông tin gỡ rối dòng Dwarf 2 thông qua as của GNU"
+
+#: config/ia64/ia64.opt:103
+msgid "Enable earlier placing stop bits for better scheduling"
+msgstr "Hiệu lực sự để sớm hơn các bit dừng lại, để định thời một cách thành công hơn"
+
+#: config/ia64/ia64.opt:107 config/spu/spu.opt:72 config/sh/sh.opt:253
+#: config/pa/pa.opt:51
+msgid "Specify range of registers to make fixed"
+msgstr "Ghi rõ phạm vi các thanh ghi cần làm cho cố định"
+
+#: config/ia64/ia64.opt:119
+msgid "Use data speculation before reload"
+msgstr "Sử dụng phép đầu cơ loại dữ liệu trước khi nạp lại"
+
+#: config/ia64/ia64.opt:123
+msgid "Use data speculation after reload"
+msgstr "Sử dụng phép đầu cơ loại dữ liệu sau khi nạp lại"
+
+#: config/ia64/ia64.opt:127
+msgid "Use control speculation"
+msgstr "Sử dụng phép đầu cơ loại điều khiển"
+
+#: config/ia64/ia64.opt:131
+msgid "Use in block data speculation before reload"
+msgstr "Sử dụng phép đầu cơ loại dữ liệu theo khối trước khi nạp lại"
+
+#: config/ia64/ia64.opt:135
+msgid "Use in block data speculation after reload"
+msgstr "Sử dụng phép đầu cơ loại dữ liệu theo khối sau khi nạp lại"
+
+#: config/ia64/ia64.opt:139
+msgid "Use in block control speculation"
+msgstr "Sử dụng phép đầu cơ loại điều khiển theo khối"
+
+#: config/ia64/ia64.opt:143
+msgid "Use simple data speculation check"
+msgstr "Sử dụng hàm kiểm tra phép đầu cơ loại dữ liệu đơn giản"
+
+#: config/ia64/ia64.opt:147
+msgid "Use simple data speculation check for control speculation"
+msgstr "Sử dụng hàm kiểm tra phép đầu cơ loại dữ liệu đơn giản để đầu cơ về điều khiển"
+
+#: config/ia64/ia64.opt:151
+msgid "If set, data speculative instructions will be chosen for schedule only if there are no other choices at the moment "
+msgstr "Lập thì câu lệnh đầu cơ về dữ liệu sẽ được chọn để định thời chỉ nếu không có sự chọn khác nào vào lúc này"
+
+#: config/ia64/ia64.opt:155
+msgid "If set, control speculative instructions will be chosen for schedule only if there are no other choices at the moment "
+msgstr "Lập thì câu lệnh đầu cơ về điều khiển sẽ được chọn để định thời chỉ nếu không có sự chọn khác nào vào lúc này"
+
+#: config/ia64/ia64.opt:159
+msgid "Count speculative dependencies while calculating priority of instructions"
+msgstr "Đếm các quan hệ phụ thuộc loại đầu cơ trong khi tính mức ưu tiên của câu lệnh"
+
+#: config/ia64/ia64.opt:163
+msgid "Place a stop bit after every cycle when scheduling"
+msgstr "Đang định thời thì cũng để một bit dừng lại vào đẳng sau mọi chu kỳ"
+
+#: config/ia64/ia64.opt:167
+msgid "Assume that floating-point stores and loads are not likely to cause conflict when placed into one instruction group"
+msgstr "Giả sử rằng các việc nạp/lưu loại điểm phù động không phải rất có thể gây ra sự xung đột khi được để vào cùng một nhóm câu lệnh"
+
+#: config/ia64/ia64.opt:171
+msgid "Soft limit on number of memory insns per instruction group, giving lower priority to subsequent memory insns attempting to schedule in the same insn group. Frequently useful to prevent cache bank conflicts.  Default value is 1"
+msgstr "Giới hạn mềm về số các câu lệnh vùng nhớ mỗi nhóm câu lệnh, gán mức ưu tiên thấp hơn cho câu lệnh vùng nhớ theo sau mà thử định thời trong cùng một nhóm câu lệnh. Hữu ích để ngăn cản sự xung đột đối với nhóm vùng nhớ tạm. Giá trị mặc định là 1"
+
+#: config/ia64/ia64.opt:175
+msgid "Disallow more than `msched-max-memory-insns' in instruction group. Otherwise, limit is `soft' (prefer non-memory operations when limit is reached)"
+msgstr "Ép buộc giới hạn cứng là số tối đa các câu lệnh vùng nhớ « msched-max-memory-insns » trong nhóm câu lệnh. Không thì giới hạn là « mềm » (thích thao tác không phải vùng nhớ hơn khi tới giới hạn này)"
+
+#: config/ia64/ia64.opt:179
+msgid "Don't generate checks for control speculation in selective scheduling"
+msgstr "Đừng tạo ra hàm kiểm tra đối với đầu cơ về điều khiển khi định thời một cách lựa chọn"
+
+#: config/ia64/ia64.opt:183
+msgid "Enable fused multiply/add and multiply/subtract instructions"
+msgstr "Hiệu lực câu lệnh hợp nhau loại nhân/cộng và nhân/trừ"
+
+#: config/ia64/vms_symvec_libgcc_s.opt:3
+msgid "! It would be better to auto-generate this file."
+msgstr "! Tốt hơn nếu tự động tạo ra tập tin này."
+
+#: config/ia64/vms_symvec_libgcc_s.opt:7
+msgid "SYMBOL_VECTOR=(__divdi3=PROCEDURE)"
+msgstr "VÉC_TƠ-KÝ_HIỆU=(__divdi3=THỦ_TỤC)"
+
+#: config/m32c/m32c.opt:24
+msgid "-msim\tUse simulator runtime"
+msgstr "-msim\tSử dụng khoảng thời gian chạy của bộ mô phỏng"
+
+#: config/m32c/m32c.opt:28
+msgid "-mcpu=r8c\tCompile code for R8C variants"
+msgstr "-mcpu=r8c\tBiên dịch mã cho biến thế R8C"
+
+#: config/m32c/m32c.opt:32
+msgid "-mcpu=m16c\tCompile code for M16C variants"
+msgstr "-mcpu=m16c\tBiên dịch mã cho biến thế M16C"
+
+#: config/m32c/m32c.opt:36
+msgid "-mcpu=m32cm\tCompile code for M32CM variants"
+msgstr "-mcpu=m32cm\tBiên dịch mã cho biến thế M32CM"
+
+#: config/m32c/m32c.opt:40
+msgid "-mcpu=m32c\tCompile code for M32C variants"
+msgstr "-mcpu=m32c\tBiên dịch mã cho biến thế M32C"
+
+#: config/m32c/m32c.opt:44
+msgid "-memregs=\tNumber of memreg bytes (default: 16, range: 0..16)"
+msgstr "-memregs=\tSố các byte memreg (mặc định: 16, phạm vi: 0..16)"
+
+#: config/sparc/little-endian.opt:23
+msgid "Generate code for little-endian"
+msgstr "Tạo ra mã cho tình trạng cuối nhỏ"
+
+#: config/sparc/little-endian.opt:27
+msgid "Generate code for big-endian"
+msgstr "Tạo ra mã cho tình trạng cuối lớn"
+
+#: config/sparc/sparc.opt:23 config/sparc/sparc.opt:27
+msgid "Use hardware FP"
+msgstr "Sử dụng điểm phù động loại phần cứng"
+
+#: config/sparc/sparc.opt:31
+msgid "Do not use hardware FP"
+msgstr "Đừng sử dụng điểm phù động loại phần cứng"
+
+#: config/sparc/sparc.opt:35
+msgid "Assume possible double misalignment"
+msgstr "Giả sử có thể bị sai đôi xếp hàng"
+
+#: config/sparc/sparc.opt:39
+msgid "Pass -assert pure-text to linker"
+msgstr "Gửi cho bộ liên kết « -assert pure-text »"
+
+#: config/sparc/sparc.opt:43
+msgid "Use ABI reserved registers"
+msgstr "Sử dụng thanh ghi dành riêng cho ABI"
+
+#: config/sparc/sparc.opt:47
+msgid "Use hardware quad FP instructions"
+msgstr "Sử dụng câu lệnh loại bốn điểm phù động phần cứng"
+
+#: config/sparc/sparc.opt:51
+msgid "Do not use hardware quad fp instructions"
+msgstr "Đừng sử dụng câu lệnh loại bốn điểm phù động phần cứng"
+
+#: config/sparc/sparc.opt:55
+msgid "Compile for V8+ ABI"
+msgstr "Biên dịch cho ABI loại V8+"
+
+#: config/sparc/sparc.opt:59
+msgid "Use UltraSPARC Visual Instruction Set extensions"
+msgstr "Sử dụng phần mở rộng của Tập hợp Câu lệnh Trực quan UltraSPARC"
+
+#: config/sparc/sparc.opt:63
+msgid "Pointers are 64-bit"
+msgstr "Hàm trỏ là 64-bit"
+
+#: config/sparc/sparc.opt:67
+msgid "Pointers are 32-bit"
+msgstr "Hàm trỏ là 32-bit"
+
+#: config/sparc/sparc.opt:71
+msgid "Use 64-bit ABI"
+msgstr "Sử dụng ABI 64-bit"
+
+#: config/sparc/sparc.opt:75
+msgid "Use 32-bit ABI"
+msgstr "Sử dụng ABI 32-bit"
+
+#: config/sparc/sparc.opt:79
+msgid "Use stack bias"
+msgstr "Sử dụng khuynh hướng về đống"
+
+#: config/sparc/sparc.opt:83
+msgid "Use structs on stronger alignment for double-word copies"
+msgstr "Sử dụng cấu trúc khi xếp hàng mạnh hơn các bản sao từ đôi"
+
+#: config/sparc/sparc.opt:87
+msgid "Optimize tail call instructions in assembler and linker"
+msgstr "Tối ưu hoá các câu lệnh gọi đuôi trong bộ dịch mã số và bộ liên kết"
+
+#: config/sparc/sparc.opt:91
+msgid "Use features of and schedule code for given CPU"
+msgstr "Sử dụng các tính năng của CPU đưa ra, và định thời mã cho CPU đó"
+
+#: config/sparc/sparc.opt:99
+msgid "Use given SPARC-V9 code model"
+msgstr "Sử dụng mẫu mã SPARC-V9 đưa ra"
+
+#: config/sparc/sparc.opt:103
+msgid "Enable strict 32-bit psABI struct return checking."
+msgstr "Hiệu lực chức năng kiểm tra trả lại cấu trúc psABI 32-bit ngặt"
+
+#: config/m32r/m32r.opt:23
+msgid "Compile for the m32rx"
+msgstr "Biên dịch cho m32x"
+
+#: config/m32r/m32r.opt:27
+msgid "Compile for the m32r2"
+msgstr "Biên dịch cho m32r2"
+
+#: config/m32r/m32r.opt:31
+msgid "Compile for the m32r"
+msgstr "Biên dịch cho m32r"
+
+#: config/m32r/m32r.opt:35
+msgid "Align all loops to 32 byte boundary"
+msgstr "Xếp hàng tất cả các vòng lặp theo biên giới 32-byte"
+
+#: config/m32r/m32r.opt:39
+msgid "Prefer branches over conditional execution"
+msgstr "Thích nhánh hơn sự thực hiện có điều kiện"
+
+#: config/m32r/m32r.opt:43
+msgid "Give branches their default cost"
+msgstr "Gán cho mỗi nhánh giá mặc định của nó"
+
+#: config/m32r/m32r.opt:47
+msgid "Display compile time statistics"
+msgstr "Hiển thị thống kê về khoảng thời gian biên dịch"
+
+#: config/m32r/m32r.opt:51
+msgid "Specify cache flush function"
+msgstr "Ghi rõ hàm chuyển hết vùng nhớ tạm ra ngoài"
+
+#: config/m32r/m32r.opt:55
+msgid "Specify cache flush trap number"
+msgstr "Ghi rõ số thứ tự bẫy chuyển hết vùng nhớ tạm ra ngoài"
+
+#: config/m32r/m32r.opt:59
+msgid "Only issue one instruction per cycle"
+msgstr "Chỉ đưa ra một câu lệnh từng chu kỳ"
+
+#: config/m32r/m32r.opt:63
+msgid "Allow two instructions to be issued per cycle"
+msgstr "Cho phép đưa ra hai câu lệnh từng chu kỳ"
+
+#: config/m32r/m32r.opt:67
+msgid "Code size: small, medium or large"
+msgstr ""
+"Kích cỡ mã:\n"
+" • small\t\t\tnhỏ\n"
+" • medium\t\tvừa\n"
+" • large\t\t\tlớn."
+
+#: config/m32r/m32r.opt:71
+msgid "Don't call any cache flush functions"
+msgstr "Đừng gọi hàm nào chuyển hết vùng nhớ tạm ra ngoài"
+
+#: config/m32r/m32r.opt:75
+msgid "Don't call any cache flush trap"
+msgstr "Đừng gọi bẫy nào chuyển hết vùng nhớ tạm ra ngoài"
+
+#: config/m32r/m32r.opt:82
+msgid "Small data area: none, sdata, use"
+msgstr ""
+"Vùng dữ liệu nhỏ :\n"
+" • none\tkhông có\n"
+" • sdata\n"
+" • use\tsử dụng"
+
+#: config/m68k/m68k.opt:23
+msgid "Generate code for a 520X"
+msgstr "Tạo ra mã cho một 520X"
+
+#: config/m68k/m68k.opt:27
+msgid "Generate code for a 5206e"
+msgstr "Tạo ra mã cho một 5206e"
+
+#: config/m68k/m68k.opt:31
+msgid "Generate code for a 528x"
+msgstr "Tạo ra mã cho một 528X"
+
+#: config/m68k/m68k.opt:35
+msgid "Generate code for a 5307"
+msgstr "Tạo ra mã cho một 5307"
+
+#: config/m68k/m68k.opt:39
+msgid "Generate code for a 5407"
+msgstr "Tạo ra mã cho một 5407"
+
+#: config/m68k/m68k.opt:43 config/m68k/m68k.opt:104
+msgid "Generate code for a 68000"
+msgstr "Tạo ra mã cho một 68000"
+
+#: config/m68k/m68k.opt:47
+msgid "Generate code for a 68010"
+msgstr "Tạo ra mã cho một 68010"
+
+#: config/m68k/m68k.opt:51 config/m68k/m68k.opt:108
+msgid "Generate code for a 68020"
+msgstr "Tạo ra mã cho một 68020"
+
+#: config/m68k/m68k.opt:55
+msgid "Generate code for a 68040, without any new instructions"
+msgstr "Tạo ra mã cho một 68040 mà không có câu lệnh mới nào"
+
+#: config/m68k/m68k.opt:59
+msgid "Generate code for a 68060, without any new instructions"
+msgstr "Tạo ra mã cho một 68060 mà không có câu lệnh mới nào"
+
+#: config/m68k/m68k.opt:63
+msgid "Generate code for a 68030"
+msgstr "Tạo ra mã cho một 68030"
+
+#: config/m68k/m68k.opt:67
+msgid "Generate code for a 68040"
+msgstr "Tạo ra mã cho một 68040"
+
+#: config/m68k/m68k.opt:71
+msgid "Generate code for a 68060"
+msgstr "Tạo ra mã cho một 680220"
+
+#: config/m68k/m68k.opt:75
+msgid "Generate code for a 68302"
+msgstr "Tạo ra mã cho một 68302"
+
+#: config/m68k/m68k.opt:79
+msgid "Generate code for a 68332"
+msgstr "Tạo ra mã cho một 68332"
+
+#: config/m68k/m68k.opt:84
+msgid "Generate code for a 68851"
+msgstr "Tạo ra mã cho một 68851"
+
+#: config/m68k/m68k.opt:88
+msgid "Generate code that uses 68881 floating-point instructions"
+msgstr "Tạo ra mã sử dụng câu lệnh loại điểm phù động 68881"
+
+#: config/m68k/m68k.opt:92
+msgid "Align variables on a 32-bit boundary"
+msgstr "Xếp hàng tất cả các biến theo một biên giới 32-byte"
+
+#: config/m68k/m68k.opt:96 config/arm/arm.opt:49 config/score/score.opt:63
+msgid "Specify the name of the target architecture"
+msgstr "Ghi rõ tên của kiến trúc đích"
+
+#: config/m68k/m68k.opt:100
+msgid "Use the bit-field instructions"
+msgstr "Sử dụng câu lệnh loại trường-bit"
+
+#: config/m68k/m68k.opt:112
+msgid "Generate code for a ColdFire v4e"
+msgstr "Tạo ra mã cho một ColdFire v4e"
+
+#: config/m68k/m68k.opt:116
+msgid "Specify the target CPU"
+msgstr "Ghi rõ CPU đích"
+
+#: config/m68k/m68k.opt:120
+msgid "Generate code for a cpu32"
+msgstr "Tạo ra mã cho một cpu32"
+
+#: config/m68k/m68k.opt:124
+msgid "Use hardware division instructions on ColdFire"
+msgstr "Sử dụng câu lệnh chia phần cứng trong ColdFire"
+
+#: config/m68k/m68k.opt:128
+msgid "Generate code for a Fido A"
+msgstr "Tạo ra mã cho một Fido A"
+
+#: config/m68k/m68k.opt:132
+msgid "Generate code which uses hardware floating point instructions"
+msgstr "Tạo ra mã mả sử dụng câu lệnh loại điểm phù động phần cứng"
+
+#: config/m68k/m68k.opt:136
+msgid "Enable ID based shared library"
+msgstr "Hiệu lực thư viện dùng chung dựa vào mã số (ID)"
+
+#: config/m68k/m68k.opt:140
+msgid "Do not use the bit-field instructions"
+msgstr "Đừng sử dụng câu lệnh loại trường-bit"
+
+#: config/m68k/m68k.opt:144
+msgid "Use normal calling convention"
+msgstr "Sử dụng quy ước gọi thông thường"
+
+#: config/m68k/m68k.opt:148
+msgid "Consider type 'int' to be 32 bits wide"
+msgstr "Thấy « type » (loại) « int » (số nguyên) có chiều rộng 32 bit"
+
+#: config/m68k/m68k.opt:152
+msgid "Generate pc-relative code"
+msgstr "Tạo ra mã tương đối với PC (pc-relative)"
+
+#: config/m68k/m68k.opt:156
+msgid "Use different calling convention using 'rtd'"
+msgstr "Sử dụng một quy ước gọi khác bằng « rtd »"
+
+#: config/m68k/m68k.opt:160 config/bfin/bfin.opt:61
+msgid "Enable separate data segment"
+msgstr "Hiệu lực đoạn dữ liệu riêng"
+
+#: config/m68k/m68k.opt:164 config/bfin/bfin.opt:57
+msgid "ID of shared library to build"
+msgstr "mã số (ID) của thư viện dùng chung cần xây dựng"
+
+#: config/m68k/m68k.opt:168
+msgid "Consider type 'int' to be 16 bits wide"
+msgstr "Thấy « type » (loại) « int » (số nguyên) có chiều rộng 16 bit"
+
+#: config/m68k/m68k.opt:172
+msgid "Generate code with library calls for floating point"
+msgstr "Tạo ra mã chứa cuộc gọi thư viện cho điểm phù động"
+
+#: config/m68k/m68k.opt:176
+msgid "Do not use unaligned memory references"
+msgstr "Đừng sử dụng tham chiếu vùng nhớ tạm chưa xếp hàng"
+
+#: config/m68k/m68k.opt:180
+msgid "Tune for the specified target CPU or architecture"
+msgstr "Điều chỉnh cho CPU hay kiến trúc đưa ra"
+
+#: config/m68k/m68k.opt:184
+msgid "Support more than 8192 GOT entries on ColdFire"
+msgstr "Hỗ trợ nhiều hơn 8192 mục nhập GOT trên ColdFire"
+
+#: config/m68k/m68k.opt:188
+msgid "Support TLS segment larger than 64K"
+msgstr "Hỗ trợ đoạn TLS lớn hơn 64K"
+
+#: config/m68k/ieee.opt:24 config/i386/i386.opt:137
+msgid "Use IEEE math for fp comparisons"
+msgstr "Sử dụng toán học IEEE cho phép so sánh loại điểm phù động"
+
+#: config/i386/djgpp.opt:25
+msgid "Ignored (obsolete)"
+msgstr "Bị bỏ qua (quá cũ)"
+
+#: config/i386/mingw.opt:23
+msgid "Warn about none ISO msvcrt scanf/printf width extensions"
+msgstr "Cảnh báo về phần mở rộng chiều rộng scanf/printf không phải tùy theo ISO"
+
+#: config/i386/mingw.opt:27
+msgid "For nested functions on stack executable permission is set."
+msgstr "Gán quyền thực hiện cho hàm lồng nhau trên đống."
+
+#: config/i386/i386.opt:61
+msgid "sizeof(long double) is 16"
+msgstr "kích cỡ (đôi dài) là 16"
+
+#: config/i386/i386.opt:65 config/i386/i386.opt:133
+msgid "Use hardware fp"
+msgstr "Sử dụng điểm phù động loại phần cứng"
+
+#: config/i386/i386.opt:69
+msgid "sizeof(long double) is 12"
+msgstr "kích cỡ (đôi dài) là 12"
+
+#: config/i386/i386.opt:73
+msgid "Reserve space for outgoing arguments in the function prologue"
+msgstr "Trong đoạn mở đầu hàm thì dành riêng sức chứa cho đối số gửi ra"
+
+#: config/i386/i386.opt:77
+msgid "Align some doubles on dword boundary"
+msgstr "Xếp hàng một số đôi theo biên giới dword"
+
+#: config/i386/i386.opt:81
+msgid "Function starts are aligned to this power of 2"
+msgstr "Đầu hàng được xếp hàng theo lũy thừa 2 này"
+
+#: config/i386/i386.opt:85
+msgid "Jump targets are aligned to this power of 2"
+msgstr "Đích nhảy được xếp hàng theo lũy thừa 2 này"
+
+#: config/i386/i386.opt:89
+msgid "Loop code aligned to this power of 2"
+msgstr "Mã vòng lặp được xếp hàng theo lũy thừa 2 này"
+
+#: config/i386/i386.opt:93
+msgid "Align destination of the string operations"
+msgstr "Đích xếp hàng của các thao tác chuỗi"
+
+#: config/i386/i386.opt:101
+msgid "Use given assembler dialect"
+msgstr "Sử dụng phương ngôn dịch mã số đưa ra"
+
+#: config/i386/i386.opt:105
+msgid "Branches are this expensive (1-5, arbitrary units)"
+msgstr "Nhánh có giá này (1-5, đơn vị tùy ý)"
+
+#: config/i386/i386.opt:109
+msgid "Data greater than given threshold will go into .ldata section in x86-64 medium model"
+msgstr "Dữ liệu vượt quá ngưỡng này thì để vào phần « .ldata » trong mẫu môi giới x86-64"
+
+#: config/i386/i386.opt:113
+msgid "Use given x86-64 code model"
+msgstr "Sử dụng mẫu mã x86-64 đưa ra"
+
+#: config/i386/i386.opt:117
+msgid "Generate sin, cos, sqrt for FPU"
+msgstr "Tạo ra sin, cos, sqrt cho FPU (đơn vị điểm phù động)"
+
+#: config/i386/i386.opt:121
+msgid "Always use Dynamic Realigned Argument Pointer (DRAP) to realign stack"
+msgstr "Lúc nào cũng sử dụng DRAP (hàm trỏ đối số đã xếp hàng năng động) để xếp hàng lại đống"
+
+#: config/i386/i386.opt:125
+msgid "Return values of functions in FPU registers"
+msgstr "Trả lại giá trị của hàm trong thanh ghi FPU (đơn vị điểm phù động)"
+
+#: config/i386/i386.opt:129
+msgid "Generate floating point mathematics using given instruction set"
+msgstr "Tạo ra toán học loại điểm phù động dùng tập hợp câu lệnh đưa ra"
+
+#: config/i386/i386.opt:141
+msgid "Inline all known string operations"
+msgstr "Chèn vào trực tiếp tất cả các thao tác chuỗi được biết"
+
+#: config/i386/i386.opt:145
+msgid "Inline memset/memcpy string operations, but perform inline version only for small blocks"
+msgstr "Chèn vào trực tiếp các thao tác chuỗi loại memset/memcpy, mà thực hiện phiên bản trực tiếp chỉ cho khối nhỏ"
+
+#: config/i386/i386.opt:153
+msgid "Use native (MS) bitfield layout"
+msgstr "Sử dụng bố trí trường bit sở hữu (MS)"
+
+#: config/i386/i386.opt:169
+msgid "Omit the frame pointer in leaf functions"
+msgstr "Bỏ sót hàm trỏ khung trong hàm lá"
+
+#: config/i386/i386.opt:173
+msgid "Set 80387 floating-point precision (-mpc32, -mpc64, -mpc80)"
+msgstr "Lập độ chính xác điểm phù động 80387 (-mpc32, -mpc64, -mpc80)"
+
+#: config/i386/i386.opt:177
+msgid "Attempt to keep stack aligned to this power of 2"
+msgstr "Thử bảo tồn đống được xếp hàng theo lũy thừa 2 này"
+
+#: config/i386/i386.opt:181
+msgid "Assume incoming stack aligned to this power of 2"
+msgstr "Giả sử đống gửi đến được xếp hàng theo lũy thừa 2 này"
+
+#: config/i386/i386.opt:185
+msgid "Use push instructions to save outgoing arguments"
+msgstr "Sử dụng câu lệnh đẩy để lưu các đối số gửi đi"
+
+#: config/i386/i386.opt:189
+msgid "Use red-zone in the x86-64 code"
+msgstr "Sử dụng vùng màu đỏ trong mã x86-64"
+
+#: config/i386/i386.opt:193
+msgid "Number of registers used to pass integer arguments"
+msgstr "Số các thanh ghi được sử dụng để gửi đối số nguyên cho đích"
+
+#: config/i386/i386.opt:197
+msgid "Alternate calling convention"
+msgstr "Quy ước gọi xen kẽ"
+
+#: config/i386/i386.opt:205
+msgid "Use SSE register passing conventions for SF and DF mode"
+msgstr "Sử dụng quy ước gửi qua thanh ghi loại SSE cho chế độ SF và DF"
+
+#: config/i386/i386.opt:209
+msgid "Realign stack in prologue"
+msgstr "Xếp hàng lại đống trong đoạn mở đầu"
+
+#: config/i386/i386.opt:213
+msgid "Enable stack probing"
+msgstr "Hiệu lực chức năng dò đống"
+
+#: config/i386/i386.opt:217
+msgid "Chose strategy to generate stringop using"
+msgstr "Chọn chiến lược để tạo ra thao tác chuỗi dùng"
+
+#: config/i386/i386.opt:221
+msgid "Use given thread-local storage dialect"
+msgstr "Sử dụng phương ngôn lưu theo nhánh cục bộ"
+
+#: config/i386/i386.opt:225
+#, c-format
+msgid "Use direct references against %gs when accessing tls data"
+msgstr "Sử dụng tham chiếu trực tiếp đối với %gs khi truy cập đến dữ liệu của nó"
+
+#: config/i386/i386.opt:233
+msgid "Generate code that conforms to the given ABI"
+msgstr "Tạo ra mã thích hợp với ABI đưa ra"
+
+#: config/i386/i386.opt:237
+msgid "Vector library ABI to use"
+msgstr "ABI thư viện véc-tơ cần sử dụng"
+
+#: config/i386/i386.opt:241
+msgid "Generate reciprocals instead of divss and sqrtss."
+msgstr "Tạo ra số đảo thay cho divss và sqrtss."
+
+#: config/i386/i386.opt:245
+msgid "Generate cld instruction in the function prologue."
+msgstr "Tạo ra câu lệnh cld trong đoạn mở đầu hàm."
+
+#: config/i386/i386.opt:249
+msgid "Enable automatic generation of fused floating point multiply-add instructions"
+msgstr "Hiệu lực khả năng tự động tạo ra câu lệnh nhân-cộng loại điểm phù động hợp nhau"
+
+#: config/i386/i386.opt:257
+msgid "Generate 32bit i386 code"
+msgstr "Tạo ra mã i386 32-bit"
+
+#: config/i386/i386.opt:261
+msgid "Generate 64bit x86-64 code"
+msgstr "Tạo ra mã x86-64 64-bit"
+
+#: config/i386/i386.opt:265
+msgid "Support MMX built-in functions"
+msgstr "Hỗ trợ các hàm dựng sẵn MMX"
+
+#: config/i386/i386.opt:269
+msgid "Support 3DNow! built-in functions"
+msgstr "Hỗ trợ các hàm dựng sẵn 3DNow!"
+
+#: config/i386/i386.opt:273
+msgid "Support Athlon 3Dnow! built-in functions"
+msgstr "Hỗ trợ các hàm dựng sẵn 3DNow! Athlon"
+
+#: config/i386/i386.opt:277
+msgid "Support MMX and SSE built-in functions and code generation"
+msgstr "Hỗ trợ các hàm dựng sẵn và chức năng tạo ra mã loại MMX và SSE"
+
+#: config/i386/i386.opt:281
+msgid "Support MMX, SSE and SSE2 built-in functions and code generation"
+msgstr "Hỗ trợ các hàm dựng sẵn và chức năng tạo ra mã loại MMX, SSE và SSE2"
+
+#: config/i386/i386.opt:285
+msgid "Support MMX, SSE, SSE2 and SSE3 built-in functions and code generation"
+msgstr "Hỗ trợ các hàm dựng sẵn và chức năng tạo ra mã loại MMX, SSE, SSE2 và SSE3"
+
+#: config/i386/i386.opt:289
+msgid "Support MMX, SSE, SSE2, SSE3 and SSSE3 built-in functions and code generation"
+msgstr "Hỗ trợ các hàm dựng sẵn và chức năng tạo ra mã loại MMX, SSE, SSE2, SSE3 và SSSE3"
+
+#: config/i386/i386.opt:293
+msgid "Support MMX, SSE, SSE2, SSE3, SSSE3 and SSE4.1 built-in functions and code generation"
+msgstr "Hỗ trợ các hàm dựng sẵn và chức năng tạo ra mã loại MMX, SSE, SSE2, SSE3, SSSE3 và SSE4.1"
+
+#: config/i386/i386.opt:297 config/i386/i386.opt:301
+msgid "Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1 and SSE4.2 built-in functions and code generation"
+msgstr "Hỗ trợ các hàm dựng sẵn và chức năng tạo ra mã loại MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1 và SSE4.2"
+
+#: config/i386/i386.opt:305
+msgid "Do not support SSE4.1 and SSE4.2 built-in functions and code generation"
+msgstr "Đừng hỗ trợ hàm dựng sẵn và chức năng tạo ra mã loại SSE4.1 và SSE4.2"
+
+#: config/i386/i386.opt:309
+msgid "Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2 and AVX built-in functions and code generation"
+msgstr "Hỗ trợ các hàm dựng sẵn và chức năng tạo ra mã loại MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2 và AVX"
+
+#: config/i386/i386.opt:313
+msgid "Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX and FMA built-in functions and code generation"
+msgstr "Hỗ trợ các hàm dựng sẵn và chức năng tạo ra mã loại MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX và FMA"
+
+#: config/i386/i386.opt:317
+msgid "Support MMX, SSE, SSE2, SSE3 and SSE4A built-in functions and code generation"
+msgstr "Hỗ trợ các hàm dựng sẵn và chức năng tạo ra mã loại MMX, SSE, SSE2, SSE3 và SSE4A"
+
+#: config/i386/i386.opt:321
+msgid "Support FMA4 built-in functions and code generation "
+msgstr "Hỗ trợ các hàm dựng sẵn và chức năng tạo ra mã loại FMA4"
+
+#: config/i386/i386.opt:325
+msgid "Support XOP built-in functions and code generation "
+msgstr "Hỗ trợ các hàm dựng sẵn và chức năng tạo ra mã loại XOP"
+
+#: config/i386/i386.opt:329
+msgid "Support LWP built-in functions and code generation "
+msgstr "Hỗ trợ các hàm dựng sẵn và chức năng tạo ra mã loại LWP"
+
+#: config/i386/i386.opt:333
+msgid "Support code generation of Advanced Bit Manipulation (ABM) instructions."
+msgstr "Hỗ trợ chức năng tạo ra mã là câu lệnh ABM (thao tác bit cấp cao)."
+
+#: config/i386/i386.opt:337
+msgid "Support code generation of popcnt instruction."
+msgstr "Hỗ trợ chức năng tạo ra mã là câu lệnh popcnt."
+
+#: config/i386/i386.opt:341
+msgid "Support code generation of cmpxchg16b instruction."
+msgstr "Hỗ trợ chức năng tạo ra mã là câu lệnh cmpxchg16b."
+
+#: config/i386/i386.opt:345
+msgid "Support code generation of sahf instruction in 64bit x86-64 code."
+msgstr "Hỗ trợ chức năng tạo ra mã là câu lệnh sahf trong mã x86-64 64-bit."
+
+#: config/i386/i386.opt:349
+msgid "Support code generation of movbe instruction."
+msgstr "Hỗ trợ chức năng tạo ra mã là câu lệnh movbe."
+
+#: config/i386/i386.opt:353
+msgid "Support code generation of crc32 instruction."
+msgstr "Hỗ trợ chức năng tạo ra mã là câu lệnh crc32."
+
+#: config/i386/i386.opt:357
+msgid "Support AES built-in functions and code generation"
+msgstr "Hỗ trợ các hàm dựng sẵn và chức năng tạo ra mã loại AES"
+
+#: config/i386/i386.opt:361
+msgid "Support PCLMUL built-in functions and code generation"
+msgstr "Hỗ trợ các hàm dựng sẵn và chức năng tạo ra mã loại PCLMUL"
+
+#: config/i386/i386.opt:365
+msgid "Encode SSE instructions with VEX prefix"
+msgstr "Mã hoá câu lệnh SSE với tiền tố VEX"
+
+#: config/i386/cygming.opt:23
+msgid "Create console application"
+msgstr "Tạo ứng dụng bàn giao tiép"
+
+#: config/i386/cygming.opt:27
+msgid "Use the Cygwin interface"
+msgstr "Sử dụng giao diện Cygwin"
+
+#: config/i386/cygming.opt:31
+msgid "Generate code for a DLL"
+msgstr "Tạo ra mã cho một DLL"
+
+#: config/i386/cygming.opt:35
+msgid "Ignore dllimport for functions"
+msgstr "Bỏ qua dllimport đối với chức năng"
+
+#: config/i386/cygming.opt:39
+msgid "Use Mingw-specific thread support"
+msgstr "Sử dụng hỗ trợ nhánh đặc trưng cho Mingw"
+
+#: config/i386/cygming.opt:43
+msgid "Set Windows defines"
+msgstr "Lập lời xác định Windows"
+
+#: config/i386/cygming.opt:47
+msgid "Create GUI application"
+msgstr "Tạo ứng dụng GUI"
+
+#: config/i386/cygming.opt:51
+msgid "Use the GNU extension to the PE format for aligned common data"
+msgstr "Sử dụng phần mở rộng GNU tới định dạng PE cho dữ liệu chung xếp hàng"
+
+#: config/i386/cygming.opt:55
+msgid "Compile code that relies on Cygwin DLL wrappers to support C++ operator new/delete replacement"
+msgstr "Biên dịch mã nhờ trình bao bọc DLL Cygwin để hỗ trợ chức năng thay thế toán tử C++ mới/xoá"
+
+#: config/i386/mingw-w64.opt:23
+msgid "Use unicode startup and define UNICODE macro"
+msgstr "Sử dụng hàm khởi chạy Unicode và xác định vĩ lệnh UNICODE"
+
+#: config/rs6000/aix.opt:24 config/rs6000/rs6000.opt:195
+msgid "Conform more closely to IBM XLC semantics"
+msgstr "Làm cho hợp hơn với cú pháp XLC của IBM"
+
+#: config/rs6000/darwin.opt:24 config/rs6000/sysv4.opt:129
+msgid "Generate 64-bit code"
+msgstr "Tạo ra mã 64-bit"
+
+#: config/rs6000/darwin.opt:28 config/rs6000/sysv4.opt:133
+msgid "Generate 32-bit code"
+msgstr "Tạo ra mã 32-bit"
+
+#: config/rs6000/darwin.opt:32
+msgid "Generate code suitable for executables (NOT shared libs)"
+msgstr "Tạo ra mã thích hợp với bản thực thị (KHÔNG PHẢI thư viện dùng chung)"
+
+#: config/rs6000/rs6000.opt:24
+msgid "Use POWER instruction set"
+msgstr "Sử dụng tập hợp câu lệnh POWER"
+
+#: config/rs6000/rs6000.opt:28
+msgid "Do not use POWER instruction set"
+msgstr "Đừng sử dụng tập hợp câu lệnh POWER"
+
+#: config/rs6000/rs6000.opt:32
+msgid "Use POWER2 instruction set"
+msgstr "Sử dụng tập hợp câu lệnh POWER2"
+
+#: config/rs6000/rs6000.opt:36
+msgid "Use PowerPC instruction set"
+msgstr "Sử dụng tập hợp câu lệnh PowerPC"
+
+#: config/rs6000/rs6000.opt:40
+msgid "Do not use PowerPC instruction set"
+msgstr "Đừng sử dụng tập hợp câu lệnh PowerPC"
+
+#: config/rs6000/rs6000.opt:44
+msgid "Use PowerPC-64 instruction set"
+msgstr "Sử dụng tập hợp câu lệnh PowerPC-64"
+
+#: config/rs6000/rs6000.opt:48
+msgid "Use PowerPC General Purpose group optional instructions"
+msgstr "Sử dụng các câu lệnh tùy chọn của nhóm General Purpose (thường dụng) PowerPC"
+
+#: config/rs6000/rs6000.opt:52
+msgid "Use PowerPC Graphics group optional instructions"
+msgstr "Sử dụng các câu lệnh tùy chọn của nhóm Graphics (đồ họa) PowerPC"
+
+#: config/rs6000/rs6000.opt:56
+msgid "Use PowerPC V2.01 single field mfcr instruction"
+msgstr "Sử dụng câu lệnh mfcr trường đơn PowerPC V2.01"
+
+#: config/rs6000/rs6000.opt:60
+msgid "Use PowerPC V2.02 popcntb instruction"
+msgstr "Sử dụng câu lệnh popcntb PowerPC V2.02"
+
+#: config/rs6000/rs6000.opt:64
+msgid "Use PowerPC V2.02 floating point rounding instructions"
+msgstr "Sử dụng câu lệnh làm tròn loại điểm phù động PowerPC V2.02"
+
+#: config/rs6000/rs6000.opt:68
+msgid "Use PowerPC V2.05 compare bytes instruction"
+msgstr "Sử dụng câu lệnh so sánh các byte PowerPC V2.05"
+
+#: config/rs6000/rs6000.opt:72
+msgid "Use extended PowerPC V2.05 move floating point to/from GPR instructions"
+msgstr "Sử dụng câu lệnh dời điểm phù động đến/từ GPR PowerPC V2.05 mở rộng"
+
+#: config/rs6000/rs6000.opt:76
+msgid "Use AltiVec instructions"
+msgstr "Sử dụng câu lệnh AltiVec"
+
+#: config/rs6000/rs6000.opt:80
+msgid "Use decimal floating point instructions"
+msgstr "Sử dụng câu lệnh loại điểm phù động thập phân"
+
+#: config/rs6000/rs6000.opt:84
+msgid "Use 4xx half-word multiply instructions"
+msgstr "Sử dụng câu lệnh nhân nửa từ 4xx"
+
+#: config/rs6000/rs6000.opt:88
+msgid "Use 4xx string-search dlmzb instruction"
+msgstr "Sử dụng câu lệnh dlmzb tìm kiếm chuỗi 4xx"
+
+#: config/rs6000/rs6000.opt:92
+msgid "Generate load/store multiple instructions"
+msgstr "Tạo ra câu lệnh nạp/lưu nội"
+
+#: config/rs6000/rs6000.opt:96
+msgid "Generate string instructions for block moves"
+msgstr "Tạo ra câu lệnh chuỗi để di chuyển khối"
+
+#: config/rs6000/rs6000.opt:100
+msgid "Use new mnemonics for PowerPC architecture"
+msgstr "Sử dụng phím gọi nhớ mới cho kiến trúc PowerPC"
+
+#: config/rs6000/rs6000.opt:104
+msgid "Use old mnemonics for PowerPC architecture"
+msgstr "Sử dụng phím gọi nhớ cũ cho kiến trúc PowerPC"
+
+#: config/rs6000/rs6000.opt:108 config/pdp11/pdp11.opt:83
+msgid "Do not use hardware floating point"
+msgstr "Đừng sử dụng điểm phù động loại phần cứng"
+
+#: config/rs6000/rs6000.opt:116
+msgid "Use PowerPC V2.06 popcntd instruction"
+msgstr "Sử dụng câu lệnh popcntd PowerPC V2.06"
+
+#: config/rs6000/rs6000.opt:120
+msgid "Use vector/scalar (VSX) instructions"
+msgstr "Sử dụng câu lệnh véc-tơ/vô_hướng (VSX)"
+
+#: config/rs6000/rs6000.opt:160
+msgid "Do not generate load/store with update instructions"
+msgstr "Đừng tạo ra câu lệnh nạp/lưu với bản cập nhật"
+
+#: config/rs6000/rs6000.opt:164
+msgid "Generate load/store with update instructions"
+msgstr "Tạo ra câu lệnh nạp/lưu với bản cập nhật"
+
+#: config/rs6000/rs6000.opt:168
+msgid "Avoid generation of indexed load/store instructions when possible"
+msgstr "Tránh sự tạo ra câu lệnh nạp/lưu phụ lục khi có thể"
+
+#: config/rs6000/rs6000.opt:172
+msgid "Generate fused multiply/add instructions"
+msgstr "Tạo ra câu lệnh nhân/cộng hợp nhau"
+
+#: config/rs6000/rs6000.opt:176
+msgid "Mark __tls_get_addr calls with argument info"
+msgstr "Đánh dấu cuộc gọi « __tls_get_addr » bằng thông tin về đối số"
+
+#: config/rs6000/rs6000.opt:183
+msgid "Schedule the start and end of the procedure"
+msgstr "Định thời bắt đầu và kết thúc thủ tục"
+
+#: config/rs6000/rs6000.opt:187
+msgid "Return all structures in memory (AIX default)"
+msgstr "Trả lại tất cả các cấu trúc trong vùng nhớ (AIX mặc định)"
+
+#: config/rs6000/rs6000.opt:191
+msgid "Return small structures in registers (SVR4 default)"
+msgstr "Trả lại các cấu trúc nhỏ trong thanh ghi (SVR4 mặc định)"
+
+#: config/rs6000/rs6000.opt:199
+msgid "Generate software reciprocal sqrt for better throughput"
+msgstr "Tạo ra cân bậc hai đảo loại phần mềm để tăng tốc độ truyền dữ liệu"
+
+#: config/rs6000/rs6000.opt:203
+msgid "Do not place floating point constants in TOC"
+msgstr "Đừng để vào TOC hằng số loại điểm phù động"
+
+#: config/rs6000/rs6000.opt:207
+msgid "Place floating point constants in TOC"
+msgstr "Để vào TOC hằng số loại điểm phù động"
+
+#: config/rs6000/rs6000.opt:211
+msgid "Do not place symbol+offset constants in TOC"
+msgstr "Đừng để vào TOC hằng số loại ký_hiệu+hiệu_số"
+
+#: config/rs6000/rs6000.opt:215
+msgid "Place symbol+offset constants in TOC"
+msgstr "Để vào TOC hằng số loại ký_hiệu+hiệu_số"
+
+#: config/rs6000/rs6000.opt:226
+msgid "Use only one TOC entry per procedure"
+msgstr "Sử dụng chỉ một mục nhập TOC từng thủ tục"
+
+#: config/rs6000/rs6000.opt:230
+msgid "Put everything in the regular TOC"
+msgstr "Để tất cả vào TOC bình thường"
+
+#: config/rs6000/rs6000.opt:234
+msgid "Generate VRSAVE instructions when generating AltiVec code"
+msgstr "Tạo ra câu lệnh VRSAVE khi tạo ra mã AltiVec"
+
+#: config/rs6000/rs6000.opt:238
+msgid "-mvrsave=yes/no\tDeprecated option.  Use -mvrsave/-mno-vrsave instead"
+msgstr ""
+"-mvrsave=yes/no\t\tTùy chọn bị phản đối.\n"
+"\tHãy sử dụng « -mvrsave/-mno-vrsave » để thay thế. (yes=có, no=không)"
+
+#: config/rs6000/rs6000.opt:242
+msgid "Generate isel instructions"
+msgstr "Tạo ra câu lệnh isel"
+
+#: config/rs6000/rs6000.opt:246
+msgid "-misel=yes/no\tDeprecated option.  Use -misel/-mno-isel instead"
+msgstr ""
+"-misel=yes/no\t\tTùy chọn bị phản đối.\n"
+"\tHãy sử dụng « -misel/-mno-isel » để thay thế. (yes=có, no=không)"
+
+#: config/rs6000/rs6000.opt:250
+msgid "Generate SPE SIMD instructions on E500"
+msgstr "Tạo ra câu lệnh SIMD SPE trong E500"
+
+#: config/rs6000/rs6000.opt:254
+msgid "Generate PPC750CL paired-single instructions"
+msgstr "Tạo ra câu lệnh đôi-đơn PPC750CL"
+
+#: config/rs6000/rs6000.opt:258
+msgid "-mspe=yes/no\tDeprecated option.  Use -mspe/-mno-spe instead"
+msgstr ""
+"-mspe=yes/no\t\tTùy chọn bị phản đối.\n"
+"\tHãy sử dụng « -mspe/-mno-spe » để thay thế. (yes=có, no=không)"
+
+#: config/rs6000/rs6000.opt:262
+msgid "-mdebug=\tEnable debug output"
+msgstr "-mdebug=\tBật kết xuất gỡ rối"
+
+#: config/rs6000/rs6000.opt:266
+msgid "-mabi=\tSpecify ABI to use"
+msgstr "-mabi=\tGhi rõ ABI cần sử dụng"
+
+#: config/rs6000/rs6000.opt:270
+msgid "-mcpu=\tUse features of and schedule code for given CPU"
+msgstr "-mcpu=\tSử dụng các tính năng của CPU đưa ra, và định thời mã cho CPU đó"
+
+#: config/rs6000/rs6000.opt:274
+msgid "-mtune=\tSchedule code for given CPU"
+msgstr "-mtune=\tĐịnh thời mã cho CPU đưa ra"
+
+#: config/rs6000/rs6000.opt:278
+msgid "-mtraceback=\tSelect full, part, or no traceback table"
+msgstr "-mtraceback=\tChọn bảng vét lùi đầy đủ (full), bộ phận (part) hoặc không có (none)"
+
+#: config/rs6000/rs6000.opt:282
+msgid "Avoid all range limits on call instructions"
+msgstr "Tránh giới hạn phạm vi nào trong câu lệnh gọi"
+
+#: config/rs6000/rs6000.opt:286
+msgid "Generate Cell microcode"
+msgstr "Tạo ra mã vi Cell"
+
+#: config/rs6000/rs6000.opt:290
+msgid "Warn when a Cell microcoded instruction is emitted"
+msgstr "Cảnh báo khi xuất một câu lệnh mã vi Cell"
+
+#: config/rs6000/rs6000.opt:294
+msgid "Warn about deprecated 'vector long ...' AltiVec type usage"
+msgstr "Cảnh báo về sử dụng loại AltiVec « vector long ... »"
+
+#: config/rs6000/rs6000.opt:298
+msgid "-mfloat-gprs=\tSelect GPR floating point method"
+msgstr "-mfloat-gprs=\tChọn phương pháp điểm phù động GPR"
+
+#: config/rs6000/rs6000.opt:302
+msgid "-mlong-double-<n>\tSpecify size of long double (64 or 128 bits)"
+msgstr "-mlong-double-<số>\tGhi rõ kích cỡ của đôi dài (64 hay 128 bit)"
+
+#: config/rs6000/rs6000.opt:306
+msgid "Determine which dependences between insns are considered costly"
+msgstr "Quyết định những quan hệ phụ thuộc nào giữa các câu lệnh thì được thấy có giá cao"
+
+#: config/rs6000/rs6000.opt:310
+msgid "Specify which post scheduling nop insertion scheme to apply"
+msgstr "Ghi rõ lược đồ chèn nop hậu định thời nào cần áp dụng"
+
+#: config/rs6000/rs6000.opt:314
+msgid "Specify alignment of structure fields default/natural"
+msgstr "Ghi rõ cách xếp hàng các trường cấu trúc: mặc định (default) hay tự nhiên (natural)"
+
+#: config/rs6000/rs6000.opt:318
+msgid "Specify scheduling priority for dispatch slot restricted insns"
+msgstr "Ghi rõ mức ưu tiên định thời cho câu lệnh bị hạn chế khe gửi đi"
+
+#: config/rs6000/rs6000.opt:322
+msgid "Single-precision floating point unit"
+msgstr "Đơn vị điểm phù động chính xác đơn"
+
+#: config/rs6000/rs6000.opt:326
+msgid "Double-precision floating point unit"
+msgstr "Đơn vị điểm phù động chính xác đôi"
+
+#: config/rs6000/rs6000.opt:330
+msgid "Floating point unit does not support divide & sqrt"
+msgstr "Đơn vị điểm phù động không hỗ trợ phép chia và phép tính căn bậc hai"
+
+#: config/rs6000/rs6000.opt:334
+msgid "-mfpu=\tSpecify FP (sp, dp, sp-lite, dp-lite) (implies -mxilinx-fpu)"
+msgstr "-mfpu=\tGhi rõ điểm phù động (sp, dp, sp-lite, dp-lite) (cũng ngụ ý « -mxilinx-fpu »)"
+
+#: config/rs6000/rs6000.opt:338
+msgid "Specify Xilinx FPU."
+msgstr "Ghi rõ FPU loại Xilinx."
+
+#: config/rs6000/aix64.opt:24
+msgid "Compile for 64-bit pointers"
+msgstr "Biên dịch cho hàm trỏ loại 64-bit"
+
+#: config/rs6000/aix64.opt:28
+msgid "Compile for 32-bit pointers"
+msgstr "Biên dịch cho hàm trỏ loại 32-bit"
+
+#: config/rs6000/aix64.opt:32
+msgid "Support message passing with the Parallel Environment"
+msgstr "Hỗ trợ chức năng gửi thông điệp qua với Môi trường Song song (Parellel Environment)"
+
+#: config/rs6000/linux64.opt:24
+msgid "Call mcount for profiling before a function prologue"
+msgstr "Gọi mcount để đo hiệu năng sử dụng đẳng trước một đoạn mở đầu hàm"
+
+#: config/rs6000/sysv4.opt:24
+msgid "Select ABI calling convention"
+msgstr "Chọn quy ước gọi ABI"
+
+#: config/rs6000/sysv4.opt:28
+msgid "Select method for sdata handling"
+msgstr "Chọn phương pháp để quản lý sdata"
+
+#: config/rs6000/sysv4.opt:36 config/rs6000/sysv4.opt:40
+msgid "Align to the base type of the bit-field"
+msgstr "Xếp hàng theo loại cơ bản của trường bit"
+
+#: config/rs6000/sysv4.opt:45 config/rs6000/sysv4.opt:49
+msgid "Produce code relocatable at runtime"
+msgstr "Xuất mã có thể định vị lại vào lúc chạy"
+
+#: config/rs6000/sysv4.opt:53 config/rs6000/sysv4.opt:57
+msgid "Produce little endian code"
+msgstr "Xuất mã về cuối nhỏ"
+
+#: config/rs6000/sysv4.opt:61 config/rs6000/sysv4.opt:65
+msgid "Produce big endian code"
+msgstr "Xuất mã về cuối lớn"
+
+#: config/rs6000/sysv4.opt:70 config/rs6000/sysv4.opt:74
+#: config/rs6000/sysv4.opt:83 config/rs6000/sysv4.opt:125
+#: config/rs6000/sysv4.opt:137
+msgid "no description yet"
+msgstr "chưa có mô tả"
+
+#: config/rs6000/sysv4.opt:78
+msgid "Assume all variable arg functions are prototyped"
+msgstr "Gia sử là mọi biến đối số biến đổi đều được nguyên mẫu"
+
+#: config/rs6000/sysv4.opt:87
+msgid "Use EABI"
+msgstr "Sử dụng EABI"
+
+#: config/rs6000/sysv4.opt:91
+msgid "Allow bit-fields to cross word boundaries"
+msgstr "Cho phép trường bit đi qua biên giới từ"
+
+#: config/rs6000/sysv4.opt:95
+msgid "Use alternate register names"
+msgstr "Sử dụng tên thanh ghi xen kẽ"
+
+#: config/rs6000/sysv4.opt:101
+msgid "Use default method for sdata handling"
+msgstr "Sử dụng phương pháp mặc định để quản lý sdata"
+
+#: config/rs6000/sysv4.opt:105
+msgid "Link with libsim.a, libc.a and sim-crt0.o"
+msgstr "Liên kết với « libsim.a », « libc.a » và « sim-crt0.o »"
+
+#: config/rs6000/sysv4.opt:109
+msgid "Link with libads.a, libc.a and crt0.o"
+msgstr "Liên kết với « libads.a », « libc.a » và « crt0.o »"
+
+#: config/rs6000/sysv4.opt:113
+msgid "Link with libyk.a, libc.a and crt0.o"
+msgstr "Liên kết với « libyk.a », « libc.a » và « crt0.o »"
+
+#: config/rs6000/sysv4.opt:117
+msgid "Link with libmvme.a, libc.a and crt0.o"
+msgstr "Liên kết với « libmvme.a », « libc.a » và « crt0.o »"
+
+#: config/rs6000/sysv4.opt:121
+msgid "Set the PPC_EMB bit in the ELF flags header"
+msgstr "Lập bit « PPC_EMB » trong phần đầu cờ ELF"
+
+#: config/rs6000/sysv4.opt:141
+msgid "Generate code to use a non-exec PLT and GOT"
+msgstr "Tạo ra mã để sử dụng một PLT và GOT không thực hiện"
+
+#: config/rs6000/sysv4.opt:145
+msgid "Generate code for old exec BSS PLT"
+msgstr "Tạo ra mã cho BSS PLT thực hiện cũ"
+
+#: config/spu/spu.opt:20
+msgid "Emit warnings when run-time relocations are generated"
+msgstr "Cảnh báo khi tạo ra sự định vị lại vào lúc chạy"
+
+#: config/spu/spu.opt:24
+msgid "Emit errors when run-time relocations are generated"
+msgstr "Xuất lỗi khi tạo ra sự định vị lại vào lúc chạy"
+
+#: config/spu/spu.opt:28
+msgid "Specify cost of branches (Default 20)"
+msgstr "Ghi rõ giá của nhánh (mặc định là 20)"
+
+#: config/spu/spu.opt:32
+msgid "Make sure loads and stores are not moved past DMA instructions"
+msgstr "Kiểm tra lại hàm nạp và hàm lưu không đi qua câu lệnh DMA"
+
+#: config/spu/spu.opt:36
+msgid "volatile must be specified on any memory that is effected by DMA"
+msgstr "Thuộc tính hay thay đổi (volatile) phải được ghi rõ trên bất cứ vùng nhớ nào bị DMA tác động."
+
+#: config/spu/spu.opt:40 config/spu/spu.opt:44
+msgid "Insert nops when it might improve performance by allowing dual issue (default)"
+msgstr "Chèn nops khi có thể tăng hiệu suất bằng cách cho phép đưa ra đôi (mặc định)"
+
+#: config/spu/spu.opt:48
+msgid "Use standard main function as entry for startup"
+msgstr "Sử dụng hàm chính tiêu chuẩn làm điểm vào để khởi chạy"
+
+#: config/spu/spu.opt:52
+msgid "Generate branch hints for branches"
+msgstr "Đối với nhánh thì tạo ra lời gợi ý nhánh"
+
+#: config/spu/spu.opt:56
+msgid "Maximum number of nops to insert for a hint (Default 2)"
+msgstr "Số tối đa các nops cần chèn cho một lời gợi ý (mặc định là 2)"
+
+#: config/spu/spu.opt:60
+msgid "Approximate maximum number of instructions to allow between a hint and its branch [125]"
+msgstr "Số tối đa (xấp xỉ) các câu lệnh cần cho phép giữa một lời gợi ý và nhánh tương ứng [125]"
+
+#: config/spu/spu.opt:64
+msgid "Generate code for 18 bit addressing"
+msgstr "Tạo ra mã để đặt địa chỉ 18 bit"
+
+#: config/spu/spu.opt:68
+msgid "Generate code for 32 bit addressing"
+msgstr "Tạo ra mã để đặt địa chỉ 32 bit"
+
+#: config/spu/spu.opt:76
+msgid "Insert hbrp instructions after hinted branch targets to avoid the SPU hang issue"
+msgstr "Chèn câu lệnh hbrp đẳng sau đích nhánh đã gợi ý để tránh vấn đề SPU đang treo cứng"
+
+#: config/spu/spu.opt:88
+msgid "Access variables in 32-bit PPU objects (default)"
+msgstr "Truy cập đến biến trong đối tượng PPU 32-bit (mặc định)"
+
+#: config/spu/spu.opt:92
+msgid "Access variables in 64-bit PPU objects"
+msgstr "Truy cập đến biến trong đối tượng PPU 64-bit"
+
+#: config/spu/spu.opt:96
+msgid "Allow conversions between __ea and generic pointers (default)"
+msgstr "Cho phép chuyển đổi giữa hàm trỏ loại « __ea » và chung (mặc định)"
+
+#: config/spu/spu.opt:100
+msgid "Size (in KB) of software data cache"
+msgstr "Kích cỡ (theo KB) của vùng nhớ tạm dữ liệu loại phần mềm"
+
+#: config/spu/spu.opt:104
+msgid "Atomically write back software data cache lines (default)"
+msgstr "Tự động ghi trả lại các đường dẫn vùng nhớ tạm dữ liệu loại phần mềm (mặc định)"
+
+#: config/mcore/mcore.opt:23
+msgid "Generate code for the M*Core M210"
+msgstr "Tạo ra mã cho M*Core M210"
+
+#: config/mcore/mcore.opt:27
+msgid "Generate code for the M*Core M340"
+msgstr "Tạo ra mã cho M*Core M340"
+
+#: config/mcore/mcore.opt:31
+msgid "Force functions to be aligned to a 4 byte boundary"
+msgstr "Ép buộc các hàm được xếp hàng theo một biên giới 4-byte"
+
+#: config/mcore/mcore.opt:35 config/score/score.opt:23
+msgid "Generate big-endian code"
+msgstr "Tạo ra mã về cuối lớn"
+
+#: config/mcore/mcore.opt:39
+msgid "Emit call graph information"
+msgstr "Xuất thông tin về đồ thị gọi"
+
+#: config/mcore/mcore.opt:43
+msgid "Use the divide instruction"
+msgstr "Sử dụng câu lệnh chia"
+
+#: config/mcore/mcore.opt:47
+msgid "Inline constants if it can be done in 2 insns or less"
+msgstr "Chèn hằng số vào trực tiếp nếu có thể làm trong nhiều nhất 2 câu lệnh"
+
+#: config/mcore/mcore.opt:51 config/score/score.opt:27
+msgid "Generate little-endian code"
+msgstr "Tạo ra mã về cuối nhỏ"
+
+#: config/mcore/mcore.opt:56 config/fr30/fr30.opt:27
+msgid "Assume that run-time support has been provided, so omit -lsim from the linker command line"
+msgstr "Giả sử đã cung cấp hỗ trợ vào lúc chạy, vì thế bỏ sót « -lsim » khỏi dòng lệnh liên kết"
+
+#: config/mcore/mcore.opt:60
+msgid "Use arbitrary sized immediates in bit operations"
+msgstr "Trong thao tác bit thì sử dụng điều lập tức có kích cỡ tùy ý"
+
+#: config/mcore/mcore.opt:64
+msgid "Prefer word accesses over byte accesses"
+msgstr "Thích truy cập loại từ hơn truy cập loại byte"
+
+#: config/mcore/mcore.opt:68
+msgid "Set the maximum amount for a single stack increment operation"
+msgstr "Lập số lượng tối đa cho một thao tác lượng gia loại đống đơn"
+
+#: config/mcore/mcore.opt:72
+msgid "Always treat bitfields as int-sized"
+msgstr "Lúc nào cũng thấy trường bit có kích cỡ số nguyên"
+
+#: config/arc/arc.opt:32
+msgid "Prepend the name of the cpu to all public symbol names"
+msgstr "Phụ thêm tên CPU vào tất cả các tên ký hiệu công cộng"
+
+#: config/arc/arc.opt:42
+msgid "-mcpu=CPU\tCompile code for ARC variant CPU"
+msgstr "-mcpu=CPU\tBiên dịch mã cho CPU biến thế ARC"
+
+#: config/arc/arc.opt:46
+msgid "-mtext=SECTION\tPut functions in SECTION"
+msgstr "-mtext=PHẦN\tĐể các hàm vào phần này"
+
+#: config/arc/arc.opt:50
+msgid "-mdata=SECTION\tPut data in SECTION"
+msgstr "-mdata=PHẦN\tĐể dữ liệu vào phần này"
+
+#: config/arc/arc.opt:54
+msgid "-mrodata=SECTION\tPut read-only data in SECTION"
+msgstr "-mrodata=PHẦN\tĐể dữ liệu chỉ-đọc vào phần này"
+
+#: config/sh/sh.opt:44
+msgid "Generate SH1 code"
+msgstr "Tạo ra mã SH1"
+
+#: config/sh/sh.opt:48
+msgid "Generate SH2 code"
+msgstr "Tạo ra mã SH2"
+
+#: config/sh/sh.opt:52
+msgid "Generate default double-precision SH2a-FPU code"
+msgstr "Tạo ra mã SH2a-FPU chính xác đôi mặc định"
+
+#: config/sh/sh.opt:56
+msgid "Generate SH2a FPU-less code"
+msgstr "Tạo ra mã SH2a không có FPU"
+
+#: config/sh/sh.opt:60
+msgid "Generate default single-precision SH2a-FPU code"
+msgstr "Tạo ra mã SH2a-FPU chính xác đơn mặc định"
+
+#: config/sh/sh.opt:64
+msgid "Generate only single-precision SH2a-FPU code"
+msgstr "Tạo ra chỉ mã SH2a-FPU chính xác đơn"
+
+#: config/sh/sh.opt:68
+msgid "Generate SH2e code"
+msgstr "Tạo ra mã SH2e"
+
+#: config/sh/sh.opt:72
+msgid "Generate SH3 code"
+msgstr "Tạo ra mã SH3"
+
+#: config/sh/sh.opt:76
+msgid "Generate SH3e code"
+msgstr "Tạo ra mã SH3e"
+
+#: config/sh/sh.opt:80
+msgid "Generate SH4 code"
+msgstr "Tạo ra mã SH4"
+
+#: config/sh/sh.opt:84
+msgid "Generate SH4-100 code"
+msgstr "Tạo ra mã SH4-100"
+
+#: config/sh/sh.opt:88
+msgid "Generate SH4-200 code"
+msgstr "Tạo ra mã SH4-200"
+
+#: config/sh/sh.opt:94
+msgid "Generate SH4-300 code"
+msgstr "Tạo ra mã SH4-300"
+
+#: config/sh/sh.opt:98
+msgid "Generate SH4 FPU-less code"
+msgstr "Tạo ra mã SH4 không có FPU"
+
+#: config/sh/sh.opt:102
+msgid "Generate SH4-100 FPU-less code"
+msgstr "Tạo ra mã SH4-100 không có FPU"
+
+#: config/sh/sh.opt:106
+msgid "Generate SH4-200 FPU-less code"
+msgstr "Tạo ra mã SH4-200 không có FPU"
+
+#: config/sh/sh.opt:110
+msgid "Generate SH4-300 FPU-less code"
+msgstr "Tạo ra mã SH4-300 không có FPU"
+
+#: config/sh/sh.opt:114
+msgid "Generate code for SH4 340 series (MMU/FPU-less)"
+msgstr "Tạo ra mã cho loạt SH4 340 (không có MMU/FPU)"
+
+#: config/sh/sh.opt:119
+msgid "Generate code for SH4 400 series (MMU/FPU-less)"
+msgstr "Tạo ra mã cho loạt SH4 400 (không có MMU/FPU)"
+
+#: config/sh/sh.opt:124
+msgid "Generate code for SH4 500 series (FPU-less)."
+msgstr "Tạo ra mã cho loạt SH4 500 (không có MMU/FPU)"
+
+#: config/sh/sh.opt:129
+msgid "Generate default single-precision SH4 code"
+msgstr "Tạo ra mã SH4 chính xác đơn mặc định"
+
+#: config/sh/sh.opt:133
+msgid "Generate default single-precision SH4-100 code"
+msgstr "Tạo ra mã SH4-100 chính xác đơn mặc định"
+
+#: config/sh/sh.opt:137
+msgid "Generate default single-precision SH4-200 code"
+msgstr "Tạo ra mã SH4-200 chính xác đơn mặc định"
+
+#: config/sh/sh.opt:141
+msgid "Generate default single-precision SH4-300 code"
+msgstr "Tạo ra mã SH4-300 chính xác đơn mặc định"
+
+#: config/sh/sh.opt:145
+msgid "Generate only single-precision SH4 code"
+msgstr "Tạo ra chỉ mã SH4 chính xác đơn"
+
+#: config/sh/sh.opt:149
+msgid "Generate only single-precision SH4-100 code"
+msgstr "Tạo ra chỉ mã SH4-100 chính xác đơn"
+
+#: config/sh/sh.opt:153
+msgid "Generate only single-precision SH4-200 code"
+msgstr "Tạo ra chỉ mã SH4-200 chính xác đơn"
+
+#: config/sh/sh.opt:157
+msgid "Generate only single-precision SH4-300 code"
+msgstr "Tạo ra chỉ mã SH4-300 chính xác đơn"
+
+#: config/sh/sh.opt:161
+msgid "Generate SH4a code"
+msgstr "Tạo ra mã SH4a"
+
+#: config/sh/sh.opt:165
+msgid "Generate SH4a FPU-less code"
+msgstr "Tạo ra mã SH4a không có FPU"
+
+#: config/sh/sh.opt:169
+msgid "Generate default single-precision SH4a code"
+msgstr "Tạo ra mã SH4a chính xác đơn mặc định"
+
+#: config/sh/sh.opt:173
+msgid "Generate only single-precision SH4a code"
+msgstr "Tạo ra chỉ mã SH4a chính xác đơn"
+
+#: config/sh/sh.opt:177
+msgid "Generate SH4al-dsp code"
+msgstr "Tạo ra mã SH4al-dsp"
+
+#: config/sh/sh.opt:181
+msgid "Generate 32-bit SHmedia code"
+msgstr "Tạo ra mã SHmedia 32-bit"
+
+#: config/sh/sh.opt:185
+msgid "Generate 32-bit FPU-less SHmedia code"
+msgstr "Tạo ra mã SHmedia 32-bit không có FPU"
+
+#: config/sh/sh.opt:189
+msgid "Generate 64-bit SHmedia code"
+msgstr "Tạo ra mã SHmedia 64-bit"
+
+#: config/sh/sh.opt:193
+msgid "Generate 64-bit FPU-less SHmedia code"
+msgstr "Tạo ra mã SHmedia 64-bit không có FPU"
+
+#: config/sh/sh.opt:197
+msgid "Generate SHcompact code"
+msgstr "Tạo ra mã SHcompact"
+
+#: config/sh/sh.opt:201
+msgid "Generate FPU-less SHcompact code"
+msgstr "Tạo ra mã SHcompact không có FPU"
+
+#: config/sh/sh.opt:205
+msgid "Throttle unrolling to avoid thrashing target registers unless the unroll benefit outweighs this"
+msgstr "Điều chỉnh tốc độ bỏ cuộn để tránh quá tải thanh ghi đích, nếu lợi ích bỏ cuộn không có nhiều giá trị hơn"
+
+#: config/sh/sh.opt:209
+msgid "Generate code in big endian mode"
+msgstr "Tạo mã trong chế độ về cuối lớn"
+
+#: config/sh/sh.opt:213
+msgid "Generate 32-bit offsets in switch tables"
+msgstr "Tạo ra hiệu số 32-bit trong bảng cái chuyển"
+
+#: config/sh/sh.opt:217
+msgid "Generate bit instructions"
+msgstr "Tạo ra câu lệnh bit"
+
+#: config/sh/sh.opt:221
+msgid "Cost to assume for a branch insn"
+msgstr "Giá cần giả sử đối với một câu lệnh nhánh"
+
+#: config/sh/sh.opt:225
+msgid "Enable cbranchdi4 pattern"
+msgstr "Hiệu lực mẫu cbranchdi4"
+
+#: config/sh/sh.opt:229
+msgid "Emit cmpeqdi_t pattern even when -mcbranchdi is in effect."
+msgstr "Xuất mẫu « cmpeqdi_t pattern » ngay cả khi tuỳ chọn « -mcbranchdi » vẫn hoạt động."
+
+#: config/sh/sh.opt:233
+msgid "Enable SH5 cut2 workaround"
+msgstr "Hiệu lực khắc phục cut2 SH5"
+
+#: config/sh/sh.opt:237
+msgid "Align doubles at 64-bit boundaries"
+msgstr "Xếp hàng các đôi theo biên giới 64-bit"
+
+#: config/sh/sh.opt:241
+msgid "Division strategy, one of: call, call2, fp, inv, inv:minlat, inv20u, inv20l, inv:call, inv:call2, inv:fp, call-div1, call-fp, call-table"
+msgstr "Chiến lược chia là một của: call, call2, fp, inv, inv:minlat, inv20u, inv20l, inv:call, inv:call2, inv:fp, call-div1, call-fp, call-table"
+
+#: config/sh/sh.opt:245
+msgid "Specify name for 32 bit signed division function"
+msgstr "Ghi rõ tên cho hàm chia đã ký 32-bit"
+
+#: config/sh/sh.opt:249
+msgid "Enable the use of 64-bit floating point registers in fmov instructions.  See -mdalign if 64-bit alignment is required."
+msgstr "Hiệu lực sử dụng thay ghi điểm phù động 64-bit trong câu lệnh fmov. Xem « -mdalign » nếu cũng yêu cầu xếp hàng theo 64-bit."
+
+#: config/sh/sh.opt:257
+msgid "Enable the use of the fused floating point multiply-accumulate operation"
+msgstr "Hiệu lực sử dụng thao tác nhân-tích_lũy loại điểm phù động hợp nhau"
+
+#: config/sh/sh.opt:261
+msgid "Cost to assume for gettr insn"
+msgstr "Giá cần giả sử đối với câu lệnh gettr"
+
+#: config/sh/sh.opt:265 config/sh/sh.opt:315
+msgid "Follow Renesas (formerly Hitachi) / SuperH calling conventions"
+msgstr "Theo quy ước gọi SuperH / Renesas (còn gọi là Hitachi)"
+
+#: config/sh/sh.opt:269
+msgid "Increase the IEEE compliance for floating-point code"
+msgstr "Đối với mã điểm phù động thì làm hợp hơn với IEEE"
+
+#: config/sh/sh.opt:273
+msgid "Enable the use of the indexed addressing mode for SHmedia32/SHcompact"
+msgstr "Hiệu lực sử dụng chế độ đặt địa chỉ loại phụ lục cho SHmedia32/SHcompact"
+
+#: config/sh/sh.opt:277
+msgid "inline code to invalidate instruction cache entries after setting up nested function trampolines"
+msgstr "chèn mã vào trực tiếp để làm mất hiệu lực các mục nhập vùng nhớ tạm câu lệnh sau khi thiết lập các trampoline hàm lồng nhau"
+
+#: config/sh/sh.opt:281
+msgid "Assume symbols might be invalid"
+msgstr "Giả sử là ký hiệu có thể không hợp lệ"
+
+#: config/sh/sh.opt:285
+msgid "Annotate assembler instructions with estimated addresses"
+msgstr "Phụ chú câu lệnh dịch mã số bằng địa chỉ ước lượng"
+
+#: config/sh/sh.opt:289
+msgid "Generate code in little endian mode"
+msgstr "Tạo ra mã trong chế độ về cuối nhỏ"
+
+#: config/sh/sh.opt:293
+msgid "Mark MAC register as call-clobbered"
+msgstr "Đánh dấu thanh ghi MAC như là bị cuộc gọi ghi đè"
+
+#: config/sh/sh.opt:299
+msgid "Make structs a multiple of 4 bytes (warning: ABI altered)"
+msgstr "Làm cho cấu trúc là một bội số cho 4 byte (cảnh báo : ABI bị sửa đổi)"
+
+#: config/sh/sh.opt:303
+msgid "Emit function-calls using global offset table when generating PIC"
+msgstr "Xuất cuộc gọi hàm dùng bảng hiệu số toàn cục khi tạo ra PIC"
+
+#: config/sh/sh.opt:307
+msgid "Assume pt* instructions won't trap"
+msgstr "Giả sử là câu oệnh pt* sẽ không bẫy"
+
+#: config/sh/sh.opt:311
+msgid "Shorten address references during linking"
+msgstr "Cắt ngắn tham chiếu địa chỉ trong khi liên kết"
+
+#: config/sh/sh.opt:319
+msgid "Deprecated.  Use -Os instead"
+msgstr "Bị phân đối nên hãy sử dụng đối số « -Os » để thay thế"
+
+#: config/sh/sh.opt:323
+msgid "Cost to assume for a multiply insn"
+msgstr "Giá cần giả sử cho một câu lệnh nhân lên"
+
+#: config/sh/sh.opt:327
+msgid "Don't generate privileged-mode only code; implies -mno-inline-ic_invalidate if the inline code would not work in user mode."
+msgstr "Đừng tạo ra mã chỉ có chế độ quyền đặc biệt; cũng ngụ ý « -mno-inline-ic_invalidate » nếu mã trực tiếp không có tác động trong chế độ người dùng"
+
+#: config/sh/sh.opt:333
+msgid "Pretend a branch-around-a-move is a conditional move."
+msgstr "Làm ra vẻ rằng « branch-around-a-move » là một sự di chuyển có điều kiện."
+
+#: config/sh/superh.opt:6
+msgid "Board name [and memory region]."
+msgstr "Tên bộ mạch [và vùng nhớ]."
+
+#: config/sh/superh.opt:10
+msgid "Runtime name."
+msgstr "Tên lúc chạy."
+
+#: config/arm/eabi.opt:23
+msgid "Generate code for the Android operating system."
+msgstr "Tạo ra mã cho hệ điều hành Android."
+
+#: config/arm/arm.opt:23
+msgid "Specify an ABI"
+msgstr "Ghi rõ một ABI"
+
+#: config/arm/arm.opt:27
+msgid "Generate a call to abort if a noreturn function returns"
+msgstr "Tạo ra một cuộc gọi nên hủy bỏ nếu một hàm không trả lại còn trả lại"
+
+#: config/arm/arm.opt:34
+msgid "Pass FP arguments in FP registers"
+msgstr "Gửi đối số loại điểm phù động trong thanh ghi loại điểm phù động"
+
+#: config/arm/arm.opt:38
+msgid "Generate APCS conformant stack frames"
+msgstr "Tạo ra các khung đống làm hợp với APCS"
+
+#: config/arm/arm.opt:42
+msgid "Generate re-entrant, PIC code"
+msgstr "Tạo ra mã PIC loại vào lại"
+
+#: config/arm/arm.opt:56
+msgid "Assume target CPU is configured as big endian"
+msgstr "Giả sử là CPU đích được cấu hình về cuối lớn"
+
+#: config/arm/arm.opt:60
+msgid "Thumb: Assume non-static functions may be called from ARM code"
+msgstr "Thumb: Giả sử là hàm không phải tĩnh có thể được gọi từ mã ARM"
+
+#: config/arm/arm.opt:64
+msgid "Thumb: Assume function pointers may go to non-Thumb aware code"
+msgstr "Thumb: Giả sử là hàm trỏ có thể trở tới mã không phải tùy theo Thumb"
+
+#: config/arm/arm.opt:68
+msgid "Cirrus: Place NOPs to avoid invalid instruction combinations"
+msgstr "Cirrus: Để các NOP để tránh sai kết hợp các câu lệnh"
+
+#: config/arm/arm.opt:72 config/bfin/bfin.opt:27
+msgid "Specify the name of the target CPU"
+msgstr "Ghi rõ tên của CPU đích"
+
+#: config/arm/arm.opt:76
+msgid "Specify if floating point hardware should be used"
+msgstr "Ghi rõ có nên sử dụng phần cứng điểm phù động hay không"
+
+#: config/arm/arm.opt:83
+msgid "Specify the __fp16 floating-point format"
+msgstr "Ghi rõ định dạng điểm phù động « __fp16 »"
+
+#: config/arm/arm.opt:94
+msgid "Specify the name of the target floating point hardware/format"
+msgstr "Ghi rõ tên của phần cứng / định dạng đích về điểm phù động"
+
+#: config/arm/arm.opt:98
+msgid "Alias for -mfloat-abi=hard"
+msgstr "Bí danh cho « -mfloat-abi=hard »"
+
+#: config/arm/arm.opt:102
+msgid "Assume target CPU is configured as little endian"
+msgstr "Giả sử là CPU đích được cấu hình về cuối nhỏ"
+
+#: config/arm/arm.opt:106
+msgid "Generate call insns as indirect calls, if necessary"
+msgstr "Tạo ra câu lệnh gọi dưới dạng cuộc gọi gián tiếp, nếu cần thiết"
+
+#: config/arm/arm.opt:110
+msgid "Specify the register to be used for PIC addressing"
+msgstr "Ghi rõ thanh ghi cần sử dụng để đặt địa chỉ PIC"
+
+#: config/arm/arm.opt:114
+msgid "Store function names in object code"
+msgstr "Lưu các tên hàm trong mã đối tượng"
+
+#: config/arm/arm.opt:118
+msgid "Permit scheduling of a function's prologue sequence"
+msgstr "Cho phép định thời dãy đoạn mở đầu của một hàm nào đó"
+
+#: config/arm/arm.opt:122
+msgid "Do not load the PIC register in function prologues"
+msgstr "Đừng nạp thanh ghi PIC trong đoạn mở đầu hàm"
+
+#: config/arm/arm.opt:126
+msgid "Alias for -mfloat-abi=soft"
+msgstr "Bí danh cho « -mfloat-abi=soft »"
+
+#: config/arm/arm.opt:130
+msgid "Specify the minimum bit alignment of structures"
+msgstr "Ghi rõ sự xếp hàng bit tối thiểu của cấu trúc"
+
+#: config/arm/arm.opt:134
+msgid "Compile for the Thumb not the ARM"
+msgstr "Biên dịch cho Thumb, không phải cho ARM"
+
+#: config/arm/arm.opt:138
+msgid "Support calls between Thumb and ARM instruction sets"
+msgstr "Hỗ trợ cuộc gọi giữa các tập hợp câu lệnh loại Thumb và ARM"
+
+#: config/arm/arm.opt:142
+msgid "Specify how to access the thread pointer"
+msgstr "Ghi rõ cách truy cập đến hàm trỏ mạch"
+
+#: config/arm/arm.opt:146
+msgid "Thumb: Generate (non-leaf) stack frames even if not needed"
+msgstr "Thumb: Tạo ra khung đống (không phải loại lá) ngay cả khi không cần thiết"
+
+#: config/arm/arm.opt:150
+msgid "Thumb: Generate (leaf) stack frames even if not needed"
+msgstr "Thumb: Tạo ra khung đống (loại lá) ngay cả khi không cần thiết"
+
+#: config/arm/arm.opt:154
+msgid "Tune code for the given processor"
+msgstr "Điều chỉnh mã cho bộ xử lý đưa ra"
+
+#: config/arm/arm.opt:158
+msgid "Assume big endian bytes, little endian words"
+msgstr "Giả sử các byte về cuối lớn, các từ về cuối nhỏ"
+
+#: config/arm/arm.opt:162
+msgid "Use Neon quad-word (rather than double-word) registers for vectorization"
+msgstr "Sử dụng thanh ghi từ bốn (thay cho từ đôi) Neon để véc-tơ hoá"
+
+#: config/arm/arm.opt:166
+msgid "Only generate absolute relocations on word sized values."
+msgstr "Chỉ tạo ra sự định vị lại tuyệt đối với giá trị kích cỡ từ."
+
+#: config/arm/arm.opt:170
+msgid "Avoid overlapping destination and address registers on LDRD instructions"
+msgstr "Tránh các thanh ghi đích và địa chỉ chồng chéo lên nhau đối với câu lệnh LDRD"
+
+#: config/arm/pe.opt:23
+msgid "Ignore dllimport attribute for functions"
+msgstr "Bỏ qua thuộc tính dllimport về hàm"
+
+#: config/pdp11/pdp11.opt:23
+msgid "Generate code for an 11/10"
+msgstr "Tạo ra mã cho một 11/10"
+
+#: config/pdp11/pdp11.opt:27
+msgid "Generate code for an 11/40"
+msgstr "Tạo ra mã cho một 11/40"
+
+#: config/pdp11/pdp11.opt:31
+msgid "Generate code for an 11/45"
+msgstr "Tạo ra mã cho một 11/45"
+
+#: config/pdp11/pdp11.opt:35
+msgid "Use 16-bit abs patterns"
+msgstr "Sử dụng mẫu tuyệt đối 16-bit"
+
+#: config/pdp11/pdp11.opt:39
+msgid "Return floating-point results in ac0 (fr0 in Unix assembler syntax)"
+msgstr "Trả lại kết quả điểm phù động bằng ac0 (bằng fr0 trong cú pháp dịch mã số UNIX)"
+
+#: config/pdp11/pdp11.opt:43
+msgid "Do not use inline patterns for copying memory"
+msgstr "Đừng sử dụng mẫu được chèn vào trực tiếp để sao chép vùng nhớ"
+
+#: config/pdp11/pdp11.opt:47
+msgid "Use inline patterns for copying memory"
+msgstr "Sử dụng mẫu được chèn vào trực tiếp để sao chép vùng nhớ"
+
+#: config/pdp11/pdp11.opt:51
+msgid "Do not pretend that branches are expensive"
+msgstr "Đừng làm ra vẻ là nhánh có giá cao"
+
+#: config/pdp11/pdp11.opt:55
+msgid "Pretend that branches are expensive"
+msgstr "Làm ra vẻ là nhánh có giá cao"
+
+#: config/pdp11/pdp11.opt:59
+msgid "Use the DEC assembler syntax"
+msgstr "Sử dụng cú pháp dịch mã số DEC"
+
+#: config/pdp11/pdp11.opt:63
+msgid "Use 32 bit float"
+msgstr "Sử dụng điểm phù động 32-bit"
+
+#: config/pdp11/pdp11.opt:67
+msgid "Use 64 bit float"
+msgstr "Sử dụng điểm phù động 64-bit"
+
+#: config/pdp11/pdp11.opt:75
+msgid "Use 16 bit int"
+msgstr "Sử dụng số nguyên 16-bit"
+
+#: config/pdp11/pdp11.opt:79
+msgid "Use 32 bit int"
+msgstr "Sử dụng số nguyên 32-bit"
+
+#: config/pdp11/pdp11.opt:87
+msgid "Target has split I&D"
+msgstr "Đích có I&D bị chia ra"
+
+#: config/pdp11/pdp11.opt:91
+msgid "Use UNIX assembler syntax"
+msgstr "Sử dụng cú pháp dịch mã số UNIX"
+
+#: config/avr/avr.opt:23
+msgid "Use subroutines for function prologues and epilogues"
+msgstr "Sử dụng chương trình con cho đoạn mở/đóng hàm"
+
+#: config/avr/avr.opt:27
+msgid "-mmcu=MCU\tSelect the target MCU"
+msgstr "-mmcu=MCU\tChọn MCU đích"
+
+#: config/avr/avr.opt:34
+msgid "Use an 8-bit 'int' type"
+msgstr "Sử dụng một loại số nguyên 8-bit"
+
+#: config/avr/avr.opt:38
+msgid "Change the stack pointer without disabling interrupts"
+msgstr "Thay đổi hàm trỏ đống mà không tắt tín hiệu gián đoạn"
+
+#: config/avr/avr.opt:48
+msgid "Use rjmp/rcall (limited range) on >8K devices"
+msgstr "Sử dụng rjmp/rcall (phạm vi bị hạn chế) trên thiết bị >8K"
+
+#: config/avr/avr.opt:52
+msgid "Change only the low 8 bits of the stack pointer"
+msgstr "Thay đổi chỉ 8 bit thấp của hàm trỏ đống"
+
+#: config/avr/avr.opt:56
+msgid "Relax branches"
+msgstr "Làm yếu các nhánh"
+
+#: config/avr/avr.opt:60
+msgid "Make the linker relaxation machine assume that a program counter wrap-around occures."
+msgstr "Làm cho máy làm yếu bộ liên kết giả sử rằng bộ đếm chương trình đã cuộn lại."
+
+#: config/crx/crx.opt:23
+msgid "Support multiply accumulate instructions"
+msgstr "Hỗ trợ câu lệnh nhân-tích_lũy"
+
+#: config/crx/crx.opt:27
+msgid "Do not use push to store function arguments"
+msgstr "Đừng sử dụng push để lưu các đối số hàm"
+
+#: config/crx/crx.opt:31
+msgid "Restrict doloop to the given nesting level"
+msgstr "Hạn chế doloop thành cấp lồng nhau đưa ra"
+
+#: config/pa/pa-hpux.opt:23
+msgid "Generate cpp defines for server IO"
+msgstr "Tạo ra các lời xác định cpp cho V/R máy phục vụ"
+
+#: config/pa/pa-hpux.opt:27 config/pa/pa-hpux1010.opt:23
+#: config/pa/pa-hpux1111.opt:23
+msgid "Specify UNIX standard for predefines and linking"
+msgstr "Ghi rõ tiêu chuẩn UNIX cho lời xác định sẵn và chức năng liên kết"
+
+#: config/pa/pa-hpux.opt:31
+msgid "Generate cpp defines for workstation IO"
+msgstr "Tạo ra các lời xác định cpp cho V/R máy trạm"
+
+#: config/pa/pa.opt:23 config/pa/pa.opt:76 config/pa/pa.opt:84
+msgid "Generate PA1.0 code"
+msgstr "Tạo ra mã PA1.0"
+
+#: config/pa/pa.opt:27 config/pa/pa.opt:88 config/pa/pa.opt:108
+msgid "Generate PA1.1 code"
+msgstr "Tạo ra mã PA1.1"
+
+#: config/pa/pa.opt:31 config/pa/pa.opt:92
+msgid "Generate PA2.0 code (requires binutils 2.10 or later)"
+msgstr "Tạo ra mã PA2.0 (yêu cầu binutils 2.10 hay sau)"
+
+#: config/pa/pa.opt:35
+msgid "Generate code for huge switch statements"
+msgstr "Tạo ra mã cho câu lệnh chuyển rất lớn"
+
+#: config/pa/pa.opt:39
+msgid "Disable FP regs"
+msgstr "Tắt các thanh ghi loại điểm phù động"
+
+#: config/pa/pa.opt:43
+msgid "Disable indexed addressing"
+msgstr "Tắt chức năng đặt địa chỉ loại phụ lục"
+
+#: config/pa/pa.opt:47
+msgid "Generate fast indirect calls"
+msgstr "Tạo ra các cuộc gọi gián tiếp nhanh"
+
+#: config/pa/pa.opt:55
+msgid "Assume code will be assembled by GAS"
+msgstr "Giả sử là mã sẽ được GAS dịch"
+
+#: config/pa/pa.opt:59
+msgid "Put jumps in call delay slots"
+msgstr "Để bước nhảy vào khe hàng đợi cuộc gọi"
+
+#: config/pa/pa.opt:64
+msgid "Enable linker optimizations"
+msgstr "Hiệu lực số tối ưu hoá bộ liên kết"
+
+#: config/pa/pa.opt:68
+msgid "Always generate long calls"
+msgstr "Lúc nào cũng tạo ra cuộc gọi dài"
+
+#: config/pa/pa.opt:72
+msgid "Emit long load/store sequences"
+msgstr "Xuất dãy nạp/lưu dài"
+
+#: config/pa/pa.opt:80
+msgid "Disable space regs"
+msgstr "Tắt thanh ghi loại sức chứa"
+
+#: config/pa/pa.opt:96
+msgid "Use portable calling conventions"
+msgstr "Sử dụng quy ước gọi di động"
+
+#: config/pa/pa.opt:100
+msgid "Specify CPU for scheduling purposes.  Valid arguments are 700, 7100, 7100LC, 7200, 7300, and 8000"
+msgstr "Ghi rõ CPU cho mục đích định thời, một của: 700, 7100, 7100LC, 7200, 7300, 8000"
+
+#: config/pa/pa.opt:112
+msgid "Do not disable space regs"
+msgstr "Đừng tắt thanh ghi loại sức chứa"
+
+#: config/pa/pa64-hpux.opt:23
+msgid "Assume code will be linked by GNU ld"
+msgstr "Giả sử là mã sẽ được liên kết bởi ld của GNU"
+
+#: config/pa/pa64-hpux.opt:27
+msgid "Assume code will be linked by HP ld"
+msgstr "Giả sử là mã sẽ được liên kết bởi ld của HP"
+
+#: config/xtensa/xtensa.opt:23
+msgid "Use CONST16 instruction to load constants"
+msgstr "Sử dụng câu lệnh CONST16 để nạp các hằng số"
+
+#: config/xtensa/xtensa.opt:27
+msgid "Enable fused multiply/add and multiply/subtract FP instructions"
+msgstr "Hiệu lực câu lệnh nhân/cộng và nhân/trừ loại điểm phù động hợp nhau"
+
+#: config/xtensa/xtensa.opt:31
+msgid "Use indirect CALLXn instructions for large programs"
+msgstr "Sử dụng câu lệnh CALLXn gián tiếp cho chương trình lớn"
+
+#: config/xtensa/xtensa.opt:35
+msgid "Automatically align branch targets to reduce branch penalties"
+msgstr "Tự động xếp hàng các đích nhánh để giảm giá nhánh thừa"
+
+#: config/xtensa/xtensa.opt:39
+msgid "Intersperse literal pools with code in the text section"
+msgstr "Chèn vào nhau các vùng gộp nghĩa chữ và mã trong phần văn bản"
+
+#: config/xtensa/xtensa.opt:43
+msgid "-mno-serialize-volatile\tDo not serialize volatile memory references with MEMW instructions"
+msgstr "-mno-serialize-volatile\tĐối với câu lệnh MEMW thì đừng cũng xếp theo thứ tự các tham chiếu đến vùng nhớ hay thay đổi"
+
+#: config/stormy16/stormy16.opt:24
+msgid "Provide libraries for the simulator"
+msgstr "Cung cấp thư viện cho bộ mô phỏng"
+
+#: config/mips/mips.opt:23
+msgid "-mabi=ABI\tGenerate code that conforms to the given ABI"
+msgstr "-mabi=ABI\tTạo ra làm hợp với ABI đưa ra"
+
+#: config/mips/mips.opt:27
+msgid "Generate code that can be used in SVR4-style dynamic objects"
+msgstr "Tạo ra mã có thể sử dụng được trong đối tượng năng động có kiểu SVR4"
+
+#: config/mips/mips.opt:31
+msgid "Use PMC-style 'mad' instructions"
+msgstr "Sử dụng câu lệnh « mad » loại PMC"
+
+#: config/mips/mips.opt:35
+msgid "-march=ISA\tGenerate code for the given ISA"
+msgstr "-march=ISA\tTạo ra mã cho ISA đưa ra"
+
+#: config/mips/mips.opt:39
+msgid "-mbranch-cost=COST\tSet the cost of branches to roughly COST instructions"
+msgstr "-mbranch-cost=GIÁ\tLập giá của nhánh thành khoảng số các câu lệnh này"
+
+#: config/mips/mips.opt:43
+msgid "Use Branch Likely instructions, overriding the architecture default"
+msgstr "Sử dụng câu lệnh rất có thể thích hợp với nhanh (Branch Likely), thì ghi đè lên giá trị mặc định của kiến trúc đó"
+
+#: config/mips/mips.opt:47
+msgid "Switch on/off MIPS16 ASE on alternating functions for compiler testing"
+msgstr "Bật/tắt ASE MIPS16 trên các hàm qua lại, để kiểm tra chức năng của bộ dịch mã số"
+
+#: config/mips/mips.opt:51
+msgid "Trap on integer divide by zero"
+msgstr "Bẫy khi số nguyên chia cho số không"
+
+#: config/mips/mips.opt:55
+msgid "-mcode-readable=SETTING\tSpecify when instructions are allowed to access code"
+msgstr "-mcode-readable=THIẾT_LẬP\tGhi rõ khi nào câu lệnh có quyền truy cập đến mã"
+
+#: config/mips/mips.opt:59
+msgid "Use branch-and-break sequences to check for integer divide by zero"
+msgstr "Sử dụng dãy tạo-nhánh-và-ngắt (branch-and-break) để kiểm tra có số nguyên chia cho số không"
+
+#: config/mips/mips.opt:63
+msgid "Use trap instructions to check for integer divide by zero"
+msgstr "Sử dụng câu lệnh bẫy để kiểm tra có số nguyên chia cho số không"
+
+#: config/mips/mips.opt:67
+msgid "Allow the use of MDMX instructions"
+msgstr "Cho phép sử dụng câu lệnh MDMX"
+
+#: config/mips/mips.opt:71
+msgid "Allow hardware floating-point instructions to cover both 32-bit and 64-bit operations"
+msgstr "Cho phép câu lệnh điểm phù động phần cứng bao quát thao tác cả hai 32-bit và 64-bit"
+
+#: config/mips/mips.opt:75
+msgid "Use MIPS-DSP instructions"
+msgstr "Sử dụng câu lệnh MIPS-DSP"
+
+#: config/mips/mips.opt:79
+msgid "Use MIPS-DSP REV 2 instructions"
+msgstr "Sử dụng câu lệnh MIPS-DSP REV 2"
+
+#: config/mips/mips.opt:89 config/mep/mep.opt:80
+msgid "Use big-endian byte order"
+msgstr "Sử dụng thứ tự byte về cuối lớn"
+
+#: config/mips/mips.opt:93 config/mep/mep.opt:84
+msgid "Use little-endian byte order"
+msgstr "Sử dụng thứ tự byte về cuối nhỏ"
+
+#: config/mips/mips.opt:97 config/iq2000/iq2000.opt:31
+msgid "Use ROM instead of RAM"
+msgstr "Sử dụng ROM thay cho RAM"
+
+#: config/mips/mips.opt:101
+msgid "Use NewABI-style %reloc() assembly operators"
+msgstr "Sử dụng toán tử dịch mã số %reloc() kiểu NewABI"
+
+#: config/mips/mips.opt:105
+msgid "Use -G for data that is not defined by the current object"
+msgstr "Sử dụng « -G » cho dữ liệu không phải được xác định bởi đối tượng hiện thời"
+
+#: config/mips/mips.opt:109
+msgid "Work around certain R4000 errata"
+msgstr "Khắc phục một số lỗi R4000 nào đó"
+
+#: config/mips/mips.opt:113
+msgid "Work around certain R4400 errata"
+msgstr "Khắc phục một số lỗi R4400 nào đó"
+
+#: config/mips/mips.opt:117
+msgid "Work around certain R10000 errata"
+msgstr "Khắc phục một số lỗi R10000 nào đó"
+
+#: config/mips/mips.opt:121
+msgid "Work around errata for early SB-1 revision 2 cores"
+msgstr "Khắc phục một những lỗi cho các lõi SB-1 bản sửa đổi 2 sớm"
+
+#: config/mips/mips.opt:125
+msgid "Work around certain VR4120 errata"
+msgstr "Khắc phục một số lỗi VR4120 nào đó"
+
+#: config/mips/mips.opt:129
+msgid "Work around VR4130 mflo/mfhi errata"
+msgstr "Khắc phục một số lỗi mflo/mfhi VR4130 nào đó"
+
+#: config/mips/mips.opt:133
+msgid "Work around an early 4300 hardware bug"
+msgstr "Khắc phục một lỗi phần cứng 4300 sớm"
+
+#: config/mips/mips.opt:137
+msgid "FP exceptions are enabled"
+msgstr "Đã bật ngoại lệ điểm phù động"
+
+#: config/mips/mips.opt:141
+msgid "Use 32-bit floating-point registers"
+msgstr "Sử dụng thanh ghi điểm phù động 32-bit"
+
+#: config/mips/mips.opt:145
+msgid "Use 64-bit floating-point registers"
+msgstr "Sử dụng thanh ghi điểm phù động 64-bit"
+
+#: config/mips/mips.opt:149
+msgid "-mflush-func=FUNC\tUse FUNC to flush the cache before calling stack trampolines"
+msgstr "-mflush-func=HÀM\tSử dụng hàm này để chuyển hết vùng nhớ tạm ra ngoài trước khi gọi trampoline đống"
+
+#: config/mips/mips.opt:153
+msgid "Generate floating-point multiply-add instructions"
+msgstr "Tạo ra câu lệnh nhân-cộng loại điểm phù động"
+
+#: config/mips/mips.opt:157
+msgid "Use 32-bit general registers"
+msgstr "Sử dụng thanh ghi chung 32-bit"
+
+#: config/mips/mips.opt:161
+msgid "Use 64-bit general registers"
+msgstr "Sử dụng thanh ghi chung 64-bit"
+
+#: config/mips/mips.opt:165
+msgid "Use GP-relative addressing to access small data"
+msgstr "Sử dụng chức năng đặt địa chỉ tương đối với GP để truy cập đến dữ liệu nhỏ"
+
+#: config/mips/mips.opt:169
+msgid "When generating -mabicalls code, allow executables to use PLTs and copy relocations"
+msgstr "Khi tạo ra mãn « -mabicalls » thì cho phép tập tin thực thi sử dụng PLT và sao chép sự định vị lại"
+
+#: config/mips/mips.opt:173
+msgid "Allow the use of hardware floating-point ABI and instructions"
+msgstr "Cho phép sử dụng ABI và các câu lệnh loại điểm phù động phần cứng"
+
+#: config/mips/mips.opt:177
+msgid "Generate code that can be safely linked with MIPS16 code."
+msgstr "Tạo ra mã có thể được liên kết an toàn với mã MIPS16."
+
+#: config/mips/mips.opt:181
+msgid "-mipsN\tGenerate code for ISA level N"
+msgstr "-mipsSỐ\tTạo ra mã cho cấp ISA SỐ"
+
+#: config/mips/mips.opt:185
+msgid "Generate MIPS16 code"
+msgstr "Tạo ra mã MIPS16"
+
+#: config/mips/mips.opt:189
+msgid "Use MIPS-3D instructions"
+msgstr "Sử dụng câu lệnh MIPS-3D"
+
+#: config/mips/mips.opt:193
+msgid "Use ll, sc and sync instructions"
+msgstr "Sử dụng câu lệnh ll, sc và sync"
+
+#: config/mips/mips.opt:197
+msgid "Use -G for object-local data"
+msgstr "Sử dụng « -G » cho dữ liệu cục bộ với đối tượng"
+
+#: config/mips/mips.opt:201
+msgid "Use indirect calls"
+msgstr "Sử dụng cuộc gọi gián tiếp"
+
+#: config/mips/mips.opt:205
+msgid "Use a 32-bit long type"
+msgstr "Sử dụng một loại dài 32-bit"
+
+#: config/mips/mips.opt:209
+msgid "Use a 64-bit long type"
+msgstr "Sử dụng một loại dài 64-bit"
+
+#: config/mips/mips.opt:213
+msgid "Pass the address of the ra save location to _mcount in $12"
+msgstr "Gửi địa chỉ của vị trí lưu « ra » cho « _mcount » trong $12"
+
+#: config/mips/mips.opt:217
+msgid "Don't optimize block moves"
+msgstr "Đừng tối ưu hoá sự di chuyển khối"
+
+#: config/mips/mips.opt:221
+msgid "Use the mips-tfile postpass"
+msgstr "Sử dụng postpass loại mips-tfile"
+
+#: config/mips/mips.opt:225
+msgid "Allow the use of MT instructions"
+msgstr "Cho phép sử dụng câu lệnh MT"
+
+#: config/mips/mips.opt:229
+msgid "Do not use a cache-flushing function before calling stack trampolines"
+msgstr "Đừng sử dụng một hàm chuyển hết vùng nhớ tạm ra ngoài trước khi gọi trampoline stack"
+
+#: config/mips/mips.opt:233
+msgid "Do not use MDMX instructions"
+msgstr "Đừng sử dụng câu lệnh MDMX"
+
+#: config/mips/mips.opt:237
+msgid "Generate normal-mode code"
+msgstr "Tạo ra mã có chế độ thông thường"
+
+#: config/mips/mips.opt:241
+msgid "Do not use MIPS-3D instructions"
+msgstr "Đừng sử dụng câu lệnh MIPS-3D"
+
+#: config/mips/mips.opt:245
+msgid "Use paired-single floating-point instructions"
+msgstr "Sử dụng câu lệnh điểm phù động đôi-đơn"
+
+#: config/mips/mips.opt:249
+msgid "-mr10k-cache-barrier=SETTING\tSpecify when r10k cache barriers should be inserted"
+msgstr "-mr10k-cache-barrier=THIẾT_LẬP\tGhi rõ khi nào nên chèn rào cản vùng nhớ tạm r10k"
+
+#: config/mips/mips.opt:253
+msgid "Try to allow the linker to turn PIC calls into direct calls"
+msgstr "Thử cho phép bộ liên kết chuyển đổi cuộc gọi PIC sang cuộc gọi trực tiếp"
+
+#: config/mips/mips.opt:257
+msgid "When generating -mabicalls code, make the code suitable for use in shared libraries"
+msgstr "Khi tạo ra mã « -mabicalls », làm cho mã thích hợp với sử dụng trong thư viện dùng chung"
+
+#: config/mips/mips.opt:261
+msgid "Restrict the use of hardware floating-point instructions to 32-bit operations"
+msgstr "Hạn chế sử dụng câu lệnh điểm phù động phần cứng thành thao tác 32-bit"
+
+#: config/mips/mips.opt:265
+msgid "Use SmartMIPS instructions"
+msgstr "Sử dụng câu lệnh SmartMIPS"
+
+#: config/mips/mips.opt:269
+msgid "Prevent the use of all hardware floating-point instructions"
+msgstr "Ngăn cản sử dụng câu lệnh nào có loại điểm phù động phần cứng"
+
+#: config/mips/mips.opt:273
+msgid "Optimize lui/addiu address loads"
+msgstr "Tối ưu hoá việc nạp địa chỉ lui/addiu"
+
+#: config/mips/mips.opt:277
+msgid "Assume all symbols have 32-bit values"
+msgstr "Giả sử là mọi ký hiệu đều có giá trị 32-bit"
+
+#: config/mips/mips.opt:281
+msgid "Use synci instruction to invalidate i-cache"
+msgstr "Sử dụng câu lệnh synci để làm mất hiệu lực i-cache"
+
+#: config/mips/mips.opt:285
+msgid "-mtune=PROCESSOR\tOptimize the output for PROCESSOR"
+msgstr "-mtune=BỘ_XỬ_LÝ\tTối ưu hoá kết xuất cho bộ xử lý này"
+
+#: config/mips/mips.opt:289 config/iq2000/iq2000.opt:44
+msgid "Put uninitialized constants in ROM (needs -membedded-data)"
+msgstr "Để vào ROM các hằng số chưa sơ khởi (yêu cầu « -membedded-data »)"
+
+#: config/mips/mips.opt:293
+msgid "Perform VR4130-specific alignment optimizations"
+msgstr "Tối ưu hoá sự xếp hàng một cách đặc trưng cho VR4130"
+
+#: config/mips/mips.opt:297
+msgid "Lift restrictions on GOT size"
+msgstr "Bỏ giới hạn về kích cỡ GOT"
+
+#: config/mips/sdemtk.opt:23
+msgid "Prevent the use of all floating-point operations"
+msgstr "Ngăn cản sử dụng câu lệnh nào loại điểm phù động"
+
+#: config/fr30/fr30.opt:23
+msgid "Assume small address space"
+msgstr "Giả sử là có một vùng địa chỉ nhỏ"
+
+#: config/m68hc11/m68hc11.opt:23 config/m68hc11/m68hc11.opt:31
+msgid "Compile for a 68HC11"
+msgstr "Biên dịch cho một 68HC11"
+
+#: config/m68hc11/m68hc11.opt:27 config/m68hc11/m68hc11.opt:35
+msgid "Compile for a 68HC12"
+msgstr "Biên dịch cho một 68HC12"
+
+#: config/m68hc11/m68hc11.opt:41 config/m68hc11/m68hc11.opt:45
+msgid "Compile for a 68HCS12"
+msgstr "Biên dịch cho một 68HCS12"
+
+#: config/m68hc11/m68hc11.opt:49
+msgid "Auto pre/post decrement increment allowed"
+msgstr "Cho phép tự động tiền/hậu giảm/tăng dần"
+
+#: config/m68hc11/m68hc11.opt:53
+msgid "Min/max instructions allowed"
+msgstr "Cho phép câu lệnh tối đa/thiểu"
+
+#: config/m68hc11/m68hc11.opt:57
+msgid "Use call and rtc for function calls and returns"
+msgstr "Sử dụng call và rtc cho cuộc gọi và cuộc trả lại của hàm"
+
+#: config/m68hc11/m68hc11.opt:61
+msgid "Auto pre/post decrement increment not allowed"
+msgstr "Không cho phép tự động tiền/hậu tăng/giảm dần"
+
+#: config/m68hc11/m68hc11.opt:65
+msgid "Use jsr and rts for function calls and returns"
+msgstr "Sử dụng jsr và rts cho cuộc gọi và cuộc trả lại của hàm"
+
+#: config/m68hc11/m68hc11.opt:69
+msgid "Min/max instructions not allowed"
+msgstr "Không cho phép câu lệnh tối đa/thiểu"
+
+#: config/m68hc11/m68hc11.opt:73
+msgid "Use direct addressing mode for soft registers"
+msgstr "Sử dụng chế độ đặt địa chỉ trực tiếp cho thanh ghi mềm"
+
+#: config/m68hc11/m68hc11.opt:77
+msgid "Compile with 32-bit integer mode"
+msgstr "Biên dịch với chế độ số nguyên 32-bit"
+
+#: config/m68hc11/m68hc11.opt:82
+msgid "Specify the register allocation order"
+msgstr "Ghi rõ thứ tự cấp phát thanh ghi"
+
+#: config/m68hc11/m68hc11.opt:86
+msgid "Do not use direct addressing mode for soft registers"
+msgstr "Đừng sử dụng chế độ đặt địa chỉ trực tiếp cho thanh ghi mềm"
+
+#: config/m68hc11/m68hc11.opt:90
+msgid "Compile with 16-bit integer mode"
+msgstr "Biên dịch với chế độ số nguyên 16-bit"
+
+#: config/m68hc11/m68hc11.opt:94
+msgid "Indicate the number of soft registers available"
+msgstr "Ngụ ý số các thanh ghi mềm còn sẵn sàng"
+
+#: config/vax/vax.opt:23 config/vax/vax.opt:27
+msgid "Target DFLOAT double precision code"
+msgstr "Đặt mục đích là mã chính xác đôi DFLOAT"
+
+#: config/vax/vax.opt:31 config/vax/vax.opt:35
+msgid "Generate GFLOAT double precision code"
+msgstr "Tạo ra mã chính xác đôi GFLOAT"
+
+#: config/vax/vax.opt:39
+msgid "Generate code for GNU assembler (gas)"
+msgstr "Tạo ra mã cho bộ dịch mã số GNU (gas)"
+
+#: config/vax/vax.opt:43
+msgid "Generate code for UNIX assembler"
+msgstr "Tạo ra mã cho bộ dịch mã số UNIX"
+
+#: config/vax/vax.opt:47
+msgid "Use VAXC structure conventions"
+msgstr "Sử dụng quy ước cấu trúc VAXC"
+
+#: config/vax/vax.opt:51
+msgid "Use new adddi3/subdi3 patterns"
+msgstr "Sử dụng các mẫu adddi3/subdi3 mới"
+
+#: config/cris/linux.opt:27
+msgid "Together with -fpic and -fPIC, do not use GOTPLT references"
+msgstr "Đừng sử dụng tham chiếu GOTPLT cùng với « -fpic » hoặc « -fPIC »"
+
+#: config/cris/cris.opt:45
+msgid "Work around bug in multiplication instruction"
+msgstr "Khắc phục lỗi trong câu lệnh nhân lên"
+
+#: config/cris/cris.opt:51
+msgid "Compile for ETRAX 4 (CRIS v3)"
+msgstr "Biên dịch cho ETRAX 4 (CRIS v3)"
+
+#: config/cris/cris.opt:56
+msgid "Compile for ETRAX 100 (CRIS v8)"
+msgstr "Biên dịch cho ETRAX 100 (CRIS v8)"
+
+#: config/cris/cris.opt:64
+msgid "Emit verbose debug information in assembly code"
+msgstr "Xuất nhiều thông tin gỡ rối trong mã dịch mã số"
+
+#: config/cris/cris.opt:71
+msgid "Do not use condition codes from normal instructions"
+msgstr "Đừng sử dụng mã điều kiện từ câu lệnh thông thường"
+
+#: config/cris/cris.opt:80
+msgid "Do not emit addressing modes with side-effect assignment"
+msgstr "Đừng xuất chế độ đặt địa chỉ với sự gán hiệu ứng khác"
+
+#: config/cris/cris.opt:89
+msgid "Do not tune stack alignment"
+msgstr "Đừng điều chỉnh sự xếp hàng đống"
+
+#: config/cris/cris.opt:98
+msgid "Do not tune writable data alignment"
+msgstr "Đừng điều chỉnh sự xếp hàng dữ liệu có thể ghi được"
+
+#: config/cris/cris.opt:107
+msgid "Do not tune code and read-only data alignment"
+msgstr "Đừng điều chỉnh sự xếp hàng mã và dữ liệu chỉ-đọc"
+
+#: config/cris/cris.opt:116
+msgid "Align code and data to 32 bits"
+msgstr "Xếp hàng mã và dữ liệu theo 32-bit"
+
+#: config/cris/cris.opt:133
+msgid "Don't align items in code or data"
+msgstr "Đừng xếp hàng các mục trong mã hoặc dữ liệu"
+
+#: config/cris/cris.opt:142
+msgid "Do not emit function prologue or epilogue"
+msgstr "Đừng xuất đoạn mở/đóng hàm"
+
+#: config/cris/cris.opt:149
+msgid "Use the most feature-enabling options allowed by other options"
+msgstr "Sử dụng những tuỳ chọn hiệu lực nhiều tính năng nhất tùy theo giới hạn của tuỳ chọn khác"
+
+#: config/cris/cris.opt:158
+msgid "Override -mbest-lib-options"
+msgstr "Ghi đè lên « -mbest-lib-options »"
+
+#: config/cris/cris.opt:165
+msgid "-march=ARCH\tGenerate code for the specified chip or CPU version"
+msgstr "-march=KIẾN_TRÚC\tTạo ra mã cho phiến tinh thể hoặc CPU đưa ra"
+
+#: config/cris/cris.opt:169
+msgid "-mtune=ARCH\tTune alignment for the specified chip or CPU version"
+msgstr "-mtune=KIẾN_TRÚC\tĐiều chỉnh sự xếp hàng cho phiến tinh thể hoặc CPU đưa ra"
+
+#: config/cris/cris.opt:173
+msgid "-mmax-stackframe=SIZE\tWarn when a stackframe is larger than the specified size"
+msgstr "-mmax-stackframe=KÍCH_CỠ\tCảnh báo khung đống nào vượt quá kích cỡ này"
+
+#: config/h8300/h8300.opt:23
+msgid "Generate H8S code"
+msgstr "Tạo ra mã H8S"
+
+#: config/h8300/h8300.opt:27
+msgid "Generate H8SX code"
+msgstr "Tạo ra mã H8SX"
+
+#: config/h8300/h8300.opt:31
+msgid "Generate H8S/2600 code"
+msgstr "Tạo ra mã H8S/2600"
+
+#: config/h8300/h8300.opt:35
+msgid "Make integers 32 bits wide"
+msgstr "Làm cho số nguyên có chiều rộng 32 bit"
+
+#: config/h8300/h8300.opt:42
+msgid "Use registers for argument passing"
+msgstr "Sử dụng thanh ghi để gửi đối số qua"
+
+#: config/h8300/h8300.opt:46
+msgid "Consider access to byte sized memory slow"
+msgstr "Tính là truy cập chậm đến vùng nhớ tạm theo byte"
+
+#: config/h8300/h8300.opt:50
+msgid "Enable linker relaxing"
+msgstr "Hiệu lực làm yếu bộ liên kết"
+
+#: config/h8300/h8300.opt:54
+msgid "Generate H8/300H code"
+msgstr "Tạo ra mã H8/300H"
+
+#: config/h8300/h8300.opt:58
+msgid "Enable the normal mode"
+msgstr "Hiệu lực chế độ thông thường"
+
+#: config/h8300/h8300.opt:62
+msgid "Use H8/300 alignment rules"
+msgstr "Sử dụng các quy tắc xếp hàng H8/300"
+
+#: config/v850/v850.opt:23
+msgid "Use registers r2 and r5"
+msgstr "Sử dụng những thanh ghi r2 và r5"
+
+#: config/v850/v850.opt:27
+msgid "Use 4 byte entries in switch tables"
+msgstr "Sử dụng mục nhập 4-byte trong bảng cái chuyển"
+
+#: config/v850/v850.opt:31
+msgid "Enable backend debugging"
+msgstr "Hiệu lực chức năng gỡ rối hậu phương"
+
+#: config/v850/v850.opt:35
+msgid "Do not use the callt instruction"
+msgstr "Đừng sử dụng câu lệnh « callt »"
+
+#: config/v850/v850.opt:39
+msgid "Reuse r30 on a per function basis"
+msgstr "Sử dụng lại r30 một cách từng hàm"
+
+#: config/v850/v850.opt:43
+msgid "Support Green Hills ABI"
+msgstr "Hỗ trợ ABI Green Hills"
+
+#: config/v850/v850.opt:47
+msgid "Prohibit PC relative function calls"
+msgstr "Cấm cuộc gọi hàm tương đối với PC"
+
+#: config/v850/v850.opt:51
+msgid "Use stubs for function prologues"
+msgstr "Sử dụng mẩu cho đoạn mở đầu hàm"
+
+#: config/v850/v850.opt:55
+msgid "Set the max size of data eligible for the SDA area"
+msgstr "Lập kích cỡ tối đa của dữ liệu thích hợp với vùng SDA"
+
+#: config/v850/v850.opt:59
+msgid "Enable the use of the short load instructions"
+msgstr "Hiệu lực sử dụng câu lệnh nạp ngắn"
+
+#: config/v850/v850.opt:63
+msgid "Same as: -mep -mprolog-function"
+msgstr "Bằng: -mep -mprolog-function"
+
+#: config/v850/v850.opt:67
+msgid "Set the max size of data eligible for the TDA area"
+msgstr "Lập kích cỡ tối đa của dữ liệu thích hợp với vùng TDA"
+
+#: config/v850/v850.opt:71
+msgid "Enforce strict alignment"
+msgstr "Ép buộc sự xếp hàng ngặt"
+
+#: config/v850/v850.opt:78
+msgid "Compile for the v850 processor"
+msgstr "Biên dịch cho bộ xử lý v850"
+
+#: config/v850/v850.opt:82
+msgid "Compile for the v850e processor"
+msgstr "Biên dịch cho bộ xử lý v850e"
+
+#: config/v850/v850.opt:86
+msgid "Compile for the v850e1 processor"
+msgstr "Biên dịch cho bộ xử lý v850e1"
+
+#: config/v850/v850.opt:90
+msgid "Set the max size of data eligible for the ZDA area"
+msgstr "Lập kích cỡ tối đa của dữ liệu thích hợp với vùng ZDA"
+
+#: config/mmix/mmix.opt:24
+msgid "For intrinsics library: pass all parameters in registers"
+msgstr "Cho thư viện các bản thực chất: gửi mọi tham số qua thanh ghi"
+
+#: config/mmix/mmix.opt:28
+msgid "Use register stack for parameters and return value"
+msgstr "Sử dụng đống thanh ghi cho tham số và giá trị trả lại"
+
+#: config/mmix/mmix.opt:32
+msgid "Use call-clobbered registers for parameters and return value"
+msgstr "Sử dụng thanh ghi bị cuộc gọi ghi đè cho tham số và giá trị trả lại"
+
+#: config/mmix/mmix.opt:37
+msgid "Use epsilon-respecting floating point compare instructions"
+msgstr "Sử dụng câu lệnh so sánh loại điểm phù động tùy theo épxilông"
+
+#: config/mmix/mmix.opt:41
+msgid "Use zero-extending memory loads, not sign-extending ones"
+msgstr "Sử dụng việc nạp vùng nhớ loại mở rộng số không, không phải việc mở rộng ký hiệu"
+
+#: config/mmix/mmix.opt:45
+msgid "Generate divide results with reminder having the same sign as the divisor (not the dividend)"
+msgstr "Tạo ra kết quả chia có phần dư với cùng một ký hiệu (-/+) với số chia (không phải với số bị chia)"
+
+#: config/mmix/mmix.opt:49
+msgid "Prepend global symbols with \":\" (for use with PREFIX)"
+msgstr "Thêm dấu hai chấm « : » vào trước ký hiệu toàn cục (để sử dụng với TIỀN_TỐ)"
+
+#: config/mmix/mmix.opt:53
+msgid "Do not provide a default start-address 0x100 of the program"
+msgstr "Đừng cung cấp một địa chỉ bắt đầu mặc định 0x100 của chương trình"
+
+#: config/mmix/mmix.opt:57
+msgid "Link to emit program in ELF format (rather than mmo)"
+msgstr "Liên kết tới chương trình xuất theo định dạng ELF (hơn là mmo)"
+
+#: config/mmix/mmix.opt:61
+msgid "Use P-mnemonics for branches statically predicted as taken"
+msgstr "Sử dụng phím gới nhớ P cho nhánh dự đoán tĩnh là không còn sẵn sàng"
+
+#: config/mmix/mmix.opt:65
+msgid "Don't use P-mnemonics for branches"
+msgstr "Đừng sử dụng phím gới nhớ P cho nhánh"
+
+#: config/mmix/mmix.opt:79
+msgid "Use addresses that allocate global registers"
+msgstr "Sử dụng địa chỉ mà cấp phát thanh ghi toàn cục"
+
+#: config/mmix/mmix.opt:83
+msgid "Do not use addresses that allocate global registers"
+msgstr "Đừng sử dụng địa chỉ mà cấp phát thanh ghi toàn cục"
+
+#: config/mmix/mmix.opt:87
+msgid "Generate a single exit point for each function"
+msgstr "Tạo ra một điểm ra khỏi riêng lẻ cho mỗi hàm"
+
+#: config/mmix/mmix.opt:91
+msgid "Do not generate a single exit point for each function"
+msgstr "Đừng sạo ra một điểm ra khỏi riêng lẻ cho mỗi hàm"
+
+#: config/mmix/mmix.opt:95
+msgid "Set start-address of the program"
+msgstr "Lập địa chỉ bắt đầu của chương trình"
+
+#: config/mmix/mmix.opt:99
+msgid "Set start-address of data"
+msgstr "Lập địa chỉ bắt đầu của dữ liệu"
+
+#: config/iq2000/iq2000.opt:23
+msgid "Specify CPU for code generation purposes"
+msgstr "Ghi rõ CPU cho mục đích tạo ra mã"
+
+#: config/iq2000/iq2000.opt:27
+msgid "Specify CPU for scheduling purposes"
+msgstr "Ghi rõ CPU cho mục đích định thời"
+
+#: config/iq2000/iq2000.opt:35
+msgid "Use GP relative sdata/sbss sections"
+msgstr "Sử dụng phần sdata/sbss tương đối với GP"
+
+#: config/iq2000/iq2000.opt:40
+msgid "No default crt0.o"
+msgstr "Không có « crt0.o » mặc định"
+
+#: config/bfin/bfin.opt:23 config/mep/mep.opt:138
+msgid "Use simulator runtime"
+msgstr "Sử dụng thời gian chạy của bộ mô phỏng"
+
+#: config/bfin/bfin.opt:31
+msgid "Omit frame pointer for leaf functions"
+msgstr "Bỏ sót hàm trỏ khung cho hàm lá"
+
+#: config/bfin/bfin.opt:35
+msgid "Program is entirely located in low 64k of memory"
+msgstr "Chương trình nằm hoàn toàn trong 64k thấp của vùng nhớ"
+
+#: config/bfin/bfin.opt:39
+msgid "Work around a hardware anomaly by adding a number of NOPs before a"
+msgstr "Khắc phục một sự dị thường phần cứng bằng cách thêm một số NOP vào trước nó"
+
+#: config/bfin/bfin.opt:44
+msgid "Avoid speculative loads to work around a hardware anomaly."
+msgstr "Tránh sự nạp suy đoán để khắc phục một sự dị thường loại phần cứng."
+
+#: config/bfin/bfin.opt:48
+msgid "Enabled ID based shared library"
+msgstr "Hiệu lực thư viện dùng chung dựa vào mã số (ID)"
+
+#: config/bfin/bfin.opt:52
+msgid "Generate code that won't be linked against any other ID shared libraries,"
+msgstr "Tạo ra mã sẽ không được liên kết đối với thư viện dùng chung mã số khác nào,"
+
+#: config/bfin/bfin.opt:65
+msgid "Avoid generating pc-relative calls; use indirection"
+msgstr "Tránh sự tạo ra cuộc gọi tương đối với PC; sử dụng hành động gián tiếp"
+
+#: config/bfin/bfin.opt:69
+msgid "Link with the fast floating-point library"
+msgstr "Liên kết với thư viện điểm phù động nhanh"
+
+#: config/bfin/bfin.opt:81
+msgid "Do stack checking using bounds in L1 scratch memory"
+msgstr "Kiểm tra đống dùng biên giới trong vùng nhớ nháp cấp 1"
+
+#: config/bfin/bfin.opt:85
+msgid "Enable multicore support"
+msgstr "Hiệu lực khả năng hỗ trợ đa lõi"
+
+#: config/bfin/bfin.opt:89
+msgid "Build for Core A"
+msgstr "Xây dựng cho Lõi A"
+
+#: config/bfin/bfin.opt:93
+msgid "Build for Core B"
+msgstr "Xây dựng cho Lõi B"
+
+#: config/bfin/bfin.opt:97
+msgid "Build for SDRAM"
+msgstr "Xây dựng cho SDRAM"
+
+#: config/bfin/bfin.opt:101
+msgid "Assume ICPLBs are enabled at runtime."
+msgstr "Giả sử là các ICPLB được hiệu lực vào lúc chạy."
+
+#: config/picochip/picochip.opt:23
+msgid "Specify which type of AE to target. This option sets the mul-type and byte-access."
+msgstr "Ghi rõ có nên đặt mục đích là loại AE nào. Tuỳ chọn này cũng lập mul-type (đa loại) và byte-access (truy cập từng byte)."
+
+#: config/picochip/picochip.opt:27
+msgid "Specify which type of multiplication to use. Can be mem, mac or none."
+msgstr "Ghi rõ có nên sử dụng cách nhân lên nào: mem, mac, hoặc none (không có)."
+
+#: config/picochip/picochip.opt:31
+msgid "Specify whether the byte access instructions should be used. Enabled by default."
+msgstr "Ghi rõ có nên sử dụng các câu lệnh truy cập từng byte hay không. (Tùy chọn này được hiệu lực theo mặc định.)"
+
+#: config/picochip/picochip.opt:35
+msgid "Enable debug output to be generated."
+msgstr "Hiệu lực chức năng tạo ra kết xuất gỡ rối."
+
+#: config/picochip/picochip.opt:39
+msgid "Allow a symbol value to be used as an immediate value in an instruction."
+msgstr "Cho phép sử dụng một giá trị ký hiệu dưới dạng một giá trị lập tức trong một câu lệnh."
+
+#: config/picochip/picochip.opt:43
+msgid "Generate warnings when inefficient code is known to be generated."
+msgstr "Tạo ra cảnh báo khi thấy là mã thiếu khả năng bị tạo ra."
+
+#: config/vxworks.opt:24
+msgid "Assume the VxWorks RTP environment"
+msgstr "Giả sử có môi trường RTP VxWorks"
+
+#: config/vxworks.opt:31
+msgid "Assume the VxWorks vThreads environment"
+msgstr "Giả sử có môi trường vThreads VxWorks"
+
+#: config/darwin.opt:23
+msgid "Generate code suitable for fast turn around debugging"
+msgstr "Tạo ra mã thích hợp với chức năng gỡ rối trả kết quả nhanh"
+
+#: config/darwin.opt:31
+msgid "The earliest MacOS X version on which this program will run"
+msgstr "Phiên bản Mac OSX cũ nhất trên đó chương trình này chạy được"
+
+#: config/darwin.opt:35
+msgid "Set sizeof(bool) to 1"
+msgstr "Lập kích cỡ biểu thức bun thành 1"
+
+#: config/darwin.opt:39
+msgid "Generate code for darwin loadable kernel extensions"
+msgstr "Tạo ra mã cho phần mở rộng hạt nhân có thể nạp được với Darwin"
+
+#: config/darwin.opt:43
+msgid "Generate code for the kernel or loadable kernel extensions"
+msgstr "Tạo ra mã cho hạt nhân hoặc phần mở rộng hạt nhân có thể nạp được"
+
+#: config/darwin.opt:47
+msgid "-iframework <dir>\tAdd <dir> to the end of the system framework include path"
+msgstr "-iframework <thư_mục>\tPhụ thêm thư mục này vào đường dẫn bao gồm khuôn khổ hệ thống"
+
+#: config/lynx.opt:23
+msgid "Support legacy multi-threading"
+msgstr "Hỗ trợ chức năng đa luồng thừa tự"
+
+#: config/lynx.opt:27
+msgid "Use shared libraries"
+msgstr "Sử dụng thư viện dùng chung"
+
+#: config/lynx.opt:31
+msgid "Support multi-threading"
+msgstr "Hỗ trợ chức năng đa luồng"
+
+#: config/score/score.opt:31
+msgid "Disable bcnz instruction"
+msgstr "Tắt câu lệnh bcnz"
+
+#: config/score/score.opt:35
+msgid "Enable unaligned load/store instruction"
+msgstr "Hiệu lực câu lệnh nạp/lưu chưa xếp hàng"
+
+#: config/score/score.opt:39
+msgid "Support SCORE 5 ISA"
+msgstr "Hỗ trợ SCORE 5 ISA"
+
+#: config/score/score.opt:43
+msgid "Support SCORE 5U ISA"
+msgstr "Hỗ trợ SCORE 5U ISA"
+
+#: config/score/score.opt:47
+msgid "Support SCORE 7 ISA"
+msgstr "Hỗ trợ SCORE 7 ISA"
+
+#: config/score/score.opt:51
+msgid "Support SCORE 7D ISA"
+msgstr "Hỗ trợ SCORE 7D ISA"
+
+#: config/score/score.opt:55
+msgid "Support SCORE 3 ISA"
+msgstr "Hỗ trợ SCORE 3 ISA"
+
+#: config/score/score.opt:59
+msgid "Support SCORE 3d ISA"
+msgstr "Hỗ trợ SCORE 3d ISA"
+
+#: config/linux.opt:24
+msgid "Use GNU libc instead of uClibc"
+msgstr "Sử dụng thư viện libc của GNU thay cho uClibc"
+
+#: config/linux.opt:28
+msgid "Use uClibc instead of GNU libc"
+msgstr "Sử dụng thư viện uClibc thay cho libc của GNU"
+
+#: config/mep/mep.opt:21
+msgid "Enable absolute difference instructions"
+msgstr "Hiệu lực câu lệnh khác biệt tuyệt đối"
+
+#: config/mep/mep.opt:25
+msgid "Enable all optional instructions"
+msgstr "Hiệu lực tất cả các câu lệnh vẫn tuỳ chọn"
+
+#: config/mep/mep.opt:29
+msgid "Enable average instructions"
+msgstr "Hiệu lực các câu lệnh tính số trung bình"
+
+#: config/mep/mep.opt:33
+msgid "Variables this size and smaller go in the based section. (default 0)"
+msgstr "Giá trị có thể lập được có kích cỡ đến số này thì nằm trong phần based (dựa vào). (mặc định là 0)"
+
+#: config/mep/mep.opt:37
+msgid "Enable bit manipulation instructions"
+msgstr "Hiệu lực các câu lệnh thao tác bit"
+
+#: config/mep/mep.opt:41
+msgid "Section to put all const variables in (tiny, near, far) (no default)"
+msgstr ""
+"Phần vào đó cần để tất cả các giá trị bất biến có thể lập được (tiny, near, far) (không có giá trị mặc định)\n"
+"tiny\t\trất nhỏ\n"
+"near\t\tgần\n"
+"far\t\txa"
+
+#: config/mep/mep.opt:45
+msgid "Enable clip instructions"
+msgstr "Hiệu lực các câu lệnh trích đoạn"
+
+#: config/mep/mep.opt:49
+msgid "Configuration name"
+msgstr "Tên cấu hình"
+
+#: config/mep/mep.opt:53
+msgid "Enable MeP Coprocessor"
+msgstr "Hiệu lực bộ đồng xử lý MeP"
+
+#: config/mep/mep.opt:57
+msgid "Enable MeP Coprocessor with 32-bit registers"
+msgstr "Hiệu lực bộ đồng xử lý MeP với thanh ghi 32-bit"
+
+#: config/mep/mep.opt:61
+msgid "Enable MeP Coprocessor with 64-bit registers"
+msgstr "Hiệu lực bộ đồng xử lý MeP với thanh ghi 64-bit"
+
+#: config/mep/mep.opt:65
+msgid "Enable IVC2 scheduling"
+msgstr "Hiệu lực chức năng định thời IVC2"
+
+#: config/mep/mep.opt:69
+msgid "Const variables default to the near section"
+msgstr "Giá trị bất biến có thể lập được thì có phần mặc định là « near » (gần)"
+
+#: config/mep/mep.opt:76
+msgid "Enable 32-bit divide instructions"
+msgstr "Hiệu lực câu lệnh chia loại 32-bit"
+
+#: config/mep/mep.opt:88
+msgid "__io vars are volatile by default"
+msgstr "Biến __io thì hay thay đổi theo mặc định"
+
+#: config/mep/mep.opt:92
+msgid "All variables default to the far section"
+msgstr "Tất cả các giá trị có thể lập được thì có phần mặc định là « far » (xa)"
+
+#: config/mep/mep.opt:96
+msgid "Enable leading zero instructions"
+msgstr "Hiệu lực câu lệnh có số không đi trước"
+
+#: config/mep/mep.opt:103
+msgid "All variables default to the near section"
+msgstr "Tất cả các giá trị có thể lập được thì có phần mặc định là « near » (gần)"
+
+#: config/mep/mep.opt:107
+msgid "Enable min/max instructions"
+msgstr "Hiệu lực câu lệnh tính số tối đa/thiểu"
+
+#: config/mep/mep.opt:111
+msgid "Enable 32-bit multiply instructions"
+msgstr "Hiệu lực câu lệnh nhân lên loại 32-bit"
+
+#: config/mep/mep.opt:115
+msgid "Disable all optional instructions"
+msgstr "Tắt tất cả các câu lệnh vẫn tuỳ chọn"
+
+#: config/mep/mep.opt:122
+msgid "Allow gcc to use the repeat/erepeat instructions"
+msgstr "Cho phép gcc sử dụng câu lệnh repeat/erepeat"
+
+#: config/mep/mep.opt:126
+msgid "All variables default to the tiny section"
+msgstr "Tất cả các giá trị có thể lập được thì có phần mặc định là « tiny » (rất nhỏ)"
+
+#: config/mep/mep.opt:130
+msgid "Enable saturation instructions"
+msgstr "Hiệu lực câu lệnh lập trạng thái bão hoà"
+
+#: config/mep/mep.opt:134
+msgid "Use sdram version of runtime"
+msgstr "Sử dụng phiên bản sdram của thời gian chạy"
+
+#: config/mep/mep.opt:142
+msgid "Use simulator runtime without vectors"
+msgstr "Sử dụng thời gian chạy của bộ mô phỏng mà không có véc-tơ"
+
+#: config/mep/mep.opt:146
+msgid "All functions default to the far section"
+msgstr "Tất cả các hàm thì có phần mặc định là « far » (xa)"
+
+#: config/mep/mep.opt:150
+msgid "Variables this size and smaller go in the tiny section. (default 4)"
+msgstr "Giá trị có thể lập được có kích cỡ đến số này thì nằm trong phần tiny (rất nhỏ). (mặc định là 4)"
+
+#: config/vms/vms.opt:21
+msgid "Malloc data into P2 space"
+msgstr "Malloc dữ liệu vào vùng P2"
+
+#: config/vms/vms.opt:25
+msgid "Set name of main routine for the debugger"
+msgstr "Lập tên của hàm chính cho chương trình gỡ rối"
+
+#: config/rx/rx.opt:26
+msgid "Store doubles in 64 bits."
+msgstr "Lưu đôi theo 64 bit."
+
+#: config/rx/rx.opt:30
+msgid "Stores doubles in 32 bits.  This is the default."
+msgstr "Lưu đôi theo 32 bit. Đây là thiết lập mặc định."
+
+#: config/rx/rx.opt:34
+msgid "Disable the use of RX FPU instructions.  "
+msgstr "Tắt khả năng sử dụng câu lệnh điểm phù động RX."
+
+#: config/rx/rx.opt:41
+msgid "Enable the use of RX FPU instructions.  This is the default."
+msgstr "Bật khả năng sử dụng câu lệnh điểm phù động RX. Đây là thiết lập mặc định."
+
+#: config/rx/rx.opt:47
+msgid "Specify the target RX cpu type."
+msgstr "Ghi rõ loại CPU RX đích."
+
+#: config/rx/rx.opt:51
+msgid "Alias for -mcpu."
+msgstr "Bí danh cho « -mcpu »."
+
+#: config/rx/rx.opt:57
+msgid "Data is stored in big-endian format."
+msgstr "Dữ liệu được lưu theo định dạng về cuối lớn."
+
+#: config/rx/rx.opt:61
+msgid "Data is stored in little-endian format.  (Default)."
+msgstr "Dữ liệu được lưu theo định dạng về cuối nhỏ. (Mặc định)."
+
+#: config/rx/rx.opt:67
+msgid "Maximum size of global and static variables which can be placed into the small data area."
+msgstr "Kích cỡ tối đa của biến loại toàn cục và tĩnh mà có thể được để vào vùng dữ liệu nhỏ."
+
+#: config/rx/rx.opt:73
+msgid "Use the simulator runtime."
+msgstr "Sử dụng thời gian chạy của bộ mô phỏng."
+
+#: config/rx/rx.opt:79
+msgid "Generate assembler output that is compatible with the Renesas AS100 assembler.  This may restrict some of the compiler's capabilities.  The default is to generate GAS compatable syntax."
+msgstr "Tạo ra kết xuất chương trình dịch mã số vẫn thích hợp với chương trình dịch mã số AS100 Renesas. Trường hợp này có thể hạn chế khả năng của bộ biên dịch. Thiết lập mặc định là tạo ra cú pháp tương thích với GAS."
+
+#: config/rx/rx.opt:85
+msgid "Enable linker relaxation."
+msgstr "Hiệu lực chức năng làm yếu bộ liên kết."
+
+#: config/rx/rx.opt:91
+msgid "Maximum size in bytes of constant values allowed as operands."
+msgstr "Kích cỡ tối đa (theo byte) của giá trị bất biến được phép làm toán hạng."
+
+#: config/rx/rx.opt:97
+msgid "Specifies the number of registers to reserve for interrupt handlers."
+msgstr "Ghi rõ số các thanh ghi cần dành riêng cho bộ quản lý tín hiệu gián đoạn."
+
+#: config/rx/rx.opt:103
+msgid "Specifies whether interrupt functions should save and restore the accumulator register."
+msgstr "Ghi rõ nếu hàm gián đoạn nên lưu và phục hồi thanh ghi tích lũy hay không."
+
+#: config/lm32/lm32.opt:24
+msgid "Enable multiply instructions"
+msgstr "Hiệu lực câu lệnh nhân lên"
+
+#: config/lm32/lm32.opt:28
+msgid "Enable divide and modulus instructions"
+msgstr "Hiệu lực câu lệnh chia và câu lệnh tạo giá trị tuyệt đối"
+
+#: config/lm32/lm32.opt:32
+msgid "Enable barrel shift instructions"
+msgstr "Hiệu lực câu lệnh « barrel shift »"
+
+#: config/lm32/lm32.opt:36
+msgid "Enable sign extend instructions"
+msgstr "Hiệu lực câu lệnh mở rộng ký hiệu"
+
+#: config/lm32/lm32.opt:40
+msgid "Enable user-defined instructions"
+msgstr "Hiệu lực câu lệnh được người dùng xác định"
+
+#: c.opt:42
+msgid "-A<question>=<answer>\tAssert the <answer> to <question>.  Putting '-' before <question> disables the <answer> to <question>"
+msgstr ""
+"-A<hỏi>=<đáp>\tKhắng định trả lời cho một câu hỏi nào đó.\n"
+"\t\tThêm dấu trừ « - » vào trước <hỏi> thì tắt <đáp> đó."
+
+#: c.opt:46
+msgid "Do not discard comments"
+msgstr "Đừng loại bỏ ghi chú"
+
+#: c.opt:50
+msgid "Do not discard comments in macro expansions"
+msgstr "Đừng loại bỏ ghi chú trong sự mở rộng vĩ lệnh"
+
+#: c.opt:54
+msgid "-D<macro>[=<val>]\tDefine a <macro> with <val> as its value.  If just <macro> is given, <val> is taken to be 1"
+msgstr "-D<vĩ_lệnh>[=<giá_trị>]\tXác định vĩ lệnh này có giá trị này. Chỉ đưa ra vĩ lệnh thì giá trị được giả sử là 1"
+
+#: c.opt:61
+msgid "-F <dir>\tAdd <dir> to the end of the main framework include path"
+msgstr "-F <thư_mục>\tPhụ thêm thư mục này vào đường dẫn bao gồm khuôn khổ chính"
+
+#: c.opt:65
+msgid "Print the name of header files as they are used"
+msgstr "In ra tên của tập tin phần đầu nào đang được sử dụng"
+
+#: c.opt:69
+msgid "-I <dir>\tAdd <dir> to the end of the main include path"
+msgstr "-I <thư_mục>\tPhụ thêm thư mục này vào đường dẫn bao gồm chính"
+
+#: c.opt:73
+msgid "Generate make dependencies"
+msgstr "Tạo ra quan hệ phụ thuộc của make"
+
+#: c.opt:77
+msgid "Generate make dependencies and compile"
+msgstr "Tạo ra quan hệ phụ thuộc của make, và biên dịch"
+
+#: c.opt:81
+msgid "-MF <file>\tWrite dependency output to the given file"
+msgstr "-MF <tệp>\tGhi vào tập tin này kết xuất về quan hệ phụ thuộc"
+
+#: c.opt:85
+msgid "Treat missing header files as generated files"
+msgstr "Thấy tập tin phần đầu còn thiếu là tập tin được tạo ra"
+
+#: c.opt:89
+msgid "Like -M but ignore system header files"
+msgstr "Giống như « -M » mà bỏ qua tập tin phần đầu của hệ thống"
+
+#: c.opt:93
+msgid "Like -MD but ignore system header files"
+msgstr "Giống như « -MD » mà bỏ qua tập tin phần đầu của hệ thống"
+
+#: c.opt:97
+msgid "Generate phony targets for all headers"
+msgstr "Tạo ra đích giả cho mọi phần đầu"
+
+#: c.opt:101
+msgid "-MQ <target>\tAdd a MAKE-quoted target"
+msgstr "-MQ <đích>\tThêm một đích được MAKE trích dẫn"
+
+#: c.opt:105
+msgid "-MT <target>\tAdd an unquoted target"
+msgstr "-MT <đích>\tThêm một đích không phải được trích dẫn"
+
+#: c.opt:109
+msgid "Do not generate #line directives"
+msgstr "Đừng tạo ra chỉ thị « #line »"
+
+#: c.opt:113
+msgid "-U<macro>\tUndefine <macro>"
+msgstr "-U<vĩ_lệnh>\tHủy xác định vĩ lệnh này"
+
+#: c.opt:117
+msgid "Warn about things that will change when compiling with an ABI-compliant compiler"
+msgstr "Cảnh báo về trường hợp sẽ thay đổi khi biên dịch bằng một bộ biên dịch tương thích với ABI"
+
+#: c.opt:124
+msgid "Warn about suspicious uses of memory addresses"
+msgstr "Cảnh báo về sử dụng địa chỉ vùng nhớ một cách đáng ngờ"
+
+#: c.opt:128
+msgid "Enable most warning messages"
+msgstr "Hiệu lực phần lớn các thông điệp cảnh báo"
+
+#: c.opt:132
+msgid "Warn whenever an Objective-C assignment is being intercepted by the garbage collector"
+msgstr "Cảnh báo khi nào một sự gán Objective-C bị chặn bởi bộ nhặt rác"
+
+#: c.opt:136
+msgid "Warn about casting functions to incompatible types"
+msgstr "Cảnh báo về gán hàm cho loại không tương thích"
+
+#: c.opt:140
+msgid "Warn when a built-in preprocessor macro is undefined or redefined"
+msgstr "Cảnh báo khi một vĩ lệnh bộ tiền xử lý dựng sẵn chưa được xác định hoặc được xác định lại"
+
+#: c.opt:144
+msgid "Warn about C constructs that are not in the common subset of C and C++"
+msgstr "Cảnh báo về cấu trúc C không nằm trong tập hợp phụ chung của C và C++"
+
+#: c.opt:148
+msgid "Warn about C++ constructs whose meaning differs between ISO C++ 1998 and ISO C++ 200x"
+msgstr "Cảnh báo về cấu trúc C++ có nghĩa khác nhau giữa ISO C++ 1998 và ISO C++ 200x"
+
+#: c.opt:152
+msgid "Warn about casts which discard qualifiers"
+msgstr "Cảnh báo về sự gán mà loại bỏ đoạn điều kiện"
+
+#: c.opt:156
+msgid "Warn about subscripts whose type is \"char\""
+msgstr "Cảnh báo về chữ in thấp có loại « char »"
+
+#: c.opt:160
+msgid "Warn about variables that might be changed by \"longjmp\" or \"vfork\""
+msgstr "Cảnh báo về biến có thể bị thay đổi bởi « longjmp » hoặc « vfork »"
+
+#: c.opt:164
+msgid "Warn about possibly nested block comments, and C++ comments spanning more than one physical line"
+msgstr "Cảnh báo về ghi chú khối có thể lồng nhau, và ghi chú C++ chiếm giữ nhiều dòng vật lý"
+
+#: c.opt:168
+msgid "Synonym for -Wcomment"
+msgstr "Từ đồng nghĩa với « -Wcomment »"
+
+#: c.opt:172
+msgid "Warn for implicit type conversions that may change a value"
+msgstr "Cảnh báo về sự chuyển đổi loại ngầm có thể thay đổi một giá trị"
+
+#: c.opt:176
+msgid "Warn for converting NULL from/to a non-pointer type"
+msgstr "Cảnh báo về chuyển đổi NULL từ/đến một loại không phải hàm trỏ"
+
+#: c.opt:180
+msgid "Warn for implicit type conversions between signed and unsigned integers"
+msgstr "Cảnh báo về sự chuyển đổi loại ngầm giữa số nguyên có dấu và không có dấu"
+
+#: c.opt:184
+msgid "Warn when all constructors and destructors are private"
+msgstr "Cảnh báo khi mọi bộ cấu trúc và bộ hủy cấu trúc đều là riêng"
+
+#: c.opt:188
+msgid "Warn when a declaration is found after a statement"
+msgstr "Cảnh báo khi phát hiện một lời tuyên bố đẳng sau một câu lệnh"
+
+#: c.opt:192
+msgid "Warn if a deprecated compiler feature, class, method, or field is used"
+msgstr "Cảnh báo nếu sử dụng một tính năng bộ biên dịch, hạng, phương pháp hay trường bị phản đối"
+
+#: c.opt:196
+msgid "Warn about compile-time integer division by zero"
+msgstr "Cảnh báo về số nguyên chia cho số không vào lúc biên dịch"
+
+#: c.opt:200
+msgid "Warn about violations of Effective C++ style rules"
+msgstr "Cảnh báo về sự vượt quá quy tắc Effective C++"
+
+#: c.opt:204
+msgid "Warn about an empty body in an if or else statement"
+msgstr "Cảnh báo về thân trống trong một câu lệnh « if » (nếu) hay « else » (không thì)"
+
+#: c.opt:208
+msgid "Warn about stray tokens after #elif and #endif"
+msgstr "Cảnh báo về hiệu bài thừa đẳng sau « #elif » và « #endif »"
+
+#: c.opt:212
+msgid "Warn about comparison of different enum types"
+msgstr "Cảnh báo về sự so sánh các loại đếm (enum) khác nhau"
+
+#: c.opt:220
+msgid "This switch is deprecated; use -Werror=implicit-function-declaration instead"
+msgstr "Cái chuyển này bị phản đối: hãy thay thế bằng « -Werror=implicit-function-declaration »"
+
+#: c.opt:224
+msgid "Warn if testing floating point numbers for equality"
+msgstr "Cảnh báo nếu kiểm tra đẳng thức của con số điểm phù động"
+
+#: c.opt:228
+msgid "Warn about printf/scanf/strftime/strfmon format string anomalies"
+msgstr "Cảnh báo khi phát hiện sự dị thường về chuỗi định dạng printf/scanf/strftime/strfmon"
+
+#: c.opt:232
+msgid "Warn if passing too many arguments to a function for its format string"
+msgstr "Cảnh báo nếu gửi cho hàm quá nhiều đối số đối với chuỗi định dạng của nó"
+
+#: c.opt:236
+msgid "Warn about format strings that are not literals"
+msgstr "Cảnh báo về chuỗi định dạng không phải có nghĩa chữ"
+
+#: c.opt:240
+msgid "Warn about format strings that contain NUL bytes"
+msgstr "Cảnh báo về chuỗi định dạng chứa NUL byte"
+
+#: c.opt:244
+msgid "Warn about possible security problems with format functions"
+msgstr "Cảnh báo về hàm định dạng có thể gây ra vấn đề bảo mật"
+
+#: c.opt:248
+msgid "Warn about strftime formats yielding 2-digit years"
+msgstr "Cảnh báo về định dạng strftime xuất năm chỉ có hai chữ số"
+
+#: c.opt:252
+msgid "Warn about zero-length formats"
+msgstr "Cảnh báo về định dạng có chiều dài số không"
+
+#: c.opt:259
+msgid "Warn whenever type qualifiers are ignored."
+msgstr "Cảnh báo khi nào đoạn điều kiện loại bị bỏ qua."
+
+#: c.opt:263
+msgid "Warn about variables which are initialized to themselves"
+msgstr "Cảnh báo về biến bị tự sơ khởi"
+
+#: c.opt:270
+msgid "Warn about implicit function declarations"
+msgstr "Cảnh báo về lời tuyên bố hàm ngầm"
+
+#: c.opt:274
+msgid "Warn when a declaration does not specify a type"
+msgstr "Cảnh báo khi một lời tuyên bố không ghi rõ loại"
+
+#: c.opt:281
+msgid "Warn when there is a cast to a pointer from an integer of a different size"
+msgstr "Cảnh báo khi có một sự gán cho một hàm trỏ từ một số nguyên có kích cỡ khác"
+
+#: c.opt:285
+msgid "Warn about invalid uses of the \"offsetof\" macro"
+msgstr "Cảnh báo khi sai sử dụng vĩ lệnh « offsetof »"
+
+#: c.opt:289
+msgid "Warn about PCH files that are found but not used"
+msgstr "Cảnh báo về tập tin PCH được tìm thấy mà không phải được sử dụng"
+
+#: c.opt:293
+msgid "Warn when a jump misses a variable initialization"
+msgstr "Cảnh báo khi một bước nhảy còn thiếu sự sơ khởi biến"
+
+#: c.opt:297
+msgid "Warn when a logical operator is suspiciously always evaluating to true or false"
+msgstr "Cảnh báo khi một toán tử hợp lý cứ ước lượng là đúng hoặc là sai một cách đáng ngờ"
+
+#: c.opt:301
+msgid "Do not warn about using \"long long\" when -pedantic"
+msgstr "Bật « -pedantic » thì đừng cảnh báo về sử dụng « long long »"
+
+#: c.opt:305
+msgid "Warn about suspicious declarations of \"main\""
+msgstr "Cảnh báo về lời tuyên bố « main » đáng ngờ"
+
+#: c.opt:309
+msgid "Warn about possibly missing braces around initializers"
+msgstr "Cảnh báo về đoạn sơ khởi có thể thiếu dấu ngoặc móc"
+
+#: c.opt:313
+msgid "Warn about global functions without previous declarations"
+msgstr "Cảnh báo về hàm toàn cục không có lời tuyên bố trước"
+
+#: c.opt:317
+msgid "Warn about missing fields in struct initializers"
+msgstr "Cảnh báo về đoạn sơ khởi cấu trúc thiếu trường"
+
+#: c.opt:321
+msgid "Warn about functions which might be candidates for format attributes"
+msgstr "Cảnh báo về hàm có thể yêu cầu thuộc tính định dạng"
+
+#: c.opt:325
+msgid "Warn about user-specified include directories that do not exist"
+msgstr "Cảnh báo khi người dùng xác định một thư mục không tồn tại"
+
+#: c.opt:329
+msgid "Warn about function parameters declared without a type specifier in K&R-style functions"
+msgstr "Cảnh báo về tham số hàm được tuyên bố mà không ghi rõ loại, trong hàm kiểu K&R"
+
+#: c.opt:333
+msgid "Warn about global functions without prototypes"
+msgstr "Cảnh báo về hàm toàn cục mà không có nguyên mẫu"
+
+#: c.opt:337
+msgid "Warn about use of multi-character character constants"
+msgstr "Cảnh báo về sử dụng hằng số ký tự đa ký tự"
+
+#: c.opt:341
+msgid "Warn about \"extern\" declarations not at file scope"
+msgstr "Cảnh báo về lời tuyên bố « extern » (bên ngoài) ở ngoại phạm vi tập tin"
+
+#: c.opt:345
+msgid "Warn when non-templatized friend functions are declared within a template"
+msgstr "Cảnh báo khi hàm bạn không làm mẫu được tuyên bố bên trong một mẫu"
+
+#: c.opt:349
+msgid "Warn about non-virtual destructors"
+msgstr "Cảnh báo về bộ hủy cấu trúc không phải ảo"
+
+#: c.opt:353
+msgid "Warn about NULL being passed to argument slots marked as requiring non-NULL"
+msgstr "Cảnh báo khi NULL được gửi cho khe đối số đánh dấu là yêu cầu giá trị không phải NULL"
+
+#: c.opt:357
+msgid "-Wnormalized=<id|nfc|nfkc>\tWarn about non-normalised Unicode strings"
+msgstr "-Wnormalized=<id|nfc|nfkc>\tCảnh báo về chuỗi Unicode không phải chuẩn hoá"
+
+#: c.opt:361
+msgid "Warn if a C-style cast is used in a program"
+msgstr "Cảnh báo nếu một sự gán kiểu C được sử dụng trong một chương trình"
+
+#: c.opt:365
+msgid "Warn for obsolescent usage in a declaration"
+msgstr "Cảnh báo về lời tuyên bố kiểu cũ"
+
+#: c.opt:369
+msgid "Warn if an old-style parameter definition is used"
+msgstr "Cảnh báo về lời xác định tham số kiểu cũ"
+
+#: c.opt:373
+msgid "Warn if a string is longer than the maximum portable length specified by the standard"
+msgstr "Cảnh báo về chuỗi dài hơn chiều dài di động tối đa được tiêu chuẩn ghi rõ"
+
+#: c.opt:377
+msgid "Warn about overloaded virtual function names"
+msgstr "Cảnh báo về tên hàm ảo quá tải"
+
+#: c.opt:381
+msgid "Warn about overriding initializers without side effects"
+msgstr "Cảnh báo về ghi đẻ lên đoạn sơ khởi mà không có hiệu ứng khác"
+
+#: c.opt:385
+msgid "Warn about packed bit-fields whose offset changed in GCC 4.4"
+msgstr "Cảnh báo về trường bit đóng gói có hiệu số bị thay đổi trong GCC 4.4"
+
+#: c.opt:389
+msgid "Warn about possibly missing parentheses"
+msgstr "Cảnh báo về dấu ngoặc đơn có thể bị thiếu"
+
+#: c.opt:393
+msgid "Warn when converting the type of pointers to member functions"
+msgstr "Cảnh báo khi chuyển đổi loại hàm trỏ sang hàm bộ phận"
+
+#: c.opt:397
+msgid "Warn about function pointer arithmetic"
+msgstr "Cảnh báo về số học trỏ đến hàm"
+
+#: c.opt:401
+msgid "Warn when a pointer is cast to an integer of a different size"
+msgstr ""
+
+#: c.opt:405
+msgid "Warn about misuses of pragmas"
+msgstr ""
+
+#: c.opt:409
+msgid "Warn if inherited methods are unimplemented"
+msgstr ""
+
+#: c.opt:413
+msgid "Warn about multiple declarations of the same object"
+msgstr ""
+
+#: c.opt:417
+msgid "Warn when the compiler reorders code"
+msgstr ""
+
+#: c.opt:421
+msgid "Warn whenever a function's return type defaults to \"int\" (C), or about inconsistent return types (C++)"
+msgstr ""
+
+#: c.opt:425
+msgid "Warn if a selector has multiple methods"
+msgstr ""
+
+#: c.opt:429
+msgid "Warn about possible violations of sequence point rules"
+msgstr ""
+
+#: c.opt:433
+msgid "Warn about signed-unsigned comparisons"
+msgstr ""
+
+#: c.opt:437
+msgid "Warn when overload promotes from unsigned to signed"
+msgstr ""
+
+#: c.opt:441
+msgid "Warn about uncasted NULL used as sentinel"
+msgstr ""
+
+#: c.opt:445
+msgid "Warn about unprototyped function declarations"
+msgstr ""
+
+#: c.opt:449
+msgid "Warn if type signatures of candidate methods do not match exactly"
+msgstr ""
+
+#: c.opt:453
+msgid "Warn when __sync_fetch_and_nand and __sync_nand_and_fetch built-in functions are used"
+msgstr ""
+
+#: c.opt:457
+msgid "Deprecated.  This switch has no effect"
+msgstr ""
+
+#: c.opt:465
+msgid "Warn about features not present in traditional C"
+msgstr ""
+
+#: c.opt:469
+msgid "Warn of prototypes causing type conversions different from what would happen in the absence of prototype"
+msgstr ""
+
+#: c.opt:473
+msgid "Warn if trigraphs are encountered that might affect the meaning of the program"
+msgstr ""
+
+#: c.opt:477
+msgid "Warn about @selector()s without previously declared methods"
+msgstr ""
+
+#: c.opt:481
+msgid "Warn if an undefined macro is used in an #if directive"
+msgstr ""
+
+#: c.opt:485
+msgid "Warn about unrecognized pragmas"
+msgstr ""
+
+#: c.opt:489
+msgid "Warn about unsuffixed float constants"
+msgstr ""
+
+#: c.opt:493
+msgid "Warn about macros defined in the main file that are not used"
+msgstr ""
+
+#: c.opt:497
+msgid "Warn if a caller of a function, marked with attribute warn_unused_result, does not use its return value"
+msgstr ""
+
+#: c.opt:501
+msgid "Do not warn about using variadic macros when -pedantic"
+msgstr ""
+
+#: c.opt:505
+msgid "Warn if a variable length array is used"
+msgstr ""
+
+#: c.opt:509
+msgid "Warn when a register variable is declared volatile"
+msgstr ""
+
+#: c.opt:513
+msgid "In C++, nonzero means warn about deprecated conversion from string literals to `char *'.  In C, similar warning, except that the conversion is of course not deprecated by the ISO C standard."
+msgstr ""
+
+#: c.opt:517
+msgid "Warn when a pointer differs in signedness in an assignment"
+msgstr ""
+
+#: c.opt:521
+msgid "A synonym for -std=c89 (for C) or -std=c++98 (for C++)"
+msgstr ""
+
+#: c.opt:529
+msgid "Enforce class member access control semantics"
+msgstr ""
+
+#: c.opt:536
+msgid "Change when template instances are emitted"
+msgstr ""
+
+#: c.opt:540
+msgid "Recognize the \"asm\" keyword"
+msgstr ""
+
+#: c.opt:544
+msgid "Recognize built-in functions"
+msgstr ""
+
+#: c.opt:551
+msgid "Check the return value of new"
+msgstr ""
+
+#: c.opt:555
+msgid "Allow the arguments of the '?' operator to have different types"
+msgstr ""
+
+#: c.opt:559
+msgid "Reduce the size of object files"
+msgstr ""
+
+#: c.opt:563
+msgid "-fconst-string-class=<name>\tUse class <name> for constant strings"
+msgstr ""
+
+#: c.opt:567
+msgid "-fno-deduce-init-list\tdisable deduction of std::initializer_list for a template type parameter from a brace-enclosed initializer-list"
+msgstr ""
+
+#: c.opt:571
+msgid "Inline member functions by default"
+msgstr ""
+
+#: c.opt:575
+msgid "Preprocess directives only."
+msgstr ""
+
+#: c.opt:579
+msgid "Permit '$' as an identifier character"
+msgstr ""
+
+#: c.opt:586
+msgid "Generate code to check exception specifications"
+msgstr ""
+
+#: c.opt:593
+msgid "-fexec-charset=<cset>\tConvert all strings and character constants to character set <cset>"
+msgstr ""
+
+#: c.opt:597
+msgid "Permit universal character names (\\u and \\U) in identifiers"
+msgstr ""
+
+#: c.opt:601
+msgid "-finput-charset=<cset>\tSpecify the default character set for source files"
+msgstr ""
+
+#: c.opt:609
+msgid "Scope of for-init-statement variables is local to the loop"
+msgstr ""
+
+#: c.opt:613
+msgid "Do not assume that standard C libraries and \"main\" exist"
+msgstr ""
+
+#: c.opt:617
+msgid "Recognize GNU-defined keywords"
+msgstr ""
+
+#: c.opt:621
+msgid "Generate code for GNU runtime environment"
+msgstr ""
+
+#: c.opt:625
+msgid "Use traditional GNU semantics for inline functions"
+msgstr ""
+
+#: c.opt:638
+msgid "Assume normal C execution environment"
+msgstr ""
+
+#: c.opt:642
+msgid "Enable support for huge objects"
+msgstr ""
+
+#: c.opt:646
+msgid "Export functions even if they can be inlined"
+msgstr ""
+
+#: c.opt:650
+msgid "Emit implicit instantiations of inline templates"
+msgstr ""
+
+#: c.opt:654
+msgid "Emit implicit instantiations of templates"
+msgstr ""
+
+#: c.opt:658
+msgid "Inject friend functions into enclosing namespace"
+msgstr ""
+
+#: c.opt:665
+msgid "Allow implicit conversions between vectors with differing numbers of subparts and/or differing element types."
+msgstr ""
+
+#: c.opt:669
+msgid "Don't warn about uses of Microsoft extensions"
+msgstr ""
+
+#: c.opt:679
+msgid "Generate code for NeXT (Apple Mac OS X) runtime environment"
+msgstr ""
+
+#: c.opt:683
+msgid "Assume that receivers of Objective-C messages may be nil"
+msgstr ""
+
+#: c.opt:695
+msgid "Generate special Objective-C methods to initialize/destroy non-POD C++ ivars, if needed"
+msgstr ""
+
+#: c.opt:699
+msgid "Allow fast jumps to the message dispatcher"
+msgstr ""
+
+#: c.opt:705
+msgid "Enable Objective-C exception and synchronization syntax"
+msgstr ""
+
+#: c.opt:709
+msgid "Enable garbage collection (GC) in Objective-C/Objective-C++ programs"
+msgstr ""
+
+#: c.opt:714
+msgid "Enable Objective-C setjmp exception handling runtime"
+msgstr ""
+
+#: c.opt:718
+msgid "Enable OpenMP (implies -frecursive in Fortran)"
+msgstr ""
+
+#: c.opt:722
+msgid "Recognize C++ keywords like \"compl\" and \"xor\""
+msgstr ""
+
+#: c.opt:726
+msgid "Enable optional diagnostics"
+msgstr ""
+
+#: c.opt:733
+msgid "Look for and use PCH files even when preprocessing"
+msgstr ""
+
+#: c.opt:737
+msgid "Downgrade conformance errors to warnings"
+msgstr ""
+
+#: c.opt:741
+msgid "Treat the input file as already preprocessed"
+msgstr ""
+
+#: c.opt:745
+msgid "-fno-pretty-templates Do not pretty-print template specializations as the template signature followed by the arguments"
+msgstr ""
+
+#: c.opt:749
+msgid "Used in Fix-and-Continue mode to indicate that object files may be swapped in at runtime"
+msgstr ""
+
+#: c.opt:753
+msgid "Enable automatic template instantiation"
+msgstr ""
+
+#: c.opt:757
+msgid "Generate run time type descriptor information"
+msgstr ""
+
+#: c.opt:761
+msgid "Use the same size for double as for float"
+msgstr ""
+
+#: c.opt:765
+msgid "Use the narrowest integer type possible for enumeration types"
+msgstr ""
+
+#: c.opt:769
+msgid "Force the underlying type for \"wchar_t\" to be \"unsigned short\""
+msgstr ""
+
+#: c.opt:773
+msgid "When \"signed\" or \"unsigned\" is not given make the bitfield signed"
+msgstr ""
+
+#: c.opt:777
+msgid "Make \"char\" signed by default"
+msgstr ""
+
+#: c.opt:784
+msgid "Display statistics accumulated during compilation"
+msgstr ""
+
+#: c.opt:791
+msgid "-ftabstop=<number>\tDistance between tab stops for column reporting"
+msgstr ""
+
+#: c.opt:798
+msgid "-ftemplate-depth=<number>\tSpecify maximum template instantiation depth"
+msgstr ""
+
+#: c.opt:805
+msgid "-fno-threadsafe-statics\tDo not generate thread-safe code for initializing local statics"
+msgstr ""
+
+#: c.opt:809
+msgid "When \"signed\" or \"unsigned\" is not given make the bitfield unsigned"
+msgstr ""
+
+#: c.opt:813
+msgid "Make \"char\" unsigned by default"
+msgstr ""
+
+#: c.opt:817
+msgid "Use __cxa_atexit to register destructors"
+msgstr ""
+
+#: c.opt:821
+msgid "Use __cxa_get_exception_ptr in exception handling"
+msgstr ""
+
+#: c.opt:825
+msgid "Marks all inlined methods as having hidden visibility"
+msgstr ""
+
+#: c.opt:829
+msgid "Changes visibility to match Microsoft Visual Studio by default"
+msgstr ""
+
+#: c.opt:833
+msgid "Discard unused virtual functions"
+msgstr ""
+
+#: c.opt:837
+msgid "Implement vtables using thunks"
+msgstr ""
+
+#: c.opt:841
+msgid "Emit common-like symbols as weak symbols"
+msgstr ""
+
+#: c.opt:845
+msgid "-fwide-exec-charset=<cset>\tConvert all wide strings and character constants to character set <cset>"
+msgstr ""
+
+#: c.opt:849
+msgid "Generate a #line directive pointing at the current working directory"
+msgstr ""
+
+#: c.opt:853
+msgid "Emit cross referencing information"
+msgstr ""
+
+#: c.opt:857
+msgid "Generate lazy class lookup (via objc_getClass()) for use in Zero-Link mode"
+msgstr ""
+
+#: c.opt:861
+msgid "Dump declarations to a .decl file"
+msgstr ""
+
+#: c.opt:865
+msgid "-femit-struct-debug-baseonly\tAggressive reduced debug info for structs"
+msgstr ""
+
+#: c.opt:869
+msgid "-femit-struct-debug-reduced\tConservative reduced debug info for structs"
+msgstr ""
+
+#: c.opt:873
+msgid "-femit-struct-debug-detailed=<spec-list>\tDetailed reduced debug info for structs"
+msgstr ""
+
+#: c.opt:877
+msgid "-idirafter <dir>\tAdd <dir> to the end of the system include path"
+msgstr ""
+
+#: c.opt:881
+msgid "-imacros <file>\tAccept definition of macros in <file>"
+msgstr ""
+
+#: c.opt:885
+msgid "-imultilib <dir>\tSet <dir> to be the multilib include subdirectory"
+msgstr ""
+
+#: c.opt:889
+msgid "-include <file>\tInclude the contents of <file> before other files"
+msgstr ""
+
+#: c.opt:893
+msgid "-iprefix <path>\tSpecify <path> as a prefix for next two options"
+msgstr ""
+
+#: c.opt:897
+msgid "-isysroot <dir>\tSet <dir> to be the system root directory"
+msgstr ""
+
+#: c.opt:901
+msgid "-isystem <dir>\tAdd <dir> to the start of the system include path"
+msgstr ""
+
+#: c.opt:905
+msgid "-iquote <dir>\tAdd <dir> to the end of the quote include path"
+msgstr ""
+
+#: c.opt:909
+msgid "-iwithprefix <dir>\tAdd <dir> to the end of the system include path"
+msgstr ""
+
+#: c.opt:913
+msgid "-iwithprefixbefore <dir>\tAdd <dir> to the end of the main include path"
+msgstr ""
+
+#: c.opt:923
+msgid "Do not search standard system include directories (those specified with -isystem will still be used)"
+msgstr ""
+
+#: c.opt:927
+msgid "Do not search standard system include directories for C++"
+msgstr ""
+
+#: c.opt:943
+msgid "Generate C header of platform-specific features"
+msgstr ""
+
+#: c.opt:947
+msgid "Print a checksum of the executable for PCH validity checking, and stop"
+msgstr ""
+
+#: c.opt:951
+msgid "Remap file names when including files"
+msgstr ""
+
+#: c.opt:955
+msgid "Conform to the ISO 1998 C++ standard"
+msgstr ""
+
+#: c.opt:959
+msgid "Conform to the ISO 1998 C++ standard, with extensions that are likely to"
+msgstr ""
+
+#: c.opt:966 c.opt:970 c.opt:1009
+msgid "Conform to the ISO 1990 C standard"
+msgstr ""
+
+#: c.opt:974 c.opt:1017
+msgid "Conform to the ISO 1999 C standard"
+msgstr ""
+
+#: c.opt:978
+msgid "Deprecated in favor of -std=c99"
+msgstr ""
+
+#: c.opt:982
+msgid "Conform to the ISO 1998 C++ standard with GNU extensions"
+msgstr ""
+
+#: c.opt:986
+msgid "Conform to the ISO 1998 C++ standard, with GNU extensions and"
+msgstr ""
+
+#: c.opt:993 c.opt:997
+msgid "Conform to the ISO 1990 C standard with GNU extensions"
+msgstr ""
+
+#: c.opt:1001
+msgid "Conform to the ISO 1999 C standard with GNU extensions"
+msgstr ""
+
+#: c.opt:1005
+msgid "Deprecated in favor of -std=gnu99"
+msgstr ""
+
+#: c.opt:1013
+msgid "Conform to the ISO 1990 C standard as amended in 1994"
+msgstr ""
+
+#: c.opt:1021
+msgid "Deprecated in favor of -std=iso9899:1999"
+msgstr ""
+
+#: c.opt:1025
+msgid "Enable traditional preprocessing"
+msgstr ""
+
+#: c.opt:1029
+msgid "-trigraphs\tSupport ISO C trigraphs"
+msgstr ""
+
+#: c.opt:1033
+msgid "Do not predefine system-specific and GCC-specific macros"
+msgstr ""
+
+#: c.opt:1037
+msgid "Enable verbose output"
+msgstr ""
+
+#: lto/lang.opt:29
+msgid "Run the link-time optimizer in local transformation (LTRANS) mode."
+msgstr ""
+
+#: lto/lang.opt:33
+msgid "Specify a file to which a list of files output by LTRANS is written."
+msgstr ""
+
+#: lto/lang.opt:37
+msgid "Run the link-time optimizer in whole program analysis (WPA) mode."
+msgstr ""
+
+#: lto/lang.opt:41
+msgid "The resolution file"
+msgstr ""
+
+#: common.opt:28
+msgid "Display this information"
+msgstr ""
+
+#: common.opt:32
+msgid "--help=<class>\tDisplay descriptions of a specific class of options.  <class> is one or more of optimizers, target, warnings, undocumented, params"
+msgstr ""
+
+#: common.opt:36
+msgid "Alias for --help=target"
+msgstr ""
+
+#: common.opt:55
+msgid "--param <param>=<value>\tSet parameter <param> to value.  See below for a complete list of parameters"
+msgstr ""
+
+#: common.opt:62
+msgid "-G<number>\tPut global and static data smaller than <number> bytes into a special section (on some targets)"
+msgstr ""
+
+#: common.opt:66
+msgid "-O<number>\tSet optimization level to <number>"
+msgstr ""
+
+#: common.opt:70
+msgid "Optimize for space rather than speed"
+msgstr ""
+
+#: common.opt:74
+msgid "This switch is deprecated; use -Wextra instead"
+msgstr ""
+
+#: common.opt:78
+msgid "Warn about returning structures, unions or arrays"
+msgstr ""
+
+#: common.opt:82
+msgid "Warn if an array is accessed out of bounds"
+msgstr ""
+
+#: common.opt:86
+msgid "Warn about inappropriate attribute usage"
+msgstr ""
+
+#: common.opt:90
+msgid "Warn about pointer casts which increase alignment"
+msgstr ""
+
+#: common.opt:94
+msgid "Warn about uses of __attribute__((deprecated)) declarations"
+msgstr ""
+
+#: common.opt:98
+msgid "Warn when an optimization pass is disabled"
+msgstr ""
+
+#: common.opt:102
+msgid "Treat all warnings as errors"
+msgstr ""
+
+#: common.opt:106
+msgid "Treat specified warning as error"
+msgstr ""
+
+#: common.opt:110
+msgid "Print extra (possibly unwanted) warnings"
+msgstr ""
+
+#: common.opt:114
+msgid "Exit on the first error occurred"
+msgstr ""
+
+#: common.opt:118
+msgid "-Wframe-larger-than=<number>\tWarn if a function's stack frame requires more than <number> bytes"
+msgstr ""
+
+#: common.opt:122
+msgid "Warn when an inlined function cannot be inlined"
+msgstr ""
+
+#: common.opt:129
+msgid "-Wlarger-than=<number>\tWarn if an object is larger than <number> bytes"
+msgstr ""
+
+#: common.opt:133
+msgid "Warn if the loop cannot be optimized due to nontrivial assumptions."
+msgstr ""
+
+#: common.opt:137
+msgid "Warn about functions which might be candidates for __attribute__((noreturn))"
+msgstr ""
+
+#: common.opt:141
+msgid "Warn about constructs not instrumented by -fmudflap"
+msgstr ""
+
+#: common.opt:145
+msgid "Warn about overflow in arithmetic expressions"
+msgstr ""
+
+#: common.opt:149
+msgid "Warn when the packed attribute has no effect on struct layout"
+msgstr ""
+
+#: common.opt:153
+msgid "Warn when padding is required to align structure members"
+msgstr ""
+
+#: common.opt:157
+msgid "Warn when one local variable shadows another"
+msgstr ""
+
+#: common.opt:161
+msgid "Warn when not issuing stack smashing protection for some reason"
+msgstr ""
+
+#: common.opt:165 common.opt:169
+msgid "Warn about code which might break strict aliasing rules"
+msgstr ""
+
+#: common.opt:173 common.opt:177
+msgid "Warn about optimizations that assume that signed overflow is undefined"
+msgstr ""
+
+#: common.opt:181
+msgid "Warn about enumerated switches, with no default, missing a case"
+msgstr ""
+
+#: common.opt:185
+msgid "Warn about enumerated switches missing a \"default:\" statement"
+msgstr ""
+
+#: common.opt:189
+msgid "Warn about all enumerated switches missing a specific case"
+msgstr ""
+
+#: common.opt:193
+msgid "Do not suppress warnings from system headers"
+msgstr ""
+
+#: common.opt:197
+msgid "Warn if a comparison is always true or always false due to the limited range of the data type"
+msgstr ""
+
+#: common.opt:201
+msgid "Warn about uninitialized automatic variables"
+msgstr ""
+
+#: common.opt:205
+msgid "Does nothing. Preserved for backward compatibility."
+msgstr ""
+
+#: common.opt:209
+msgid "Enable all -Wunused- warnings"
+msgstr ""
+
+#: common.opt:213
+msgid "Warn when a function is unused"
+msgstr ""
+
+#: common.opt:217
+msgid "Warn when a label is unused"
+msgstr ""
+
+#: common.opt:221
+msgid "Warn when a function parameter is unused"
+msgstr ""
+
+#: common.opt:225
+msgid "Warn when an expression value is unused"
+msgstr ""
+
+#: common.opt:229
+msgid "Warn when a variable is unused"
+msgstr ""
+
+#: common.opt:233
+msgid "Warn instead of error in case profiles in -fprofile-use do not match"
+msgstr ""
+
+#: common.opt:237
+msgid "-aux-info <file>\tEmit declaration information into <file>"
+msgstr ""
+
+#: common.opt:250
+msgid "-d<letters>\tEnable dumps from specific passes of the compiler"
+msgstr ""
+
+#: common.opt:254
+msgid "-dumpbase <file>\tSet the file basename to be used for dumps"
+msgstr ""
+
+#: common.opt:258
+msgid "-dumpdir <dir>\tSet the directory name to be used for dumps"
+msgstr ""
+
+#: common.opt:284
+msgid "Align the start of functions"
+msgstr ""
+
+#: common.opt:291
+msgid "Align labels which are only reached by jumping"
+msgstr ""
+
+#: common.opt:298
+msgid "Align all labels"
+msgstr ""
+
+#: common.opt:305
+msgid "Align the start of loops"
+msgstr ""
+
+#: common.opt:320
+msgid "Specify that arguments may alias each other and globals"
+msgstr ""
+
+#: common.opt:324
+msgid "Assume arguments may alias globals but not each other"
+msgstr ""
+
+#: common.opt:328
+msgid "Assume arguments alias neither each other nor globals"
+msgstr ""
+
+#: common.opt:332
+msgid "Assume arguments alias no other storage"
+msgstr ""
+
+#: common.opt:336
+msgid "Generate unwind tables that are exact at each instruction boundary"
+msgstr ""
+
+#: common.opt:340
+msgid "Generate auto-inc/dec instructions"
+msgstr ""
+
+#: common.opt:348
+msgid "Generate code to check bounds before indexing arrays"
+msgstr ""
+
+#: common.opt:352
+msgid "Replace add, compare, branch with branch on count register"
+msgstr ""
+
+#: common.opt:356
+msgid "Use profiling information for branch probabilities"
+msgstr ""
+
+#: common.opt:360
+msgid "Perform branch target load optimization before prologue / epilogue threading"
+msgstr ""
+
+#: common.opt:364
+msgid "Perform branch target load optimization after prologue / epilogue threading"
+msgstr ""
+
+#: common.opt:368
+msgid "Restrict target load migration not to re-use registers in any basic block"
+msgstr ""
+
+#: common.opt:372
+msgid "-fcall-saved-<register>\tMark <register> as being preserved across functions"
+msgstr ""
+
+#: common.opt:376
+msgid "-fcall-used-<register>\tMark <register> as being corrupted by function calls"
+msgstr ""
+
+#: common.opt:383
+msgid "Save registers around function calls"
+msgstr ""
+
+#: common.opt:387
+msgid "Compare the results of several data dependence analyzers."
+msgstr ""
+
+#: common.opt:391
+msgid "Do not put uninitialized globals in the common section"
+msgstr ""
+
+#: common.opt:395
+msgid "-fcompare-debug[=<opts>]\tCompile with and without e.g. -gtoggle, and compare the final-insns dump"
+msgstr ""
+
+#: common.opt:399
+msgid "Run only the second compilation of -fcompare-debug"
+msgstr ""
+
+#: common.opt:403
+msgid "Do not perform optimizations increasing noticeably stack usage"
+msgstr ""
+
+#: common.opt:407
+msgid "Perform a register copy-propagation optimization pass"
+msgstr ""
+
+#: common.opt:411
+msgid "Perform cross-jumping optimization"
+msgstr ""
+
+#: common.opt:415
+msgid "When running CSE, follow jumps to their targets"
+msgstr ""
+
+#: common.opt:419 common.opt:548 common.opt:769 common.opt:1011
+#: common.opt:1047 common.opt:1132 common.opt:1191 common.opt:1250
+#: common.opt:1266 common.opt:1338
+msgid "Does nothing.  Preserved for backward compatibility."
+msgstr ""
+
+#: common.opt:423
+msgid "Omit range reduction step when performing complex division"
+msgstr ""
+
+#: common.opt:427
+msgid "Complex multiplication and division follow Fortran rules"
+msgstr ""
+
+#: common.opt:431
+msgid "Place data items into their own section"
+msgstr ""
+
+#: common.opt:435
+msgid "List all available debugging counters with their limits and counts."
+msgstr ""
+
+#: common.opt:439
+msgid "-fdbg-cnt=<counter>:<limit>[,<counter>:<limit>,...]\tSet the debug counter limit.   "
+msgstr ""
+
+#: common.opt:443
+msgid "Map one directory name to another in debug information"
+msgstr ""
+
+#: common.opt:449
+msgid "Defer popping functions args from stack until later"
+msgstr ""
+
+#: common.opt:453
+msgid "Attempt to fill delay slots of branch instructions"
+msgstr ""
+
+#: common.opt:457
+msgid "Delete useless null pointer checks"
+msgstr ""
+
+#: common.opt:461
+msgid "-fdiagnostics-show-location=[once|every-line]\tHow often to emit source location at the beginning of line-wrapped diagnostics"
+msgstr ""
+
+#: common.opt:465
+msgid "Amend appropriate diagnostic messages with the command line option that controls them"
+msgstr ""
+
+#: common.opt:469
+msgid "-fdump-<type>\tDump various compiler internals to a file"
+msgstr ""
+
+#: common.opt:473
+msgid "-fdump-final-insns=filename\tDump to filename the insns at the end of translation"
+msgstr ""
+
+#: common.opt:477
+msgid "Suppress output of addresses in debugging dumps"
+msgstr ""
+
+#: common.opt:481
+msgid "Suppress output of instruction numbers, line number notes and addresses in debugging dumps"
+msgstr ""
+
+#: common.opt:485
+msgid "Suppress output of previous and next insn numbers in debugging dumps"
+msgstr ""
+
+#: common.opt:489
+msgid "Enable CFI tables via GAS assembler directives."
+msgstr ""
+
+#: common.opt:493
+msgid "Perform early inlining"
+msgstr ""
+
+#: common.opt:497
+msgid "Perform DWARF2 duplicate elimination"
+msgstr ""
+
+#: common.opt:501
+msgid "Perform interprocedural reduction of aggregates"
+msgstr ""
+
+#: common.opt:505 common.opt:509
+msgid "Perform unused type elimination in debug info"
+msgstr ""
+
+#: common.opt:513
+msgid "Do not suppress C++ class debug information."
+msgstr ""
+
+#: common.opt:517
+msgid "Generate debug information to support Identical Code Folding (ICF)"
+msgstr ""
+
+#: common.opt:521
+msgid "Enable exception handling"
+msgstr ""
+
+#: common.opt:525
+msgid "Perform a number of minor, expensive optimizations"
+msgstr ""
+
+#: common.opt:529
+msgid "-fexcess-precision=[fast|standard]\tSpecify handling of excess floating-point precision"
+msgstr ""
+
+#: common.opt:536
+msgid "Assume no NaNs or infinities are generated"
+msgstr ""
+
+#: common.opt:540
+msgid "-ffixed-<register>\tMark <register> as being unavailable to the compiler"
+msgstr ""
+
+#: common.opt:544
+msgid "Don't allocate floats and doubles in extended-precision registers"
+msgstr ""
+
+#: common.opt:552
+msgid "Perform a forward propagation pass on RTL"
+msgstr ""
+
+#: common.opt:559
+msgid "Allow function addresses to be held in registers"
+msgstr ""
+
+#: common.opt:563
+msgid "Place each function into its own section"
+msgstr ""
+
+#: common.opt:567
+msgid "Perform global common subexpression elimination"
+msgstr ""
+
+#: common.opt:571
+msgid "Perform enhanced load motion during global common subexpression elimination"
+msgstr ""
+
+#: common.opt:575
+msgid "Perform store motion after global common subexpression elimination"
+msgstr ""
+
+#: common.opt:579
+msgid "Perform redundant load after store elimination in global common subexpression"
+msgstr ""
+
+#: common.opt:584
+msgid "Perform global common subexpression elimination after register allocation"
+msgstr ""
+
+#: common.opt:590
+msgid "Enable in and out of Graphite representation"
+msgstr ""
+
+#: common.opt:594
+msgid "Enable Graphite Identity transformation"
+msgstr ""
+
+#: common.opt:598
+msgid "Mark all loops as parallel"
+msgstr ""
+
+#: common.opt:602
+msgid "Enable Loop Strip Mining transformation"
+msgstr ""
+
+#: common.opt:606
+msgid "Enable Loop Interchange transformation"
+msgstr ""
+
+#: common.opt:610
+msgid "Enable Loop Blocking transformation"
+msgstr ""
+
+#: common.opt:614
+msgid "Enable guessing of branch probabilities"
+msgstr ""
+
+#: common.opt:622
+msgid "Process #ident directives"
+msgstr ""
+
+#: common.opt:626
+msgid "Perform conversion of conditional jumps to branchless equivalents"
+msgstr ""
+
+#: common.opt:630
+msgid "Perform conversion of conditional jumps to conditional execution"
+msgstr ""
+
+#: common.opt:638
+msgid "Do not generate .size directives"
+msgstr ""
+
+#: common.opt:642
+msgid "Perform indirect inlining"
+msgstr ""
+
+#: common.opt:651
+msgid "Pay attention to the \"inline\" keyword"
+msgstr ""
+
+#: common.opt:655
+msgid "Integrate simple functions into their callers when code size is known to not growth"
+msgstr ""
+
+#: common.opt:659
+msgid "Integrate simple functions into their callers"
+msgstr ""
+
+#: common.opt:663
+msgid "Integrate functions called once into their callers"
+msgstr ""
+
+#: common.opt:670
+msgid "-finline-limit=<number>\tLimit the size of inlined functions to <number>"
+msgstr ""
+
+#: common.opt:674
+msgid "Instrument function entry and exit with profiling calls"
+msgstr ""
+
+#: common.opt:678
+msgid "-finstrument-functions-exclude-function-list=name,...  Do not instrument listed functions"
+msgstr ""
+
+#: common.opt:682
+msgid "-finstrument-functions-exclude-file-list=filename,...  Do not instrument functions listed in files"
+msgstr ""
+
+#: common.opt:686
+msgid "Perform Interprocedural constant propagation"
+msgstr ""
+
+#: common.opt:690
+msgid "Perform cloning to make Interprocedural constant propagation stronger"
+msgstr ""
+
+#: common.opt:694
+msgid "Discover pure and const functions"
+msgstr ""
+
+#: common.opt:698
+msgid "Perform interprocedural points-to analysis"
+msgstr ""
+
+#: common.opt:702
+msgid "Discover readonly and non addressable static variables"
+msgstr ""
+
+#: common.opt:706
+msgid "Type based escape and alias analysis"
+msgstr ""
+
+#: common.opt:710
+msgid "Perform matrix layout flattening and transposing based"
+msgstr ""
+
+#: common.opt:715
+msgid "Perform structure layout optimizations based"
+msgstr ""
+
+#: common.opt:720
+msgid "-fira-algorithm=[CB|priority] Set the used IRA algorithm"
+msgstr ""
+
+#: common.opt:724
+msgid "-fira-region=[one|all|mixed] Set regions for IRA"
+msgstr ""
+
+#: common.opt:728
+msgid "Do optimistic coalescing."
+msgstr ""
+
+#: common.opt:732
+msgid "Use IRA based register pressure calculation"
+msgstr ""
+
+#: common.opt:737
+msgid "Share slots for saving different hard registers."
+msgstr ""
+
+#: common.opt:741
+msgid "Share stack slots for spilled pseudo-registers."
+msgstr ""
+
+#: common.opt:745
+msgid "-fira-verbose=<number>\tControl IRA's level of diagnostic messages."
+msgstr ""
+
+#: common.opt:749
+msgid "Optimize induction variables on trees"
+msgstr ""
+
+#: common.opt:753
+msgid "Use jump tables for sufficiently large switch statements"
+msgstr ""
+
+#: common.opt:757
+msgid "Generate code for functions even if they are fully inlined"
+msgstr ""
+
+#: common.opt:761
+msgid "Emit static const variables even if they are not used"
+msgstr ""
+
+#: common.opt:765
+msgid "Give external symbols a leading underscore"
+msgstr ""
+
+#: common.opt:773
+msgid "Enable link-time optimization."
+msgstr ""
+
+#: common.opt:778
+msgid "-flto-compression-level=<number>\tUse zlib compression level <number> for IL"
+msgstr ""
+
+#: common.opt:782
+msgid "Report various link-time optimization statistics"
+msgstr ""
+
+#: common.opt:786
+msgid "Set errno after built-in math functions"
+msgstr ""
+
+#: common.opt:790
+msgid "Report on permanent memory allocation"
+msgstr ""
+
+#: common.opt:797
+msgid "Attempt to merge identical constants and constant variables"
+msgstr ""
+
+#: common.opt:801
+msgid "Attempt to merge identical constants across compilation units"
+msgstr ""
+
+#: common.opt:805
+msgid "Attempt to merge identical debug strings across compilation units"
+msgstr ""
+
+#: common.opt:809
+msgid "-fmessage-length=<number>\tLimit diagnostics to <number> characters per line.  0 suppresses line-wrapping"
+msgstr ""
+
+#: common.opt:813
+msgid "Perform SMS based modulo scheduling before the first scheduling pass"
+msgstr ""
+
+#: common.opt:817
+msgid "Perform SMS based modulo scheduling with register moves allowed"
+msgstr ""
+
+#: common.opt:821
+msgid "Move loop invariant computations out of loops"
+msgstr ""
+
+#: common.opt:825
+msgid "Add mudflap bounds-checking instrumentation for single-threaded program"
+msgstr ""
+
+#: common.opt:829
+msgid "Add mudflap bounds-checking instrumentation for multi-threaded program"
+msgstr ""
+
+#: common.opt:833
+msgid "Ignore read operations when inserting mudflap instrumentation"
+msgstr ""
+
+#: common.opt:837
+msgid "Use the RTL dead code elimination pass"
+msgstr ""
+
+#: common.opt:841
+msgid "Use the RTL dead store elimination pass"
+msgstr ""
+
+#: common.opt:845
+msgid "Enable/Disable the traditional scheduling in loops that already passed modulo scheduling"
+msgstr ""
+
+#: common.opt:849
+msgid "Support synchronous non-call exceptions"
+msgstr ""
+
+#: common.opt:853
+msgid "When possible do not generate stack frames"
+msgstr ""
+
+#: common.opt:857
+msgid "Do the full register move optimization pass"
+msgstr ""
+
+#: common.opt:861
+msgid "Optimize sibling and tail recursive calls"
+msgstr ""
+
+#: common.opt:865 common.opt:869
+msgid "Report on memory allocation before interprocedural optimization"
+msgstr ""
+
+#: common.opt:873
+msgid "Pack structure members together without holes"
+msgstr ""
+
+#: common.opt:877
+msgid "-fpack-struct=<number>\tSet initial maximum structure member alignment"
+msgstr ""
+
+#: common.opt:881
+msgid "Return small aggregates in memory, not registers"
+msgstr ""
+
+#: common.opt:885
+msgid "Perform loop peeling"
+msgstr ""
+
+#: common.opt:889
+msgid "Enable machine specific peephole optimizations"
+msgstr ""
+
+#: common.opt:893
+msgid "Enable an RTL peephole pass before sched2"
+msgstr ""
+
+#: common.opt:897
+msgid "Generate position-independent code if possible (large mode)"
+msgstr ""
+
+#: common.opt:901
+msgid "Generate position-independent code for executables if possible (large mode)"
+msgstr ""
+
+#: common.opt:905
+msgid "Generate position-independent code if possible (small mode)"
+msgstr ""
+
+#: common.opt:909
+msgid "Generate position-independent code for executables if possible (small mode)"
+msgstr ""
+
+#: common.opt:913
+msgid "Specify a plugin to load"
+msgstr ""
+
+#: common.opt:917
+msgid "-fplugin-arg-<name>-<key>[=<value>]\tSpecify argument <key>=<value> for plugin <name>"
+msgstr ""
+
+#: common.opt:921
+msgid "Run predictive commoning optimization."
+msgstr ""
+
+#: common.opt:925
+msgid "Generate prefetch instructions, if available, for arrays in loops"
+msgstr ""
+
+#: common.opt:929
+msgid "Enable basic program profiling code"
+msgstr ""
+
+#: common.opt:933
+msgid "Insert arc-based program profiling code"
+msgstr ""
+
+#: common.opt:937
+msgid "Set the top-level directory for storing the profile data."
+msgstr ""
+
+#: common.opt:942
+msgid "Enable correction of flow inconsistent profile data input"
+msgstr ""
+
+#: common.opt:946
+msgid "Enable common options for generating profile info for profile feedback directed optimizations"
+msgstr ""
+
+#: common.opt:950
+msgid "Enable common options for generating profile info for profile feedback directed optimizations, and set -fprofile-dir="
+msgstr ""
+
+#: common.opt:954
+msgid "Enable common options for performing profile feedback directed optimizations"
+msgstr ""
+
+#: common.opt:958
+msgid "Enable common options for performing profile feedback directed optimizations, and set -fprofile-dir="
+msgstr ""
+
+#: common.opt:962
+msgid "Insert code to profile values of expressions"
+msgstr ""
+
+#: common.opt:969
+msgid "-frandom-seed=<string>\tMake compile reproducible using <string>"
+msgstr ""
+
+#: common.opt:979
+msgid "Record gcc command line switches in the object file."
+msgstr ""
+
+#: common.opt:983
+msgid "Return small aggregates in registers"
+msgstr ""
+
+#: common.opt:987
+msgid "Enables a register move optimization"
+msgstr ""
+
+#: common.opt:991
+msgid "Perform a register renaming optimization pass"
+msgstr ""
+
+#: common.opt:995
+msgid "Reorder basic blocks to improve code placement"
+msgstr ""
+
+#: common.opt:999
+msgid "Reorder basic blocks and partition into hot and cold sections"
+msgstr ""
+
+#: common.opt:1003
+msgid "Reorder functions to improve code placement"
+msgstr ""
+
+#: common.opt:1007
+msgid "Add a common subexpression elimination pass after loop optimizations"
+msgstr ""
+
+#: common.opt:1015
+msgid "Disable optimizations that assume default FP rounding behavior"
+msgstr ""
+
+#: common.opt:1019
+msgid "Enable scheduling across basic blocks"
+msgstr ""
+
+#: common.opt:1023
+msgid "Enable register pressure sensitive insn scheduling"
+msgstr ""
+
+#: common.opt:1027
+msgid "Allow speculative motion of non-loads"
+msgstr ""
+
+#: common.opt:1031
+msgid "Allow speculative motion of some loads"
+msgstr ""
+
+#: common.opt:1035
+msgid "Allow speculative motion of more loads"
+msgstr ""
+
+#: common.opt:1039
+msgid "-fsched-verbose=<number>\tSet the verbosity level of the scheduler"
+msgstr ""
+
+#: common.opt:1043
+msgid "If scheduling post reload, do superblock scheduling"
+msgstr ""
+
+#: common.opt:1051
+msgid "Reschedule instructions before register allocation"
+msgstr ""
+
+#: common.opt:1055
+msgid "Reschedule instructions after register allocation"
+msgstr ""
+
+#: common.opt:1062
+msgid "Schedule instructions using selective scheduling algorithm"
+msgstr ""
+
+#: common.opt:1066
+msgid "Run selective scheduling after reload"
+msgstr ""
+
+#: common.opt:1070
+msgid "Perform software pipelining of inner loops during selective scheduling"
+msgstr ""
+
+#: common.opt:1074
+msgid "Perform software pipelining of outer loops during selective scheduling"
+msgstr ""
+
+#: common.opt:1078
+msgid "Reschedule pipelined regions without pipelining"
+msgstr ""
+
+#: common.opt:1084
+msgid "Allow premature scheduling of queued insns"
+msgstr ""
+
+#: common.opt:1088
+msgid "-fsched-stalled-insns=<number>\tSet number of queued insns that can be prematurely scheduled"
+msgstr ""
+
+#: common.opt:1096
+msgid "Set dependence distance checking in premature scheduling of queued insns"
+msgstr ""
+
+#: common.opt:1100
+msgid "-fsched-stalled-insns-dep=<number>\tSet dependence distance checking in premature scheduling of queued insns"
+msgstr ""
+
+#: common.opt:1104
+msgid "Enable the group heuristic in the scheduler"
+msgstr ""
+
+#: common.opt:1108
+msgid "Enable the critical path heuristic in the scheduler"
+msgstr ""
+
+#: common.opt:1112
+msgid "Enable the speculative instruction heuristic in the scheduler"
+msgstr ""
+
+#: common.opt:1116
+msgid "Enable the rank heuristic in the scheduler"
+msgstr ""
+
+#: common.opt:1120
+msgid "Enable the last instruction heuristic in the scheduler"
+msgstr ""
+
+#: common.opt:1124
+msgid "Enable the dependent count heuristic in the scheduler"
+msgstr ""
+
+#: common.opt:1128
+msgid "Access data in the same section from shared anchor points"
+msgstr ""
+
+#: common.opt:1136
+msgid "Show column numbers in diagnostics, when available.  Default on"
+msgstr ""
+
+#: common.opt:1140
+msgid "Disable optimizations observable by IEEE signaling NaNs"
+msgstr ""
+
+#: common.opt:1144
+msgid "Disable floating point optimizations that ignore the IEEE signedness of zero"
+msgstr ""
+
+#: common.opt:1148
+msgid "Convert floating point constants to single precision constants"
+msgstr ""
+
+#: common.opt:1152
+msgid "Split lifetimes of induction variables when loops are unrolled"
+msgstr ""
+
+#: common.opt:1156
+msgid "Split wide types into independent registers"
+msgstr ""
+
+#: common.opt:1160
+msgid "Apply variable expansion when loops are unrolled"
+msgstr ""
+
+#: common.opt:1164
+msgid "-fstack-check=[no|generic|specific]\tInsert stack checking code into the program"
+msgstr ""
+
+#: common.opt:1168
+msgid "Insert stack checking code into the program.  Same as -fstack-check=specific"
+msgstr ""
+
+#: common.opt:1175
+msgid "-fstack-limit-register=<register>\tTrap if the stack goes past <register>"
+msgstr ""
+
+#: common.opt:1179
+msgid "-fstack-limit-symbol=<name>\tTrap if the stack goes past symbol <name>"
+msgstr ""
+
+#: common.opt:1183
+msgid "Use propolice as a stack protection method"
+msgstr ""
+
+#: common.opt:1187
+msgid "Use a stack protection method for every function"
+msgstr ""
+
+#: common.opt:1199
+msgid "Assume strict aliasing rules apply"
+msgstr ""
+
+#: common.opt:1203
+msgid "Treat signed overflow as undefined"
+msgstr ""
+
+#: common.opt:1207
+msgid "Check for syntax errors, then stop"
+msgstr ""
+
+#: common.opt:1211
+msgid "Create data files needed by \"gcov\""
+msgstr ""
+
+#: common.opt:1215
+msgid "Perform jump threading optimizations"
+msgstr ""
+
+#: common.opt:1219
+msgid "Report the time taken by each compiler pass"
+msgstr ""
+
+#: common.opt:1223
+msgid "-ftls-model=[global-dynamic|local-dynamic|initial-exec|local-exec]\tSet the default thread-local storage code generation model"
+msgstr ""
+
+#: common.opt:1227
+msgid "Reorder top level functions, variables, and asms"
+msgstr ""
+
+#: common.opt:1231
+msgid "Perform superblock formation via tail duplication"
+msgstr ""
+
+#: common.opt:1238
+msgid "Assume floating-point operations can trap"
+msgstr ""
+
+#: common.opt:1242
+msgid "Trap for signed overflow in addition, subtraction and multiplication"
+msgstr ""
+
+#: common.opt:1246
+msgid "Enable SSA-CCP optimization on trees"
+msgstr ""
+
+#: common.opt:1254
+msgid "Enable loop header copying on trees"
+msgstr ""
+
+#: common.opt:1258
+msgid "Replace SSA temporaries with better names in copies"
+msgstr ""
+
+#: common.opt:1262
+msgid "Enable copy propagation on trees"
+msgstr ""
+
+#: common.opt:1270
+msgid "Transform condition stores into unconditional ones"
+msgstr ""
+
+#: common.opt:1274
+msgid "Perform conversions of switch initializations."
+msgstr ""
+
+#: common.opt:1278
+msgid "Enable SSA dead code elimination optimization on trees"
+msgstr ""
+
+#: common.opt:1282
+msgid "Enable dominator optimizations"
+msgstr ""
+
+#: common.opt:1286
+msgid "Enable dead store elimination"
+msgstr ""
+
+#: common.opt:1290
+msgid "Enable forward propagation on trees"
+msgstr ""
+
+#: common.opt:1294
+msgid "Enable Full Redundancy Elimination (FRE) on trees"
+msgstr ""
+
+#: common.opt:1298
+msgid "Enable loop distribution on trees"
+msgstr ""
+
+#: common.opt:1302
+msgid "Enable loop invariant motion on trees"
+msgstr ""
+
+#: common.opt:1306
+msgid "Enable linear loop transforms on trees"
+msgstr ""
+
+#: common.opt:1310
+msgid "Create canonical induction variables in loops"
+msgstr ""
+
+#: common.opt:1314
+msgid "Enable loop optimizations on tree level"
+msgstr ""
+
+#: common.opt:1318
+msgid "Enable automatic parallelization of loops"
+msgstr ""
+
+#: common.opt:1322
+msgid "Enable hoisting loads from conditional pointers."
+msgstr ""
+
+#: common.opt:1326
+msgid "Enable SSA-PRE optimization on trees"
+msgstr ""
+
+#: common.opt:1330
+msgid "Perform function-local points-to analysis on trees."
+msgstr ""
+
+#: common.opt:1334
+msgid "Enable reassociation on tree level"
+msgstr ""
+
+#: common.opt:1342
+msgid "Enable SSA code sinking on trees"
+msgstr ""
+
+#: common.opt:1346
+msgid "Perform scalar replacement of aggregates"
+msgstr ""
+
+#: common.opt:1350
+msgid "Replace temporary expressions in the SSA->normal pass"
+msgstr ""
+
+#: common.opt:1354
+msgid "Perform live range splitting during the SSA->normal pass"
+msgstr ""
+
+#: common.opt:1358
+msgid "Perform Value Range Propagation on trees"
+msgstr ""
+
+#: common.opt:1362
+msgid "Compile whole compilation unit at a time"
+msgstr ""
+
+#: common.opt:1366
+msgid "Perform loop unrolling when iteration count is known"
+msgstr ""
+
+#: common.opt:1370
+msgid "Perform loop unrolling for all loops"
+msgstr ""
+
+#: common.opt:1377
+msgid "Allow loop optimizations to assume that the loops behave in normal way"
+msgstr ""
+
+#: common.opt:1381
+msgid "Allow optimization for floating-point arithmetic which may change the"
+msgstr ""
+
+#: common.opt:1386
+msgid "Same as -fassociative-math for expressions which include division."
+msgstr ""
+
+#: common.opt:1394
+msgid "Allow math optimizations that may violate IEEE or ISO standards"
+msgstr ""
+
+#: common.opt:1398
+msgid "Perform loop unswitching"
+msgstr ""
+
+#: common.opt:1402
+msgid "Just generate unwind tables for exception handling"
+msgstr ""
+
+#: common.opt:1409
+msgid "Perform variable tracking"
+msgstr ""
+
+#: common.opt:1413
+msgid "Perform variable tracking by annotating assignments"
+msgstr ""
+
+#: common.opt:1417
+msgid "Toggle -fvar-tracking-assignments"
+msgstr ""
+
+#: common.opt:1421
+msgid "Perform variable tracking and also tag variables that are uninitialized"
+msgstr ""
+
+#: common.opt:1425
+msgid "Enable loop vectorization on trees"
+msgstr ""
+
+#: common.opt:1429
+msgid "Enable basic block vectorization (SLP) on trees"
+msgstr ""
+
+#: common.opt:1433
+msgid "Enable use of cost model in vectorization"
+msgstr ""
+
+#: common.opt:1437
+msgid "Enable loop versioning when doing loop vectorization on trees"
+msgstr ""
+
+#: common.opt:1441
+msgid "-ftree-vectorizer-verbose=<number>\tSet the verbosity level of the vectorizer"
+msgstr ""
+
+#: common.opt:1445
+msgid "Enable copy propagation of scalar-evolution information."
+msgstr ""
+
+#: common.opt:1455
+msgid "Add extra commentary to assembler output"
+msgstr ""
+
+#: common.opt:1459
+msgid "-fvisibility=[default|internal|hidden|protected]\tSet the default symbol visibility"
+msgstr ""
+
+#: common.opt:1464
+msgid "Use expression value profiles in optimizations"
+msgstr ""
+
+#: common.opt:1468
+msgid "Construct webs and split unrelated uses of single variable"
+msgstr ""
+
+#: common.opt:1472
+msgid "Enable partitioned link-time optimization."
+msgstr ""
+
+#: common.opt:1476
+msgid "Enable conditional dead code elimination for builtin calls"
+msgstr ""
+
+#: common.opt:1480
+msgid "Perform whole program optimizations"
+msgstr ""
+
+#: common.opt:1484
+msgid "Assume signed arithmetic overflow wraps around"
+msgstr ""
+
+#: common.opt:1488
+msgid "Put zero initialized data in the bss section"
+msgstr ""
+
+#: common.opt:1492
+msgid "Generate debug information in default format"
+msgstr ""
+
+#: common.opt:1496
+msgid "Generate debug information in COFF format"
+msgstr ""
+
+#: common.opt:1500
+msgid "Generate debug information in DWARF v2 (or later) format"
+msgstr ""
+
+#: common.opt:1504
+msgid "Generate debug information in default extended format"
+msgstr ""
+
+#: common.opt:1508
+msgid "Generate debug information in STABS format"
+msgstr ""
+
+#: common.opt:1512
+msgid "Generate debug information in extended STABS format"
+msgstr ""
+
+#: common.opt:1516
+msgid "Emit DWARF additions beyond selected version"
+msgstr ""
+
+#: common.opt:1520
+msgid "Don't emit DWARF additions beyond selected version"
+msgstr ""
+
+#: common.opt:1524
+msgid "Toggle debug information generation"
+msgstr ""
+
+#: common.opt:1528
+msgid "Generate debug information in VMS format"
+msgstr ""
+
+#: common.opt:1532
+msgid "Generate debug information in XCOFF format"
+msgstr ""
+
+#: common.opt:1536
+msgid "Generate debug information in extended XCOFF format"
+msgstr ""
+
+#: common.opt:1540
+msgid "-o <file>\tPlace output into <file>"
+msgstr ""
+
+#: common.opt:1544
+msgid "Enable function profiling"
+msgstr ""
+
+#: common.opt:1548
+msgid "Issue warnings needed for strict compliance to the standard"
+msgstr ""
+
+#: common.opt:1552
+msgid "Like -pedantic but issue them as errors"
+msgstr ""
+
+#: common.opt:1556
+msgid "Do not display functions compiled or elapsed time"
+msgstr ""
+
+#: common.opt:1560
+msgid "Display the compiler's version"
+msgstr ""
+
+#: common.opt:1564
+msgid "Suppress warnings"
+msgstr ""
+
+#: common.opt:1568
+msgid "Create a shared library"
+msgstr ""
+
+#: common.opt:1572
+msgid "Create a position independent executable"
+msgstr ""
+
+#: attribs.c:295
+#, gcc-internal-format
+msgid "%qE attribute directive ignored"
+msgstr ""
+
+#: attribs.c:303
+#, gcc-internal-format
+msgid "wrong number of arguments specified for %qE attribute"
+msgstr ""
+
+#: attribs.c:321
+#, gcc-internal-format
+msgid "%qE attribute does not apply to types"
+msgstr ""
+
+#: attribs.c:373
+#, gcc-internal-format
+msgid "%qE attribute only applies to function types"
+msgstr ""
+
+#: attribs.c:383
+#, gcc-internal-format
+msgid "type attributes ignored after type is already defined"
+msgstr ""
+
+#: bb-reorder.c:1875
+#, gcc-internal-format
+msgid "multiple hot/cold transitions found (bb %i)"
+msgstr ""
+
+#: bt-load.c:1546
+#, gcc-internal-format
+msgid "branch target register load optimization is not intended to be run twice"
+msgstr ""
+
+#: builtins.c:503
+#, gcc-internal-format
+msgid "offset outside bounds of constant string"
+msgstr ""
+
+#: builtins.c:1067
+#, gcc-internal-format
+msgid "second argument to %<__builtin_prefetch%> must be a constant"
+msgstr ""
+
+#: builtins.c:1074
+#, gcc-internal-format
+msgid "invalid second argument to %<__builtin_prefetch%>; using zero"
+msgstr ""
+
+#: builtins.c:1082
+#, gcc-internal-format
+msgid "third argument to %<__builtin_prefetch%> must be a constant"
+msgstr ""
+
+#: builtins.c:1089
+#, gcc-internal-format
+msgid "invalid third argument to %<__builtin_prefetch%>; using zero"
+msgstr ""
+
+#: builtins.c:4318
+#, gcc-internal-format
+msgid "argument of %<__builtin_args_info%> must be constant"
+msgstr ""
+
+#: builtins.c:4324
+#, gcc-internal-format
+msgid "argument of %<__builtin_args_info%> out of range"
+msgstr ""
+
+#: builtins.c:4330
+#, gcc-internal-format
+msgid "missing argument in %<__builtin_args_info%>"
+msgstr ""
+
+#: builtins.c:4467 gimplify.c:2271
+#, gcc-internal-format
+msgid "too few arguments to function %<va_start%>"
+msgstr ""
+
+#: builtins.c:4629
+#, gcc-internal-format
+msgid "first argument to %<va_arg%> not of type %<va_list%>"
+msgstr ""
+
+#: builtins.c:4645
+#, gcc-internal-format
+msgid "%qT is promoted to %qT when passed through %<...%>"
+msgstr ""
+
+#: builtins.c:4650
+#, gcc-internal-format
+msgid "(so you should pass %qT not %qT to %<va_arg%>)"
+msgstr ""
+
+#. We can, however, treat "undefined" any way we please.
+#. Call abort to encourage the user to fix the program.
+#: builtins.c:4657 c-typeck.c:2664
+#, gcc-internal-format
+msgid "if this code is reached, the program will abort"
+msgstr ""
+
+#: builtins.c:4784
+#, gcc-internal-format
+msgid "invalid argument to %<__builtin_frame_address%>"
+msgstr ""
+
+#: builtins.c:4786
+#, gcc-internal-format
+msgid "invalid argument to %<__builtin_return_address%>"
+msgstr ""
+
+#: builtins.c:4799
+#, gcc-internal-format
+msgid "unsupported argument to %<__builtin_frame_address%>"
+msgstr ""
+
+#: builtins.c:4801
+#, gcc-internal-format
+msgid "unsupported argument to %<__builtin_return_address%>"
+msgstr ""
+
+#: builtins.c:5056
+#, gcc-internal-format
+msgid "both arguments to %<__builtin___clear_cache%> must be pointers"
+msgstr ""
+
+#: builtins.c:5435 builtins.c:5449
+#, gcc-internal-format
+msgid "%qD changed semantics in GCC 4.4"
+msgstr ""
+
+#. All valid uses of __builtin_va_arg_pack () are removed during
+#. inlining.
+#: builtins.c:5839 expr.c:9229
+msgid "%Kinvalid use of %<__builtin_va_arg_pack ()%>"
+msgstr ""
+
+#. All valid uses of __builtin_va_arg_pack_len () are removed during
+#. inlining.
+#: builtins.c:5845
+msgid "%Kinvalid use of %<__builtin_va_arg_pack_len ()%>"
+msgstr ""
+
+#: builtins.c:6073
+#, gcc-internal-format
+msgid "%<__builtin_longjmp%> second argument must be 1"
+msgstr ""
+
+#: builtins.c:6673
+#, gcc-internal-format
+msgid "target format does not support infinity"
+msgstr ""
+
+#: builtins.c:11419
+#, gcc-internal-format
+msgid "%<va_start%> used in function with fixed args"
+msgstr ""
+
+#: builtins.c:11427
+#, gcc-internal-format
+msgid "wrong number of arguments to function %<va_start%>"
+msgstr ""
+
+#. Evidently an out of date version of <stdarg.h>; can't validate
+#. va_start's second argument, but can still work as intended.
+#: builtins.c:11440
+#, gcc-internal-format
+msgid "%<__builtin_next_arg%> called without an argument"
+msgstr ""
+
+#: builtins.c:11445
+#, gcc-internal-format
+msgid "wrong number of arguments to function %<__builtin_next_arg%>"
+msgstr ""
+
+#. FIXME: Sometimes with the tree optimizers we can get the
+#. not the last argument even though the user used the last
+#. argument.  We just warn and set the arg to be the last
+#. argument so that we will get wrong-code because of
+#. it.
+#: builtins.c:11475
+#, gcc-internal-format
+msgid "second parameter of %<va_start%> not last named argument"
+msgstr ""
+
+#: builtins.c:11485
+#, gcc-internal-format
+msgid "undefined behaviour when second parameter of %<va_start%> is declared with %<register%> storage"
+msgstr ""
+
+#: builtins.c:11601
+msgid "%Kfirst argument of %D must be a pointer, second integer constant"
+msgstr ""
+
+#: builtins.c:11614
+msgid "%Klast argument of %D is not integer constant between 0 and 3"
+msgstr ""
+
+#: builtins.c:11659 builtins.c:11810 builtins.c:11867
+msgid "%Kcall to %D will always overflow destination buffer"
+msgstr ""
+
+#: builtins.c:11800
+msgid "%Kcall to %D might overflow destination buffer"
+msgstr ""
+
+#: builtins.c:11888
+msgid "%Kattempt to free a non-heap object %qD"
+msgstr ""
+
+#: builtins.c:11891
+msgid "%Kattempt to free a non-heap object"
+msgstr ""
+
+#: c-common.c:1008
+#, gcc-internal-format
+msgid "%qD is not defined outside of function scope"
+msgstr ""
+
+#: c-common.c:1058
+#, gcc-internal-format
+msgid "string length %qd is greater than the length %qd ISO C%d compilers are required to support"
+msgstr ""
+
+#: c-common.c:1551 c-common.c:1563
+#, gcc-internal-format
+msgid "overflow in constant expression"
+msgstr ""
+
+#: c-common.c:1586
+#, gcc-internal-format
+msgid "integer overflow in expression"
+msgstr ""
+
+#: c-common.c:1591
+#, gcc-internal-format
+msgid "floating point overflow in expression"
+msgstr ""
+
+#: c-common.c:1595
+#, gcc-internal-format
+msgid "fixed-point overflow in expression"
+msgstr ""
+
+#: c-common.c:1599
+#, gcc-internal-format
+msgid "vector overflow in expression"
+msgstr ""
+
+#: c-common.c:1605
+#, gcc-internal-format
+msgid "complex integer overflow in expression"
+msgstr ""
+
+#: c-common.c:1608
+#, gcc-internal-format
+msgid "complex floating point overflow in expression"
+msgstr ""
+
+#: c-common.c:1651
+#, gcc-internal-format
+msgid "logical %<or%> applied to non-boolean constant"
+msgstr ""
+
+#: c-common.c:1654
+#, gcc-internal-format
+msgid "logical %<and%> applied to non-boolean constant"
+msgstr ""
+
+#: c-common.c:1699
+#, gcc-internal-format
+msgid "logical %<or%> of collectively exhaustive tests is always true"
+msgstr ""
+
+#: c-common.c:1703
+#, gcc-internal-format
+msgid "logical %<and%> of mutually exclusive tests is always false"
+msgstr ""
+
+#: c-common.c:1738
+#, gcc-internal-format
+msgid "type-punning to incomplete type might break strict-aliasing rules"
+msgstr ""
+
+#: c-common.c:1753
+#, gcc-internal-format
+msgid "dereferencing type-punned pointer will break strict-aliasing rules"
+msgstr ""
+
+#: c-common.c:1760 c-common.c:1778
+#, gcc-internal-format
+msgid "dereferencing type-punned pointer might break strict-aliasing rules"
+msgstr ""
+
+#: c-common.c:1809
+#, gcc-internal-format
+msgid "first argument of %q+D should be %<int%>"
+msgstr ""
+
+#: c-common.c:1818
+#, gcc-internal-format
+msgid "second argument of %q+D should be %<char **%>"
+msgstr ""
+
+#: c-common.c:1827
+#, gcc-internal-format
+msgid "third argument of %q+D should probably be %<char **%>"
+msgstr ""
+
+#: c-common.c:1837
+#, gcc-internal-format
+msgid "%q+D takes only zero or two arguments"
+msgstr ""
+
+#: c-common.c:1886
+#, gcc-internal-format
+msgid "use -flax-vector-conversions to permit conversions between vectors with differing element types or numbers of subparts"
+msgstr ""
+
+#: c-common.c:2041
+#, gcc-internal-format
+msgid "conversion to %qT from boolean expression"
+msgstr ""
+
+#: c-common.c:2063
+#, gcc-internal-format
+msgid "negative integer implicitly converted to unsigned type"
+msgstr ""
+
+#: c-common.c:2065
+#, gcc-internal-format
+msgid "conversion of unsigned constant value to negative integer"
+msgstr ""
+
+#: c-common.c:2092
+#, gcc-internal-format
+msgid "conversion to %qT alters %qT constant value"
+msgstr ""
+
+#: c-common.c:2184
+#, gcc-internal-format
+msgid "conversion to %qT from %qT may change the sign of the result"
+msgstr ""
+
+#: c-common.c:2221
+#, gcc-internal-format
+msgid "conversion to %qT from %qT may alter its value"
+msgstr ""
+
+#: c-common.c:2249
+#, gcc-internal-format
+msgid "large integer implicitly truncated to unsigned type"
+msgstr ""
+
+#: c-common.c:2255 c-common.c:2262 c-common.c:2270
+#, gcc-internal-format
+msgid "overflow in implicit constant conversion"
+msgstr ""
+
+#: c-common.c:2443
+#, gcc-internal-format
+msgid "operation on %qE may be undefined"
+msgstr ""
+
+#: c-common.c:2751
+#, gcc-internal-format
+msgid "case label does not reduce to an integer constant"
+msgstr ""
+
+#: c-common.c:2791
+#, gcc-internal-format
+msgid "case label value is less than minimum value for type"
+msgstr ""
+
+#: c-common.c:2799
+#, gcc-internal-format
+msgid "case label value exceeds maximum value for type"
+msgstr ""
+
+#: c-common.c:2807
+#, gcc-internal-format
+msgid "lower value in case label range less than minimum value for type"
+msgstr ""
+
+#: c-common.c:2816
+#, gcc-internal-format
+msgid "upper value in case label range exceeds maximum value for type"
+msgstr ""
+
+#: c-common.c:2890
+#, gcc-internal-format
+msgid "GCC cannot support operators with integer types and fixed-point types that have too many integral and fractional bits together"
+msgstr ""
+
+#: c-common.c:3377
+#, gcc-internal-format
+msgid "invalid operands to binary %s (have %qT and %qT)"
+msgstr ""
+
+#: c-common.c:3613
+#, gcc-internal-format
+msgid "comparison is always false due to limited range of data type"
+msgstr ""
+
+#: c-common.c:3615
+#, gcc-internal-format
+msgid "comparison is always true due to limited range of data type"
+msgstr ""
+
+#: c-common.c:3694
+#, gcc-internal-format
+msgid "comparison of unsigned expression >= 0 is always true"
+msgstr ""
+
+#: c-common.c:3704
+#, gcc-internal-format
+msgid "comparison of unsigned expression < 0 is always false"
+msgstr ""
+
+#: c-common.c:3746
+#, gcc-internal-format
+msgid "pointer of type %<void *%> used in arithmetic"
+msgstr ""
+
+#: c-common.c:3752
+#, gcc-internal-format
+msgid "pointer to a function used in arithmetic"
+msgstr ""
+
+#: c-common.c:3758
+#, gcc-internal-format
+msgid "pointer to member function used in arithmetic"
+msgstr ""
+
+#: c-common.c:3964
+#, gcc-internal-format
+msgid "the address of %qD will always evaluate as %<true%>"
+msgstr ""
+
+#: c-common.c:4065 cp/semantics.c:593 cp/typeck.c:7135
+#, gcc-internal-format
+msgid "suggest parentheses around assignment used as truth value"
+msgstr ""
+
+#: c-common.c:4147 c-decl.c:3611 c-typeck.c:10296
+#, gcc-internal-format
+msgid "invalid use of %<restrict%>"
+msgstr ""
+
+#: c-common.c:4370
+#, gcc-internal-format
+msgid "invalid application of %<sizeof%> to a function type"
+msgstr ""
+
+#: c-common.c:4383
+#, gcc-internal-format
+msgid "invalid application of %qs to a void type"
+msgstr ""
+
+#: c-common.c:4391
+#, gcc-internal-format
+msgid "invalid application of %qs to incomplete type %qT "
+msgstr ""
+
+#: c-common.c:4433
+#, gcc-internal-format
+msgid "%<__alignof%> applied to a bit-field"
+msgstr ""
+
+#: c-common.c:5142
+#, gcc-internal-format
+msgid "cannot disable built-in function %qs"
+msgstr ""
+
+#: c-common.c:5334
+#, gcc-internal-format
+msgid "pointers are not permitted as case values"
+msgstr ""
+
+#: c-common.c:5341
+#, gcc-internal-format
+msgid "range expressions in switch statements are non-standard"
+msgstr ""
+
+#: c-common.c:5367
+#, gcc-internal-format
+msgid "empty range specified"
+msgstr ""
+
+#: c-common.c:5427
+#, gcc-internal-format
+msgid "duplicate (or overlapping) case value"
+msgstr ""
+
+#: c-common.c:5429
+#, gcc-internal-format
+msgid "this is the first entry overlapping that value"
+msgstr ""
+
+#: c-common.c:5433
+#, gcc-internal-format
+msgid "duplicate case value"
+msgstr ""
+
+#: c-common.c:5434
+#, gcc-internal-format
+msgid "previously used here"
+msgstr ""
+
+#: c-common.c:5438
+#, gcc-internal-format
+msgid "multiple default labels in one switch"
+msgstr ""
+
+#: c-common.c:5440
+#, gcc-internal-format
+msgid "this is the first default label"
+msgstr ""
+
+#: c-common.c:5492
+#, gcc-internal-format
+msgid "case value %qs not in enumerated type"
+msgstr ""
+
+#: c-common.c:5497
+#, gcc-internal-format
+msgid "case value %qs not in enumerated type %qT"
+msgstr ""
+
+#: c-common.c:5556
+#, gcc-internal-format
+msgid "switch missing default case"
+msgstr ""
+
+#: c-common.c:5628
+#, gcc-internal-format
+msgid "enumeration value %qE not handled in switch"
+msgstr ""
+
+#: c-common.c:5654
+#, gcc-internal-format
+msgid "taking the address of a label is non-standard"
+msgstr ""
+
+#: c-common.c:5827
+#, gcc-internal-format
+msgid "%qE attribute ignored for field of type %qT"
+msgstr ""
+
+#: c-common.c:5838 c-common.c:5857 c-common.c:5875 c-common.c:5902
+#: c-common.c:5929 c-common.c:5955 c-common.c:5974 c-common.c:5991
+#: c-common.c:6015 c-common.c:6038 c-common.c:6061 c-common.c:6082
+#: c-common.c:6103 c-common.c:6127 c-common.c:6153 c-common.c:6190
+#: c-common.c:6217 c-common.c:6260 c-common.c:6344 c-common.c:6374
+#: c-common.c:6394 c-common.c:6732 c-common.c:6748 c-common.c:6796
+#: c-common.c:6819 c-common.c:6883 c-common.c:7011 c-common.c:7079
+#: c-common.c:7123 c-common.c:7171 c-common.c:7249 c-common.c:7273
+#: c-common.c:7559 c-common.c:7582 c-common.c:7621 c-common.c:7710
+#: c-common.c:7852 tree.c:5307 tree.c:5319 tree.c:5329 config/darwin.c:1455
+#: config/arm/arm.c:4561 config/arm/arm.c:4589 config/arm/arm.c:4606
+#: config/avr/avr.c:4818 config/h8300/h8300.c:5367 config/h8300/h8300.c:5391
+#: config/i386/i386.c:4452 config/i386/i386.c:26044 config/ia64/ia64.c:635
+#: config/m68hc11/m68hc11.c:1142 config/rs6000/rs6000.c:23564
+#: config/spu/spu.c:3909
+#, gcc-internal-format
+msgid "%qE attribute ignored"
+msgstr ""
+
+#: c-common.c:5920 c-common.c:5946
+#, gcc-internal-format
+msgid "%qE attribute conflicts with attribute %s"
+msgstr ""
+
+#: c-common.c:6184
+#, gcc-internal-format
+msgid "%qE attribute have effect only on public objects"
+msgstr ""
+
+#: c-common.c:6281
+#, gcc-internal-format
+msgid "destructor priorities are not supported"
+msgstr ""
+
+#: c-common.c:6283
+#, gcc-internal-format
+msgid "constructor priorities are not supported"
+msgstr ""
+
+#: c-common.c:6300
+#, gcc-internal-format
+msgid "destructor priorities from 0 to %d are reserved for the implementation"
+msgstr ""
+
+#: c-common.c:6305
+#, gcc-internal-format
+msgid "constructor priorities from 0 to %d are reserved for the implementation"
+msgstr ""
+
+#: c-common.c:6313
+#, gcc-internal-format
+msgid "destructor priorities must be integers from 0 to %d inclusive"
+msgstr ""
+
+#: c-common.c:6316
+#, gcc-internal-format
+msgid "constructor priorities must be integers from 0 to %d inclusive"
+msgstr ""
+
+#: c-common.c:6438
+#, gcc-internal-format
+msgid "unknown machine mode %qE"
+msgstr ""
+
+#: c-common.c:6467
+#, gcc-internal-format
+msgid "specifying vector types with __attribute__ ((mode)) is deprecated"
+msgstr ""
+
+#: c-common.c:6470
+#, gcc-internal-format
+msgid "use __attribute__ ((vector_size)) instead"
+msgstr ""
+
+#: c-common.c:6479
+#, gcc-internal-format
+msgid "unable to emulate %qs"
+msgstr ""
+
+#: c-common.c:6490
+#, gcc-internal-format
+msgid "invalid pointer mode %qs"
+msgstr ""
+
+#: c-common.c:6507
+#, gcc-internal-format
+msgid "signness of type and machine mode %qs don't match"
+msgstr ""
+
+#: c-common.c:6518
+#, gcc-internal-format
+msgid "no data type for mode %qs"
+msgstr ""
+
+#: c-common.c:6528
+#, gcc-internal-format
+msgid "cannot use mode %qs for enumeral types"
+msgstr ""
+
+#: c-common.c:6555
+#, gcc-internal-format
+msgid "mode %qs applied to inappropriate type"
+msgstr ""
+
+#: c-common.c:6587
+#, gcc-internal-format
+msgid "section attribute cannot be specified for local variables"
+msgstr ""
+
+#: c-common.c:6598 config/bfin/bfin.c:5652 config/bfin/bfin.c:5703
+#: config/bfin/bfin.c:5730 config/bfin/bfin.c:5743
+#, gcc-internal-format
+msgid "section of %q+D conflicts with previous declaration"
+msgstr ""
+
+#: c-common.c:6606
+#, gcc-internal-format
+msgid "section of %q+D cannot be overridden"
+msgstr ""
+
+#: c-common.c:6614
+#, gcc-internal-format
+msgid "section attribute not allowed for %q+D"
+msgstr ""
+
+#: c-common.c:6621
+#, gcc-internal-format
+msgid "section attributes are not supported for this target"
+msgstr ""
+
+#: c-common.c:6653
+#, gcc-internal-format
+msgid "requested alignment is not a constant"
+msgstr ""
+
+#: c-common.c:6658
+#, gcc-internal-format
+msgid "requested alignment is not a power of 2"
+msgstr ""
+
+#: c-common.c:6663
+#, gcc-internal-format
+msgid "requested alignment is too large"
+msgstr ""
+
+#: c-common.c:6689
+#, gcc-internal-format
+msgid "alignment may not be specified for %q+D"
+msgstr ""
+
+#: c-common.c:6696
+#, gcc-internal-format
+msgid "alignment for %q+D was previously specified as %d and may not be decreased"
+msgstr ""
+
+#: c-common.c:6700
+#, gcc-internal-format
+msgid "alignment for %q+D must be at least %d"
+msgstr ""
+
+#: c-common.c:6725
+#, gcc-internal-format
+msgid "inline function %q+D cannot be declared weak"
+msgstr ""
+
+#: c-common.c:6759
+#, gcc-internal-format
+msgid "%q+D defined both normally and as an alias"
+msgstr ""
+
+#: c-common.c:6775
+#, gcc-internal-format
+msgid "alias argument not a string"
+msgstr ""
+
+#: c-common.c:6841
+#, gcc-internal-format
+msgid "weakref attribute must appear before alias attribute"
+msgstr ""
+
+#: c-common.c:6870
+#, gcc-internal-format
+msgid "%qE attribute ignored on non-class types"
+msgstr ""
+
+#: c-common.c:6876
+#, gcc-internal-format
+msgid "%qE attribute ignored because %qT is already defined"
+msgstr ""
+
+#: c-common.c:6889
+#, gcc-internal-format
+msgid "visibility argument not a string"
+msgstr ""
+
+#: c-common.c:6901
+#, gcc-internal-format
+msgid "%qE attribute ignored on types"
+msgstr ""
+
+#: c-common.c:6917
+#, gcc-internal-format
+msgid "visibility argument must be one of \"default\", \"hidden\", \"protected\" or \"internal\""
+msgstr ""
+
+#: c-common.c:6928
+#, gcc-internal-format
+msgid "%qD redeclared with different visibility"
+msgstr ""
+
+#: c-common.c:6931 c-common.c:6935
+#, gcc-internal-format
+msgid "%qD was declared %qs which implies default visibility"
+msgstr ""
+
+#: c-common.c:7019
+#, gcc-internal-format
+msgid "tls_model argument not a string"
+msgstr ""
+
+#: c-common.c:7032
+#, gcc-internal-format
+msgid "tls_model argument must be one of \"local-exec\", \"initial-exec\", \"local-dynamic\" or \"global-dynamic\""
+msgstr ""
+
+#: c-common.c:7052 c-common.c:7144 config/m32c/m32c.c:2853
+#, gcc-internal-format
+msgid "%qE attribute applies only to functions"
+msgstr ""
+
+#: c-common.c:7058 c-common.c:7150
+#, gcc-internal-format
+msgid "can%'t set %qE attribute after definition"
+msgstr ""
+
+#: c-common.c:7104
+#, gcc-internal-format
+msgid "alloc_size parameter outside range"
+msgstr ""
+
+#: c-common.c:7207
+#, gcc-internal-format
+msgid "deprecated message is not a string"
+msgstr ""
+
+#: c-common.c:7247
+#, gcc-internal-format
+msgid "%qE attribute ignored for %qE"
+msgstr ""
+
+#: c-common.c:7307
+#, gcc-internal-format
+msgid "invalid vector type for attribute %qE"
+msgstr ""
+
+#: c-common.c:7313 ada/gcc-interface/utils.c:5481
+#: ada/gcc-interface/utils.c:5575
+#, gcc-internal-format
+msgid "vector size not an integral multiple of component size"
+msgstr ""
+
+#: c-common.c:7319 ada/gcc-interface/utils.c:5487
+#: ada/gcc-interface/utils.c:5581
+#, gcc-internal-format
+msgid "zero vector size"
+msgstr ""
+
+#: c-common.c:7327 ada/gcc-interface/utils.c:5495
+#: ada/gcc-interface/utils.c:5588
+#, gcc-internal-format
+msgid "number of components of the vector not a power of two"
+msgstr ""
+
+#: c-common.c:7355 ada/gcc-interface/utils.c:5235
+#, gcc-internal-format
+msgid "nonnull attribute without arguments on a non-prototype"
+msgstr ""
+
+#: c-common.c:7370 ada/gcc-interface/utils.c:5250
+#, gcc-internal-format
+msgid "nonnull argument has invalid operand number (argument %lu)"
+msgstr ""
+
+#: c-common.c:7389 ada/gcc-interface/utils.c:5269
+#, gcc-internal-format
+msgid "nonnull argument with out-of-range operand number (argument %lu, operand %lu)"
+msgstr ""
+
+#: c-common.c:7397 ada/gcc-interface/utils.c:5277
+#, gcc-internal-format
+msgid "nonnull argument references non-pointer operand (argument %lu, operand %lu)"
+msgstr ""
+
+#: c-common.c:7473
+#, gcc-internal-format
+msgid "not enough variable arguments to fit a sentinel"
+msgstr ""
+
+#: c-common.c:7487
+#, gcc-internal-format
+msgid "missing sentinel in function call"
+msgstr ""
+
+#: c-common.c:7528
+#, gcc-internal-format
+msgid "null argument where non-null required (argument %lu)"
+msgstr ""
+
+#: c-common.c:7593
+#, gcc-internal-format
+msgid "cleanup argument not an identifier"
+msgstr ""
+
+#: c-common.c:7600
+#, gcc-internal-format
+msgid "cleanup argument not a function"
+msgstr ""
+
+#: c-common.c:7639
+#, gcc-internal-format
+msgid "%qE attribute requires prototypes with named arguments"
+msgstr ""
+
+#: c-common.c:7650
+#, gcc-internal-format
+msgid "%qE attribute only applies to variadic functions"
+msgstr ""
+
+#: c-common.c:7662 ada/gcc-interface/utils.c:5323
+#, gcc-internal-format
+msgid "requested position is not an integer constant"
+msgstr ""
+
+#: c-common.c:7670 ada/gcc-interface/utils.c:5330
+#, gcc-internal-format
+msgid "requested position is less than zero"
+msgstr ""
+
+#: c-common.c:7794
+#, gcc-internal-format
+msgid "Bad option %s to optimize attribute."
+msgstr ""
+
+#: c-common.c:7797
+#, gcc-internal-format
+msgid "Bad option %s to pragma attribute"
+msgstr ""
+
+#: c-common.c:7994
+#, gcc-internal-format
+msgid "not enough arguments to function %qE"
+msgstr ""
+
+#: c-common.c:8000 c-typeck.c:2818
+#, gcc-internal-format
+msgid "too many arguments to function %qE"
+msgstr ""
+
+#: c-common.c:8030 c-common.c:8076
+#, gcc-internal-format
+msgid "non-floating-point argument in call to function %qE"
+msgstr ""
+
+#: c-common.c:8053
+#, gcc-internal-format
+msgid "non-floating-point arguments in call to function %qE"
+msgstr ""
+
+#: c-common.c:8069
+#, gcc-internal-format
+msgid "non-const integer argument %u in call to function %qE"
+msgstr ""
+
+#: c-common.c:8359
+#, gcc-internal-format
+msgid "cannot apply %<offsetof%> to static data member %qD"
+msgstr ""
+
+#: c-common.c:8364
+#, gcc-internal-format
+msgid "cannot apply %<offsetof%> when %<operator[]%> is overloaded"
+msgstr ""
+
+#: c-common.c:8371
+#, gcc-internal-format
+msgid "cannot apply %<offsetof%> to a non constant address"
+msgstr ""
+
+#: c-common.c:8384 cp/typeck.c:5091
+#, gcc-internal-format
+msgid "attempt to take address of bit-field structure member %qD"
+msgstr ""
+
+#: c-common.c:8443
+#, gcc-internal-format
+msgid "index %E denotes an offset greater than size of %qT"
+msgstr ""
+
+#: c-common.c:8480
+#, gcc-internal-format
+msgid "lvalue required as left operand of assignment"
+msgstr ""
+
+#: c-common.c:8483
+#, gcc-internal-format
+msgid "lvalue required as increment operand"
+msgstr ""
+
+#: c-common.c:8486
+#, gcc-internal-format
+msgid "lvalue required as decrement operand"
+msgstr ""
+
+#: c-common.c:8489
+#, gcc-internal-format
+msgid "lvalue required as unary %<&%> operand"
+msgstr ""
+
+#: c-common.c:8492
+#, gcc-internal-format
+msgid "lvalue required in asm statement"
+msgstr ""
+
+#: c-common.c:8622
+#, gcc-internal-format
+msgid "size of array is too large"
+msgstr ""
+
+#: c-common.c:8658 c-common.c:8709 c-typeck.c:3045
+#, gcc-internal-format
+msgid "too few arguments to function %qE"
+msgstr ""
+
+#: c-common.c:8675 c-typeck.c:5406 config/mep/mep.c:6321
+#, gcc-internal-format
+msgid "incompatible type for argument %d of %qE"
+msgstr ""
+
+#: c-common.c:8872
+#, gcc-internal-format
+msgid "array subscript has type %<char%>"
+msgstr ""
+
+#: c-common.c:8907
+#, gcc-internal-format
+msgid "suggest parentheses around %<+%> inside %<<<%>"
+msgstr ""
+
+#: c-common.c:8910
+#, gcc-internal-format
+msgid "suggest parentheses around %<-%> inside %<<<%>"
+msgstr ""
+
+#: c-common.c:8916
+#, gcc-internal-format
+msgid "suggest parentheses around %<+%> inside %<>>%>"
+msgstr ""
+
+#: c-common.c:8919
+#, gcc-internal-format
+msgid "suggest parentheses around %<-%> inside %<>>%>"
+msgstr ""
+
+#: c-common.c:8925
+#, gcc-internal-format
+msgid "suggest parentheses around %<&&%> within %<||%>"
+msgstr ""
+
+#: c-common.c:8934
+#, gcc-internal-format
+msgid "suggest parentheses around arithmetic in operand of %<|%>"
+msgstr ""
+
+#: c-common.c:8939
+#, gcc-internal-format
+msgid "suggest parentheses around comparison in operand of %<|%>"
+msgstr ""
+
+#: c-common.c:8943
+#, gcc-internal-format
+msgid "suggest parentheses around operand of %<!%> or change %<|%> to %<||%> or %<!%> to %<~%>"
+msgstr ""
+
+#: c-common.c:8953
+#, gcc-internal-format
+msgid "suggest parentheses around arithmetic in operand of %<^%>"
+msgstr ""
+
+#: c-common.c:8958
+#, gcc-internal-format
+msgid "suggest parentheses around comparison in operand of %<^%>"
+msgstr ""
+
+#: c-common.c:8964
+#, gcc-internal-format
+msgid "suggest parentheses around %<+%> in operand of %<&%>"
+msgstr ""
+
+#: c-common.c:8967
+#, gcc-internal-format
+msgid "suggest parentheses around %<-%> in operand of %<&%>"
+msgstr ""
+
+#: c-common.c:8972
+#, gcc-internal-format
+msgid "suggest parentheses around comparison in operand of %<&%>"
+msgstr ""
+
+#: c-common.c:8976
+#, gcc-internal-format
+msgid "suggest parentheses around operand of %<!%> or change %<&%> to %<&&%> or %<!%> to %<~%>"
+msgstr ""
+
+#: c-common.c:8984
+#, gcc-internal-format
+msgid "suggest parentheses around comparison in operand of %<==%>"
+msgstr ""
+
+#: c-common.c:8990
+#, gcc-internal-format
+msgid "suggest parentheses around comparison in operand of %<!=%>"
+msgstr ""
+
+#: c-common.c:9001
+#, gcc-internal-format
+msgid "comparisons like %<X<=Y<=Z%> do not have their mathematical meaning"
+msgstr ""
+
+#: c-common.c:9016
+#, gcc-internal-format
+msgid "label %q+D defined but not used"
+msgstr ""
+
+#: c-common.c:9018
+#, gcc-internal-format
+msgid "label %q+D declared but not defined"
+msgstr ""
+
+#: c-common.c:9038
+#, gcc-internal-format
+msgid "division by zero"
+msgstr ""
+
+#: c-common.c:9070
+#, gcc-internal-format
+msgid "comparison between types %qT and %qT"
+msgstr ""
+
+#: c-common.c:9121
+#, gcc-internal-format
+msgid "comparison between signed and unsigned integer expressions"
+msgstr ""
+
+#: c-common.c:9172
+#, gcc-internal-format
+msgid "promoted ~unsigned is always non-zero"
+msgstr ""
+
+#: c-common.c:9175
+#, gcc-internal-format
+msgid "comparison of promoted ~unsigned with constant"
+msgstr ""
+
+#: c-common.c:9185
+#, gcc-internal-format
+msgid "comparison of promoted ~unsigned with unsigned"
+msgstr ""
+
+#. Except for passing an argument to an unprototyped function,
+#. this is a constraint violation.  When passing an argument to
+#. an unprototyped function, it is compile-time undefined;
+#. making it a constraint in that case was rejected in
+#. DR#252.
+#: c-convert.c:102 c-typeck.c:1900 c-typeck.c:4982 cp/typeck.c:1836
+#: cp/typeck.c:6415 cp/typeck.c:7040 fortran/convert.c:88
+#, gcc-internal-format
+msgid "void value not ignored as it ought to be"
+msgstr ""
+
+#: c-convert.c:156 fortran/convert.c:121 java/typeck.c:151
+#, gcc-internal-format
+msgid "conversion to non-scalar type requested"
+msgstr ""
+
+#: c-decl.c:696
+#, gcc-internal-format
+msgid "array %q+D assumed to have one element"
+msgstr ""
+
+#: c-decl.c:737
+#, gcc-internal-format
+msgid "%qD is static but used in inline function %qD which is not static"
+msgstr ""
+
+#: c-decl.c:742
+#, gcc-internal-format
+msgid "%q+D is static but declared in inline function %qD which is not static"
+msgstr ""
+
+#: c-decl.c:954
+#, gcc-internal-format
+msgid "GCC supports only %u nested scopes"
+msgstr ""
+
+#: c-decl.c:1102 cp/decl.c:356
+#, gcc-internal-format
+msgid "label %q+D used but not defined"
+msgstr ""
+
+#: c-decl.c:1147
+#, gcc-internal-format
+msgid "nested function %q+D declared but never defined"
+msgstr ""
+
+#: c-decl.c:1159
+#, gcc-internal-format
+msgid "inline function %q+D declared but never defined"
+msgstr ""
+
+#: c-decl.c:1174 cp/decl.c:599
+#, gcc-internal-format
+msgid "unused variable %q+D"
+msgstr ""
+
+#: c-decl.c:1178
+#, gcc-internal-format
+msgid "type of array %q+D completed incompatibly with implicit initialization"
+msgstr ""
+
+#: c-decl.c:1462 c-decl.c:5690 c-decl.c:6475 c-decl.c:7076
+#, gcc-internal-format
+msgid "originally defined here"
+msgstr ""
+
+#: c-decl.c:1533
+#, gcc-internal-format
+msgid "a parameter list with an ellipsis can%'t match an empty parameter name list declaration"
+msgstr ""
+
+#: c-decl.c:1540
+#, gcc-internal-format
+msgid "an argument type that has a default promotion can%'t match an empty parameter name list declaration"
+msgstr ""
+
+#: c-decl.c:1581
+#, gcc-internal-format
+msgid "prototype for %q+D declares more arguments than previous old-style definition"
+msgstr ""
+
+#: c-decl.c:1587
+#, gcc-internal-format
+msgid "prototype for %q+D declares fewer arguments than previous old-style definition"
+msgstr ""
+
+#: c-decl.c:1596
+#, gcc-internal-format
+msgid "prototype for %q+D declares argument %d with incompatible type"
+msgstr ""
+
+#. If we get here, no errors were found, but do issue a warning
+#. for this poor-style construct.
+#: c-decl.c:1609
+#, gcc-internal-format
+msgid "prototype for %q+D follows non-prototype definition"
+msgstr ""
+
+#: c-decl.c:1624
+#, gcc-internal-format
+msgid "previous definition of %q+D was here"
+msgstr ""
+
+#: c-decl.c:1626
+#, gcc-internal-format
+msgid "previous implicit declaration of %q+D was here"
+msgstr ""
+
+#: c-decl.c:1628
+#, gcc-internal-format
+msgid "previous declaration of %q+D was here"
+msgstr ""
+
+#: c-decl.c:1668
+#, gcc-internal-format
+msgid "%q+D redeclared as different kind of symbol"
+msgstr ""
+
+#: c-decl.c:1672
+#, gcc-internal-format
+msgid "built-in function %q+D declared as non-function"
+msgstr ""
+
+#: c-decl.c:1675 c-decl.c:1822 c-decl.c:2514
+#, gcc-internal-format
+msgid "declaration of %q+D shadows a built-in function"
+msgstr ""
+
+#: c-decl.c:1684
+#, gcc-internal-format
+msgid "redeclaration of enumerator %q+D"
+msgstr ""
+
+#. If types don't match for a built-in, throw away the
+#. built-in.  No point in calling locate_old_decl here, it
+#. won't print anything.
+#: c-decl.c:1705
+#, gcc-internal-format
+msgid "conflicting types for built-in function %q+D"
+msgstr ""
+
+#: c-decl.c:1730 c-decl.c:1743 c-decl.c:1779
+#, gcc-internal-format
+msgid "conflicting types for %q+D"
+msgstr ""
+
+#: c-decl.c:1759
+#, gcc-internal-format
+msgid "conflicting named address spaces (generic vs %s) for %q+D"
+msgstr ""
+
+#: c-decl.c:1763
+#, gcc-internal-format
+msgid "conflicting named address spaces (%s vs generic) for %q+D"
+msgstr ""
+
+#: c-decl.c:1767
+#, gcc-internal-format
+msgid "conflicting named address spaces (%s vs %s) for %q+D"
+msgstr ""
+
+#: c-decl.c:1776
+#, gcc-internal-format
+msgid "conflicting type qualifiers for %q+D"
+msgstr ""
+
+#. Allow OLDDECL to continue in use.
+#: c-decl.c:1797
+#, gcc-internal-format
+msgid "redefinition of typedef %q+D"
+msgstr ""
+
+#: c-decl.c:1848 c-decl.c:1951
+#, gcc-internal-format
+msgid "redefinition of %q+D"
+msgstr ""
+
+#: c-decl.c:1883 c-decl.c:1989
+#, gcc-internal-format
+msgid "static declaration of %q+D follows non-static declaration"
+msgstr ""
+
+#: c-decl.c:1893 c-decl.c:1901 c-decl.c:1979 c-decl.c:1986
+#, gcc-internal-format
+msgid "non-static declaration of %q+D follows static declaration"
+msgstr ""
+
+#: c-decl.c:1917
+#, gcc-internal-format
+msgid "%<gnu_inline%> attribute present on %q+D"
+msgstr ""
+
+#: c-decl.c:1920
+#, gcc-internal-format
+msgid "but not here"
+msgstr ""
+
+#: c-decl.c:1938
+#, gcc-internal-format
+msgid "thread-local declaration of %q+D follows non-thread-local declaration"
+msgstr ""
+
+#: c-decl.c:1941
+#, gcc-internal-format
+msgid "non-thread-local declaration of %q+D follows thread-local declaration"
+msgstr ""
+
+#: c-decl.c:1971
+#, gcc-internal-format
+msgid "extern declaration of %q+D follows declaration with no linkage"
+msgstr ""
+
+#: c-decl.c:2007
+#, gcc-internal-format
+msgid "declaration of %q+D with no linkage follows extern declaration"
+msgstr ""
+
+#: c-decl.c:2013
+#, gcc-internal-format
+msgid "redeclaration of %q+D with no linkage"
+msgstr ""
+
+#: c-decl.c:2039
+#, gcc-internal-format
+msgid "redeclaration of %q+D with different visibility (old visibility preserved)"
+msgstr ""
+
+#: c-decl.c:2050
+#, gcc-internal-format
+msgid "inline declaration of %qD follows declaration with attribute noinline"
+msgstr ""
+
+#: c-decl.c:2057
+#, gcc-internal-format
+msgid "declaration of %q+D with attribute noinline follows inline declaration "
+msgstr ""
+
+#: c-decl.c:2075
+#, gcc-internal-format
+msgid "redefinition of parameter %q+D"
+msgstr ""
+
+#: c-decl.c:2102
+#, gcc-internal-format
+msgid "redundant redeclaration of %q+D"
+msgstr ""
+
+#: c-decl.c:2501
+#, gcc-internal-format
+msgid "declaration of %q+D shadows previous non-variable"
+msgstr ""
+
+#: c-decl.c:2506
+#, gcc-internal-format
+msgid "declaration of %q+D shadows a parameter"
+msgstr ""
+
+#: c-decl.c:2509
+#, gcc-internal-format
+msgid "declaration of %q+D shadows a global declaration"
+msgstr ""
+
+#: c-decl.c:2519
+#, gcc-internal-format
+msgid "declaration of %q+D shadows a previous local"
+msgstr ""
+
+#: c-decl.c:2523 cp/name-lookup.c:1050 cp/name-lookup.c:1083
+#: cp/name-lookup.c:1092
+#, gcc-internal-format
+msgid "shadowed declaration is here"
+msgstr ""
+
+#: c-decl.c:2650
+#, gcc-internal-format
+msgid "nested extern declaration of %qD"
+msgstr ""
+
+#: c-decl.c:2818 c-decl.c:2821
+#, gcc-internal-format
+msgid "implicit declaration of function %qE"
+msgstr ""
+
+#: c-decl.c:2884
+#, gcc-internal-format
+msgid "incompatible implicit declaration of built-in function %qD"
+msgstr ""
+
+#: c-decl.c:2893
+#, gcc-internal-format
+msgid "incompatible implicit declaration of function %qD"
+msgstr ""
+
+#: c-decl.c:2946
+#, gcc-internal-format
+msgid "%qE undeclared here (not in a function)"
+msgstr ""
+
+#: c-decl.c:2951
+#, gcc-internal-format
+msgid "%qE undeclared (first use in this function)"
+msgstr ""
+
+#: c-decl.c:2954
+#, gcc-internal-format
+msgid "each undeclared identifier is reported only once for each function it appears in"
+msgstr ""
+
+#: c-decl.c:3004 cp/decl.c:2446
+#, gcc-internal-format
+msgid "label %qE referenced outside of any function"
+msgstr ""
+
+#: c-decl.c:3040
+#, gcc-internal-format
+msgid "jump into scope of identifier with variably modified type"
+msgstr ""
+
+#: c-decl.c:3043
+#, gcc-internal-format
+msgid "jump skips variable initialization"
+msgstr ""
+
+#: c-decl.c:3044 c-decl.c:3100 c-decl.c:3185
+#, gcc-internal-format
+msgid "label %qD defined here"
+msgstr ""
+
+#: c-decl.c:3045 c-decl.c:3309
+#, gcc-internal-format
+msgid "%qD declared here"
+msgstr ""
+
+#: c-decl.c:3099 c-decl.c:3184
+#, gcc-internal-format
+msgid "jump into statement expression"
+msgstr ""
+
+#: c-decl.c:3121
+#, gcc-internal-format
+msgid "duplicate label declaration %qE"
+msgstr ""
+
+#: c-decl.c:3215 cp/decl.c:2755
+#, gcc-internal-format
+msgid "duplicate label %qD"
+msgstr ""
+
+#: c-decl.c:3246
+#, gcc-internal-format
+msgid "traditional C lacks a separate namespace for labels, identifier %qE conflicts"
+msgstr ""
+
+#: c-decl.c:3307
+#, gcc-internal-format
+msgid "switch jumps over variable initialization"
+msgstr ""
+
+#: c-decl.c:3308 c-decl.c:3319
+#, gcc-internal-format
+msgid "switch starts here"
+msgstr ""
+
+#: c-decl.c:3318
+#, gcc-internal-format
+msgid "switch jumps into statement expression"
+msgstr ""
+
+#: c-decl.c:3389
+#, gcc-internal-format
+msgid "%qE defined as wrong kind of tag"
+msgstr ""
+
+#: c-decl.c:3621
+#, gcc-internal-format
+msgid "unnamed struct/union that defines no instances"
+msgstr ""
+
+#: c-decl.c:3630
+#, gcc-internal-format
+msgid "empty declaration with storage class specifier does not redeclare tag"
+msgstr ""
+
+#: c-decl.c:3643
+#, gcc-internal-format
+msgid "empty declaration with type qualifier does not redeclare tag"
+msgstr ""
+
+#: c-decl.c:3665 c-decl.c:3672
+#, gcc-internal-format
+msgid "useless type name in empty declaration"
+msgstr ""
+
+#: c-decl.c:3680
+#, gcc-internal-format
+msgid "%<inline%> in empty declaration"
+msgstr ""
+
+#: c-decl.c:3686
+#, gcc-internal-format
+msgid "%<auto%> in file-scope empty declaration"
+msgstr ""
+
+#: c-decl.c:3692
+#, gcc-internal-format
+msgid "%<register%> in file-scope empty declaration"
+msgstr ""
+
+#: c-decl.c:3698
+#, gcc-internal-format
+msgid "useless storage class specifier in empty declaration"
+msgstr ""
+
+#: c-decl.c:3704
+#, gcc-internal-format
+msgid "useless %<__thread%> in empty declaration"
+msgstr ""
+
+#: c-decl.c:3713
+#, gcc-internal-format
+msgid "useless type qualifier in empty declaration"
+msgstr ""
+
+#: c-decl.c:3720 c-parser.c:1198
+#, gcc-internal-format
+msgid "empty declaration"
+msgstr ""
+
+#: c-decl.c:3791
+#, gcc-internal-format
+msgid "ISO C90 does not support %<static%> or type qualifiers in parameter array declarators"
+msgstr ""
+
+#: c-decl.c:3795
+#, gcc-internal-format
+msgid "ISO C90 does not support %<[*]%> array declarators"
+msgstr ""
+
+#. C99 6.7.5.2p4
+#. A function definition isn't function prototype scope C99 6.2.1p4.
+#. C99 6.7.5.2p4
+#: c-decl.c:3802 c-decl.c:6064
+#, gcc-internal-format
+msgid "%<[*]%> not allowed in other than function prototype scope"
+msgstr ""
+
+#: c-decl.c:3915
+#, gcc-internal-format
+msgid "%q+D is usually a function"
+msgstr ""
+
+#: c-decl.c:3924
+#, gcc-internal-format
+msgid "typedef %qD is initialized (use __typeof__ instead)"
+msgstr ""
+
+#: c-decl.c:3929
+#, gcc-internal-format
+msgid "function %qD is initialized like a variable"
+msgstr ""
+
+#. DECL_INITIAL in a PARM_DECL is really DECL_ARG_TYPE.
+#: c-decl.c:3935
+#, gcc-internal-format
+msgid "parameter %qD is initialized"
+msgstr ""
+
+#: c-decl.c:3960
+#, gcc-internal-format
+msgid "variable %qD has initializer but incomplete type"
+msgstr ""
+
+#: c-decl.c:4049 cp/decl.c:4174 cp/decl.c:11712
+#, gcc-internal-format
+msgid "inline function %q+D given attribute noinline"
+msgstr ""
+
+#: c-decl.c:4146
+#, gcc-internal-format
+msgid "initializer fails to determine size of %q+D"
+msgstr ""
+
+#: c-decl.c:4151
+#, gcc-internal-format
+msgid "array size missing in %q+D"
+msgstr ""
+
+#: c-decl.c:4163
+#, gcc-internal-format
+msgid "zero or negative size array %q+D"
+msgstr ""
+
+#: c-decl.c:4218 varasm.c:2180
+#, gcc-internal-format
+msgid "storage size of %q+D isn%'t known"
+msgstr ""
+
+#: c-decl.c:4229
+#, gcc-internal-format
+msgid "storage size of %q+D isn%'t constant"
+msgstr ""
+
+#: c-decl.c:4276
+#, gcc-internal-format
+msgid "ignoring asm-specifier for non-static local variable %q+D"
+msgstr ""
+
+#: c-decl.c:4304
+#, gcc-internal-format
+msgid "cannot put object with volatile field into register"
+msgstr ""
+
+#: c-decl.c:4394
+#, gcc-internal-format
+msgid "uninitialized const %qD is invalid in C++"
+msgstr ""
+
+#: c-decl.c:4440
+#, gcc-internal-format
+msgid "ISO C forbids forward parameter declarations"
+msgstr ""
+
+#: c-decl.c:4527
+#, gcc-internal-format
+msgid "defining a type in a compound literal is invalid in C++"
+msgstr ""
+
+#: c-decl.c:4579 c-decl.c:4594
+#, gcc-internal-format
+msgid "bit-field %qs width not an integer constant"
+msgstr ""
+
+#: c-decl.c:4589
+#, gcc-internal-format
+msgid "bit-field %qs width not an integer constant expression"
+msgstr ""
+
+#: c-decl.c:4600
+#, gcc-internal-format
+msgid "negative width in bit-field %qs"
+msgstr ""
+
+#: c-decl.c:4605
+#, gcc-internal-format
+msgid "zero width for bit-field %qs"
+msgstr ""
+
+#: c-decl.c:4615
+#, gcc-internal-format
+msgid "bit-field %qs has invalid type"
+msgstr ""
+
+#: c-decl.c:4625
+#, gcc-internal-format
+msgid "type of bit-field %qs is a GCC extension"
+msgstr ""
+
+#: c-decl.c:4631
+#, gcc-internal-format
+msgid "width of %qs exceeds its type"
+msgstr ""
+
+#: c-decl.c:4644
+#, gcc-internal-format
+msgid "%qs is narrower than values of its type"
+msgstr ""
+
+#: c-decl.c:4663
+#, gcc-internal-format
+msgid "ISO C90 forbids array %qE whose size can%'t be evaluated"
+msgstr ""
+
+#: c-decl.c:4667
+#, gcc-internal-format
+msgid "ISO C90 forbids array whose size can%'t be evaluated"
+msgstr ""
+
+#: c-decl.c:4674
+#, gcc-internal-format
+msgid "ISO C90 forbids variable length array %qE"
+msgstr ""
+
+#: c-decl.c:4677
+#, gcc-internal-format
+msgid "ISO C90 forbids variable length array"
+msgstr ""
+
+#: c-decl.c:4686
+#, gcc-internal-format
+msgid "the size of array %qE can%'t be evaluated"
+msgstr ""
+
+#: c-decl.c:4690
+#, gcc-internal-format
+msgid "the size of array can %'t be evaluated"
+msgstr ""
+
+#: c-decl.c:4696
+#, gcc-internal-format
+msgid "variable length array %qE is used"
+msgstr ""
+
+#: c-decl.c:4700 cp/decl.c:7366
+#, gcc-internal-format
+msgid "variable length array is used"
+msgstr ""
+
+#: c-decl.c:4878 c-decl.c:5224 c-decl.c:5234
+#, gcc-internal-format
+msgid "variably modified %qE at file scope"
+msgstr ""
+
+#: c-decl.c:4880
+#, gcc-internal-format
+msgid "variably modified field at file scope"
+msgstr ""
+
+#: c-decl.c:4900
+#, gcc-internal-format
+msgid "type defaults to %<int%> in declaration of %qE"
+msgstr ""
+
+#: c-decl.c:4904
+#, gcc-internal-format
+msgid "type defaults to %<int%> in type name"
+msgstr ""
+
+#: c-decl.c:4937
+#, gcc-internal-format
+msgid "duplicate %<const%>"
+msgstr ""
+
+#: c-decl.c:4939
+#, gcc-internal-format
+msgid "duplicate %<restrict%>"
+msgstr ""
+
+#: c-decl.c:4941
+#, gcc-internal-format
+msgid "duplicate %<volatile%>"
+msgstr ""
+
+#: c-decl.c:4945
+#, gcc-internal-format
+msgid "conflicting named address spaces (%s vs %s)"
+msgstr ""
+
+#: c-decl.c:4967
+#, gcc-internal-format
+msgid "function definition declared %<auto%>"
+msgstr ""
+
+#: c-decl.c:4969
+#, gcc-internal-format
+msgid "function definition declared %<register%>"
+msgstr ""
+
+#: c-decl.c:4971
+#, gcc-internal-format
+msgid "function definition declared %<typedef%>"
+msgstr ""
+
+#: c-decl.c:4973
+#, gcc-internal-format
+msgid "function definition declared %<__thread%>"
+msgstr ""
+
+#: c-decl.c:4990
+#, gcc-internal-format
+msgid "storage class specified for structure field %qE"
+msgstr ""
+
+#: c-decl.c:4993
+#, gcc-internal-format
+msgid "storage class specified for structure field"
+msgstr ""
+
+#: c-decl.c:4997
+#, gcc-internal-format
+msgid "storage class specified for parameter %qE"
+msgstr ""
+
+#: c-decl.c:5000
+#, gcc-internal-format
+msgid "storage class specified for unnamed parameter"
+msgstr ""
+
+#: c-decl.c:5003 cp/decl.c:8294
+#, gcc-internal-format
+msgid "storage class specified for typename"
+msgstr ""
+
+#: c-decl.c:5020
+#, gcc-internal-format
+msgid "%qE initialized and declared %<extern%>"
+msgstr ""
+
+#: c-decl.c:5024
+#, gcc-internal-format
+msgid "%qE has both %<extern%> and initializer"
+msgstr ""
+
+#: c-decl.c:5029
+#, gcc-internal-format
+msgid "file-scope declaration of %qE specifies %<auto%>"
+msgstr ""
+
+#: c-decl.c:5033
+#, gcc-internal-format
+msgid "file-scope declaration of %qE specifies %<register%>"
+msgstr ""
+
+#: c-decl.c:5038
+#, gcc-internal-format
+msgid "nested function %qE declared %<extern%>"
+msgstr ""
+
+#: c-decl.c:5041
+#, gcc-internal-format
+msgid "function-scope %qE implicitly auto and declared %<__thread%>"
+msgstr ""
+
+#. Only the innermost declarator (making a parameter be of
+#. array type which is converted to pointer type)
+#. may have static or type qualifiers.
+#: c-decl.c:5088 c-decl.c:5418
+#, gcc-internal-format
+msgid "static or type qualifiers in non-parameter array declarator"
+msgstr ""
+
+#: c-decl.c:5136
+#, gcc-internal-format
+msgid "declaration of %qE as array of voids"
+msgstr ""
+
+#: c-decl.c:5138
+#, gcc-internal-format
+msgid "declaration of type name as array of voids"
+msgstr ""
+
+#: c-decl.c:5145
+#, gcc-internal-format
+msgid "declaration of %qE as array of functions"
+msgstr ""
+
+#: c-decl.c:5148
+#, gcc-internal-format
+msgid "declaration of type name as array of functions"
+msgstr ""
+
+#: c-decl.c:5155 c-decl.c:6862
+#, gcc-internal-format
+msgid "invalid use of structure with flexible array member"
+msgstr ""
+
+#: c-decl.c:5181
+#, gcc-internal-format
+msgid "size of array %qE has non-integer type"
+msgstr ""
+
+#: c-decl.c:5185
+#, gcc-internal-format
+msgid "size of unnamed array has non-integer type"
+msgstr ""
+
+#: c-decl.c:5195
+#, gcc-internal-format
+msgid "ISO C forbids zero-size array %qE"
+msgstr ""
+
+#: c-decl.c:5198
+#, gcc-internal-format
+msgid "ISO C forbids zero-size array"
+msgstr ""
+
+#: c-decl.c:5207
+#, gcc-internal-format
+msgid "size of array %qE is negative"
+msgstr ""
+
+#: c-decl.c:5209
+#, gcc-internal-format
+msgid "size of unnamed array is negative"
+msgstr ""
+
+#: c-decl.c:5285 c-decl.c:5649
+#, gcc-internal-format
+msgid "size of array %qE is too large"
+msgstr ""
+
+#: c-decl.c:5288 c-decl.c:5651
+#, gcc-internal-format
+msgid "size of unnamed array is too large"
+msgstr ""
+
+#: c-decl.c:5325
+#, gcc-internal-format
+msgid "ISO C90 does not support flexible array members"
+msgstr ""
+
+#. C99 6.7.5.2p4
+#: c-decl.c:5346
+#, gcc-internal-format
+msgid "%<[*]%> not in a declaration"
+msgstr ""
+
+#: c-decl.c:5359
+#, gcc-internal-format
+msgid "array type has incomplete element type"
+msgstr ""
+
+#: c-decl.c:5451
+#, gcc-internal-format
+msgid "%qE declared as function returning a function"
+msgstr ""
+
+#: c-decl.c:5454
+#, gcc-internal-format
+msgid "type name declared as function returning a function"
+msgstr ""
+
+#: c-decl.c:5461
+#, gcc-internal-format
+msgid "%qE declared as function returning an array"
+msgstr ""
+
+#: c-decl.c:5464
+#, gcc-internal-format
+msgid "type name declared as function returning an array"
+msgstr ""
+
+#: c-decl.c:5494
+#, gcc-internal-format
+msgid "function definition has qualified void return type"
+msgstr ""
+
+#: c-decl.c:5497 cp/decl.c:8400
+#, gcc-internal-format
+msgid "type qualifiers ignored on function return type"
+msgstr ""
+
+#: c-decl.c:5527 c-decl.c:5665 c-decl.c:5775 c-decl.c:5868
+#, gcc-internal-format
+msgid "ISO C forbids qualified function types"
+msgstr ""
+
+#: c-decl.c:5594
+#, gcc-internal-format
+msgid "%qs combined with %<auto%> qualifier for %qE"
+msgstr ""
+
+#: c-decl.c:5598
+#, gcc-internal-format
+msgid "%qs combined with %<register%> qualifier for %qE"
+msgstr ""
+
+#: c-decl.c:5604
+#, gcc-internal-format
+msgid "%qs specified for auto variable %qE"
+msgstr ""
+
+#: c-decl.c:5620
+#, gcc-internal-format
+msgid "%qs specified for parameter %qE"
+msgstr ""
+
+#: c-decl.c:5623
+#, gcc-internal-format
+msgid "%qs specified for unnamed parameter"
+msgstr ""
+
+#: c-decl.c:5629
+#, gcc-internal-format
+msgid "%qs specified for structure field %qE"
+msgstr ""
+
+#: c-decl.c:5632
+#, gcc-internal-format
+msgid "%qs specified for structure field"
+msgstr ""
+
+#: c-decl.c:5673
+#, gcc-internal-format
+msgid "typedef %q+D declared %<inline%>"
+msgstr ""
+
+#: c-decl.c:5709
+#, gcc-internal-format
+msgid "ISO C forbids const or volatile function types"
+msgstr ""
+
+#. C99 6.7.2.1p8
+#: c-decl.c:5719
+#, gcc-internal-format
+msgid "a member of a structure or union cannot have a variably modified type"
+msgstr ""
+
+#: c-decl.c:5736 cp/decl.c:7580
+#, gcc-internal-format
+msgid "variable or field %qE declared void"
+msgstr ""
+
+#: c-decl.c:5767
+#, gcc-internal-format
+msgid "attributes in parameter array declarator ignored"
+msgstr ""
+
+#: c-decl.c:5801
+#, gcc-internal-format
+msgid "parameter %q+D declared %<inline%>"
+msgstr ""
+
+#: c-decl.c:5814
+#, gcc-internal-format
+msgid "field %qE declared as a function"
+msgstr ""
+
+#: c-decl.c:5821
+#, gcc-internal-format
+msgid "field %qE has incomplete type"
+msgstr ""
+
+#: c-decl.c:5823
+#, gcc-internal-format
+msgid "unnamed field has incomplete type"
+msgstr ""
+
+#: c-decl.c:5840 c-decl.c:5851 c-decl.c:5854
+#, gcc-internal-format
+msgid "invalid storage class for function %qE"
+msgstr ""
+
+#: c-decl.c:5874
+#, gcc-internal-format
+msgid "%<noreturn%> function returns non-void value"
+msgstr ""
+
+#: c-decl.c:5910
+#, gcc-internal-format
+msgid "cannot inline function %<main%>"
+msgstr ""
+
+#: c-decl.c:5939
+#, gcc-internal-format
+msgid "variable previously declared %<static%> redeclared %<extern%>"
+msgstr ""
+
+#: c-decl.c:5949
+#, gcc-internal-format
+msgid "variable %q+D declared %<inline%>"
+msgstr ""
+
+#: c-decl.c:5984
+#, gcc-internal-format
+msgid "non-nested function with variably modified type"
+msgstr ""
+
+#: c-decl.c:5986
+#, gcc-internal-format
+msgid "object with variably modified type must have no linkage"
+msgstr ""
+
+#: c-decl.c:6069 c-decl.c:7492
+#, gcc-internal-format
+msgid "function declaration isn%'t a prototype"
+msgstr ""
+
+#: c-decl.c:6077
+#, gcc-internal-format
+msgid "parameter names (without types) in function declaration"
+msgstr ""
+
+#: c-decl.c:6112
+#, gcc-internal-format
+msgid "parameter %u (%q+D) has incomplete type"
+msgstr ""
+
+#: c-decl.c:6116
+#, gcc-internal-format
+msgid "parameter %u has incomplete type"
+msgstr ""
+
+#: c-decl.c:6127
+#, gcc-internal-format
+msgid "parameter %u (%q+D) has void type"
+msgstr ""
+
+#: c-decl.c:6131
+#, gcc-internal-format
+msgid "parameter %u has void type"
+msgstr ""
+
+#: c-decl.c:6202
+#, gcc-internal-format
+msgid "%<void%> as only parameter may not be qualified"
+msgstr ""
+
+#: c-decl.c:6206 c-decl.c:6240
+#, gcc-internal-format
+msgid "%<void%> must be the only parameter"
+msgstr ""
+
+#: c-decl.c:6234
+#, gcc-internal-format
+msgid "parameter %q+D has just a forward declaration"
+msgstr ""
+
+#. The %s will be one of 'struct', 'union', or 'enum'.
+#: c-decl.c:6279
+#, gcc-internal-format
+msgid "%<%s %E%> declared inside parameter list"
+msgstr ""
+
+#. The %s will be one of 'struct', 'union', or 'enum'.
+#: c-decl.c:6283
+#, gcc-internal-format
+msgid "anonymous %s declared inside parameter list"
+msgstr ""
+
+#: c-decl.c:6288
+#, gcc-internal-format
+msgid "its scope is only this definition or declaration, which is probably not what you want"
+msgstr ""
+
+#: c-decl.c:6386
+#, gcc-internal-format
+msgid "enum type defined here"
+msgstr ""
+
+#: c-decl.c:6392
+#, gcc-internal-format
+msgid "struct defined here"
+msgstr ""
+
+#: c-decl.c:6398
+#, gcc-internal-format
+msgid "union defined here"
+msgstr ""
+
+#: c-decl.c:6471
+#, gcc-internal-format
+msgid "redefinition of %<union %E%>"
+msgstr ""
+
+#: c-decl.c:6473
+#, gcc-internal-format
+msgid "redefinition of %<struct %E%>"
+msgstr ""
+
+#: c-decl.c:6482
+#, gcc-internal-format
+msgid "nested redefinition of %<union %E%>"
+msgstr ""
+
+#: c-decl.c:6484
+#, gcc-internal-format
+msgid "nested redefinition of %<struct %E%>"
+msgstr ""
+
+#: c-decl.c:6516 c-decl.c:7094
+#, gcc-internal-format
+msgid "defining type in %qs expression is invalid in C++"
+msgstr ""
+
+#: c-decl.c:6583 cp/decl.c:3910
+#, gcc-internal-format
+msgid "declaration does not declare anything"
+msgstr ""
+
+#: c-decl.c:6586
+#, gcc-internal-format
+msgid "ISO C doesn%'t support unnamed structs/unions"
+msgstr ""
+
+#: c-decl.c:6649 c-decl.c:6665
+#, gcc-internal-format
+msgid "duplicate member %q+D"
+msgstr ""
+
+#: c-decl.c:6768
+#, gcc-internal-format
+msgid "union has no named members"
+msgstr ""
+
+#: c-decl.c:6770
+#, gcc-internal-format
+msgid "union has no members"
+msgstr ""
+
+#: c-decl.c:6775
+#, gcc-internal-format
+msgid "struct has no named members"
+msgstr ""
+
+#: c-decl.c:6777
+#, gcc-internal-format
+msgid "struct has no members"
+msgstr ""
+
+#: c-decl.c:6842
+#, gcc-internal-format
+msgid "flexible array member in union"
+msgstr ""
+
+#: c-decl.c:6848
+#, gcc-internal-format
+msgid "flexible array member not at end of struct"
+msgstr ""
+
+#: c-decl.c:6854
+#, gcc-internal-format
+msgid "flexible array member in otherwise empty struct"
+msgstr ""
+
+#: c-decl.c:6971
+#, gcc-internal-format
+msgid "union cannot be made transparent"
+msgstr ""
+
+#: c-decl.c:7067
+#, gcc-internal-format
+msgid "nested redefinition of %<enum %E%>"
+msgstr ""
+
+#. This enum is a named one that has been declared already.
+#: c-decl.c:7074
+#, gcc-internal-format
+msgid "redeclaration of %<enum %E%>"
+msgstr ""
+
+#: c-decl.c:7149
+#, gcc-internal-format
+msgid "enumeration values exceed range of largest integer"
+msgstr ""
+
+#: c-decl.c:7166
+#, gcc-internal-format
+msgid "specified mode too small for enumeral values"
+msgstr ""
+
+#: c-decl.c:7270 c-decl.c:7286
+#, gcc-internal-format
+msgid "enumerator value for %qE is not an integer constant"
+msgstr ""
+
+#: c-decl.c:7281
+#, gcc-internal-format
+msgid "enumerator value for %qE is not an integer constant expression"
+msgstr ""
+
+#: c-decl.c:7305
+#, gcc-internal-format
+msgid "overflow in enumeration values"
+msgstr ""
+
+#: c-decl.c:7313
+#, gcc-internal-format
+msgid "ISO C restricts enumerator values to range of %<int%>"
+msgstr ""
+
+#: c-decl.c:7398
+#, gcc-internal-format
+msgid "inline function %qD given attribute noinline"
+msgstr ""
+
+#: c-decl.c:7416
+#, gcc-internal-format
+msgid "return type is an incomplete type"
+msgstr ""
+
+#: c-decl.c:7426
+#, gcc-internal-format
+msgid "return type defaults to %<int%>"
+msgstr ""
+
+#: c-decl.c:7500
+#, gcc-internal-format
+msgid "no previous prototype for %qD"
+msgstr ""
+
+#: c-decl.c:7509
+#, gcc-internal-format
+msgid "%qD was used with no prototype before its definition"
+msgstr ""
+
+#: c-decl.c:7516
+#, gcc-internal-format
+msgid "no previous declaration for %qD"
+msgstr ""
+
+#: c-decl.c:7526
+#, gcc-internal-format
+msgid "%qD was used with no declaration before its definition"
+msgstr ""
+
+#: c-decl.c:7549
+#, gcc-internal-format
+msgid "return type of %qD is not %<int%>"
+msgstr ""
+
+#: c-decl.c:7555
+#, gcc-internal-format
+msgid "%qD is normally a non-static function"
+msgstr ""
+
+#: c-decl.c:7590
+#, gcc-internal-format
+msgid "old-style parameter declarations in prototyped function definition"
+msgstr ""
+
+#: c-decl.c:7604
+#, gcc-internal-format
+msgid "traditional C rejects ISO C style function definitions"
+msgstr ""
+
+#: c-decl.c:7620
+#, gcc-internal-format
+msgid "parameter name omitted"
+msgstr ""
+
+#: c-decl.c:7657
+#, gcc-internal-format
+msgid "old-style function definition"
+msgstr ""
+
+#: c-decl.c:7666
+#, gcc-internal-format
+msgid "parameter name missing from parameter list"
+msgstr ""
+
+#: c-decl.c:7678
+#, gcc-internal-format
+msgid "%qD declared as a non-parameter"
+msgstr ""
+
+#: c-decl.c:7684
+#, gcc-internal-format
+msgid "multiple parameters named %qD"
+msgstr ""
+
+#: c-decl.c:7693
+#, gcc-internal-format
+msgid "parameter %qD declared with void type"
+msgstr ""
+
+#: c-decl.c:7722 c-decl.c:7726
+#, gcc-internal-format
+msgid "type of %qD defaults to %<int%>"
+msgstr ""
+
+#: c-decl.c:7746
+#, gcc-internal-format
+msgid "parameter %qD has incomplete type"
+msgstr ""
+
+#: c-decl.c:7753
+#, gcc-internal-format
+msgid "declaration for parameter %qD but no such parameter"
+msgstr ""
+
+#: c-decl.c:7805
+#, gcc-internal-format
+msgid "number of arguments doesn%'t match built-in prototype"
+msgstr ""
+
+#: c-decl.c:7816
+#, gcc-internal-format
+msgid "number of arguments doesn%'t match prototype"
+msgstr ""
+
+#: c-decl.c:7819 c-decl.c:7861 c-decl.c:7875
+#, gcc-internal-format
+msgid "prototype declaration"
+msgstr ""
+
+#: c-decl.c:7853
+#, gcc-internal-format
+msgid "promoted argument %qD doesn%'t match built-in prototype"
+msgstr ""
+
+#: c-decl.c:7858
+#, gcc-internal-format
+msgid "promoted argument %qD doesn%'t match prototype"
+msgstr ""
+
+#: c-decl.c:7868
+#, gcc-internal-format
+msgid "argument %qD doesn%'t match built-in prototype"
+msgstr ""
+
+#: c-decl.c:7873
+#, gcc-internal-format
+msgid "argument %qD doesn%'t match prototype"
+msgstr ""
+
+#: c-decl.c:8059 cp/decl.c:12560
+#, gcc-internal-format
+msgid "no return statement in function returning non-void"
+msgstr ""
+
+#. If we get here, declarations have been used in a for loop without
+#. the C99 for loop scope.  This doesn't make much sense, so don't
+#. allow it.
+#: c-decl.c:8132
+#, gcc-internal-format
+msgid "%<for%> loop initial declarations are only allowed in C99 mode"
+msgstr ""
+
+#: c-decl.c:8137
+#, gcc-internal-format
+msgid "use option -std=c99 or -std=gnu99 to compile your code"
+msgstr ""
+
+#: c-decl.c:8171
+#, gcc-internal-format
+msgid "declaration of static variable %qD in %<for%> loop initial declaration"
+msgstr ""
+
+#: c-decl.c:8175
+#, gcc-internal-format
+msgid "declaration of %<extern%> variable %qD in %<for%> loop initial declaration"
+msgstr ""
+
+#: c-decl.c:8182
+#, gcc-internal-format
+msgid "%<struct %E%> declared in %<for%> loop initial declaration"
+msgstr ""
+
+#: c-decl.c:8187
+#, gcc-internal-format
+msgid "%<union %E%> declared in %<for%> loop initial declaration"
+msgstr ""
+
+#: c-decl.c:8191
+#, gcc-internal-format
+msgid "%<enum %E%> declared in %<for%> loop initial declaration"
+msgstr ""
+
+#: c-decl.c:8195
+#, gcc-internal-format
+msgid "declaration of non-variable %qD in %<for%> loop initial declaration"
+msgstr ""
+
+#: c-decl.c:8446
+#, gcc-internal-format
+msgid "incompatible address space qualifiers %qs and %qs"
+msgstr ""
+
+#: c-decl.c:8485 c-decl.c:8782 c-decl.c:9148
+#, gcc-internal-format
+msgid "duplicate %qE"
+msgstr ""
+
+#: c-decl.c:8511 c-decl.c:8793 c-decl.c:9025
+#, gcc-internal-format
+msgid "two or more data types in declaration specifiers"
+msgstr ""
+
+#: c-decl.c:8523 cp/parser.c:2187
+#, gcc-internal-format
+msgid "%<long long long%> is too long for GCC"
+msgstr ""
+
+#: c-decl.c:8536
+#, gcc-internal-format
+msgid "ISO C90 does not support %<long long%>"
+msgstr ""
+
+#: c-decl.c:8694
+#, gcc-internal-format
+msgid "ISO C90 does not support complex types"
+msgstr ""
+
+#: c-decl.c:8733
+#, gcc-internal-format
+msgid "ISO C does not support saturating types"
+msgstr ""
+
+#: c-decl.c:8984
+#, gcc-internal-format
+msgid "ISO C does not support decimal floating point"
+msgstr ""
+
+#: c-decl.c:9006 c-decl.c:9209 c-parser.c:5372
+#, gcc-internal-format
+msgid "fixed-point types not supported for this target"
+msgstr ""
+
+#: c-decl.c:9008
+#, gcc-internal-format
+msgid "ISO C does not support fixed-point types"
+msgstr ""
+
+#: c-decl.c:9042
+#, gcc-internal-format
+msgid "C++ lookup of %qD would return a field, not a type"
+msgstr ""
+
+#: c-decl.c:9055
+#, gcc-internal-format
+msgid "%qE fails to be a typedef or built in type"
+msgstr ""
+
+#: c-decl.c:9099
+#, gcc-internal-format
+msgid "%qE is not at beginning of declaration"
+msgstr ""
+
+#: c-decl.c:9113
+#, gcc-internal-format
+msgid "%<__thread%> used with %<auto%>"
+msgstr ""
+
+#: c-decl.c:9115
+#, gcc-internal-format
+msgid "%<__thread%> used with %<register%>"
+msgstr ""
+
+#: c-decl.c:9117
+#, gcc-internal-format
+msgid "%<__thread%> used with %<typedef%>"
+msgstr ""
+
+#: c-decl.c:9128
+#, gcc-internal-format
+msgid "%<__thread%> before %<extern%>"
+msgstr ""
+
+#: c-decl.c:9137
+#, gcc-internal-format
+msgid "%<__thread%> before %<static%>"
+msgstr ""
+
+#: c-decl.c:9153
+#, gcc-internal-format
+msgid "multiple storage classes in declaration specifiers"
+msgstr ""
+
+#: c-decl.c:9160
+#, gcc-internal-format
+msgid "%<__thread%> used with %qE"
+msgstr ""
+
+#: c-decl.c:9207
+#, gcc-internal-format
+msgid "%<_Sat%> is used without %<_Fract%> or %<_Accum%>"
+msgstr ""
+
+#: c-decl.c:9221
+#, gcc-internal-format
+msgid "ISO C does not support plain %<complex%> meaning %<double complex%>"
+msgstr ""
+
+#: c-decl.c:9266 c-decl.c:9292
+#, gcc-internal-format
+msgid "ISO C does not support complex integer types"
+msgstr ""
+
+#: c-decl.c:9446 toplev.c:866
+#, gcc-internal-format
+msgid "%q+F used but never defined"
+msgstr ""
+
+#: c-format.c:98 c-format.c:209
+#, gcc-internal-format
+msgid "format string has invalid operand number"
+msgstr ""
+
+#: c-format.c:115
+#, gcc-internal-format
+msgid "function does not return string type"
+msgstr ""
+
+#: c-format.c:144
+#, gcc-internal-format
+msgid "format string argument not a string type"
+msgstr ""
+
+#: c-format.c:187
+#, gcc-internal-format
+msgid "unrecognized format specifier"
+msgstr ""
+
+#: c-format.c:201
+#, gcc-internal-format
+msgid "%qE is an unrecognized format function type"
+msgstr ""
+
+#: c-format.c:215
+#, gcc-internal-format
+msgid "%<...%> has invalid operand number"
+msgstr ""
+
+#: c-format.c:222
+#, gcc-internal-format
+msgid "format string argument follows the args to be formatted"
+msgstr ""
+
+#: c-format.c:923
+#, gcc-internal-format
+msgid "function might be possible candidate for %qs format attribute"
+msgstr ""
+
+#: c-format.c:1015 c-format.c:1036 c-format.c:2060
+#, gcc-internal-format
+msgid "missing $ operand number in format"
+msgstr ""
+
+#: c-format.c:1045
+#, gcc-internal-format
+msgid "%s does not support %%n$ operand number formats"
+msgstr ""
+
+#: c-format.c:1052
+#, gcc-internal-format
+msgid "operand number out of range in format"
+msgstr ""
+
+#: c-format.c:1075
+#, gcc-internal-format
+msgid "format argument %d used more than once in %s format"
+msgstr ""
+
+#: c-format.c:1107
+#, gcc-internal-format
+msgid "$ operand number used after format without operand number"
+msgstr ""
+
+#: c-format.c:1138
+#, gcc-internal-format
+msgid "format argument %d unused before used argument %d in $-style format"
+msgstr ""
+
+#: c-format.c:1233
+#, gcc-internal-format
+msgid "format not a string literal, format string not checked"
+msgstr ""
+
+#: c-format.c:1248 c-format.c:1251
+#, gcc-internal-format
+msgid "format not a string literal and no format arguments"
+msgstr ""
+
+#: c-format.c:1254
+#, gcc-internal-format
+msgid "format not a string literal, argument types not checked"
+msgstr ""
+
+#: c-format.c:1267
+#, gcc-internal-format
+msgid "too many arguments for format"
+msgstr ""
+
+#: c-format.c:1270
+#, gcc-internal-format
+msgid "unused arguments in $-style format"
+msgstr ""
+
+#: c-format.c:1273
+#, gcc-internal-format
+msgid "zero-length %s format string"
+msgstr ""
+
+#: c-format.c:1277
+#, gcc-internal-format
+msgid "format is a wide character string"
+msgstr ""
+
+#: c-format.c:1280
+#, gcc-internal-format
+msgid "unterminated format string"
+msgstr ""
+
+#: c-format.c:1489
+#, gcc-internal-format
+msgid "embedded %<\\0%> in format"
+msgstr ""
+
+#: c-format.c:1504
+#, gcc-internal-format
+msgid "spurious trailing %<%%%> in format"
+msgstr ""
+
+#: c-format.c:1548 c-format.c:1823
+#, gcc-internal-format
+msgid "repeated %s in format"
+msgstr ""
+
+#: c-format.c:1561
+#, gcc-internal-format
+msgid "missing fill character at end of strfmon format"
+msgstr ""
+
+#: c-format.c:1605 c-format.c:1708 c-format.c:2007 c-format.c:2072
+#, gcc-internal-format
+msgid "too few arguments for format"
+msgstr ""
+
+#: c-format.c:1647
+#, gcc-internal-format
+msgid "zero width in %s format"
+msgstr ""
+
+#: c-format.c:1665
+#, gcc-internal-format
+msgid "empty left precision in %s format"
+msgstr ""
+
+#: c-format.c:1739
+#, gcc-internal-format
+msgid "empty precision in %s format"
+msgstr ""
+
+#: c-format.c:1807
+#, gcc-internal-format
+msgid "%s does not support the %qs %s length modifier"
+msgstr ""
+
+#: c-format.c:1840
+#, gcc-internal-format
+msgid "conversion lacks type at end of format"
+msgstr ""
+
+#: c-format.c:1851
+#, gcc-internal-format
+msgid "unknown conversion type character %qc in format"
+msgstr ""
+
+#: c-format.c:1854
+#, gcc-internal-format
+msgid "unknown conversion type character 0x%x in format"
+msgstr ""
+
+#: c-format.c:1861
+#, gcc-internal-format
+msgid "%s does not support the %<%%%c%> %s format"
+msgstr ""
+
+#: c-format.c:1877
+#, gcc-internal-format
+msgid "%s used with %<%%%c%> %s format"
+msgstr ""
+
+#: c-format.c:1886
+#, gcc-internal-format
+msgid "%s does not support %s"
+msgstr ""
+
+#: c-format.c:1896
+#, gcc-internal-format
+msgid "%s does not support %s with the %<%%%c%> %s format"
+msgstr ""
+
+#: c-format.c:1932
+#, gcc-internal-format
+msgid "%s ignored with %s and %<%%%c%> %s format"
+msgstr ""
+
+#: c-format.c:1936
+#, gcc-internal-format
+msgid "%s ignored with %s in %s format"
+msgstr ""
+
+#: c-format.c:1943
+#, gcc-internal-format
+msgid "use of %s and %s together with %<%%%c%> %s format"
+msgstr ""
+
+#: c-format.c:1947
+#, gcc-internal-format
+msgid "use of %s and %s together in %s format"
+msgstr ""
+
+#: c-format.c:1966
+#, gcc-internal-format
+msgid "%<%%%c%> yields only last 2 digits of year in some locales"
+msgstr ""
+
+#: c-format.c:1969
+#, gcc-internal-format
+msgid "%<%%%c%> yields only last 2 digits of year"
+msgstr ""
+
+#. The end of the format string was reached.
+#: c-format.c:1986
+#, gcc-internal-format
+msgid "no closing %<]%> for %<%%[%> format"
+msgstr ""
+
+#: c-format.c:2000
+#, gcc-internal-format
+msgid "use of %qs length modifier with %qc type character"
+msgstr ""
+
+#: c-format.c:2022
+#, gcc-internal-format
+msgid "%s does not support the %<%%%s%c%> %s format"
+msgstr ""
+
+#: c-format.c:2039
+#, gcc-internal-format
+msgid "operand number specified with suppressed assignment"
+msgstr ""
+
+#: c-format.c:2042
+#, gcc-internal-format
+msgid "operand number specified for format taking no argument"
+msgstr ""
+
+#: c-format.c:2178
+#, gcc-internal-format
+msgid "writing through null pointer (argument %d)"
+msgstr ""
+
+#: c-format.c:2186
+#, gcc-internal-format
+msgid "reading through null pointer (argument %d)"
+msgstr ""
+
+#: c-format.c:2206
+#, gcc-internal-format
+msgid "writing into constant object (argument %d)"
+msgstr ""
+
+#: c-format.c:2217
+#, gcc-internal-format
+msgid "extra type qualifiers in format argument (argument %d)"
+msgstr ""
+
+#: c-format.c:2334
+#, gcc-internal-format
+msgid "%s should have type %<%s%s%>, but argument %d has type %qT"
+msgstr ""
+
+#: c-format.c:2338
+#, gcc-internal-format
+msgid "format %q.*s expects type %<%s%s%>, but argument %d has type %qT"
+msgstr ""
+
+#: c-format.c:2346
+#, gcc-internal-format
+msgid "%s should have type %<%T%s%>, but argument %d has type %qT"
+msgstr ""
+
+#: c-format.c:2350
+#, gcc-internal-format
+msgid "format %q.*s expects type %<%T%s%>, but argument %d has type %qT"
+msgstr ""
+
+#: c-format.c:2409 c-format.c:2415 c-format.c:2566
+#, gcc-internal-format
+msgid "%<__gcc_host_wide_int__%> is not defined as a type"
+msgstr ""
+
+#: c-format.c:2422 c-format.c:2576
+#, gcc-internal-format
+msgid "%<__gcc_host_wide_int__%> is not defined as %<long%> or %<long long%>"
+msgstr ""
+
+#: c-format.c:2472
+#, gcc-internal-format
+msgid "%<locus%> is not defined as a type"
+msgstr ""
+
+#: c-format.c:2525
+#, gcc-internal-format
+msgid "%<location_t%> is not defined as a type"
+msgstr ""
+
+#: c-format.c:2542
+#, gcc-internal-format
+msgid "%<tree%> is not defined as a type"
+msgstr ""
+
+#: c-format.c:2547
+#, gcc-internal-format
+msgid "%<tree%> is not defined as a pointer type"
+msgstr ""
+
+#: c-format.c:2818
+#, gcc-internal-format
+msgid "args to be formatted is not %<...%>"
+msgstr ""
+
+#: c-format.c:2830
+#, gcc-internal-format
+msgid "strftime formats cannot format arguments"
+msgstr ""
+
+#: c-lex.c:232
+#, gcc-internal-format
+msgid "badly nested C headers from preprocessor"
+msgstr ""
+
+#: c-lex.c:267
+#, gcc-internal-format
+msgid "ignoring #pragma %s %s"
+msgstr ""
+
+#. ... or not.
+#: c-lex.c:383
+#, gcc-internal-format
+msgid "stray %<@%> in program"
+msgstr ""
+
+#: c-lex.c:398
+#, gcc-internal-format
+msgid "stray %qs in program"
+msgstr ""
+
+#: c-lex.c:408
+#, gcc-internal-format
+msgid "missing terminating %c character"
+msgstr ""
+
+#: c-lex.c:410
+#, gcc-internal-format
+msgid "stray %qc in program"
+msgstr ""
+
+#: c-lex.c:412
+#, gcc-internal-format
+msgid "stray %<\\%o%> in program"
+msgstr ""
+
+#: c-lex.c:572
+#, gcc-internal-format
+msgid "this decimal constant is unsigned only in ISO C90"
+msgstr ""
+
+#: c-lex.c:576
+#, gcc-internal-format
+msgid "this decimal constant would be unsigned in ISO C90"
+msgstr ""
+
+#: c-lex.c:596
+#, gcc-internal-format
+msgid "integer constant is too large for %<unsigned long%> type"
+msgstr ""
+
+#: c-lex.c:633
+#, gcc-internal-format
+msgid "unsuffixed float constant"
+msgstr ""
+
+#: c-lex.c:665
+#, gcc-internal-format
+msgid "unsupported non-standard suffix on floating constant"
+msgstr ""
+
+#: c-lex.c:671
+#, gcc-internal-format
+msgid "non-standard suffix on floating constant"
+msgstr ""
+
+#: c-lex.c:725 c-lex.c:727
+#, gcc-internal-format
+msgid "floating constant exceeds range of %qT"
+msgstr ""
+
+#: c-lex.c:736
+#, gcc-internal-format
+msgid "floating constant truncated to zero"
+msgstr ""
+
+#: c-lex.c:933 cp/parser.c:3005
+#, gcc-internal-format
+msgid "unsupported non-standard concatenation of string literals"
+msgstr ""
+
+#: c-lex.c:955
+#, gcc-internal-format
+msgid "traditional C rejects string constant concatenation"
+msgstr ""
+
+#: c-omp.c:126
+#, gcc-internal-format
+msgid "invalid expression type for %<#pragma omp atomic%>"
+msgstr ""
+
+#: c-omp.c:260 cp/semantics.c:4501
+#, gcc-internal-format
+msgid "invalid type for iteration variable %qE"
+msgstr ""
+
+#: c-omp.c:273
+#, gcc-internal-format
+msgid "%qE is not initialized"
+msgstr ""
+
+#: c-omp.c:290 cp/semantics.c:4416
+#, gcc-internal-format
+msgid "missing controlling predicate"
+msgstr ""
+
+#: c-omp.c:368 cp/semantics.c:4173
+#, gcc-internal-format
+msgid "invalid controlling predicate"
+msgstr ""
+
+#: c-omp.c:375 cp/semantics.c:4422
+#, gcc-internal-format
+msgid "missing increment expression"
+msgstr ""
+
+#: c-omp.c:444 cp/semantics.c:4278
+#, gcc-internal-format
+msgid "invalid increment expression"
+msgstr ""
+
+#: c-opts.c:151
+#, gcc-internal-format
+msgid "no class name specified with %qs"
+msgstr ""
+
+#: c-opts.c:155
+#, gcc-internal-format
+msgid "assertion missing after %qs"
+msgstr ""
+
+#: c-opts.c:160
+#, gcc-internal-format
+msgid "macro name missing after %qs"
+msgstr ""
+
+#: c-opts.c:169
+#, gcc-internal-format
+msgid "missing path after %qs"
+msgstr ""
+
+#: c-opts.c:178
+#, gcc-internal-format
+msgid "missing filename after %qs"
+msgstr ""
+
+#: c-opts.c:183
+#, gcc-internal-format
+msgid "missing makefile target after %qs"
+msgstr ""
+
+#: c-opts.c:326
+#, gcc-internal-format
+msgid "-I- specified twice"
+msgstr ""
+
+#: c-opts.c:329
+#, gcc-internal-format
+msgid "obsolete option -I- used, please use -iquote instead"
+msgstr ""
+
+#: c-opts.c:513
+#, gcc-internal-format
+msgid "argument %qs to %<-Wnormalized%> not recognized"
+msgstr ""
+
+#: c-opts.c:596
+#, gcc-internal-format
+msgid "switch %qs is no longer supported"
+msgstr ""
+
+#: c-opts.c:703
+#, gcc-internal-format
+msgid "-fhandle-exceptions has been renamed -fexceptions (and is now on by default)"
+msgstr ""
+
+#: c-opts.c:911 fortran/cpp.c:381
+#, gcc-internal-format
+msgid "output filename specified twice"
+msgstr ""
+
+#: c-opts.c:1046
+#, gcc-internal-format
+msgid "-fexcess-precision=standard for C++"
+msgstr ""
+
+#: c-opts.c:1059
+#, gcc-internal-format
+msgid "-fno-gnu89-inline is only supported in GNU99 or C99 mode"
+msgstr ""
+
+#: c-opts.c:1138
+#, gcc-internal-format
+msgid "-Wformat-y2k ignored without -Wformat"
+msgstr ""
+
+#: c-opts.c:1140
+#, gcc-internal-format
+msgid "-Wformat-extra-args ignored without -Wformat"
+msgstr ""
+
+#: c-opts.c:1142
+#, gcc-internal-format
+msgid "-Wformat-zero-length ignored without -Wformat"
+msgstr ""
+
+#: c-opts.c:1144
+#, gcc-internal-format
+msgid "-Wformat-nonliteral ignored without -Wformat"
+msgstr ""
+
+#: c-opts.c:1146
+#, gcc-internal-format
+msgid "-Wformat-contains-nul ignored without -Wformat"
+msgstr ""
+
+#: c-opts.c:1148
+#, gcc-internal-format
+msgid "-Wformat-security ignored without -Wformat"
+msgstr ""
+
+#: c-opts.c:1172
+#, gcc-internal-format
+msgid "opening output file %s: %m"
+msgstr ""
+
+#: c-opts.c:1177
+#, gcc-internal-format
+msgid "too many filenames given.  Type %s --help for usage"
+msgstr ""
+
+#: c-opts.c:1257
+#, gcc-internal-format
+msgid "The C parser does not support -dy, option ignored"
+msgstr ""
+
+#: c-opts.c:1261
+#, gcc-internal-format
+msgid "The Objective-C parser does not support -dy, option ignored"
+msgstr ""
+
+#: c-opts.c:1264
+#, gcc-internal-format
+msgid "The C++ parser does not support -dy, option ignored"
+msgstr ""
+
+#: c-opts.c:1268
+#, gcc-internal-format
+msgid "The Objective-C++ parser does not support -dy, option ignored"
+msgstr ""
+
+#: c-opts.c:1319
+#, gcc-internal-format
+msgid "opening dependency file %s: %m"
+msgstr ""
+
+#: c-opts.c:1329
+#, gcc-internal-format
+msgid "closing dependency file %s: %m"
+msgstr ""
+
+#: c-opts.c:1332
+#, gcc-internal-format
+msgid "when writing output to %s: %m"
+msgstr ""
+
+#: c-opts.c:1412
+#, gcc-internal-format
+msgid "to generate dependencies you must specify either -M or -MM"
+msgstr ""
+
+#: c-opts.c:1435
+#, gcc-internal-format
+msgid "-MG may only be used with -M or -MM"
+msgstr ""
+
+#: c-opts.c:1465
+#, gcc-internal-format
+msgid "-fdirectives-only is incompatible with -Wunused_macros"
+msgstr ""
+
+#: c-opts.c:1467
+#, gcc-internal-format
+msgid "-fdirectives-only is incompatible with -traditional"
+msgstr ""
+
+#: c-opts.c:1605
+#, gcc-internal-format
+msgid "too late for # directive to set debug directory"
+msgstr ""
+
+#: c-parser.c:232
+#, gcc-internal-format
+msgid "identifier %qE conflicts with C++ keyword"
+msgstr ""
+
+#: c-parser.c:996
+#, gcc-internal-format
+msgid "ISO C forbids an empty translation unit"
+msgstr ""
+
+#: c-parser.c:1082 c-parser.c:6474
+#, gcc-internal-format
+msgid "ISO C does not allow extra %<;%> outside of a function"
+msgstr ""
+
+#: c-parser.c:1186 c-parser.c:7036
+#, gcc-internal-format
+msgid "expected declaration specifiers"
+msgstr ""
+
+#: c-parser.c:1234
+#, gcc-internal-format
+msgid "data definition has no type or storage class"
+msgstr ""
+
+#: c-parser.c:1292
+#, gcc-internal-format
+msgid "expected %<,%> or %<;%>"
+msgstr ""
+
+#. This can appear in many cases looking nothing like a
+#. function definition, so we don't give a more specific
+#. error suggesting there was one.
+#: c-parser.c:1299 c-parser.c:1315
+#, gcc-internal-format
+msgid "expected %<=%>, %<,%>, %<;%>, %<asm%> or %<__attribute__%>"
+msgstr ""
+
+#: c-parser.c:1307
+#, gcc-internal-format
+msgid "ISO C forbids nested functions"
+msgstr ""
+
+#: c-parser.c:1710 c-parser.c:2530 c-parser.c:3181 c-parser.c:3450
+#: c-parser.c:4438 c-parser.c:4528 c-parser.c:5146 c-parser.c:5585
+#: c-parser.c:5607 c-parser.c:5714 c-parser.c:5911 c-parser.c:5940
+#: c-parser.c:6116 c-parser.c:6128 c-parser.c:6153 c-parser.c:6287
+#: c-parser.c:6316 c-parser.c:6324 c-parser.c:6352 c-parser.c:6366
+#: c-parser.c:6582 c-parser.c:6681 c-parser.c:7210 c-parser.c:7938
+#, gcc-internal-format
+msgid "expected identifier"
+msgstr ""
+
+#: c-parser.c:1743 cp/parser.c:12734
+#, gcc-internal-format
+msgid "comma at end of enumerator list"
+msgstr ""
+
+#: c-parser.c:1749
+#, gcc-internal-format
+msgid "expected %<,%> or %<}%>"
+msgstr ""
+
+#: c-parser.c:1779
+#, gcc-internal-format
+msgid "ISO C forbids forward references to %<enum%> types"
+msgstr ""
+
+#: c-parser.c:1893
+#, gcc-internal-format
+msgid "expected class name"
+msgstr ""
+
+#: c-parser.c:1912 c-parser.c:6220
+#, gcc-internal-format
+msgid "extra semicolon in struct or union specified"
+msgstr ""
+
+#: c-parser.c:1941
+#, gcc-internal-format
+msgid "no semicolon at end of struct or union"
+msgstr ""
+
+#: c-parser.c:2027 c-parser.c:3006
+#, gcc-internal-format
+msgid "expected specifier-qualifier-list"
+msgstr ""
+
+#: c-parser.c:2037
+#, gcc-internal-format
+msgid "ISO C forbids member declarations with no members"
+msgstr ""
+
+#: c-parser.c:2113
+#, gcc-internal-format
+msgid "expected %<,%>, %<;%> or %<}%>"
+msgstr ""
+
+#: c-parser.c:2120
+#, gcc-internal-format
+msgid "expected %<:%>, %<,%>, %<;%>, %<}%> or %<__attribute__%>"
+msgstr ""
+
+#: c-parser.c:2173
+#, gcc-internal-format
+msgid "%<typeof%> applied to a bit-field"
+msgstr ""
+
+#: c-parser.c:2397
+#, gcc-internal-format
+msgid "expected identifier or %<(%>"
+msgstr ""
+
+#: c-parser.c:2600
+#, gcc-internal-format
+msgid "ISO C requires a named argument before %<...%>"
+msgstr ""
+
+#: c-parser.c:2708
+#, gcc-internal-format
+msgid "expected declaration specifiers or %<...%>"
+msgstr ""
+
+#: c-parser.c:2759
+#, gcc-internal-format
+msgid "wide string literal in %<asm%>"
+msgstr ""
+
+#: c-parser.c:2765 c-parser.c:7091 cp/parser.c:22966
+#, gcc-internal-format
+msgid "expected string literal"
+msgstr ""
+
+#: c-parser.c:3099
+#, gcc-internal-format
+msgid "ISO C forbids empty initializer braces"
+msgstr ""
+
+#: c-parser.c:3147
+#, gcc-internal-format
+msgid "obsolete use of designated initializer with %<:%>"
+msgstr ""
+
+#: c-parser.c:3282
+#, gcc-internal-format
+msgid "ISO C forbids specifying range of elements to initialize"
+msgstr ""
+
+#: c-parser.c:3295
+#, gcc-internal-format
+msgid "ISO C90 forbids specifying subobject to initialize"
+msgstr ""
+
+#: c-parser.c:3302
+#, gcc-internal-format
+msgid "obsolete use of designated initializer without %<=%>"
+msgstr ""
+
+#: c-parser.c:3465
+#, gcc-internal-format
+msgid "ISO C forbids label declarations"
+msgstr ""
+
+#: c-parser.c:3471 c-parser.c:3551
+#, gcc-internal-format
+msgid "expected declaration or statement"
+msgstr ""
+
+#: c-parser.c:3503 c-parser.c:3532
+#, gcc-internal-format
+msgid "ISO C90 forbids mixed declarations and code"
+msgstr ""
+
+#: c-parser.c:3559
+#, gcc-internal-format
+msgid "expected %<}%> before %<else%>"
+msgstr ""
+
+#: c-parser.c:3564 cp/parser.c:7917
+#, gcc-internal-format
+msgid "%<else%> without a previous %<if%>"
+msgstr ""
+
+#: c-parser.c:3581
+#, gcc-internal-format
+msgid "label at end of compound statement"
+msgstr ""
+
+#: c-parser.c:3626
+#, gcc-internal-format
+msgid "expected %<:%> or %<...%>"
+msgstr ""
+
+#: c-parser.c:3659
+#, gcc-internal-format
+msgid "a label can only be part of a statement and a declaration is not a statement"
+msgstr ""
+
+#: c-parser.c:3823
+#, gcc-internal-format
+msgid "expected identifier or %<*%>"
+msgstr ""
+
+#. Avoid infinite loop in error recovery:
+#. c_parser_skip_until_found stops at a closing nesting
+#. delimiter without consuming it, but here we need to consume
+#. it to proceed further.
+#: c-parser.c:3887
+#, gcc-internal-format
+msgid "expected statement"
+msgstr ""
+
+#: c-parser.c:3985 cp/parser.c:7999
+#, gcc-internal-format
+msgid "suggest braces around empty body in an %<if%> statement"
+msgstr ""
+
+#: c-parser.c:4013 cp/parser.c:8022
+#, gcc-internal-format
+msgid "suggest braces around empty body in an %<else%> statement"
+msgstr ""
+
+#: c-parser.c:4144
+#, gcc-internal-format
+msgid "suggest braces around empty body in %<do%> statement"
+msgstr ""
+
+#: c-parser.c:4305
+#, gcc-internal-format
+msgid "%E qualifier ignored on asm"
+msgstr ""
+
+#: c-parser.c:4656
+#, gcc-internal-format
+msgid "ISO C forbids omitting the middle term of a ?: expression"
+msgstr ""
+
+#: c-parser.c:5111
+#, gcc-internal-format
+msgid "traditional C rejects the unary plus operator"
+msgstr ""
+
+#: c-parser.c:5235
+#, gcc-internal-format
+msgid "%<sizeof%> applied to a bit-field"
+msgstr ""
+
+#: c-parser.c:5401 c-parser.c:5751 c-parser.c:5771
+#, gcc-internal-format
+msgid "expected expression"
+msgstr ""
+
+#: c-parser.c:5427
+#, gcc-internal-format
+msgid "braced-group within expression allowed only inside a function"
+msgstr ""
+
+#: c-parser.c:5440
+#, gcc-internal-format
+msgid "ISO C forbids braced-groups within expressions"
+msgstr ""
+
+#: c-parser.c:5645
+#, gcc-internal-format
+msgid "first argument to %<__builtin_choose_expr%> not a constant"
+msgstr ""
+
+#: c-parser.c:5806
+#, gcc-internal-format
+msgid "compound literal has variable size"
+msgstr ""
+
+#: c-parser.c:5817
+#, gcc-internal-format
+msgid "compound literal qualified by address-space qualifier"
+msgstr ""
+
+#: c-parser.c:5822
+#, gcc-internal-format
+msgid "ISO C90 forbids compound literals"
+msgstr ""
+
+#: c-parser.c:6437
+#, gcc-internal-format
+msgid "extra semicolon in method definition specified"
+msgstr ""
+
+#: c-parser.c:6985 cp/parser.c:23010
+#, gcc-internal-format
+msgid "%<#pragma omp barrier%> may only be used in compound statements"
+msgstr ""
+
+#: c-parser.c:6996 cp/parser.c:23025
+#, gcc-internal-format
+msgid "%<#pragma omp flush%> may only be used in compound statements"
+msgstr ""
+
+#: c-parser.c:7007 cp/parser.c:23041
+#, gcc-internal-format
+msgid "%<#pragma omp taskwait%> may only be used in compound statements"
+msgstr ""
+
+#: c-parser.c:7020 cp/parser.c:23069
+#, gcc-internal-format
+msgid "%<#pragma omp section%> may only be used in %<#pragma omp sections%> construct"
+msgstr ""
+
+#: c-parser.c:7026 cp/parser.c:23000
+#, gcc-internal-format
+msgid "%<#pragma GCC pch_preprocess%> must be first"
+msgstr ""
+
+#: c-parser.c:7185 cp/parser.c:21289
+#, gcc-internal-format
+msgid "too many %qs clauses"
+msgstr ""
+
+#: c-parser.c:7287 cp/parser.c:21403
+#, gcc-internal-format
+msgid "collapse argument needs positive constant integer expression"
+msgstr ""
+
+#: c-parser.c:7353
+#, gcc-internal-format
+msgid "expected %<none%> or %<shared%>"
+msgstr ""
+
+#: c-parser.c:7444 c-parser.c:7636
+#, gcc-internal-format
+msgid "expected integer expression"
+msgstr ""
+
+#: c-parser.c:7456
+#, gcc-internal-format
+msgid "%<num_threads%> value must be positive"
+msgstr ""
+
+#: c-parser.c:7539
+#, gcc-internal-format
+msgid "expected %<+%>, %<*%>, %<-%>, %<&%>, %<^%>, %<|%>, %<&&%>, or %<||%>"
+msgstr ""
+
+#: c-parser.c:7627 cp/parser.c:21691
+#, gcc-internal-format
+msgid "schedule %<runtime%> does not take a %<chunk_size%> parameter"
+msgstr ""
+
+#: c-parser.c:7631 cp/parser.c:21694
+#, gcc-internal-format
+msgid "schedule %<auto%> does not take a %<chunk_size%> parameter"
+msgstr ""
+
+#: c-parser.c:7649
+#, gcc-internal-format
+msgid "invalid schedule kind"
+msgstr ""
+
+#: c-parser.c:7769
+#, gcc-internal-format
+msgid "expected %<#pragma omp%> clause"
+msgstr ""
+
+#: c-parser.c:7778 cp/parser.c:21842
+#, gcc-internal-format
+msgid "%qs is not valid for %qs"
+msgstr ""
+
+#: c-parser.c:7882
+#, gcc-internal-format
+msgid "invalid operator for %<#pragma omp atomic%>"
+msgstr ""
+
+#: c-parser.c:7941 c-parser.c:7962
+#, gcc-internal-format
+msgid "expected %<(%> or end of line"
+msgstr ""
+
+#: c-parser.c:7996
+#, gcc-internal-format
+msgid "for statement expected"
+msgstr ""
+
+#: c-parser.c:8049 cp/semantics.c:4406 cp/semantics.c:4476
+#, gcc-internal-format
+msgid "expected iteration declaration or initialization"
+msgstr ""
+
+#: c-parser.c:8129
+#, gcc-internal-format
+msgid "not enough perfectly nested loops"
+msgstr ""
+
+#: c-parser.c:8182 cp/parser.c:22547
+#, gcc-internal-format
+msgid "collapsed loops not perfectly nested"
+msgstr ""
+
+#: c-parser.c:8220 cp/parser.c:22391 cp/parser.c:22429 cp/pt.c:11410
+#, gcc-internal-format
+msgid "iteration variable %qD should not be firstprivate"
+msgstr ""
+
+#: c-parser.c:8665
+#, gcc-internal-format
+msgid "%qD is not a variable"
+msgstr ""
+
+#: c-parser.c:8667 cp/semantics.c:4031
+#, gcc-internal-format
+msgid "%qE declared %<threadprivate%> after first use"
+msgstr ""
+
+#: c-parser.c:8669 cp/semantics.c:4033
+#, gcc-internal-format
+msgid "automatic variable %qE cannot be %<threadprivate%>"
+msgstr ""
+
+#: c-parser.c:8673 cp/semantics.c:4035
+#, gcc-internal-format
+msgid "%<threadprivate%> %qE has incomplete type"
+msgstr ""
+
+#: c-pch.c:132
+#, gcc-internal-format
+msgid "can%'t create precompiled header %s: %m"
+msgstr ""
+
+#: c-pch.c:154
+#, gcc-internal-format
+msgid "can%'t write to %s: %m"
+msgstr ""
+
+#: c-pch.c:160
+#, gcc-internal-format
+msgid "%qs is not a valid output file"
+msgstr ""
+
+#: c-pch.c:189 c-pch.c:204 c-pch.c:218
+#, gcc-internal-format
+msgid "can%'t write %s: %m"
+msgstr ""
+
+#: c-pch.c:194 c-pch.c:211
+#, gcc-internal-format
+msgid "can%'t seek in %s: %m"
+msgstr ""
+
+#: c-pch.c:202 c-pch.c:244 c-pch.c:285 c-pch.c:336
+#, gcc-internal-format
+msgid "can%'t read %s: %m"
+msgstr ""
+
+#: c-pch.c:467
+#, gcc-internal-format
+msgid "pch_preprocess pragma should only be used with -fpreprocessed"
+msgstr ""
+
+#: c-pch.c:468
+#, gcc-internal-format
+msgid "use #include instead"
+msgstr ""
+
+#: c-pch.c:474
+#, gcc-internal-format
+msgid "%s: couldn%'t open PCH file: %m"
+msgstr ""
+
+#: c-pch.c:479
+#, gcc-internal-format
+msgid "use -Winvalid-pch for more information"
+msgstr ""
+
+#: c-pch.c:480
+#, gcc-internal-format
+msgid "%s: PCH file was invalid"
+msgstr ""
+
+#: c-pragma.c:102
+#, gcc-internal-format
+msgid "#pragma pack (pop) encountered without matching #pragma pack (push)"
+msgstr ""
+
+#: c-pragma.c:115
+#, gcc-internal-format
+msgid "#pragma pack(pop, %E) encountered without matching #pragma pack(push, %E)"
+msgstr ""
+
+#: c-pragma.c:129
+#, gcc-internal-format
+msgid "#pragma pack(push[, id], <n>) is not supported on this target"
+msgstr ""
+
+#: c-pragma.c:131
+#, gcc-internal-format
+msgid "#pragma pack(pop[, id], <n>) is not supported on this target"
+msgstr ""
+
+#: c-pragma.c:152
+#, gcc-internal-format
+msgid "missing %<(%> after %<#pragma pack%> - ignored"
+msgstr ""
+
+#: c-pragma.c:163 c-pragma.c:195
+#, gcc-internal-format
+msgid "invalid constant in %<#pragma pack%> - ignored"
+msgstr ""
+
+#: c-pragma.c:167 c-pragma.c:209
+#, gcc-internal-format
+msgid "malformed %<#pragma pack%> - ignored"
+msgstr ""
+
+#: c-pragma.c:172
+#, gcc-internal-format
+msgid "malformed %<#pragma pack(push[, id][, <n>])%> - ignored"
+msgstr ""
+
+#: c-pragma.c:174
+#, gcc-internal-format
+msgid "malformed %<#pragma pack(pop[, id])%> - ignored"
+msgstr ""
+
+#: c-pragma.c:183
+#, gcc-internal-format
+msgid "unknown action %qE for %<#pragma pack%> - ignored"
+msgstr ""
+
+#: c-pragma.c:212
+#, gcc-internal-format
+msgid "junk at end of %<#pragma pack%>"
+msgstr ""
+
+#: c-pragma.c:215
+#, gcc-internal-format
+msgid "#pragma pack has no effect with -fpack-struct - ignored"
+msgstr ""
+
+#: c-pragma.c:235
+#, gcc-internal-format
+msgid "alignment must be a small power of two, not %d"
+msgstr ""
+
+#: c-pragma.c:268
+#, gcc-internal-format
+msgid "applying #pragma weak %q+D after first use results in unspecified behavior"
+msgstr ""
+
+#: c-pragma.c:343 c-pragma.c:348
+#, gcc-internal-format
+msgid "malformed #pragma weak, ignored"
+msgstr ""
+
+#: c-pragma.c:352
+#, gcc-internal-format
+msgid "junk at end of %<#pragma weak%>"
+msgstr ""
+
+#: c-pragma.c:420 c-pragma.c:422
+#, gcc-internal-format
+msgid "malformed #pragma redefine_extname, ignored"
+msgstr ""
+
+#: c-pragma.c:425
+#, gcc-internal-format
+msgid "junk at end of %<#pragma redefine_extname%>"
+msgstr ""
+
+#: c-pragma.c:440 c-pragma.c:527
+#, gcc-internal-format
+msgid "#pragma redefine_extname ignored due to conflict with previous rename"
+msgstr ""
+
+#: c-pragma.c:463
+#, gcc-internal-format
+msgid "#pragma redefine_extname ignored due to conflict with previous #pragma redefine_extname"
+msgstr ""
+
+#: c-pragma.c:482
+#, gcc-internal-format
+msgid "malformed #pragma extern_prefix, ignored"
+msgstr ""
+
+#: c-pragma.c:485
+#, gcc-internal-format
+msgid "junk at end of %<#pragma extern_prefix%>"
+msgstr ""
+
+#: c-pragma.c:492
+#, gcc-internal-format
+msgid "#pragma extern_prefix not supported on this target"
+msgstr ""
+
+#: c-pragma.c:518
+#, gcc-internal-format
+msgid "asm declaration ignored due to conflict with previous rename"
+msgstr ""
+
+#: c-pragma.c:549
+#, gcc-internal-format
+msgid "#pragma redefine_extname ignored due to conflict with __asm__ declaration"
+msgstr ""
+
+#: c-pragma.c:612
+#, gcc-internal-format
+msgid "#pragma GCC visibility push() must specify default, internal, hidden or protected"
+msgstr ""
+
+#: c-pragma.c:654
+#, gcc-internal-format
+msgid "#pragma GCC visibility must be followed by push or pop"
+msgstr ""
+
+#: c-pragma.c:660
+#, gcc-internal-format
+msgid "no matching push for %<#pragma GCC visibility pop%>"
+msgstr ""
+
+#: c-pragma.c:665 c-pragma.c:672
+#, gcc-internal-format
+msgid "missing %<(%> after %<#pragma GCC visibility push%> - ignored"
+msgstr ""
+
+#: c-pragma.c:668
+#, gcc-internal-format
+msgid "malformed #pragma GCC visibility push"
+msgstr ""
+
+#: c-pragma.c:676
+#, gcc-internal-format
+msgid "junk at end of %<#pragma GCC visibility%>"
+msgstr ""
+
+#: c-pragma.c:692
+#, gcc-internal-format
+msgid "#pragma GCC diagnostic not allowed inside functions"
+msgstr ""
+
+#: c-pragma.c:698
+#, gcc-internal-format
+msgid "missing [error|warning|ignored] after %<#pragma GCC diagnostic%>"
+msgstr ""
+
+#: c-pragma.c:707
+#, gcc-internal-format
+msgid "expected [error|warning|ignored] after %<#pragma GCC diagnostic%>"
+msgstr ""
+
+#: c-pragma.c:711
+#, gcc-internal-format
+msgid "missing option after %<#pragma GCC diagnostic%> kind"
+msgstr ""
+
+#: c-pragma.c:725
+#, gcc-internal-format
+msgid "unknown option after %<#pragma GCC diagnostic%> kind"
+msgstr ""
+
+#: c-pragma.c:738
+#, gcc-internal-format
+msgid "#pragma GCC option is not allowed inside functions"
+msgstr ""
+
+#: c-pragma.c:751
+#, gcc-internal-format
+msgid "%<#pragma GCC option%> is not a string"
+msgstr ""
+
+#: c-pragma.c:778
+#, gcc-internal-format
+msgid "%<#pragma GCC target (string [,string]...)%> does not have a final %<)%>."
+msgstr ""
+
+#: c-pragma.c:784
+#, gcc-internal-format
+msgid "#pragma GCC target string... is badly formed"
+msgstr ""
+
+#: c-pragma.c:807
+#, gcc-internal-format
+msgid "#pragma GCC optimize is not allowed inside functions"
+msgstr ""
+
+#: c-pragma.c:820
+#, gcc-internal-format
+msgid "%<#pragma GCC optimize%> is not a string or number"
+msgstr ""
+
+#: c-pragma.c:846
+#, gcc-internal-format
+msgid "%<#pragma GCC optimize (string [,string]...)%> does not have a final %<)%>."
+msgstr ""
+
+#: c-pragma.c:852
+#, gcc-internal-format
+msgid "#pragma GCC optimize string... is badly formed"
+msgstr ""
+
+#: c-pragma.c:894
+#, gcc-internal-format
+msgid "junk at end of %<#pragma push_options%>"
+msgstr ""
+
+#: c-pragma.c:924
+#, gcc-internal-format
+msgid "junk at end of %<#pragma pop_options%>"
+msgstr ""
+
+#: c-pragma.c:931
+#, gcc-internal-format
+msgid "%<#pragma GCC pop_options%> without a corresponding %<#pragma GCC push_options%>"
+msgstr ""
+
+#: c-pragma.c:972
+#, gcc-internal-format
+msgid "junk at end of %<#pragma reset_options%>"
+msgstr ""
+
+#: c-pragma.c:1009 c-pragma.c:1016
+#, gcc-internal-format
+msgid "expected a string after %<#pragma message%>"
+msgstr ""
+
+#: c-pragma.c:1011
+#, gcc-internal-format
+msgid "malformed %<#pragma message%>, ignored"
+msgstr ""
+
+#: c-pragma.c:1021
+#, gcc-internal-format
+msgid "junk at end of %<#pragma message%>"
+msgstr ""
+
+#: c-pragma.c:1024
+#, gcc-internal-format
+msgid "#pragma message: %s"
+msgstr ""
+
+#: c-pragma.c:1061
+#, gcc-internal-format
+msgid "invalid location for %<pragma %s%>, ignored"
+msgstr ""
+
+#: c-pragma.c:1068 c-pragma.c:1082
+#, gcc-internal-format
+msgid "malformed %<#pragma %s%>, ignored"
+msgstr ""
+
+#: c-pragma.c:1088
+#, gcc-internal-format
+msgid "junk at end of %<#pragma %s%>"
+msgstr ""
+
+#: c-pragma.c:1106
+#, gcc-internal-format
+msgid "%<#pragma STDC FLOAT_CONST_DECIMAL64%> is not supported for C++"
+msgstr ""
+
+#: c-pragma.c:1115
+#, gcc-internal-format
+msgid "%<#pragma STDC FLOAT_CONST_DECIMAL64%> is not supported on this target"
+msgstr ""
+
+#: c-pragma.c:1121
+#, gcc-internal-format
+msgid "ISO C does not support %<#pragma STDC FLOAT_CONST_DECIMAL64%>"
+msgstr ""
+
+#: c-typeck.c:215
+#, gcc-internal-format
+msgid "%qD has an incomplete type"
+msgstr ""
+
+#: c-typeck.c:236 cp/call.c:3088
+#, gcc-internal-format
+msgid "invalid use of void expression"
+msgstr ""
+
+#: c-typeck.c:244
+#, gcc-internal-format
+msgid "invalid use of flexible array member"
+msgstr ""
+
+#: c-typeck.c:250 cp/typeck2.c:489
+#, gcc-internal-format
+msgid "invalid use of array with unspecified bounds"
+msgstr ""
+
+#: c-typeck.c:258
+#, gcc-internal-format
+msgid "invalid use of undefined type %<%s %E%>"
+msgstr ""
+
+#. If this type has a typedef-name, the TYPE_NAME is a TYPE_DECL.
+#: c-typeck.c:262
+#, gcc-internal-format
+msgid "invalid use of incomplete typedef %qD"
+msgstr ""
+
+#: c-typeck.c:328
+#, gcc-internal-format
+msgid "%qT and %qT are in disjoint named address spaces"
+msgstr ""
+
+#: c-typeck.c:570 c-typeck.c:595
+#, gcc-internal-format
+msgid "function types not truly compatible in ISO C"
+msgstr ""
+
+#: c-typeck.c:739
+#, gcc-internal-format
+msgid "can%'t mix operands of decimal float and vector types"
+msgstr ""
+
+#: c-typeck.c:744
+#, gcc-internal-format
+msgid "can%'t mix operands of decimal float and complex types"
+msgstr ""
+
+#: c-typeck.c:749
+#, gcc-internal-format
+msgid "can%'t mix operands of decimal float and other float types"
+msgstr ""
+
+#: c-typeck.c:1194
+#, gcc-internal-format
+msgid "types are not quite compatible"
+msgstr ""
+
+#: c-typeck.c:1198
+#, gcc-internal-format
+msgid "pointer target types incompatible in C++"
+msgstr ""
+
+#: c-typeck.c:1528
+#, gcc-internal-format
+msgid "function return types not compatible due to %<volatile%>"
+msgstr ""
+
+#: c-typeck.c:1690 c-typeck.c:3257
+#, gcc-internal-format
+msgid "arithmetic on pointer to an incomplete type"
+msgstr ""
+
+#: c-typeck.c:2043
+#, gcc-internal-format
+msgid "%qT has no member named %qE"
+msgstr ""
+
+#: c-typeck.c:2097
+#, gcc-internal-format
+msgid "request for member %qE in something not a structure or union"
+msgstr ""
+
+#: c-typeck.c:2146
+#, gcc-internal-format
+msgid "dereferencing pointer to incomplete type"
+msgstr ""
+
+#: c-typeck.c:2150
+#, gcc-internal-format
+msgid "dereferencing %<void *%> pointer"
+msgstr ""
+
+#: c-typeck.c:2172
+#, gcc-internal-format
+msgid "invalid type argument of array indexing (have %qT)"
+msgstr ""
+
+#: c-typeck.c:2177
+#, gcc-internal-format
+msgid "invalid type argument of unary %<*%> (have %qT)"
+msgstr ""
+
+#: c-typeck.c:2182
+#, gcc-internal-format
+msgid "invalid type argument of %<->%> (have %qT)"
+msgstr ""
+
+#: c-typeck.c:2218 cp/typeck.c:2951
+#, gcc-internal-format
+msgid "subscripted value is neither array nor pointer"
+msgstr ""
+
+#: c-typeck.c:2229 cp/typeck.c:2866 cp/typeck.c:2956
+#, gcc-internal-format
+msgid "array subscript is not an integer"
+msgstr ""
+
+#: c-typeck.c:2235
+#, gcc-internal-format
+msgid "subscripted value is pointer to function"
+msgstr ""
+
+#: c-typeck.c:2283
+#, gcc-internal-format
+msgid "ISO C forbids subscripting %<register%> array"
+msgstr ""
+
+#: c-typeck.c:2286
+#, gcc-internal-format
+msgid "ISO C90 forbids subscripting non-lvalue array"
+msgstr ""
+
+#: c-typeck.c:2394
+#, gcc-internal-format
+msgid "enum constant defined here"
+msgstr ""
+
+#: c-typeck.c:2625
+#, gcc-internal-format
+msgid "called object %qE is not a function"
+msgstr ""
+
+#. This situation leads to run-time undefined behavior.  We can't,
+#. therefore, simply error unless we can prove that all possible
+#. executions of the program must execute the code.
+#: c-typeck.c:2661
+#, gcc-internal-format
+msgid "function called through a non-compatible type"
+msgstr ""
+
+#: c-typeck.c:2675 c-typeck.c:2729
+#, gcc-internal-format
+msgid "function with qualified void return type called"
+msgstr ""
+
+#: c-typeck.c:2820 c-typeck.c:3047 cp/typeck.c:3315 cp/typeck.c:3429
+#, gcc-internal-format
+msgid "declared here"
+msgstr ""
+
+#: c-typeck.c:2855
+#, gcc-internal-format
+msgid "type of formal parameter %d is incomplete"
+msgstr ""
+
+#: c-typeck.c:2870
+#, gcc-internal-format
+msgid "passing argument %d of %qE as integer rather than floating due to prototype"
+msgstr ""
+
+#: c-typeck.c:2875
+#, gcc-internal-format
+msgid "passing argument %d of %qE as integer rather than complex due to prototype"
+msgstr ""
+
+#: c-typeck.c:2880
+#, gcc-internal-format
+msgid "passing argument %d of %qE as complex rather than floating due to prototype"
+msgstr ""
+
+#: c-typeck.c:2885
+#, gcc-internal-format
+msgid "passing argument %d of %qE as floating rather than integer due to prototype"
+msgstr ""
+
+#: c-typeck.c:2890
+#, gcc-internal-format
+msgid "passing argument %d of %qE as complex rather than integer due to prototype"
+msgstr ""
+
+#: c-typeck.c:2895
+#, gcc-internal-format
+msgid "passing argument %d of %qE as floating rather than complex due to prototype"
+msgstr ""
+
+#: c-typeck.c:2908
+#, gcc-internal-format
+msgid "passing argument %d of %qE as %<float%> rather than %<double%> due to prototype"
+msgstr ""
+
+#: c-typeck.c:2933
+#, gcc-internal-format
+msgid "passing argument %d of %qE as %qT rather than %qT due to prototype"
+msgstr ""
+
+#: c-typeck.c:2955
+#, gcc-internal-format
+msgid "passing argument %d of %qE with different width due to prototype"
+msgstr ""
+
+#: c-typeck.c:2979
+#, gcc-internal-format
+msgid "passing argument %d of %qE as unsigned due to prototype"
+msgstr ""
+
+#: c-typeck.c:2984
+#, gcc-internal-format
+msgid "passing argument %d of %qE as signed due to prototype"
+msgstr ""
+
+#: c-typeck.c:3127 c-typeck.c:3132
+#, gcc-internal-format
+msgid "comparison with string literal results in unspecified behavior"
+msgstr ""
+
+#: c-typeck.c:3146
+#, gcc-internal-format
+msgid "comparison between %qT and %qT"
+msgstr ""
+
+#: c-typeck.c:3198
+#, gcc-internal-format
+msgid "pointer of type %<void *%> used in subtraction"
+msgstr ""
+
+#: c-typeck.c:3201
+#, gcc-internal-format
+msgid "pointer to a function used in subtraction"
+msgstr ""
+
+#: c-typeck.c:3365
+#, gcc-internal-format
+msgid "ISO C does not support %<~%> for complex conjugation"
+msgstr ""
+
+#: c-typeck.c:3404
+#, gcc-internal-format
+msgid "wrong type argument to unary exclamation mark"
+msgstr ""
+
+#: c-typeck.c:3468
+#, gcc-internal-format
+msgid "increment of enumeration value is invalid in C++"
+msgstr ""
+
+#: c-typeck.c:3471
+#, gcc-internal-format
+msgid "decrement of enumeration value is invalid in C++"
+msgstr ""
+
+#: c-typeck.c:3484
+#, gcc-internal-format
+msgid "ISO C does not support %<++%> and %<--%> on complex types"
+msgstr ""
+
+#: c-typeck.c:3503 c-typeck.c:3535
+#, gcc-internal-format
+msgid "wrong type argument to increment"
+msgstr ""
+
+#: c-typeck.c:3505 c-typeck.c:3538
+#, gcc-internal-format
+msgid "wrong type argument to decrement"
+msgstr ""
+
+#: c-typeck.c:3525
+#, gcc-internal-format
+msgid "increment of pointer to unknown structure"
+msgstr ""
+
+#: c-typeck.c:3528
+#, gcc-internal-format
+msgid "decrement of pointer to unknown structure"
+msgstr ""
+
+#: c-typeck.c:3605
+#, gcc-internal-format
+msgid "taking address of expression of type %<void%>"
+msgstr ""
+
+#: c-typeck.c:3774
+#, gcc-internal-format
+msgid "assignment of read-only member %qD"
+msgstr ""
+
+#: c-typeck.c:3775
+#, gcc-internal-format
+msgid "increment of read-only member %qD"
+msgstr ""
+
+#: c-typeck.c:3776
+#, gcc-internal-format
+msgid "decrement of read-only member %qD"
+msgstr ""
+
+#: c-typeck.c:3777
+#, gcc-internal-format
+msgid "read-only member %qD used as %<asm%> output"
+msgstr ""
+
+#: c-typeck.c:3781 cp/typeck2.c:141
+#, gcc-internal-format
+msgid "assignment of read-only variable %qD"
+msgstr ""
+
+#: c-typeck.c:3782 cp/typeck2.c:145
+#, gcc-internal-format
+msgid "increment of read-only variable %qD"
+msgstr ""
+
+#: c-typeck.c:3783 cp/typeck2.c:147
+#, gcc-internal-format
+msgid "decrement of read-only variable %qD"
+msgstr ""
+
+#: c-typeck.c:3784
+#, gcc-internal-format
+msgid "read-only variable %qD used as %<asm%> output"
+msgstr ""
+
+#: c-typeck.c:3787 c-typeck.c:3803 cp/typeck2.c:196
+#, gcc-internal-format
+msgid "assignment of read-only location %qE"
+msgstr ""
+
+#: c-typeck.c:3788 c-typeck.c:3806 cp/typeck2.c:200
+#, gcc-internal-format
+msgid "increment of read-only location %qE"
+msgstr ""
+
+#: c-typeck.c:3789 c-typeck.c:3809 cp/typeck2.c:202
+#, gcc-internal-format
+msgid "decrement of read-only location %qE"
+msgstr ""
+
+#: c-typeck.c:3790
+#, gcc-internal-format
+msgid "read-only location %qE used as %<asm%> output"
+msgstr ""
+
+#: c-typeck.c:3849
+#, gcc-internal-format
+msgid "cannot take address of bit-field %qD"
+msgstr ""
+
+#: c-typeck.c:3877
+#, gcc-internal-format
+msgid "global register variable %qD used in nested function"
+msgstr ""
+
+#: c-typeck.c:3880
+#, gcc-internal-format
+msgid "register variable %qD used in nested function"
+msgstr ""
+
+#: c-typeck.c:3885
+#, gcc-internal-format
+msgid "address of global register variable %qD requested"
+msgstr ""
+
+#: c-typeck.c:3887
+#, gcc-internal-format
+msgid "address of register variable %qD requested"
+msgstr ""
+
+#: c-typeck.c:3982
+#, gcc-internal-format
+msgid "non-lvalue array in conditional expression"
+msgstr ""
+
+#: c-typeck.c:4110
+#, gcc-internal-format
+msgid "ISO C forbids conditional expr with only one void side"
+msgstr ""
+
+#: c-typeck.c:4127
+#, gcc-internal-format
+msgid "pointers to disjoint address spaces used in conditional expression"
+msgstr ""
+
+#: c-typeck.c:4135 c-typeck.c:4144
+#, gcc-internal-format
+msgid "ISO C forbids conditional expr between %<void *%> and function pointer"
+msgstr ""
+
+#: c-typeck.c:4155
+#, gcc-internal-format
+msgid "pointer type mismatch in conditional expression"
+msgstr ""
+
+#: c-typeck.c:4164 c-typeck.c:4175
+#, gcc-internal-format
+msgid "pointer/integer type mismatch in conditional expression"
+msgstr ""
+
+#: c-typeck.c:4189
+#, gcc-internal-format
+msgid "type mismatch in conditional expression"
+msgstr ""
+
+#: c-typeck.c:4283
+#, gcc-internal-format
+msgid "left-hand operand of comma expression has no effect"
+msgstr ""
+
+#: c-typeck.c:4351
+#, gcc-internal-format
+msgid "cast adds new qualifiers to function type"
+msgstr ""
+
+#: c-typeck.c:4357
+#, gcc-internal-format
+msgid "cast discards qualifiers from pointer target type"
+msgstr ""
+
+#: c-typeck.c:4427
+#, gcc-internal-format
+msgid "cast specifies array type"
+msgstr ""
+
+#: c-typeck.c:4433
+#, gcc-internal-format
+msgid "cast specifies function type"
+msgstr ""
+
+#: c-typeck.c:4449
+#, gcc-internal-format
+msgid "ISO C forbids casting nonscalar to the same type"
+msgstr ""
+
+#: c-typeck.c:4466
+#, gcc-internal-format
+msgid "ISO C forbids casts to union type"
+msgstr ""
+
+#: c-typeck.c:4476
+#, gcc-internal-format
+msgid "cast to union type from type not present in union"
+msgstr ""
+
+#: c-typeck.c:4511
+#, gcc-internal-format
+msgid "cast to %s address space pointer from disjoint generic address space pointer"
+msgstr ""
+
+#: c-typeck.c:4516
+#, gcc-internal-format
+msgid "cast to generic address space pointer from disjoint %s address space pointer"
+msgstr ""
+
+#: c-typeck.c:4521
+#, gcc-internal-format
+msgid "cast to %s address space pointer from disjoint %s address space pointer"
+msgstr ""
+
+#: c-typeck.c:4541
+#, gcc-internal-format
+msgid "cast increases required alignment of target type"
+msgstr ""
+
+#: c-typeck.c:4552
+#, gcc-internal-format
+msgid "cast from pointer to integer of different size"
+msgstr ""
+
+#: c-typeck.c:4557
+#, gcc-internal-format
+msgid "cast from function call of type %qT to non-matching type %qT"
+msgstr ""
+
+#: c-typeck.c:4566
+#, gcc-internal-format
+msgid "cast to pointer from integer of different size"
+msgstr ""
+
+#: c-typeck.c:4580
+#, gcc-internal-format
+msgid "ISO C forbids conversion of function pointer to object pointer type"
+msgstr ""
+
+#: c-typeck.c:4589
+#, gcc-internal-format
+msgid "ISO C forbids conversion of object pointer to function pointer type"
+msgstr ""
+
+#: c-typeck.c:4671
+#, gcc-internal-format
+msgid "defining a type in a cast is invalid in C++"
+msgstr ""
+
+#: c-typeck.c:4796 c-typeck.c:4963
+#, gcc-internal-format
+msgid "enum conversion in assignment is invalid in C++"
+msgstr ""
+
+#. This macro is used to emit diagnostics to ensure that all format
+#. strings are complete sentences, visible to gettext and checked at
+#. compile time.
+#: c-typeck.c:4901 c-typeck.c:5409
+#, gcc-internal-format
+msgid "expected %qT but argument is of type %qT"
+msgstr ""
+
+#: c-typeck.c:4961
+#, gcc-internal-format
+msgid "enum conversion when passing argument %d of %qE is invalid in C++"
+msgstr ""
+
+#: c-typeck.c:4967
+#, gcc-internal-format
+msgid "enum conversion in return is invalid in C++"
+msgstr ""
+
+#: c-typeck.c:4996
+#, gcc-internal-format
+msgid "cannot pass rvalue to reference parameter"
+msgstr ""
+
+#: c-typeck.c:5126 c-typeck.c:5331
+#, gcc-internal-format
+msgid "passing argument %d of %qE makes qualified function pointer from unqualified"
+msgstr ""
+
+#: c-typeck.c:5129 c-typeck.c:5334
+#, gcc-internal-format
+msgid "assignment makes qualified function pointer from unqualified"
+msgstr ""
+
+#: c-typeck.c:5132 c-typeck.c:5336
+#, gcc-internal-format
+msgid "initialization makes qualified function pointer from unqualified"
+msgstr ""
+
+#: c-typeck.c:5135 c-typeck.c:5338
+#, gcc-internal-format
+msgid "return makes qualified function pointer from unqualified"
+msgstr ""
+
+#: c-typeck.c:5141 c-typeck.c:5295
+#, gcc-internal-format
+msgid "passing argument %d of %qE discards qualifiers from pointer target type"
+msgstr ""
+
+#: c-typeck.c:5143 c-typeck.c:5297
+#, gcc-internal-format
+msgid "assignment discards qualifiers from pointer target type"
+msgstr ""
+
+#: c-typeck.c:5145 c-typeck.c:5299
+#, gcc-internal-format
+msgid "initialization discards qualifiers from pointer target type"
+msgstr ""
+
+#: c-typeck.c:5147 c-typeck.c:5301
+#, gcc-internal-format
+msgid "return discards qualifiers from pointer target type"
+msgstr ""
+
+#: c-typeck.c:5155
+#, gcc-internal-format
+msgid "ISO C prohibits argument conversion to union type"
+msgstr ""
+
+#: c-typeck.c:5191
+#, gcc-internal-format
+msgid "request for implicit conversion from %qT to %qT not permitted in C++"
+msgstr ""
+
+#: c-typeck.c:5203
+#, gcc-internal-format
+msgid "passing argument %d of %qE from pointer to non-enclosed address space"
+msgstr ""
+
+#: c-typeck.c:5207
+#, gcc-internal-format
+msgid "assignment from pointer to non-enclosed address space"
+msgstr ""
+
+#: c-typeck.c:5211
+#, gcc-internal-format
+msgid "initialization from pointer to non-enclosed address space"
+msgstr ""
+
+#: c-typeck.c:5215
+#, gcc-internal-format
+msgid "return from pointer to non-enclosed address space"
+msgstr ""
+
+#: c-typeck.c:5233
+#, gcc-internal-format
+msgid "argument %d of %qE might be a candidate for a format attribute"
+msgstr ""
+
+#: c-typeck.c:5239
+#, gcc-internal-format
+msgid "assignment left-hand side might be a candidate for a format attribute"
+msgstr ""
+
+#: c-typeck.c:5244
+#, gcc-internal-format
+msgid "initialization left-hand side might be a candidate for a format attribute"
+msgstr ""
+
+#: c-typeck.c:5249
+#, gcc-internal-format
+msgid "return type might be a candidate for a format attribute"
+msgstr ""
+
+#: c-typeck.c:5273
+#, gcc-internal-format
+msgid "ISO C forbids passing argument %d of %qE between function pointer and %<void *%>"
+msgstr ""
+
+#: c-typeck.c:5276
+#, gcc-internal-format
+msgid "ISO C forbids assignment between function pointer and %<void *%>"
+msgstr ""
+
+#: c-typeck.c:5278
+#, gcc-internal-format
+msgid "ISO C forbids initialization between function pointer and %<void *%>"
+msgstr ""
+
+#: c-typeck.c:5280
+#, gcc-internal-format
+msgid "ISO C forbids return between function pointer and %<void *%>"
+msgstr ""
+
+#: c-typeck.c:5312
+#, gcc-internal-format
+msgid "pointer targets in passing argument %d of %qE differ in signedness"
+msgstr ""
+
+#: c-typeck.c:5314
+#, gcc-internal-format
+msgid "pointer targets in assignment differ in signedness"
+msgstr ""
+
+#: c-typeck.c:5316
+#, gcc-internal-format
+msgid "pointer targets in initialization differ in signedness"
+msgstr ""
+
+#: c-typeck.c:5318
+#, gcc-internal-format
+msgid "pointer targets in return differ in signedness"
+msgstr ""
+
+#: c-typeck.c:5346
+#, gcc-internal-format
+msgid "passing argument %d of %qE from incompatible pointer type"
+msgstr ""
+
+#: c-typeck.c:5348
+#, gcc-internal-format
+msgid "assignment from incompatible pointer type"
+msgstr ""
+
+#: c-typeck.c:5349
+#, gcc-internal-format
+msgid "initialization from incompatible pointer type"
+msgstr ""
+
+#: c-typeck.c:5351
+#, gcc-internal-format
+msgid "return from incompatible pointer type"
+msgstr ""
+
+#: c-typeck.c:5369
+#, gcc-internal-format
+msgid "passing argument %d of %qE makes pointer from integer without a cast"
+msgstr ""
+
+#: c-typeck.c:5371
+#, gcc-internal-format
+msgid "assignment makes pointer from integer without a cast"
+msgstr ""
+
+#: c-typeck.c:5373
+#, gcc-internal-format
+msgid "initialization makes pointer from integer without a cast"
+msgstr ""
+
+#: c-typeck.c:5375
+#, gcc-internal-format
+msgid "return makes pointer from integer without a cast"
+msgstr ""
+
+#: c-typeck.c:5383
+#, gcc-internal-format
+msgid "passing argument %d of %qE makes integer from pointer without a cast"
+msgstr ""
+
+#: c-typeck.c:5385
+#, gcc-internal-format
+msgid "assignment makes integer from pointer without a cast"
+msgstr ""
+
+#: c-typeck.c:5387
+#, gcc-internal-format
+msgid "initialization makes integer from pointer without a cast"
+msgstr ""
+
+#: c-typeck.c:5389
+#, gcc-internal-format
+msgid "return makes integer from pointer without a cast"
+msgstr ""
+
+#: c-typeck.c:5412
+#, gcc-internal-format
+msgid "incompatible types when assigning to type %qT from type %qT"
+msgstr ""
+
+#: c-typeck.c:5417
+#, gcc-internal-format
+msgid "incompatible types when initializing type %qT using type %qT"
+msgstr ""
+
+#: c-typeck.c:5422
+#, gcc-internal-format
+msgid "incompatible types when returning type %qT but %qT was expected"
+msgstr ""
+
+#: c-typeck.c:5486
+#, gcc-internal-format
+msgid "traditional C rejects automatic aggregate initialization"
+msgstr ""
+
+#: c-typeck.c:5659 c-typeck.c:5675 c-typeck.c:5692
+#, gcc-internal-format
+msgid "(near initialization for %qs)"
+msgstr ""
+
+#: c-typeck.c:6295 cp/decl.c:5227
+#, gcc-internal-format
+msgid "opaque vector types cannot be initialized"
+msgstr ""
+
+#: c-typeck.c:6960
+#, gcc-internal-format
+msgid "unknown field %qE specified in initializer"
+msgstr ""
+
+#: c-typeck.c:7939
+#, gcc-internal-format
+msgid "traditional C rejects initialization of unions"
+msgstr ""
+
+#: c-typeck.c:8278
+#, gcc-internal-format
+msgid "ISO C forbids %<goto *expr;%>"
+msgstr ""
+
+#: c-typeck.c:8300 cp/typeck.c:7323
+#, gcc-internal-format
+msgid "function declared %<noreturn%> has a %<return%> statement"
+msgstr ""
+
+#: c-typeck.c:8323
+#, gcc-internal-format
+msgid "%<return%> with no value, in function returning non-void"
+msgstr ""
+
+#: c-typeck.c:8333
+#, gcc-internal-format
+msgid "%<return%> with a value, in function returning void"
+msgstr ""
+
+#: c-typeck.c:8335
+#, gcc-internal-format
+msgid "ISO C forbids %<return%> with expression, in function returning void"
+msgstr ""
+
+#: c-typeck.c:8396
+#, gcc-internal-format
+msgid "function returns address of local variable"
+msgstr ""
+
+#: c-typeck.c:8469 cp/semantics.c:951
+#, gcc-internal-format
+msgid "switch quantity not an integer"
+msgstr ""
+
+#: c-typeck.c:8482
+#, gcc-internal-format
+msgid "%<long%> switch expression not converted to %<int%> in ISO C"
+msgstr ""
+
+#: c-typeck.c:8518 c-typeck.c:8526
+#, gcc-internal-format
+msgid "case label is not an integer constant expression"
+msgstr ""
+
+#: c-typeck.c:8532 cp/parser.c:7757
+#, gcc-internal-format
+msgid "case label not within a switch statement"
+msgstr ""
+
+#: c-typeck.c:8534
+#, gcc-internal-format
+msgid "%<default%> label not within a switch statement"
+msgstr ""
+
+#: c-typeck.c:8617 cp/parser.c:8048
+#, gcc-internal-format
+msgid "suggest explicit braces to avoid ambiguous %<else%>"
+msgstr ""
+
+#: c-typeck.c:8726 cp/cp-gimplify.c:92 cp/parser.c:8398
+#, gcc-internal-format
+msgid "break statement not within loop or switch"
+msgstr ""
+
+#: c-typeck.c:8728 cp/parser.c:8419
+#, gcc-internal-format
+msgid "continue statement not within a loop"
+msgstr ""
+
+#: c-typeck.c:8733 cp/parser.c:8409
+#, gcc-internal-format
+msgid "break statement used with OpenMP for loop"
+msgstr ""
+
+#: c-typeck.c:8759 cp/cp-gimplify.c:412
+#, gcc-internal-format
+msgid "statement with no effect"
+msgstr ""
+
+#: c-typeck.c:8783
+#, gcc-internal-format
+msgid "expression statement has incomplete type"
+msgstr ""
+
+#: c-typeck.c:9360 cp/typeck.c:3825
+#, gcc-internal-format
+msgid "right shift count is negative"
+msgstr ""
+
+#: c-typeck.c:9371 cp/typeck.c:3832
+#, gcc-internal-format
+msgid "right shift count >= width of type"
+msgstr ""
+
+#: c-typeck.c:9397 cp/typeck.c:3854
+#, gcc-internal-format
+msgid "left shift count is negative"
+msgstr ""
+
+#: c-typeck.c:9404 cp/typeck.c:3860
+#, gcc-internal-format
+msgid "left shift count >= width of type"
+msgstr ""
+
+#: c-typeck.c:9424 cp/typeck.c:3906
+#, gcc-internal-format
+msgid "comparing floating point with == or != is unsafe"
+msgstr ""
+
+#: c-typeck.c:9452 c-typeck.c:9540
+#, gcc-internal-format
+msgid "comparison of pointers to disjoint address spaces"
+msgstr ""
+
+#: c-typeck.c:9459 c-typeck.c:9465
+#, gcc-internal-format
+msgid "ISO C forbids comparison of %<void *%> with function pointer"
+msgstr ""
+
+#: c-typeck.c:9472 c-typeck.c:9550
+#, gcc-internal-format
+msgid "comparison of distinct pointer types lacks a cast"
+msgstr ""
+
+#: c-typeck.c:9486 c-typeck.c:9495 cp/typeck.c:3929 cp/typeck.c:3941
+#, gcc-internal-format
+msgid "the address of %qD will never be NULL"
+msgstr ""
+
+#: c-typeck.c:9502 c-typeck.c:9507 c-typeck.c:9572 c-typeck.c:9577
+#, gcc-internal-format
+msgid "comparison between pointer and integer"
+msgstr ""
+
+#: c-typeck.c:9533
+#, gcc-internal-format
+msgid "comparison of complete and incomplete pointers"
+msgstr ""
+
+#: c-typeck.c:9535
+#, gcc-internal-format
+msgid "ISO C forbids ordered comparisons of pointers to functions"
+msgstr ""
+
+#: c-typeck.c:9558 c-typeck.c:9561 c-typeck.c:9567
+#, gcc-internal-format
+msgid "ordered comparison of pointer with integer zero"
+msgstr ""
+
+#: c-typeck.c:9887
+#, gcc-internal-format
+msgid "used array that cannot be converted to pointer where scalar is required"
+msgstr ""
+
+#: c-typeck.c:9891
+#, gcc-internal-format
+msgid "used struct type value where scalar is required"
+msgstr ""
+
+#: c-typeck.c:9895
+#, gcc-internal-format
+msgid "used union type value where scalar is required"
+msgstr ""
+
+#: c-typeck.c:10052 cp/semantics.c:3914
+#, gcc-internal-format
+msgid "%qE has invalid type for %<reduction%>"
+msgstr ""
+
+#: c-typeck.c:10087 cp/semantics.c:3927
+#, gcc-internal-format
+msgid "%qE has invalid type for %<reduction(%s)%>"
+msgstr ""
+
+#: c-typeck.c:10104 cp/semantics.c:3937
+#, gcc-internal-format
+msgid "%qE must be %<threadprivate%> for %<copyin%>"
+msgstr ""
+
+#: c-typeck.c:10114 cp/semantics.c:3734
+#, gcc-internal-format
+msgid "%qE is not a variable in clause %qs"
+msgstr ""
+
+#: c-typeck.c:10122 c-typeck.c:10144 c-typeck.c:10166
+#, gcc-internal-format
+msgid "%qE appears more than once in data clauses"
+msgstr ""
+
+#: c-typeck.c:10137 cp/semantics.c:3757
+#, gcc-internal-format
+msgid "%qE is not a variable in clause %<firstprivate%>"
+msgstr ""
+
+#: c-typeck.c:10159 cp/semantics.c:3779
+#, gcc-internal-format
+msgid "%qE is not a variable in clause %<lastprivate%>"
+msgstr ""
+
+#: c-typeck.c:10221 cp/semantics.c:3978
+#, gcc-internal-format
+msgid "%qE is predetermined %qs for %qs"
+msgstr ""
+
+#: c-typeck.c:10310
+#, gcc-internal-format
+msgid "C++ requires promoted type, not enum type, in %<va_arg%>"
+msgstr ""
+
+#: calls.c:2051
+#, gcc-internal-format
+msgid "function call has aggregate value"
+msgstr ""
+
+#: cfgexpand.c:984 function.c:919 varasm.c:2208
+#, gcc-internal-format
+msgid "size of variable %q+D is too large"
+msgstr ""
+
+#: cfgexpand.c:3767
+#, gcc-internal-format
+msgid "not protecting local variables: variable length buffer"
+msgstr ""
+
+#: cfgexpand.c:3770
+#, gcc-internal-format
+msgid "not protecting function: no buffer at least %d bytes long"
+msgstr ""
+
+#: cfghooks.c:110
+#, gcc-internal-format
+msgid "bb %d on wrong place"
+msgstr ""
+
+#: cfghooks.c:116
+#, gcc-internal-format
+msgid "prev_bb of %d should be %d, not %d"
+msgstr ""
+
+#: cfghooks.c:133
+#, gcc-internal-format
+msgid "verify_flow_info: Block %i has loop_father, but there are no loops"
+msgstr ""
+
+#: cfghooks.c:139
+#, gcc-internal-format
+msgid "verify_flow_info: Block %i lacks loop_father"
+msgstr ""
+
+#: cfghooks.c:145
+#, gcc-internal-format
+msgid "verify_flow_info: Wrong count of block %i %i"
+msgstr ""
+
+#: cfghooks.c:151
+#, gcc-internal-format
+msgid "verify_flow_info: Wrong frequency of block %i %i"
+msgstr ""
+
+#: cfghooks.c:159
+#, gcc-internal-format
+msgid "verify_flow_info: Duplicate edge %i->%i"
+msgstr ""
+
+#: cfghooks.c:165
+#, gcc-internal-format
+msgid "verify_flow_info: Wrong probability of edge %i->%i %i"
+msgstr ""
+
+#: cfghooks.c:171
+#, gcc-internal-format
+msgid "verify_flow_info: Wrong count of edge %i->%i %i"
+msgstr ""
+
+#: cfghooks.c:183
+#, gcc-internal-format
+msgid "verify_flow_info: Basic block %d succ edge is corrupted"
+msgstr ""
+
+#: cfghooks.c:197
+#, gcc-internal-format
+msgid "wrong amount of branch edges after unconditional jump %i"
+msgstr ""
+
+#: cfghooks.c:205 cfghooks.c:216
+#, gcc-internal-format
+msgid "basic block %d pred edge is corrupted"
+msgstr ""
+
+#: cfghooks.c:217
+#, gcc-internal-format
+msgid "its dest_idx should be %d, not %d"
+msgstr ""
+
+#: cfghooks.c:246
+#, gcc-internal-format
+msgid "basic block %i edge lists are corrupted"
+msgstr ""
+
+#: cfghooks.c:259
+#, gcc-internal-format
+msgid "verify_flow_info failed"
+msgstr ""
+
+#: cfghooks.c:320
+#, gcc-internal-format
+msgid "%s does not support redirect_edge_and_branch"
+msgstr ""
+
+#: cfghooks.c:340
+#, gcc-internal-format
+msgid "%s does not support can_remove_branch_p"
+msgstr ""
+
+#: cfghooks.c:394
+#, gcc-internal-format
+msgid "%s does not support redirect_edge_and_branch_force"
+msgstr ""
+
+#: cfghooks.c:431
+#, gcc-internal-format
+msgid "%s does not support split_block"
+msgstr ""
+
+#: cfghooks.c:483
+#, gcc-internal-format
+msgid "%s does not support move_block_after"
+msgstr ""
+
+#: cfghooks.c:496
+#, gcc-internal-format
+msgid "%s does not support delete_basic_block"
+msgstr ""
+
+#: cfghooks.c:546
+#, gcc-internal-format
+msgid "%s does not support split_edge"
+msgstr ""
+
+#: cfghooks.c:619
+#, gcc-internal-format
+msgid "%s does not support create_basic_block"
+msgstr ""
+
+#: cfghooks.c:647
+#, gcc-internal-format
+msgid "%s does not support can_merge_blocks_p"
+msgstr ""
+
+#: cfghooks.c:658
+#, gcc-internal-format
+msgid "%s does not support predict_edge"
+msgstr ""
+
+#: cfghooks.c:667
+#, gcc-internal-format
+msgid "%s does not support predicted_by_p"
+msgstr ""
+
+#: cfghooks.c:681
+#, gcc-internal-format
+msgid "%s does not support merge_blocks"
+msgstr ""
+
+#: cfghooks.c:734
+#, gcc-internal-format
+msgid "%s does not support make_forwarder_block"
+msgstr ""
+
+#: cfghooks.c:881
+#, gcc-internal-format
+msgid "%s does not support can_duplicate_block_p"
+msgstr ""
+
+#: cfghooks.c:903
+#, gcc-internal-format
+msgid "%s does not support duplicate_block"
+msgstr ""
+
+#: cfghooks.c:980
+#, gcc-internal-format
+msgid "%s does not support block_ends_with_call_p"
+msgstr ""
+
+#: cfghooks.c:991
+#, gcc-internal-format
+msgid "%s does not support block_ends_with_condjump_p"
+msgstr ""
+
+#: cfghooks.c:1009
+#, gcc-internal-format
+msgid "%s does not support flow_call_edges_add"
+msgstr ""
+
+#: cfgloop.c:1346
+#, gcc-internal-format
+msgid "size of loop %d should be %d, not %d"
+msgstr ""
+
+#: cfgloop.c:1360
+#, gcc-internal-format
+msgid "bb %d do not belong to loop %d"
+msgstr ""
+
+#: cfgloop.c:1375
+#, gcc-internal-format
+msgid "loop %d's header does not have exactly 2 entries"
+msgstr ""
+
+#: cfgloop.c:1382
+#, gcc-internal-format
+msgid "loop %d's latch does not have exactly 1 successor"
+msgstr ""
+
+#: cfgloop.c:1387
+#, gcc-internal-format
+msgid "loop %d's latch does not have header as successor"
+msgstr ""
+
+#: cfgloop.c:1392
+#, gcc-internal-format
+msgid "loop %d's latch does not belong directly to it"
+msgstr ""
+
+#: cfgloop.c:1398
+#, gcc-internal-format
+msgid "loop %d's header does not belong directly to it"
+msgstr ""
+
+#: cfgloop.c:1404
+#, gcc-internal-format
+msgid "loop %d's latch is marked as part of irreducible region"
+msgstr ""
+
+#: cfgloop.c:1437
+#, gcc-internal-format
+msgid "basic block %d should be marked irreducible"
+msgstr ""
+
+#: cfgloop.c:1443
+#, gcc-internal-format
+msgid "basic block %d should not be marked irreducible"
+msgstr ""
+
+#: cfgloop.c:1451
+#, gcc-internal-format
+msgid "edge from %d to %d should be marked irreducible"
+msgstr ""
+
+#: cfgloop.c:1458
+#, gcc-internal-format
+msgid "edge from %d to %d should not be marked irreducible"
+msgstr ""
+
+#: cfgloop.c:1473
+#, gcc-internal-format
+msgid "corrupted head of the exits list of loop %d"
+msgstr ""
+
+#: cfgloop.c:1491
+#, gcc-internal-format
+msgid "corrupted exits list of loop %d"
+msgstr ""
+
+#: cfgloop.c:1500
+#, gcc-internal-format
+msgid "nonempty exits list of loop %d, but exits are not recorded"
+msgstr ""
+
+#: cfgloop.c:1526
+#, gcc-internal-format
+msgid "Exit %d->%d not recorded"
+msgstr ""
+
+#: cfgloop.c:1544
+#, gcc-internal-format
+msgid "Wrong list of exited loops for edge  %d->%d"
+msgstr ""
+
+#: cfgloop.c:1553
+#, gcc-internal-format
+msgid "Too many loop exits recorded"
+msgstr ""
+
+#: cfgloop.c:1564
+#, gcc-internal-format
+msgid "%d exits recorded for loop %d (having %d exits)"
+msgstr ""
+
+#: cfgrtl.c:1817
+#, gcc-internal-format
+msgid "BB_RTL flag not set for block %d"
+msgstr ""
+
+#: cfgrtl.c:1824
+#, gcc-internal-format
+msgid "insn %d basic block pointer is %d, should be %d"
+msgstr ""
+
+#: cfgrtl.c:1835
+#, gcc-internal-format
+msgid "insn %d in header of bb %d has non-NULL basic block"
+msgstr ""
+
+#: cfgrtl.c:1843
+#, gcc-internal-format
+msgid "insn %d in footer of bb %d has non-NULL basic block"
+msgstr ""
+
+#: cfgrtl.c:1865
+#, gcc-internal-format
+msgid "verify_flow_info: REG_BR_PROB does not match cfg %wi %i"
+msgstr ""
+
+#: cfgrtl.c:1880
+#, gcc-internal-format
+msgid "fallthru edge crosses section boundary (bb %i)"
+msgstr ""
+
+#: cfgrtl.c:1904
+#, gcc-internal-format
+msgid "missing REG_EH_REGION note in the end of bb %i"
+msgstr ""
+
+#: cfgrtl.c:1909
+#, gcc-internal-format
+msgid "too many eh edges %i"
+msgstr ""
+
+#: cfgrtl.c:1917
+#, gcc-internal-format
+msgid "too many outgoing branch edges from bb %i"
+msgstr ""
+
+#: cfgrtl.c:1922
+#, gcc-internal-format
+msgid "fallthru edge after unconditional jump %i"
+msgstr ""
+
+#: cfgrtl.c:1927
+#, gcc-internal-format
+msgid "wrong number of branch edges after unconditional jump %i"
+msgstr ""
+
+#: cfgrtl.c:1934
+#, gcc-internal-format
+msgid "wrong amount of branch edges after conditional jump %i"
+msgstr ""
+
+#: cfgrtl.c:1940
+#, gcc-internal-format
+msgid "call edges for non-call insn in bb %i"
+msgstr ""
+
+#: cfgrtl.c:1949
+#, gcc-internal-format
+msgid "abnormal edges for no purpose in bb %i"
+msgstr ""
+
+#: cfgrtl.c:1961
+#, gcc-internal-format
+msgid "insn %d inside basic block %d but block_for_insn is NULL"
+msgstr ""
+
+#: cfgrtl.c:1965
+#, gcc-internal-format
+msgid "insn %d inside basic block %d but block_for_insn is %i"
+msgstr ""
+
+#: cfgrtl.c:1979 cfgrtl.c:1989
+#, gcc-internal-format
+msgid "NOTE_INSN_BASIC_BLOCK is missing for block %d"
+msgstr ""
+
+#: cfgrtl.c:2002
+#, gcc-internal-format
+msgid "NOTE_INSN_BASIC_BLOCK %d in middle of basic block %d"
+msgstr ""
+
+#: cfgrtl.c:2012
+#, gcc-internal-format
+msgid "in basic block %d:"
+msgstr ""
+
+#: cfgrtl.c:2065 cfgrtl.c:2157
+#, gcc-internal-format
+msgid "insn %d outside of basic blocks has non-NULL bb field"
+msgstr ""
+
+#: cfgrtl.c:2073
+#, gcc-internal-format
+msgid "end insn %d for block %d not found in the insn stream"
+msgstr ""
+
+#: cfgrtl.c:2086
+#, gcc-internal-format
+msgid "insn %d is in multiple basic blocks (%d and %d)"
+msgstr ""
+
+#: cfgrtl.c:2098
+#, gcc-internal-format
+msgid "head insn %d for block %d not found in the insn stream"
+msgstr ""
+
+#: cfgrtl.c:2117
+#, gcc-internal-format
+msgid "missing barrier after block %i"
+msgstr ""
+
+#: cfgrtl.c:2133
+#, gcc-internal-format
+msgid "verify_flow_info: Incorrect blocks for fallthru %i->%i"
+msgstr ""
+
+#: cfgrtl.c:2142
+#, gcc-internal-format
+msgid "verify_flow_info: Incorrect fallthru %i->%i"
+msgstr ""
+
+#: cfgrtl.c:2175
+#, gcc-internal-format
+msgid "basic blocks not laid down consecutively"
+msgstr ""
+
+#: cfgrtl.c:2212
+#, gcc-internal-format
+msgid "number of bb notes in insn chain (%d) != n_basic_blocks (%d)"
+msgstr ""
+
+#: cgraph.c:1799
+#, gcc-internal-format
+msgid "%D renamed after being referenced in assembly"
+msgstr ""
+
+#: cgraphunit.c:585
+#, gcc-internal-format
+msgid "aux field set for edge %s->%s"
+msgstr ""
+
+#: cgraphunit.c:592
+#, gcc-internal-format
+msgid "Execution count is negative"
+msgstr ""
+
+#: cgraphunit.c:597
+#, gcc-internal-format
+msgid "Externally visible inline clone"
+msgstr ""
+
+#: cgraphunit.c:602
+#, gcc-internal-format
+msgid "Inline clone with address taken"
+msgstr ""
+
+#: cgraphunit.c:607
+#, gcc-internal-format
+msgid "Inline clone is needed"
+msgstr ""
+
+#: cgraphunit.c:614
+#, gcc-internal-format
+msgid "caller edge count is negative"
+msgstr ""
+
+#: cgraphunit.c:619
+#, gcc-internal-format
+msgid "caller edge frequency is negative"
+msgstr ""
+
+#: cgraphunit.c:624
+#, gcc-internal-format
+msgid "caller edge frequency is too large"
+msgstr ""
+
+#: cgraphunit.c:633
+#, gcc-internal-format
+msgid "caller edge frequency %i does not match BB freqency %i"
+msgstr ""
+
+#: cgraphunit.c:645
+#, gcc-internal-format
+msgid "inlined_to pointer is wrong"
+msgstr ""
+
+#: cgraphunit.c:650
+#, gcc-internal-format
+msgid "multiple inline callers"
+msgstr ""
+
+#: cgraphunit.c:657
+#, gcc-internal-format
+msgid "inlined_to pointer set for noninline callers"
+msgstr ""
+
+#: cgraphunit.c:663
+#, gcc-internal-format
+msgid "inlined_to pointer is set but no predecessors found"
+msgstr ""
+
+#: cgraphunit.c:668
+#, gcc-internal-format
+msgid "inlined_to pointer refers to itself"
+msgstr ""
+
+#: cgraphunit.c:674
+#, gcc-internal-format
+msgid "node not found in cgraph_hash"
+msgstr ""
+
+#: cgraphunit.c:686
+#, gcc-internal-format
+msgid "node has wrong clone_of"
+msgstr ""
+
+#: cgraphunit.c:698
+#, gcc-internal-format
+msgid "node has wrong clone list"
+msgstr ""
+
+#: cgraphunit.c:704
+#, gcc-internal-format
+msgid "node is in clone list but it is not clone"
+msgstr ""
+
+#: cgraphunit.c:709
+#, gcc-internal-format
+msgid "node has wrong prev_clone pointer"
+msgstr ""
+
+#: cgraphunit.c:714
+#, gcc-internal-format
+msgid "double linked list of clones corrupted"
+msgstr ""
+
+#: cgraphunit.c:744
+#, gcc-internal-format
+msgid "shared call_stmt:"
+msgstr ""
+
+#: cgraphunit.c:750
+#, gcc-internal-format
+msgid "edge points to same body alias:"
+msgstr ""
+
+#: cgraphunit.c:758
+#, gcc-internal-format
+msgid "edge points to wrong declaration:"
+msgstr ""
+
+#: cgraphunit.c:768
+#, gcc-internal-format
+msgid "missing callgraph edge for call stmt:"
+msgstr ""
+
+#: cgraphunit.c:784
+#, gcc-internal-format
+msgid "edge %s->%s has no corresponding call_stmt"
+msgstr ""
+
+#: cgraphunit.c:796
+#, gcc-internal-format
+msgid "verify_cgraph_node failed"
+msgstr ""
+
+#: cgraphunit.c:901 cgraphunit.c:921
+#, gcc-internal-format
+msgid "%<externally_visible%> attribute have effect only on public objects"
+msgstr ""
+
+#: cgraphunit.c:1163 cgraphunit.c:1184
+#, gcc-internal-format
+msgid "failed to reclaim unneeded function"
+msgstr ""
+
+#: cgraphunit.c:1906
+#, gcc-internal-format
+msgid "nodes with unreleased memory found"
+msgstr ""
+
+#: collect2.c:1530 opts.c:1134
+#, gcc-internal-format
+msgid "LTO support has not been enabled in this configuration"
+msgstr ""
+
+#: collect2.c:1623
+#, gcc-internal-format
+msgid "unknown demangling style '%s'"
+msgstr ""
+
+#: collect2.c:1993 lto/lto.c:1241
+#, gcc-internal-format
+msgid "%s terminated with signal %d [%s]%s"
+msgstr ""
+
+#: collect2.c:2795
+#, gcc-internal-format
+msgid "cannot find 'ldd'"
+msgstr ""
+
+#: convert.c:89
+#, gcc-internal-format
+msgid "cannot convert to a pointer type"
+msgstr ""
+
+#: convert.c:390
+#, gcc-internal-format
+msgid "pointer value used where a floating point value was expected"
+msgstr ""
+
+#: convert.c:394
+#, gcc-internal-format
+msgid "aggregate value used where a float was expected"
+msgstr ""
+
+#: convert.c:419
+#, gcc-internal-format
+msgid "conversion to incomplete type"
+msgstr ""
+
+#: convert.c:854 convert.c:930
+#, gcc-internal-format
+msgid "can't convert between vector values of different size"
+msgstr ""
+
+#: convert.c:860
+#, gcc-internal-format
+msgid "aggregate value used where an integer was expected"
+msgstr ""
+
+#: convert.c:910
+#, gcc-internal-format
+msgid "pointer value used where a complex was expected"
+msgstr ""
+
+#: convert.c:914
+#, gcc-internal-format
+msgid "aggregate value used where a complex was expected"
+msgstr ""
+
+#: convert.c:936
+#, gcc-internal-format
+msgid "can't convert value to a vector"
+msgstr ""
+
+#: convert.c:975
+#, gcc-internal-format
+msgid "aggregate value used where a fixed-point was expected"
+msgstr ""
+
+#: coverage.c:185
+#, gcc-internal-format
+msgid "%qs is not a gcov data file"
+msgstr ""
+
+#: coverage.c:196
+#, gcc-internal-format
+msgid "%qs is version %q.*s, expected version %q.*s"
+msgstr ""
+
+#: coverage.c:276 coverage.c:284
+#, gcc-internal-format
+msgid "coverage mismatch for function %u while reading execution counters"
+msgstr ""
+
+#: coverage.c:278 coverage.c:372
+#, gcc-internal-format
+msgid "checksum is %x instead of %x"
+msgstr ""
+
+#: coverage.c:286 coverage.c:374
+#, gcc-internal-format
+msgid "number of counters is %d instead of %d"
+msgstr ""
+
+#: coverage.c:292
+#, gcc-internal-format
+msgid "cannot merge separate %s counters for function %u"
+msgstr ""
+
+#: coverage.c:313
+#, gcc-internal-format
+msgid "%qs has overflowed"
+msgstr ""
+
+#: coverage.c:350
+#, gcc-internal-format
+msgid "no coverage for function %qE found"
+msgstr ""
+
+#: coverage.c:363 coverage.c:366
+#, gcc-internal-format
+msgid "coverage mismatch for function %qE while reading counter %qs"
+msgstr ""
+
+#: coverage.c:382
+#, gcc-internal-format
+msgid "coverage mismatch ignored due to -Wcoverage-mismatch"
+msgstr ""
+
+#: coverage.c:384
+#, gcc-internal-format
+msgid "execution counts estimated"
+msgstr ""
+
+#: coverage.c:387
+#, gcc-internal-format
+msgid "this can result in poorly optimized code"
+msgstr ""
+
+#: coverage.c:570
+#, gcc-internal-format
+msgid "cannot open %s"
+msgstr ""
+
+#: coverage.c:605
+#, gcc-internal-format
+msgid "error writing %qs"
+msgstr ""
+
+#: dbgcnt.c:135
+#, gcc-internal-format
+msgid "Can not find a valid counter:value pair:"
+msgstr ""
+
+#: dbgcnt.c:136
+#, gcc-internal-format
+msgid "-fdbg-cnt=%s"
+msgstr ""
+
+#: dbgcnt.c:137
+#, gcc-internal-format
+msgid "          %s"
+msgstr ""
+
+#: dbxout.c:3258
+#, gcc-internal-format
+msgid "common symbol debug info is not structured as symbol+offset"
+msgstr ""
+
+#: diagnostic.c:763
+#, gcc-internal-format
+msgid "in %s, at %s:%d"
+msgstr ""
+
+#: dominance.c:1010
+#, gcc-internal-format
+msgid "dominator of %d status unknown"
+msgstr ""
+
+#: dominance.c:1017
+#, gcc-internal-format
+msgid "dominator of %d should be %d, not %d"
+msgstr ""
+
+#: dwarf2out.c:4007
+#, gcc-internal-format
+msgid "Multiple EH personalities are supported only with assemblers supporting .cfi.personality directive."
+msgstr ""
+
+#: dwarf2out.c:5393
+#, gcc-internal-format
+msgid "DW_LOC_OP %s not implemented"
+msgstr ""
+
+#: dwarf2out.c:12859
+#, gcc-internal-format
+msgid "non-delegitimized UNSPEC %d found in variable location"
+msgstr ""
+
+#: emit-rtl.c:2460
+#, gcc-internal-format
+msgid "invalid rtl sharing found in the insn"
+msgstr ""
+
+#: emit-rtl.c:2462
+#, gcc-internal-format
+msgid "shared rtx"
+msgstr ""
+
+#: emit-rtl.c:2464
+#, gcc-internal-format
+msgid "internal consistency failure"
+msgstr ""
+
+#: emit-rtl.c:3626
+#, gcc-internal-format
+msgid "ICE: emit_insn used where emit_jump_insn needed:\n"
+msgstr ""
+
+#: errors.c:133
+#, gcc-internal-format
+msgid "abort in %s, at %s:%d"
+msgstr ""
+
+#: except.c:223
+#, gcc-internal-format
+msgid "exception handling disabled, use -fexceptions to enable"
+msgstr ""
+
+#: except.c:2032
+#, gcc-internal-format
+msgid "argument of %<__builtin_eh_return_regno%> must be constant"
+msgstr ""
+
+#: except.c:2169
+#, gcc-internal-format
+msgid "__builtin_eh_return not supported on this target"
+msgstr ""
+
+#: except.c:3340 except.c:3365
+#, gcc-internal-format
+msgid "region_array is corrupted for region %i"
+msgstr ""
+
+#: except.c:3353 except.c:3384
+#, gcc-internal-format
+msgid "lp_array is corrupted for lp %i"
+msgstr ""
+
+#: except.c:3370
+#, gcc-internal-format
+msgid "outer block of region %i is wrong"
+msgstr ""
+
+#: except.c:3375
+#, gcc-internal-format
+msgid "negative nesting depth of region %i"
+msgstr ""
+
+#: except.c:3389
+#, gcc-internal-format
+msgid "region of lp %i is wrong"
+msgstr ""
+
+#: except.c:3416
+#, gcc-internal-format
+msgid "tree list ends on depth %i"
+msgstr ""
+
+#: except.c:3421
+#, gcc-internal-format
+msgid "region_array does not match region_tree"
+msgstr ""
+
+#: except.c:3426
+#, gcc-internal-format
+msgid "lp_array does not match region_tree"
+msgstr ""
+
+#: except.c:3433
+#, gcc-internal-format
+msgid "verify_eh_tree failed"
+msgstr ""
+
+#: explow.c:1304
+#, gcc-internal-format
+msgid "stack limits not supported on this target"
+msgstr ""
+
+#: expr.c:9236
+msgid "%Kcall to %qs declared with attribute error: %s"
+msgstr ""
+
+#: expr.c:9243
+msgid "%Kcall to %qs declared with attribute warning: %s"
+msgstr ""
+
+#: final.c:1460
+#, gcc-internal-format
+msgid "invalid argument %qs to -fdebug-prefix-map"
+msgstr ""
+
+#: final.c:1577
+#, gcc-internal-format
+msgid "the frame size of %wd bytes is larger than %wd bytes"
+msgstr ""
+
+#: final.c:4370 toplev.c:1936
+#, gcc-internal-format
+msgid "could not open final insn dump file %qs: %s"
+msgstr ""
+
+#: final.c:4428
+#, gcc-internal-format
+msgid "could not close final insn dump file %qs: %s"
+msgstr ""
+
+#: fixed-value.c:104
+#, gcc-internal-format
+msgid "large fixed-point constant implicitly truncated to fixed-point type"
+msgstr ""
+
+#: fold-const.c:1364
+#, gcc-internal-format
+msgid "assuming signed overflow does not occur when negating a division"
+msgstr ""
+
+#: fold-const.c:4275 fold-const.c:4287
+#, gcc-internal-format
+msgid "comparison is always %d due to width of bit-field"
+msgstr ""
+
+#: fold-const.c:5627
+#, gcc-internal-format
+msgid "assuming signed overflow does not occur when simplifying range test"
+msgstr ""
+
+#: fold-const.c:6022 fold-const.c:6037
+#, gcc-internal-format
+msgid "comparison is always %d"
+msgstr ""
+
+#: fold-const.c:6172
+#, gcc-internal-format
+msgid "%<or%> of unmatched not-equal tests is always 1"
+msgstr ""
+
+#: fold-const.c:6177
+#, gcc-internal-format
+msgid "%<and%> of mutually exclusive equal-tests is always 0"
+msgstr ""
+
+#: fold-const.c:9158
+#, gcc-internal-format
+msgid "assuming signed overflow does not occur when reducing constant in comparison"
+msgstr ""
+
+#: fold-const.c:9530
+#, gcc-internal-format
+msgid "assuming signed overflow does not occur when combining constants around a comparison"
+msgstr ""
+
+#: fold-const.c:14233
+#, gcc-internal-format
+msgid "fold check: original tree changed by fold"
+msgstr ""
+
+#: function.c:254
+#, gcc-internal-format
+msgid "total size of local objects too large"
+msgstr ""
+
+#: function.c:1645 gimplify.c:4983
+#, gcc-internal-format
+msgid "impossible constraint in %<asm%>"
+msgstr ""
+
+#: function.c:3770
+#, gcc-internal-format
+msgid "variable %q+D might be clobbered by %<longjmp%> or %<vfork%>"
+msgstr ""
+
+#: function.c:3791
+#, gcc-internal-format
+msgid "argument %q+D might be clobbered by %<longjmp%> or %<vfork%>"
+msgstr ""
+
+#: function.c:4236
+#, gcc-internal-format
+msgid "function returns an aggregate"
+msgstr ""
+
+#: function.c:4630
+#, gcc-internal-format
+msgid "unused parameter %q+D"
+msgstr ""
+
+#: gcc.c:1376
+#, gcc-internal-format
+msgid "ambiguous abbreviation %s"
+msgstr ""
+
+#: gcc.c:1403
+#, gcc-internal-format
+msgid "incomplete '%s' option"
+msgstr ""
+
+#: gcc.c:1414
+#, gcc-internal-format
+msgid "missing argument to '%s' option"
+msgstr ""
+
+#: gcc.c:1427
+#, gcc-internal-format
+msgid "extraneous argument to '%s' option"
+msgstr ""
+
+#: gcc.c:4289
+#, gcc-internal-format
+msgid "warning: -pipe ignored because -save-temps specified"
+msgstr ""
+
+#: gcc.c:4623
+#, gcc-internal-format
+msgid "warning: '-x %s' after last input file has no effect"
+msgstr ""
+
+#. Catch the case where a spec string contains something like
+#. '%{foo:%*}'.  i.e. there is no * in the pattern on the left
+#. hand side of the :.
+#: gcc.c:5877
+#, gcc-internal-format
+msgid "spec failure: '%%*' has not been initialized by pattern match"
+msgstr ""
+
+#: gcc.c:5886
+#, gcc-internal-format
+msgid "warning: use of obsolete %%[ operator in specs"
+msgstr ""
+
+#: gcc.c:5967
+#, gcc-internal-format
+msgid "spec failure: unrecognized spec option '%c'"
+msgstr ""
+
+#: gcc.c:6703
+#, gcc-internal-format
+msgid "%s: could not determine length of compare-debug file %s"
+msgstr ""
+
+#: gcc.c:6714
+#, gcc-internal-format
+msgid "%s: -fcompare-debug failure (length)"
+msgstr ""
+
+#: gcc.c:6724 gcc.c:6765
+#, gcc-internal-format
+msgid "%s: could not open compare-debug file %s"
+msgstr ""
+
+#: gcc.c:6744 gcc.c:6781
+#, gcc-internal-format
+msgid "%s: -fcompare-debug failure"
+msgstr ""
+
+#: gcc.c:7017
+#, gcc-internal-format
+msgid "spec failure: more than one arg to SYSROOT_SUFFIX_SPEC"
+msgstr ""
+
+#: gcc.c:7040
+#, gcc-internal-format
+msgid "spec failure: more than one arg to SYSROOT_HEADERS_SUFFIX_SPEC"
+msgstr ""
+
+#: gcc.c:7148
+#, gcc-internal-format
+msgid "unrecognized option '-%s'"
+msgstr ""
+
+#: gcc.c:7381 gcc.c:7444
+#, gcc-internal-format
+msgid "%s: %s compiler not installed on this system"
+msgstr ""
+
+#: gcc.c:7468
+#, gcc-internal-format
+msgid "Recompiling with -fcompare-debug"
+msgstr ""
+
+#: gcc.c:7482
+#, gcc-internal-format
+msgid "during -fcompare-debug recompilation"
+msgstr ""
+
+#: gcc.c:7491
+#, gcc-internal-format
+msgid "Comparing final insns dumps"
+msgstr ""
+
+#: gcc.c:7615
+#, gcc-internal-format
+msgid "%s: linker input file unused because linking not done"
+msgstr ""
+
+#: gcc.c:7655
+#, gcc-internal-format
+msgid "language %s not recognized"
+msgstr ""
+
+#: gcc.c:7726 lto/lto.c:1231
+#, gcc-internal-format
+msgid "%s: %s"
+msgstr ""
+
+#: gcse.c:4918
+#, gcc-internal-format
+msgid "%s: %d basic blocks and %d edges/basic block"
+msgstr ""
+
+#: gcse.c:4931
+#, gcc-internal-format
+msgid "%s: %d basic blocks and %d registers"
+msgstr ""
+
+#: ggc-common.c:466 ggc-common.c:474 ggc-common.c:542 ggc-common.c:561
+#: ggc-page.c:2198 ggc-page.c:2229 ggc-page.c:2236 ggc-zone.c:2442
+#: ggc-zone.c:2453 ggc-zone.c:2457
+#, gcc-internal-format
+msgid "can't write PCH file: %m"
+msgstr ""
+
+#: ggc-common.c:554 config/i386/host-cygwin.c:57
+#, gcc-internal-format
+msgid "can't get position in PCH file: %m"
+msgstr ""
+
+#: ggc-common.c:564
+#, gcc-internal-format
+msgid "can't write padding to PCH file: %m"
+msgstr ""
+
+#: ggc-common.c:619 ggc-common.c:627 ggc-common.c:634 ggc-common.c:637
+#: ggc-common.c:647 ggc-common.c:650 ggc-page.c:2326 ggc-zone.c:2476
+#, gcc-internal-format
+msgid "can't read PCH file: %m"
+msgstr ""
+
+#: ggc-common.c:642
+#, gcc-internal-format
+msgid "had to relocate PCH"
+msgstr ""
+
+#: ggc-page.c:1524
+#, gcc-internal-format
+msgid "open /dev/zero: %m"
+msgstr ""
+
+#: ggc-page.c:2214 ggc-page.c:2220
+#, gcc-internal-format
+msgid "can't write PCH file"
+msgstr ""
+
+#: ggc-zone.c:2439 ggc-zone.c:2450
+#, gcc-internal-format
+msgid "can't seek PCH file: %m"
+msgstr ""
+
+#: gimple.c:1032
+#, gcc-internal-format
+msgid "gimple check: expected %s(%s), have %s(%s) in %s, at %s:%d"
+msgstr ""
+
+#: gimplify.c:2373
+#, gcc-internal-format
+msgid "using result of function returning %<void%>"
+msgstr ""
+
+#: gimplify.c:4868
+#, gcc-internal-format
+msgid "invalid lvalue in asm output %d"
+msgstr ""
+
+#: gimplify.c:4984
+#, gcc-internal-format
+msgid "non-memory input %d must stay in memory"
+msgstr ""
+
+#: gimplify.c:4999
+#, gcc-internal-format
+msgid "memory input %d is not directly addressable"
+msgstr ""
+
+#: gimplify.c:5500
+#, gcc-internal-format
+msgid "%qE not specified in enclosing parallel"
+msgstr ""
+
+#: gimplify.c:5502
+#, gcc-internal-format
+msgid "enclosing parallel"
+msgstr ""
+
+#: gimplify.c:5607
+#, gcc-internal-format
+msgid "iteration variable %qE should be private"
+msgstr ""
+
+#: gimplify.c:5621
+#, gcc-internal-format
+msgid "iteration variable %qE should not be firstprivate"
+msgstr ""
+
+#: gimplify.c:5624
+#, gcc-internal-format
+msgid "iteration variable %qE should not be reduction"
+msgstr ""
+
+#: gimplify.c:5787
+#, gcc-internal-format
+msgid "%s variable %qE is private in outer context"
+msgstr ""
+
+#: gimplify.c:7307
+#, gcc-internal-format
+msgid "gimplification failed"
+msgstr ""
+
+#: graph.c:401 java/jcf-parse.c:1748 java/jcf-parse.c:1889 objc/objc-act.c:524
+#, gcc-internal-format
+msgid "can't open %s: %m"
+msgstr ""
+
+#: graphite.c:289 toplev.c:1851
+#, gcc-internal-format
+msgid "Graphite loop optimizations cannot be used"
+msgstr ""
+
+#: haifa-sched.c:185
+#, gcc-internal-format
+msgid "fix_sched_param: unknown param: %s"
+msgstr ""
+
+#: ira.c:1475 ira.c:1488 ira.c:1502
+#, gcc-internal-format
+msgid "%s cannot be used in asm here"
+msgstr ""
+
+#: lto-cgraph.c:607
+#, gcc-internal-format
+msgid "bytecode stream: found multiple instances of cgraph node %d"
+msgstr ""
+
+#: lto-cgraph.c:678
+#, gcc-internal-format
+msgid "bytecode stream: no caller found while reading edge"
+msgstr ""
+
+#: lto-cgraph.c:682
+#, gcc-internal-format
+msgid "bytecode stream: no callee found while reading edge"
+msgstr ""
+
+#: lto-cgraph.c:731
+#, gcc-internal-format
+msgid "bytecode stream: found empty cgraph node"
+msgstr ""
+
+#: lto-cgraph.c:797
+#, gcc-internal-format
+msgid "Combining units with different profiles is not supported."
+msgstr ""
+
+#: lto-compress.c:190 lto-compress.c:198 lto-compress.c:219 lto-compress.c:280
+#: lto-compress.c:288 lto-compress.c:309
+#, gcc-internal-format
+msgid "compressed stream: %s"
+msgstr ""
+
+#: lto-section-in.c:66
+#, gcc-internal-format
+msgid "bytecode stream: trying to read %d bytes after the end of the input buffer"
+msgstr ""
+
+#: lto-streamer-in.c:81
+#, gcc-internal-format
+msgid "bytecode stream: unexpected tag %s"
+msgstr ""
+
+#: lto-streamer-in.c:92
+#, gcc-internal-format
+msgid "bytecode stream: tag %s is not in the expected range [%s, %s]"
+msgstr ""
+
+#: lto-streamer-in.c:106
+#, gcc-internal-format
+msgid "bytecode stream: expected tag %s instead of %s"
+msgstr ""
+
+#: lto-streamer-in.c:150
+#, gcc-internal-format
+msgid "bytecode stream: string too long for the string table"
+msgstr ""
+
+#: lto-streamer-in.c:210
+#, gcc-internal-format
+msgid "bytecode stream: found non-null terminated string"
+msgstr ""
+
+#: lto-streamer-in.c:1133
+#, gcc-internal-format
+msgid "bytecode stream: unknown GIMPLE statement tag %s"
+msgstr ""
+
+#: lto-streamer-in.c:2418
+#, gcc-internal-format
+msgid "optimization options not supported yet"
+msgstr ""
+
+#: lto-streamer-in.c:2423
+#, gcc-internal-format
+msgid "target optimization options not supported yet"
+msgstr ""
+
+#: lto-streamer-in.c:2566
+#, gcc-internal-format
+msgid "bytecode stream: tried to jump backwards in the stream"
+msgstr ""
+
+#: lto-streamer-in.c:2610
+#, gcc-internal-format
+msgid "target specific builtin not available"
+msgstr ""
+
+#: lto-streamer-out.c:1180
+#, gcc-internal-format
+msgid "gimple bytecode streams do not support the optimization attribute"
+msgstr ""
+
+#: lto-streamer-out.c:1183
+#, gcc-internal-format
+msgid "gimple bytecode streams do not support the target attribute"
+msgstr ""
+
+#: lto-streamer-out.c:1201
+#, gcc-internal-format
+msgid "tree code %qs is not supported in gimple streams"
+msgstr ""
+
+#: lto-streamer-out.c:1245
+#, gcc-internal-format
+msgid "gimple bytecode streams do not support machine specific builtin functions on this target"
+msgstr ""
+
+#: lto-streamer.c:179
+#, gcc-internal-format
+msgid "bytecode stream: unexpected LTO section %s"
+msgstr ""
+
+#: lto-streamer.c:862
+#, gcc-internal-format
+msgid "bytecode stream generated with LTO version %d.%d instead of the expected %d.%d"
+msgstr ""
+
+#: lto-symtab.c:435
+#, gcc-internal-format
+msgid "%qD has already been defined"
+msgstr ""
+
+#: lto-symtab.c:437
+#, gcc-internal-format
+msgid "previously defined here"
+msgstr ""
+
+#: lto-symtab.c:507
+#, gcc-internal-format
+msgid "type of %qD does not match original declaration"
+msgstr ""
+
+#: lto-symtab.c:514
+#, gcc-internal-format
+msgid "alignment of %qD is bigger than original declaration"
+msgstr ""
+
+#: lto-symtab.c:520 lto-symtab.c:617
+#, gcc-internal-format
+msgid "previously declared here"
+msgstr ""
+
+#: lto-symtab.c:600
+#, gcc-internal-format
+msgid "variable %qD redeclared as function"
+msgstr ""
+
+#: lto-symtab.c:606
+#, gcc-internal-format
+msgid "function %qD redeclared as variable"
+msgstr ""
+
+#: omp-low.c:1838
+#, gcc-internal-format
+msgid "barrier region may not be closely nested inside of work-sharing, critical, ordered, master or explicit task region"
+msgstr ""
+
+#: omp-low.c:1843
+#, gcc-internal-format
+msgid "work-sharing region may not be closely nested inside of work-sharing, critical, ordered, master or explicit task region"
+msgstr ""
+
+#: omp-low.c:1861
+#, gcc-internal-format
+msgid "master region may not be closely nested inside of work-sharing or explicit task region"
+msgstr ""
+
+#: omp-low.c:1876
+#, gcc-internal-format
+msgid "ordered region may not be closely nested inside of critical or explicit task region"
+msgstr ""
+
+#: omp-low.c:1882
+#, gcc-internal-format
+msgid "ordered region must be closely nested inside a loop region with an ordered clause"
+msgstr ""
+
+#: omp-low.c:1897
+#, gcc-internal-format
+msgid "critical region may not be nested inside a critical region with the same name"
+msgstr ""
+
+#: omp-low.c:6751 cp/decl.c:2719 cp/parser.c:8406 cp/parser.c:8426
+#, gcc-internal-format
+msgid "invalid exit from OpenMP structured block"
+msgstr ""
+
+#: omp-low.c:6753 omp-low.c:6758
+#, gcc-internal-format
+msgid "invalid entry to OpenMP structured block"
+msgstr ""
+
+#. Otherwise, be vague and lazy, but efficient.
+#: omp-low.c:6761
+#, gcc-internal-format
+msgid "invalid branch to/from an OpenMP structured block"
+msgstr ""
+
+#: opts.c:171
+#, gcc-internal-format
+msgid "argument %qs to %<-femit-struct-debug-detailed%> not recognized"
+msgstr ""
+
+#: opts.c:205
+#, gcc-internal-format
+msgid "argument %qs to %<-femit-struct-debug-detailed%> unknown"
+msgstr ""
+
+#: opts.c:211
+#, gcc-internal-format
+msgid "%<-femit-struct-debug-detailed=dir:...%> must allow at least as much as %<-femit-struct-debug-detailed=ind:...%>"
+msgstr ""
+
+#. Eventually this should become a hard error IMO.
+#: opts.c:451
+#, gcc-internal-format
+msgid "command line option \"%s\" is valid for %s but not for %s"
+msgstr ""
+
+#: opts.c:482 opts.c:765
+#, gcc-internal-format
+msgid "unrecognized command line option \"%s\""
+msgstr ""
+
+#: opts.c:543
+#, gcc-internal-format
+msgid "command line option %qs is not supported by this configuration"
+msgstr ""
+
+#: opts.c:596
+#, gcc-internal-format
+msgid "missing argument to \"%s\""
+msgstr ""
+
+#: opts.c:606
+#, gcc-internal-format
+msgid "argument to \"%s\" should be a non-negative integer"
+msgstr ""
+
+#: opts.c:1007
+#, gcc-internal-format
+msgid "Section anchors must be disabled when unit-at-a-time is disabled."
+msgstr ""
+
+#: opts.c:1011
+#, gcc-internal-format
+msgid "Toplevel reorder must be disabled when unit-at-a-time is disabled."
+msgstr ""
+
+#: opts.c:1026
+#, gcc-internal-format
+msgid "section anchors must be disabled when toplevel reorder is disabled"
+msgstr ""
+
+#: opts.c:1062 config/darwin.c:1723 config/sh/sh.c:907
+#, gcc-internal-format
+msgid "-freorder-blocks-and-partition does not work with exceptions on this architecture"
+msgstr ""
+
+#: opts.c:1079 config/sh/sh.c:915
+#, gcc-internal-format
+msgid "-freorder-blocks-and-partition does not support unwind info on this architecture"
+msgstr ""
+
+#: opts.c:1098
+#, gcc-internal-format
+msgid "-freorder-blocks-and-partition does not work on this architecture"
+msgstr ""
+
+#: opts.c:1112
+#, gcc-internal-format
+msgid "-fira-algorithm=CB does not work on this architecture"
+msgstr ""
+
+#: opts.c:1141
+#, gcc-internal-format
+msgid "-flto and -fwhopr are mutually exclusive"
+msgstr ""
+
+#: opts.c:1432
+#, gcc-internal-format
+msgid "unrecognized include_flags 0x%x passed to print_specific_help"
+msgstr ""
+
+#: opts.c:1774
+#, gcc-internal-format
+msgid "unknown excess precision style \"%s\""
+msgstr ""
+
+#: opts.c:1811
+#, gcc-internal-format
+msgid "structure alignment must be a small power of two, not %d"
+msgstr ""
+
+#: opts.c:1827 opts.c:1835
+#, gcc-internal-format
+msgid "Plugin support is disabled.  Configure with --enable-plugin."
+msgstr ""
+
+#: opts.c:1914
+#, gcc-internal-format
+msgid "unrecognized visibility value \"%s\""
+msgstr ""
+
+#: opts.c:1972
+#, gcc-internal-format
+msgid "unknown stack check parameter \"%s\""
+msgstr ""
+
+#: opts.c:1998
+#, gcc-internal-format
+msgid "unrecognized register name \"%s\""
+msgstr ""
+
+#: opts.c:2022
+#, gcc-internal-format
+msgid "unknown tls-model \"%s\""
+msgstr ""
+
+#: opts.c:2031
+#, gcc-internal-format
+msgid "unknown ira algorithm \"%s\""
+msgstr ""
+
+#: opts.c:2042
+#, gcc-internal-format
+msgid "unknown ira region \"%s\""
+msgstr ""
+
+#: opts.c:2087
+#, gcc-internal-format
+msgid "dwarf version %d is not supported"
+msgstr ""
+
+#: opts.c:2157
+#, gcc-internal-format
+msgid "%s: --param arguments should be of the form NAME=VALUE"
+msgstr ""
+
+#: opts.c:2162
+#, gcc-internal-format
+msgid "invalid --param value %qs"
+msgstr ""
+
+#: opts.c:2265
+#, gcc-internal-format
+msgid "target system does not support debug output"
+msgstr ""
+
+#: opts.c:2272
+#, gcc-internal-format
+msgid "debug format \"%s\" conflicts with prior selection"
+msgstr ""
+
+#: opts.c:2288
+#, gcc-internal-format
+msgid "unrecognised debug output level \"%s\""
+msgstr ""
+
+#: opts.c:2290
+#, gcc-internal-format
+msgid "debug output level %s is too high"
+msgstr ""
+
+#: opts.c:2410
+#, gcc-internal-format
+msgid "-Werror=%s: No option -%s"
+msgstr ""
+
+#: params.c:68
+#, gcc-internal-format
+msgid "minimum value of parameter %qs is %u"
+msgstr ""
+
+#: params.c:73
+#, gcc-internal-format
+msgid "maximum value of parameter %qs is %u"
+msgstr ""
+
+#. If we didn't find this parameter, issue an error message.
+#: params.c:85
+#, gcc-internal-format
+msgid "invalid parameter %qs"
+msgstr ""
+
+#: passes.c:599
+#, gcc-internal-format
+msgid "Invalid pass positioning operation"
+msgstr ""
+
+#: passes.c:641
+#, gcc-internal-format
+msgid "plugin cannot register a missing pass"
+msgstr ""
+
+#: passes.c:644
+#, gcc-internal-format
+msgid "plugin cannot register an unnamed pass"
+msgstr ""
+
+#: passes.c:648
+#, gcc-internal-format
+msgid "plugin cannot register pass %qs without reference pass name"
+msgstr ""
+
+#: passes.c:666
+#, gcc-internal-format
+msgid "pass %qs not found but is referenced by new pass %qs"
+msgstr ""
+
+#: plugin.c:153
+#, gcc-internal-format
+msgid ""
+"Plugin %s was specified with different paths:\n"
+"%s\n"
+"%s"
+msgstr ""
+
+#: plugin.c:199
+#, gcc-internal-format
+msgid "Malformed option -fplugin-arg-%s (multiple '=' signs)"
+msgstr ""
+
+#: plugin.c:215
+#, gcc-internal-format
+msgid "Malformed option -fplugin-arg-%s (missing -<key>[=<value>])"
+msgstr ""
+
+#: plugin.c:277
+#, gcc-internal-format
+msgid "Plugin %s should be specified before -fplugin-arg-%s in the command line"
+msgstr ""
+
+#: plugin.c:397
+#, gcc-internal-format
+msgid "Unknown callback event registered by plugin %s"
+msgstr ""
+
+#: plugin.c:425
+#, gcc-internal-format
+msgid "Plugin %s registered a null callback function for event %s"
+msgstr ""
+
+#: plugin.c:550
+#, gcc-internal-format
+msgid ""
+"Cannot load plugin %s\n"
+"%s"
+msgstr ""
+
+#: plugin.c:559
+#, gcc-internal-format
+msgid ""
+"plugin %s is not licensed under a GPL-compatible license\n"
+"%s"
+msgstr ""
+
+#: plugin.c:568
+#, gcc-internal-format
+msgid ""
+"Cannot find %s in plugin %s\n"
+"%s"
+msgstr ""
+
+#: plugin.c:576
+#, gcc-internal-format
+msgid "Fail to initialize plugin %s"
+msgstr ""
+
+#: profile.c:414
+#, gcc-internal-format
+msgid "corrupted profile info: edge from %i to %i exceeds maximal count"
+msgstr ""
+
+#: profile.c:458
+#, gcc-internal-format
+msgid "corrupted profile info: run_max * runs < sum_max"
+msgstr ""
+
+#: profile.c:464
+#, gcc-internal-format
+msgid "corrupted profile info: sum_all is smaller than sum_max"
+msgstr ""
+
+#: profile.c:630
+#, gcc-internal-format
+msgid "correcting inconsistent profile data"
+msgstr ""
+
+#: profile.c:640
+#, gcc-internal-format
+msgid "corrupted profile info: profile data is not flow-consistent"
+msgstr ""
+
+#: profile.c:657
+#, gcc-internal-format
+msgid "corrupted profile info: number of iterations for basic block %d thought to be %i"
+msgstr ""
+
+#: profile.c:678
+#, gcc-internal-format
+msgid "corrupted profile info: number of executions for edge %d-%d thought to be %i"
+msgstr ""
+
+#: reg-stack.c:537
+#, gcc-internal-format
+msgid "output constraint %d must specify a single register"
+msgstr ""
+
+#: reg-stack.c:547
+#, gcc-internal-format
+msgid "output constraint %d cannot be specified together with \"%s\" clobber"
+msgstr ""
+
+#: reg-stack.c:570
+#, gcc-internal-format
+msgid "output regs must be grouped at top of stack"
+msgstr ""
+
+#: reg-stack.c:607
+#, gcc-internal-format
+msgid "implicitly popped regs must be grouped at top of stack"
+msgstr ""
+
+#: reg-stack.c:626
+#, gcc-internal-format
+msgid "output operand %d must use %<&%> constraint"
+msgstr ""
+
+#: regcprop.c:1129
+#, gcc-internal-format
+msgid "validate_value_data: [%u] Bad next_regno for empty chain (%u)"
+msgstr ""
+
+#: regcprop.c:1141
+#, gcc-internal-format
+msgid "validate_value_data: Loop in regno chain (%u)"
+msgstr ""
+
+#: regcprop.c:1144
+#, gcc-internal-format
+msgid "validate_value_data: [%u] Bad oldest_regno (%u)"
+msgstr ""
+
+#: regcprop.c:1156
+#, gcc-internal-format
+msgid "validate_value_data: [%u] Non-empty reg in chain (%s %u %i)"
+msgstr ""
+
+#: reginfo.c:819
+#, gcc-internal-format
+msgid "can't use '%s' as a %s register"
+msgstr ""
+
+#: reginfo.c:834 config/ia64/ia64.c:5396 config/ia64/ia64.c:5403
+#: config/pa/pa.c:383 config/pa/pa.c:390 config/sh/sh.c:8575
+#: config/sh/sh.c:8582 config/spu/spu.c:5052 config/spu/spu.c:5059
+#, gcc-internal-format
+msgid "unknown register name: %s"
+msgstr ""
+
+#: reginfo.c:843
+#, gcc-internal-format
+msgid "global register variable follows a function definition"
+msgstr ""
+
+#: reginfo.c:847
+#, gcc-internal-format
+msgid "register used for two global register variables"
+msgstr ""
+
+#: reginfo.c:852
+#, gcc-internal-format
+msgid "call-clobbered register used for global register variable"
+msgstr ""
+
+#: reload.c:1262
+#, gcc-internal-format
+msgid "cannot reload integer constant operand in %<asm%>"
+msgstr ""
+
+#: reload.c:1276
+#, gcc-internal-format
+msgid "impossible register constraint in %<asm%>"
+msgstr ""
+
+#: reload.c:3625
+#, gcc-internal-format
+msgid "%<&%> constraint used with no register class"
+msgstr ""
+
+#: reload.c:3822 reload.c:4083
+#, gcc-internal-format
+msgid "inconsistent operand constraints in an %<asm%>"
+msgstr ""
+
+#: reload1.c:1385
+#, gcc-internal-format
+msgid "%<asm%> operand has impossible constraints"
+msgstr ""
+
+#: reload1.c:1405
+#, gcc-internal-format
+msgid "frame size too large for reliable stack checking"
+msgstr ""
+
+#: reload1.c:1408
+#, gcc-internal-format
+msgid "try reducing the number of local variables"
+msgstr ""
+
+#: reload1.c:2145
+#, gcc-internal-format
+msgid "can't find a register in class %qs while reloading %<asm%>"
+msgstr ""
+
+#: reload1.c:2150
+#, gcc-internal-format
+msgid "unable to find a register to spill in class %qs"
+msgstr ""
+
+#: reload1.c:4309
+#, gcc-internal-format
+msgid "%<asm%> operand requires impossible reload"
+msgstr ""
+
+#: reload1.c:5698
+#, gcc-internal-format
+msgid "%<asm%> operand constraint incompatible with operand size"
+msgstr ""
+
+#: reload1.c:7679
+#, gcc-internal-format
+msgid "output operand is constant in %<asm%>"
+msgstr ""
+
+#: rtl.c:635
+#, gcc-internal-format
+msgid "RTL check: access of elt %d of '%s' with last elt %d in %s, at %s:%d"
+msgstr ""
+
+#: rtl.c:645
+#, gcc-internal-format
+msgid "RTL check: expected elt %d type '%c', have '%c' (rtx %s) in %s, at %s:%d"
+msgstr ""
+
+#: rtl.c:655
+#, gcc-internal-format
+msgid "RTL check: expected elt %d type '%c' or '%c', have '%c' (rtx %s) in %s, at %s:%d"
+msgstr ""
+
+#: rtl.c:664
+#, gcc-internal-format
+msgid "RTL check: expected code '%s', have '%s' in %s, at %s:%d"
+msgstr ""
+
+#: rtl.c:674
+#, gcc-internal-format
+msgid "RTL check: expected code '%s' or '%s', have '%s' in %s, at %s:%d"
+msgstr ""
+
+#: rtl.c:701
+#, gcc-internal-format
+msgid "RTL check: attempt to treat non-block symbol as a block symbol in %s, at %s:%d"
+msgstr ""
+
+#: rtl.c:711
+#, gcc-internal-format
+msgid "RTL check: access of elt %d of vector with last elt %d in %s, at %s:%d"
+msgstr ""
+
+#: rtl.c:722
+#, gcc-internal-format
+msgid "RTL flag check: %s used with unexpected rtx code '%s' in %s, at %s:%d"
+msgstr ""
+
+#: stmt.c:312
+#, gcc-internal-format
+msgid "output operand constraint lacks %<=%>"
+msgstr ""
+
+#: stmt.c:327
+#, gcc-internal-format
+msgid "output constraint %qc for operand %d is not at the beginning"
+msgstr ""
+
+#: stmt.c:350
+#, gcc-internal-format
+msgid "operand constraint contains incorrectly positioned %<+%> or %<=%>"
+msgstr ""
+
+#: stmt.c:357 stmt.c:456
+#, gcc-internal-format
+msgid "%<%%%> constraint used with last operand"
+msgstr ""
+
+#: stmt.c:376
+#, gcc-internal-format
+msgid "matching constraint not valid in output operand"
+msgstr ""
+
+#: stmt.c:447
+#, gcc-internal-format
+msgid "input operand constraint contains %qc"
+msgstr ""
+
+#: stmt.c:489
+#, gcc-internal-format
+msgid "matching constraint references invalid operand number"
+msgstr ""
+
+#: stmt.c:527
+#, gcc-internal-format
+msgid "invalid punctuation %qc in constraint"
+msgstr ""
+
+#: stmt.c:551
+#, gcc-internal-format
+msgid "matching constraint does not allow a register"
+msgstr ""
+
+#: stmt.c:605
+#, gcc-internal-format
+msgid "asm-specifier for variable %qE conflicts with asm clobber list"
+msgstr ""
+
+#: stmt.c:696
+#, gcc-internal-format
+msgid "unknown register name %qs in %<asm%>"
+msgstr ""
+
+#: stmt.c:704
+#, gcc-internal-format
+msgid "PIC register %qs clobbered in %<asm%>"
+msgstr ""
+
+#: stmt.c:751
+#, gcc-internal-format
+msgid "more than %d operands in %<asm%>"
+msgstr ""
+
+#: stmt.c:814
+#, gcc-internal-format
+msgid "output number %d not directly addressable"
+msgstr ""
+
+#: stmt.c:900
+#, gcc-internal-format
+msgid "asm operand %d probably doesn%'t match constraints"
+msgstr ""
+
+#: stmt.c:910
+#, gcc-internal-format
+msgid "use of memory input without lvalue in asm operand %d is deprecated"
+msgstr ""
+
+#: stmt.c:1065
+#, gcc-internal-format
+msgid "asm clobber conflict with output operand"
+msgstr ""
+
+#: stmt.c:1070
+#, gcc-internal-format
+msgid "asm clobber conflict with input operand"
+msgstr ""
+
+#: stmt.c:1196
+#, gcc-internal-format
+msgid "too many alternatives in %<asm%>"
+msgstr ""
+
+#: stmt.c:1208
+#, gcc-internal-format
+msgid "operand constraints for %<asm%> differ in number of alternatives"
+msgstr ""
+
+#: stmt.c:1275
+#, gcc-internal-format
+msgid "duplicate asm operand name %qs"
+msgstr ""
+
+#: stmt.c:1372
+#, gcc-internal-format
+msgid "missing close brace for named operand"
+msgstr ""
+
+#: stmt.c:1397
+#, gcc-internal-format
+msgid "undefined named operand %qs"
+msgstr ""
+
+#: stmt.c:1542 cp/cvt.c:918 cp/cvt.c:1034
+#, gcc-internal-format
+msgid "value computed is not used"
+msgstr ""
+
+#: stor-layout.c:160
+#, gcc-internal-format
+msgid "type size can%'t be explicitly evaluated"
+msgstr ""
+
+#: stor-layout.c:162
+#, gcc-internal-format
+msgid "variable-size type declared outside of any function"
+msgstr ""
+
+#: stor-layout.c:680
+#, gcc-internal-format
+msgid "size of %q+D is %d bytes"
+msgstr ""
+
+#: stor-layout.c:682
+#, gcc-internal-format
+msgid "size of %q+D is larger than %wd bytes"
+msgstr ""
+
+#: stor-layout.c:1101
+#, gcc-internal-format
+msgid "packed attribute causes inefficient alignment for %q+D"
+msgstr ""
+
+#: stor-layout.c:1105
+#, gcc-internal-format
+msgid "packed attribute is unnecessary for %q+D"
+msgstr ""
+
+#: stor-layout.c:1123
+#, gcc-internal-format
+msgid "padding struct to align %q+D"
+msgstr ""
+
+#: stor-layout.c:1184
+#, gcc-internal-format
+msgid "Offset of packed bit-field %qD has changed in GCC 4.4"
+msgstr ""
+
+#: stor-layout.c:1491
+#, gcc-internal-format
+msgid "padding struct size to alignment boundary"
+msgstr ""
+
+#: stor-layout.c:1521
+#, gcc-internal-format
+msgid "packed attribute causes inefficient alignment for %qE"
+msgstr ""
+
+#: stor-layout.c:1525
+#, gcc-internal-format
+msgid "packed attribute is unnecessary for %qE"
+msgstr ""
+
+#: stor-layout.c:1531
+#, gcc-internal-format
+msgid "packed attribute causes inefficient alignment"
+msgstr ""
+
+#: stor-layout.c:1533
+#, gcc-internal-format
+msgid "packed attribute is unnecessary"
+msgstr ""
+
+#: stor-layout.c:2048
+#, gcc-internal-format
+msgid "alignment of array elements is greater than element size"
+msgstr ""
+
+#: targhooks.c:163
+#, gcc-internal-format
+msgid "__builtin_saveregs not supported by this target"
+msgstr ""
+
+#: targhooks.c:658
+#, gcc-internal-format
+msgid "nested functions not supported on this target"
+msgstr ""
+
+#: targhooks.c:671
+#, gcc-internal-format
+msgid "nested function trampolines not supported on this target"
+msgstr ""
+
+#: targhooks.c:948
+#, gcc-internal-format
+msgid "target attribute is not supported on this machine"
+msgstr ""
+
+#: targhooks.c:958
+#, gcc-internal-format
+msgid "#pragma GCC target is not supported for this machine"
+msgstr ""
+
+#: tlink.c:483
+#, gcc-internal-format
+msgid "repository file '%s' does not contain command-line arguments"
+msgstr ""
+
+#: tlink.c:731
+#, gcc-internal-format
+msgid "'%s' was assigned to '%s', but was not defined during recompilation, or vice versa"
+msgstr ""
+
+#: tlink.c:801
+#, gcc-internal-format
+msgid "ld returned %d exit status"
+msgstr ""
+
+#: toplev.c:555
+#, gcc-internal-format
+msgid "invalid option argument %qs"
+msgstr ""
+
+#: toplev.c:645
+#, gcc-internal-format
+msgid "getting core file size maximum limit: %m"
+msgstr ""
+
+#: toplev.c:648
+#, gcc-internal-format
+msgid "setting core file size limit to maximum: %m"
+msgstr ""
+
+#: toplev.c:868
+#, gcc-internal-format
+msgid "%q+F declared %<static%> but never defined"
+msgstr ""
+
+#: toplev.c:896
+#, gcc-internal-format
+msgid "%q+D defined but not used"
+msgstr ""
+
+#: toplev.c:963
+#, gcc-internal-format
+msgid "%qD is deprecated (declared at %s:%d): %s"
+msgstr ""
+
+#: toplev.c:967
+#, gcc-internal-format
+msgid "%qD is deprecated (declared at %s:%d)"
+msgstr ""
+
+#: toplev.c:992
+#, gcc-internal-format
+msgid "%qE is deprecated (declared at %s:%d): %s"
+msgstr ""
+
+#: toplev.c:996
+#, gcc-internal-format
+msgid "%qE is deprecated (declared at %s:%d)"
+msgstr ""
+
+#: toplev.c:1003
+#, gcc-internal-format
+msgid "type is deprecated (declared at %s:%d): %s"
+msgstr ""
+
+#: toplev.c:1007
+#, gcc-internal-format
+msgid "type is deprecated (declared at %s:%d)"
+msgstr ""
+
+#: toplev.c:1016
+#, gcc-internal-format
+msgid "%qE is deprecated: %s"
+msgstr ""
+
+#: toplev.c:1019
+#, gcc-internal-format
+msgid "%qE is deprecated"
+msgstr ""
+
+#: toplev.c:1024
+#, gcc-internal-format
+msgid "type is deprecated: %s"
+msgstr ""
+
+#: toplev.c:1027
+#, gcc-internal-format
+msgid "type is deprecated"
+msgstr ""
+
+#: toplev.c:1197
+#, gcc-internal-format
+msgid "unrecognized gcc debugging option: %c"
+msgstr ""
+
+#: toplev.c:1462
+#, gcc-internal-format
+msgid "can%'t open %s for writing: %m"
+msgstr ""
+
+#: toplev.c:1483
+#, gcc-internal-format
+msgid "-frecord-gcc-switches is not supported by the current target"
+msgstr ""
+
+#: toplev.c:1824
+#, gcc-internal-format
+msgid "this target does not support %qs"
+msgstr ""
+
+#: toplev.c:1881
+#, gcc-internal-format
+msgid "instruction scheduling not supported on this target machine"
+msgstr ""
+
+#: toplev.c:1885
+#, gcc-internal-format
+msgid "this target machine does not have delayed branches"
+msgstr ""
+
+#: toplev.c:1899
+#, gcc-internal-format
+msgid "-f%sleading-underscore not supported on this target machine"
+msgstr ""
+
+#: toplev.c:1942
+#, gcc-internal-format
+msgid "could not close zeroed insn dump file %qs: %s"
+msgstr ""
+
+#: toplev.c:2007
+#, gcc-internal-format
+msgid "target system does not support the \"%s\" debug format"
+msgstr ""
+
+#: toplev.c:2019
+#, gcc-internal-format
+msgid "variable tracking requested, but useless unless producing debug info"
+msgstr ""
+
+#: toplev.c:2022
+#, gcc-internal-format
+msgid "variable tracking requested, but not supported by this debug format"
+msgstr ""
+
+#: toplev.c:2050
+#, gcc-internal-format
+msgid "var-tracking-assignments changes selective scheduling"
+msgstr ""
+
+#: toplev.c:2066
+#, gcc-internal-format
+msgid "can%'t open %s: %m"
+msgstr ""
+
+#: toplev.c:2073
+#, gcc-internal-format
+msgid "-ffunction-sections not supported for this target"
+msgstr ""
+
+#: toplev.c:2078
+#, gcc-internal-format
+msgid "-fdata-sections not supported for this target"
+msgstr ""
+
+#: toplev.c:2085
+#, gcc-internal-format
+msgid "-ffunction-sections disabled; it makes profiling impossible"
+msgstr ""
+
+#: toplev.c:2092
+#, gcc-internal-format
+msgid "-fprefetch-loop-arrays not supported for this target"
+msgstr ""
+
+#: toplev.c:2098
+#, gcc-internal-format
+msgid "-fprefetch-loop-arrays not supported for this target (try -march switches)"
+msgstr ""
+
+#: toplev.c:2107
+#, gcc-internal-format
+msgid "-fprefetch-loop-arrays is not supported with -Os"
+msgstr ""
+
+#: toplev.c:2118
+#, gcc-internal-format
+msgid "-fassociative-math disabled; other options take precedence"
+msgstr ""
+
+#: toplev.c:2134
+#, gcc-internal-format
+msgid "-fstack-protector not supported for this target"
+msgstr ""
+
+#: toplev.c:2147
+#, gcc-internal-format
+msgid "unwind tables currently require a frame pointer for correctness"
+msgstr ""
+
+#: toplev.c:2372
+#, gcc-internal-format
+msgid "error writing to %s: %m"
+msgstr ""
+
+#: toplev.c:2374 java/jcf-parse.c:1767
+#, gcc-internal-format
+msgid "error closing %s: %m"
+msgstr ""
+
+#: tree-cfg.c:2507
+#, gcc-internal-format
+msgid "SSA name in freelist but still referenced"
+msgstr ""
+
+#: tree-cfg.c:2516
+#, gcc-internal-format
+msgid "Indirect reference's operand is not a register or a constant."
+msgstr ""
+
+#: tree-cfg.c:2525
+#, gcc-internal-format
+msgid "ASSERT_EXPR with an always-false condition"
+msgstr ""
+
+#: tree-cfg.c:2531
+#, gcc-internal-format
+msgid "MODIFY_EXPR not expected while having tuples."
+msgstr ""
+
+#: tree-cfg.c:2552
+#, gcc-internal-format
+msgid "constant not recomputed when ADDR_EXPR changed"
+msgstr ""
+
+#: tree-cfg.c:2557
+#, gcc-internal-format
+msgid "side effects not recomputed when ADDR_EXPR changed"
+msgstr ""
+
+#: tree-cfg.c:2575 tree-ssa.c:826
+#, gcc-internal-format
+msgid "address taken, but ADDRESSABLE bit not set"
+msgstr ""
+
+#: tree-cfg.c:2580
+#, gcc-internal-format
+msgid "DECL_GIMPLE_REG_P set on a variable with address taken"
+msgstr ""
+
+#: tree-cfg.c:2591
+#, gcc-internal-format
+msgid "non-integral used in condition"
+msgstr ""
+
+#: tree-cfg.c:2596
+#, gcc-internal-format
+msgid "invalid conditional operand"
+msgstr ""
+
+#: tree-cfg.c:2643
+#, gcc-internal-format
+msgid "invalid position or size operand to BIT_FIELD_REF"
+msgstr ""
+
+#: tree-cfg.c:2650
+#, gcc-internal-format
+msgid "integral result type precision does not match field size of BIT_FIELD_REF"
+msgstr ""
+
+#: tree-cfg.c:2658
+#, gcc-internal-format
+msgid "mode precision of non-integral result does not match field size of BIT_FIELD_REF"
+msgstr ""
+
+#: tree-cfg.c:2669
+#, gcc-internal-format
+msgid "invalid reference prefix"
+msgstr ""
+
+#: tree-cfg.c:2680
+#, gcc-internal-format
+msgid "invalid operand to plus/minus, type is a pointer"
+msgstr ""
+
+#: tree-cfg.c:2691
+#, gcc-internal-format
+msgid "invalid operand to pointer plus, first operand is not a pointer"
+msgstr ""
+
+#: tree-cfg.c:2699
+#, gcc-internal-format
+msgid "invalid operand to pointer plus, second operand is not an integer with type of sizetype."
+msgstr ""
+
+#: tree-cfg.c:2770
+#, gcc-internal-format
+msgid "invalid expression for min lvalue"
+msgstr ""
+
+#: tree-cfg.c:2781
+#, gcc-internal-format
+msgid "invalid operand in indirect reference"
+msgstr ""
+
+#: tree-cfg.c:2788
+#, gcc-internal-format
+msgid "type mismatch in indirect reference"
+msgstr ""
+
+#: tree-cfg.c:2817
+#, gcc-internal-format
+msgid "invalid operands to array reference"
+msgstr ""
+
+#: tree-cfg.c:2828
+#, gcc-internal-format
+msgid "type mismatch in array reference"
+msgstr ""
+
+#: tree-cfg.c:2837
+#, gcc-internal-format
+msgid "type mismatch in array range reference"
+msgstr ""
+
+#: tree-cfg.c:2848
+#, gcc-internal-format
+msgid "type mismatch in real/imagpart reference"
+msgstr ""
+
+#: tree-cfg.c:2858
+#, gcc-internal-format
+msgid "type mismatch in component reference"
+msgstr ""
+
+#: tree-cfg.c:2875
+#, gcc-internal-format
+msgid "Conversion of an SSA_NAME on the left hand side."
+msgstr ""
+
+#: tree-cfg.c:2933
+#, gcc-internal-format
+msgid "invalid function in gimple call"
+msgstr ""
+
+#: tree-cfg.c:2942
+#, gcc-internal-format
+msgid "non-function in gimple call"
+msgstr ""
+
+#: tree-cfg.c:2950
+#, gcc-internal-format
+msgid "invalid LHS in gimple call"
+msgstr ""
+
+#: tree-cfg.c:2956
+#, gcc-internal-format
+msgid "LHS in noreturn call"
+msgstr ""
+
+#: tree-cfg.c:2972
+#, gcc-internal-format
+msgid "invalid conversion in gimple call"
+msgstr ""
+
+#: tree-cfg.c:2981
+#, gcc-internal-format
+msgid "invalid static chain in gimple call"
+msgstr ""
+
+#: tree-cfg.c:2993
+#, gcc-internal-format
+msgid "static chain in indirect gimple call"
+msgstr ""
+
+#: tree-cfg.c:3000
+#, gcc-internal-format
+msgid "static chain with function that doesn't use one"
+msgstr ""
+
+#: tree-cfg.c:3015
+#, gcc-internal-format
+msgid "invalid argument to gimple call"
+msgstr ""
+
+#: tree-cfg.c:3034
+#, gcc-internal-format
+msgid "invalid operands in gimple comparison"
+msgstr ""
+
+#: tree-cfg.c:3052
+#, gcc-internal-format
+msgid "type mismatch in comparison expression"
+msgstr ""
+
+#: tree-cfg.c:3078
+#, gcc-internal-format
+msgid "non-register as LHS of unary operation"
+msgstr ""
+
+#: tree-cfg.c:3084
+#, gcc-internal-format
+msgid "invalid operand in unary operation"
+msgstr ""
+
+#: tree-cfg.c:3119
+#, gcc-internal-format
+msgid "invalid types in nop conversion"
+msgstr ""
+
+#: tree-cfg.c:3134
+#, gcc-internal-format
+msgid "invalid types in address space conversion"
+msgstr ""
+
+#: tree-cfg.c:3148
+#, gcc-internal-format
+msgid "invalid types in fixed-point conversion"
+msgstr ""
+
+#: tree-cfg.c:3161
+#, gcc-internal-format
+msgid "invalid types in conversion to floating point"
+msgstr ""
+
+#: tree-cfg.c:3174
+#, gcc-internal-format
+msgid "invalid types in conversion to integer"
+msgstr ""
+
+#: tree-cfg.c:3209
+#, gcc-internal-format
+msgid "non-trivial conversion in unary operation"
+msgstr ""
+
+#: tree-cfg.c:3236
+#, gcc-internal-format
+msgid "non-register as LHS of binary operation"
+msgstr ""
+
+#: tree-cfg.c:3243
+#, gcc-internal-format
+msgid "invalid operands in binary operation"
+msgstr ""
+
+#: tree-cfg.c:3258
+#, gcc-internal-format
+msgid "type mismatch in complex expression"
+msgstr ""
+
+#: tree-cfg.c:3287
+#, gcc-internal-format
+msgid "type mismatch in shift expression"
+msgstr ""
+
+#: tree-cfg.c:3309
+#, gcc-internal-format
+msgid "type mismatch in vector shift expression"
+msgstr ""
+
+#: tree-cfg.c:3322
+#, gcc-internal-format
+msgid "non-element sized vector shift of floating point vector"
+msgstr ""
+
+#: tree-cfg.c:3340
+#, gcc-internal-format
+msgid "invalid non-vector operands to vector valued plus"
+msgstr ""
+
+#: tree-cfg.c:3364
+#, gcc-internal-format
+msgid "invalid (pointer) operands to plus/minus"
+msgstr ""
+
+#: tree-cfg.c:3379
+#, gcc-internal-format
+msgid "type mismatch in pointer plus expression"
+msgstr ""
+
+#: tree-cfg.c:3402
+#, gcc-internal-format
+msgid "type mismatch in binary truth expression"
+msgstr ""
+
+#: tree-cfg.c:3470
+#, gcc-internal-format
+msgid "type mismatch in binary expression"
+msgstr ""
+
+#: tree-cfg.c:3495
+#, gcc-internal-format
+msgid "non-trivial conversion at assignment"
+msgstr ""
+
+#: tree-cfg.c:3512
+#, gcc-internal-format
+msgid "invalid operand in unary expression"
+msgstr ""
+
+#: tree-cfg.c:3520
+#, gcc-internal-format
+msgid "type mismatch in address expression"
+msgstr ""
+
+#: tree-cfg.c:3544 tree-cfg.c:3570
+#, gcc-internal-format
+msgid "invalid rhs for gimple memory store"
+msgstr ""
+
+#: tree-cfg.c:3634
+#, gcc-internal-format
+msgid "invalid operand in return statement"
+msgstr ""
+
+#: tree-cfg.c:3646
+#, gcc-internal-format
+msgid "invalid conversion in return statement"
+msgstr ""
+
+#: tree-cfg.c:3670
+#, gcc-internal-format
+msgid "goto destination is neither a label nor a pointer"
+msgstr ""
+
+#: tree-cfg.c:3685
+#, gcc-internal-format
+msgid "invalid operand to switch statement"
+msgstr ""
+
+#: tree-cfg.c:3705
+#, gcc-internal-format
+msgid "Invalid PHI result"
+msgstr ""
+
+#: tree-cfg.c:3717
+#, gcc-internal-format
+msgid "Invalid PHI argument"
+msgstr ""
+
+#: tree-cfg.c:3723
+#, gcc-internal-format
+msgid "Incompatible types in PHI argument %u"
+msgstr ""
+
+#: tree-cfg.c:3770
+#, gcc-internal-format
+msgid "invalid comparison code in gimple cond"
+msgstr ""
+
+#: tree-cfg.c:3778
+#, gcc-internal-format
+msgid "invalid labels in gimple cond"
+msgstr ""
+
+#: tree-cfg.c:3877
+#, gcc-internal-format
+msgid "verify_gimple failed"
+msgstr ""
+
+#: tree-cfg.c:3912
+#, gcc-internal-format
+msgid "invalid function in call statement"
+msgstr ""
+
+#: tree-cfg.c:3923
+#, gcc-internal-format
+msgid "invalid pure const state for function"
+msgstr ""
+
+#: tree-cfg.c:3936 tree-ssa.c:1001 tree-ssa.c:1010
+#, gcc-internal-format
+msgid "in statement"
+msgstr ""
+
+#: tree-cfg.c:3956
+#, gcc-internal-format
+msgid "statement marked for throw, but doesn%'t"
+msgstr ""
+
+#: tree-cfg.c:3962
+#, gcc-internal-format
+msgid "statement marked for throw in middle of block"
+msgstr ""
+
+#: tree-cfg.c:4034
+#, gcc-internal-format
+msgid "Dead STMT in EH table"
+msgstr ""
+
+#: tree-cfg.c:4072
+#, gcc-internal-format
+msgid "gimple_bb (phi) is set to a wrong basic block"
+msgstr ""
+
+#: tree-cfg.c:4083
+#, gcc-internal-format
+msgid "missing PHI def"
+msgstr ""
+
+#: tree-cfg.c:4094
+#, gcc-internal-format
+msgid "PHI argument is not a GIMPLE value"
+msgstr ""
+
+#: tree-cfg.c:4103 tree-cfg.c:4176
+#, gcc-internal-format
+msgid "incorrect sharing of tree nodes"
+msgstr ""
+
+#: tree-cfg.c:4126
+#, gcc-internal-format
+msgid "invalid GIMPLE statement"
+msgstr ""
+
+#: tree-cfg.c:4135
+#, gcc-internal-format
+msgid "gimple_bb (stmt) is set to a wrong basic block"
+msgstr ""
+
+#: tree-cfg.c:4148
+#, gcc-internal-format
+msgid "incorrect entry in label_to_block_map"
+msgstr ""
+
+#: tree-cfg.c:4158
+#, gcc-internal-format
+msgid "incorrect setting of landing pad number"
+msgstr ""
+
+#: tree-cfg.c:4192
+#, gcc-internal-format
+msgid "verify_stmts failed"
+msgstr ""
+
+#: tree-cfg.c:4215
+#, gcc-internal-format
+msgid "ENTRY_BLOCK has IL associated with it"
+msgstr ""
+
+#: tree-cfg.c:4221
+#, gcc-internal-format
+msgid "EXIT_BLOCK has IL associated with it"
+msgstr ""
+
+#: tree-cfg.c:4228
+#, gcc-internal-format
+msgid "fallthru to exit from bb %d"
+msgstr ""
+
+#: tree-cfg.c:4252
+#, gcc-internal-format
+msgid "nonlocal label "
+msgstr ""
+
+#: tree-cfg.c:4261
+#, gcc-internal-format
+msgid "EH landing pad label "
+msgstr ""
+
+#: tree-cfg.c:4270 tree-cfg.c:4279 tree-cfg.c:4304
+#, gcc-internal-format
+msgid "label "
+msgstr ""
+
+#: tree-cfg.c:4294
+#, gcc-internal-format
+msgid "control flow in the middle of basic block %d"
+msgstr ""
+
+#: tree-cfg.c:4327
+#, gcc-internal-format
+msgid "fallthru edge after a control statement in bb %d"
+msgstr ""
+
+#: tree-cfg.c:4340
+#, gcc-internal-format
+msgid "true/false edge after a non-GIMPLE_COND in bb %d"
+msgstr ""
+
+#: tree-cfg.c:4363 tree-cfg.c:4385 tree-cfg.c:4398 tree-cfg.c:4467
+#, gcc-internal-format
+msgid "wrong outgoing edge flags at end of bb %d"
+msgstr ""
+
+#: tree-cfg.c:4373
+#, gcc-internal-format
+msgid "explicit goto at end of bb %d"
+msgstr ""
+
+#: tree-cfg.c:4403
+#, gcc-internal-format
+msgid "return edge does not point to exit in bb %d"
+msgstr ""
+
+#: tree-cfg.c:4433
+#, gcc-internal-format
+msgid "found default case not at the start of case vector"
+msgstr ""
+
+#: tree-cfg.c:4441
+#, gcc-internal-format
+msgid "case labels not sorted: "
+msgstr ""
+
+#: tree-cfg.c:4458
+#, gcc-internal-format
+msgid "extra outgoing edge %d->%d"
+msgstr ""
+
+#: tree-cfg.c:4481
+#, gcc-internal-format
+msgid "missing edge %i->%i"
+msgstr ""
+
+#: tree-cfg.c:7109
+#, gcc-internal-format
+msgid "%<noreturn%> function does return"
+msgstr ""
+
+#: tree-cfg.c:7129
+#, gcc-internal-format
+msgid "control reaches end of non-void function"
+msgstr ""
+
+#: tree-cfg.c:7192
+#, gcc-internal-format
+msgid "function might be possible candidate for attribute %<noreturn%>"
+msgstr ""
+
+#: tree-cfg.c:7263
+#, gcc-internal-format
+msgid "ignoring return value of %qD, declared with attribute warn_unused_result"
+msgstr ""
+
+#: tree-cfg.c:7268
+#, gcc-internal-format
+msgid "ignoring return value of function declared with attribute warn_unused_result"
+msgstr ""
+
+#: tree-dump.c:930
+#, gcc-internal-format
+msgid "could not open dump file %qs: %s"
+msgstr ""
+
+#: tree-dump.c:1063
+#, gcc-internal-format
+msgid "ignoring unknown option %q.*s in %<-fdump-%s%>"
+msgstr ""
+
+#: tree-eh.c:3923
+#, gcc-internal-format
+msgid "BB %i has multiple EH edges"
+msgstr ""
+
+#: tree-eh.c:3935
+#, gcc-internal-format
+msgid "BB %i can not throw but has an EH edge"
+msgstr ""
+
+#: tree-eh.c:3943
+#, gcc-internal-format
+msgid "BB %i last statement has incorrectly set lp"
+msgstr ""
+
+#: tree-eh.c:3949
+#, gcc-internal-format
+msgid "BB %i is missing an EH edge"
+msgstr ""
+
+#: tree-eh.c:3955
+#, gcc-internal-format
+msgid "Incorrect EH edge %i->%i"
+msgstr ""
+
+#: tree-eh.c:3989 tree-eh.c:4008
+#, gcc-internal-format
+msgid "BB %i is missing an edge"
+msgstr ""
+
+#: tree-eh.c:4025
+#, gcc-internal-format
+msgid "BB %i too many fallthru edges"
+msgstr ""
+
+#: tree-eh.c:4034
+#, gcc-internal-format
+msgid "BB %i has incorrect edge"
+msgstr ""
+
+#: tree-eh.c:4040
+#, gcc-internal-format
+msgid "BB %i has incorrect fallthru edge"
+msgstr ""
+
+#: tree-inline.c:2751
+#, gcc-internal-format
+msgid "function %q+F can never be copied because it receives a non-local goto"
+msgstr ""
+
+#: tree-inline.c:2768
+#, gcc-internal-format
+msgid "function %q+F can never be copied because it saves address of local label in a static variable"
+msgstr ""
+
+#: tree-inline.c:2806
+#, gcc-internal-format
+msgid "function %q+F can never be inlined because it uses alloca (override using the always_inline attribute)"
+msgstr ""
+
+#: tree-inline.c:2820
+#, gcc-internal-format
+msgid "function %q+F can never be inlined because it uses setjmp"
+msgstr ""
+
+#: tree-inline.c:2834
+#, gcc-internal-format
+msgid "function %q+F can never be inlined because it uses variable argument lists"
+msgstr ""
+
+#: tree-inline.c:2846
+#, gcc-internal-format
+msgid "function %q+F can never be inlined because it uses setjmp-longjmp exception handling"
+msgstr ""
+
+#: tree-inline.c:2854
+#, gcc-internal-format
+msgid "function %q+F can never be inlined because it uses non-local goto"
+msgstr ""
+
+#: tree-inline.c:2866
+#, gcc-internal-format
+msgid "function %q+F can never be inlined because it uses __builtin_return or __builtin_apply_args"
+msgstr ""
+
+#: tree-inline.c:2886
+#, gcc-internal-format
+msgid "function %q+F can never be inlined because it contains a computed goto"
+msgstr ""
+
+#: tree-inline.c:2966
+#, gcc-internal-format
+msgid "function %q+F can never be inlined because it is suppressed using -fno-inline"
+msgstr ""
+
+#: tree-inline.c:2980
+#, gcc-internal-format
+msgid "function %q+F can never be inlined because it uses attributes conflicting with inlining"
+msgstr ""
+
+#: tree-inline.c:3551 tree-inline.c:3562
+#, gcc-internal-format
+msgid "inlining failed in call to %q+F: %s"
+msgstr ""
+
+#: tree-inline.c:3553 tree-inline.c:3564
+#, gcc-internal-format
+msgid "called from here"
+msgstr ""
+
+#: tree-mudflap.c:907
+#, gcc-internal-format
+msgid "mudflap checking not yet implemented for ARRAY_RANGE_REF"
+msgstr ""
+
+#: tree-mudflap.c:1114
+#, gcc-internal-format
+msgid "mudflap cannot track %qE in stub function"
+msgstr ""
+
+#: tree-mudflap.c:1358
+#, gcc-internal-format
+msgid "mudflap cannot track unknown size extern %qE"
+msgstr ""
+
+#: tree-nomudflap.c:49
+#, gcc-internal-format
+msgid "mudflap: this language is not supported"
+msgstr ""
+
+#: tree-optimize.c:441
+#, gcc-internal-format
+msgid "size of return value of %q+D is %u bytes"
+msgstr ""
+
+#: tree-optimize.c:444
+#, gcc-internal-format
+msgid "size of return value of %q+D is larger than %wd bytes"
+msgstr ""
+
+#: tree-outof-ssa.c:777 tree-outof-ssa.c:834 tree-ssa-coalesce.c:959
+#: tree-ssa-coalesce.c:974 tree-ssa-coalesce.c:1196 tree-ssa-live.c:1184
+#, gcc-internal-format
+msgid "SSA corruption"
+msgstr ""
+
+#: tree-profile.c:396
+#, gcc-internal-format
+msgid "unimplemented functionality"
+msgstr ""
+
+#: tree-ssa.c:581
+#, gcc-internal-format
+msgid "expected an SSA_NAME object"
+msgstr ""
+
+#: tree-ssa.c:587
+#, gcc-internal-format
+msgid "type mismatch between an SSA_NAME and its symbol"
+msgstr ""
+
+#: tree-ssa.c:593
+#, gcc-internal-format
+msgid "found an SSA_NAME that had been released into the free pool"
+msgstr ""
+
+#: tree-ssa.c:599
+#, gcc-internal-format
+msgid "found a virtual definition for a GIMPLE register"
+msgstr ""
+
+#: tree-ssa.c:605
+#, gcc-internal-format
+msgid "virtual SSA name for non-VOP decl"
+msgstr ""
+
+#: tree-ssa.c:611
+#, gcc-internal-format
+msgid "found a real definition for a non-register"
+msgstr ""
+
+#: tree-ssa.c:618
+#, gcc-internal-format
+msgid "found a default name with a non-empty defining statement"
+msgstr ""
+
+#: tree-ssa.c:646
+#, gcc-internal-format
+msgid "SSA_NAME created in two different blocks %i and %i"
+msgstr ""
+
+#: tree-ssa.c:655 tree-ssa.c:1028
+#, gcc-internal-format
+msgid "SSA_NAME_DEF_STMT is wrong"
+msgstr ""
+
+#: tree-ssa.c:707
+#, gcc-internal-format
+msgid "missing definition"
+msgstr ""
+
+#: tree-ssa.c:713
+#, gcc-internal-format
+msgid "definition in block %i does not dominate use in block %i"
+msgstr ""
+
+#: tree-ssa.c:721
+#, gcc-internal-format
+msgid "definition in block %i follows the use"
+msgstr ""
+
+#: tree-ssa.c:728
+#, gcc-internal-format
+msgid "SSA_NAME_OCCURS_IN_ABNORMAL_PHI should be set"
+msgstr ""
+
+#: tree-ssa.c:736
+#, gcc-internal-format
+msgid "no immediate_use list"
+msgstr ""
+
+#: tree-ssa.c:748
+#, gcc-internal-format
+msgid "wrong immediate use list"
+msgstr ""
+
+#: tree-ssa.c:782
+#, gcc-internal-format
+msgid "incoming edge count does not match number of PHI arguments"
+msgstr ""
+
+#: tree-ssa.c:796
+#, gcc-internal-format
+msgid "PHI argument is missing for edge %d->%d"
+msgstr ""
+
+#: tree-ssa.c:805
+#, gcc-internal-format
+msgid "PHI argument is not SSA_NAME, or invariant"
+msgstr ""
+
+#: tree-ssa.c:833
+#, gcc-internal-format
+msgid "wrong edge %d->%d for PHI argument"
+msgstr ""
+
+#: tree-ssa.c:914
+#, gcc-internal-format
+msgid "AUX pointer initialized for edge %d->%d"
+msgstr ""
+
+#: tree-ssa.c:940
+#, gcc-internal-format
+msgid "stmt (%p) marked modified after optimization pass: "
+msgstr ""
+
+#: tree-ssa.c:959
+#, gcc-internal-format
+msgid "statement makes a memory store, but has no VDEFS"
+msgstr ""
+
+#: tree-ssa.c:974
+#, gcc-internal-format
+msgid "statement has VDEF operand not in defs list"
+msgstr ""
+
+#: tree-ssa.c:979
+#, gcc-internal-format
+msgid "statement has VDEF but no VUSE operand"
+msgstr ""
+
+#: tree-ssa.c:985
+#, gcc-internal-format
+msgid "VDEF and VUSE do not use the same symbol"
+msgstr ""
+
+#: tree-ssa.c:994
+#, gcc-internal-format
+msgid "statement has VUSE operand not in uses list"
+msgstr ""
+
+#: tree-ssa.c:1057
+#, gcc-internal-format
+msgid "verify_ssa failed"
+msgstr ""
+
+#: tree-ssa.c:1677
+#, gcc-internal-format
+msgid "%qD was declared here"
+msgstr ""
+
+#: tree-ssa.c:1749
+#, gcc-internal-format
+msgid "%qD is used uninitialized in this function"
+msgstr ""
+
+#: tree-ssa.c:1752 tree-ssa.c:1791
+#, gcc-internal-format
+msgid "%qD may be used uninitialized in this function"
+msgstr ""
+
+#: tree-vrp.c:5025
+#, gcc-internal-format
+msgid "array subscript is outside array bounds"
+msgstr ""
+
+#: tree-vrp.c:5040
+#, gcc-internal-format
+msgid "array subscript is above array bounds"
+msgstr ""
+
+#: tree-vrp.c:5047
+#, gcc-internal-format
+msgid "array subscript is below array bounds"
+msgstr ""
+
+#: tree-vrp.c:5689
+#, gcc-internal-format
+msgid "assuming signed overflow does not occur when simplifying conditional to constant"
+msgstr ""
+
+#: tree-vrp.c:5695
+#, gcc-internal-format
+msgid "assuming signed overflow does not occur when simplifying conditional"
+msgstr ""
+
+#: tree-vrp.c:5739
+#, gcc-internal-format
+msgid "comparison always false due to limited range of data type"
+msgstr ""
+
+#: tree-vrp.c:5741
+#, gcc-internal-format
+msgid "comparison always true due to limited range of data type"
+msgstr ""
+
+#: tree-vrp.c:6589
+#, gcc-internal-format
+msgid "assuming signed overflow does not occur when simplifying %</%> or %<%%%> to %<>>%> or %<&%>"
+msgstr ""
+
+#: tree-vrp.c:6671
+#, gcc-internal-format
+msgid "assuming signed overflow does not occur when simplifying %<abs (X)%> to %<X%> or %<-X%>"
+msgstr ""
+
+#: tree.c:4084
+#, gcc-internal-format
+msgid "ignoring attributes applied to %qT after definition"
+msgstr ""
+
+#: tree.c:5220
+#, gcc-internal-format
+msgid "%q+D already declared with dllexport attribute: dllimport ignored"
+msgstr ""
+
+#: tree.c:5232
+#, gcc-internal-format
+msgid "%q+D redeclared without dllimport attribute after being referenced with dll linkage"
+msgstr ""
+
+#: tree.c:5247
+#, gcc-internal-format
+msgid "%q+D redeclared without dllimport attribute: previous dllimport ignored"
+msgstr ""
+
+#: tree.c:5347
+#, gcc-internal-format
+msgid "inline function %q+D declared as  dllimport: attribute ignored"
+msgstr ""
+
+#: tree.c:5355
+#, gcc-internal-format
+msgid "function %q+D definition is marked dllimport"
+msgstr ""
+
+#: tree.c:5363 config/sh/symbian-c.c:144 config/sh/symbian-cxx.c:576
+#, gcc-internal-format
+msgid "variable %q+D definition is marked dllimport"
+msgstr ""
+
+#: tree.c:5390 config/sh/symbian-c.c:164 config/sh/symbian-cxx.c:651
+#, gcc-internal-format
+msgid "external linkage required for symbol %q+D because of %qE attribute"
+msgstr ""
+
+#: tree.c:5404
+#, gcc-internal-format
+msgid "%qE implies default visibility, but %qD has already been declared with a different visibility"
+msgstr ""
+
+#: tree.c:7004
+#, gcc-internal-format
+msgid "arrays of functions are not meaningful"
+msgstr ""
+
+#: tree.c:7141
+#, gcc-internal-format
+msgid "function return type cannot be function"
+msgstr ""
+
+#: tree.c:8361 tree.c:8446 tree.c:8507
+#, gcc-internal-format
+msgid "tree check: %s, have %s in %s, at %s:%d"
+msgstr ""
+
+#: tree.c:8398
+#, gcc-internal-format
+msgid "tree check: expected none of %s, have %s in %s, at %s:%d"
+msgstr ""
+
+#: tree.c:8411
+#, gcc-internal-format
+msgid "tree check: expected class %qs, have %qs (%s) in %s, at %s:%d"
+msgstr ""
+
+#: tree.c:8460
+#, gcc-internal-format
+msgid "tree check: did not expect class %qs, have %qs (%s) in %s, at %s:%d"
+msgstr ""
+
+#: tree.c:8473
+#, gcc-internal-format
+msgid "tree check: expected omp_clause %s, have %s in %s, at %s:%d"
+msgstr ""
+
+#: tree.c:8533
+#, gcc-internal-format
+msgid "tree check: expected tree that contains %qs structure, have %qs in %s, at %s:%d"
+msgstr ""
+
+#: tree.c:8547
+#, gcc-internal-format
+msgid "tree check: accessed elt %d of tree_vec with %d elts in %s, at %s:%d"
+msgstr ""
+
+#: tree.c:8560
+#, gcc-internal-format
+msgid "tree check: accessed operand %d of %s with %d operands in %s, at %s:%d"
+msgstr ""
+
+#: tree.c:8573
+#, gcc-internal-format
+msgid "tree check: accessed operand %d of omp_clause %s with %d operands in %s, at %s:%d"
+msgstr ""
+
+#: value-prof.c:376
+#, gcc-internal-format
+msgid "Dead histogram"
+msgstr ""
+
+#: value-prof.c:407
+#, gcc-internal-format
+msgid "Histogram value statement does not correspond to the statement it is associated with"
+msgstr ""
+
+#: value-prof.c:420
+#, gcc-internal-format
+msgid "verify_histograms failed"
+msgstr ""
+
+#: value-prof.c:467
+#, gcc-internal-format
+msgid "Correcting inconsistent value profile: %s profiler overall count (%d) does not match BB count (%d)"
+msgstr ""
+
+#: value-prof.c:477
+#, gcc-internal-format
+msgid "Corrupted value profile: %s profiler overall count (%d) does not match BB count (%d)"
+msgstr ""
+
+#: var-tracking.c:6051
+#, gcc-internal-format
+msgid "variable tracking size limit exceeded with -fvar-tracking-assignments, retrying without"
+msgstr ""
+
+#: var-tracking.c:6055
+#, gcc-internal-format
+msgid "variable tracking size limit exceeded"
+msgstr ""
+
+#: varasm.c:580
+#, gcc-internal-format
+msgid "%+D causes a section type conflict"
+msgstr ""
+
+#: varasm.c:1130
+#, gcc-internal-format
+msgid "alignment of %q+D is greater than maximum object file alignment.  Using %d"
+msgstr ""
+
+#: varasm.c:1364 varasm.c:1372
+#, gcc-internal-format
+msgid "register name not specified for %q+D"
+msgstr ""
+
+#: varasm.c:1374
+#, gcc-internal-format
+msgid "invalid register name for %q+D"
+msgstr ""
+
+#: varasm.c:1376
+#, gcc-internal-format
+msgid "data type of %q+D isn%'t suitable for a register"
+msgstr ""
+
+#: varasm.c:1379
+#, gcc-internal-format
+msgid "register specified for %q+D isn%'t suitable for data type"
+msgstr ""
+
+#: varasm.c:1389
+#, gcc-internal-format
+msgid "global register variable has initial value"
+msgstr ""
+
+#: varasm.c:1393
+#, gcc-internal-format
+msgid "optimization may eliminate reads and/or writes to register variables"
+msgstr ""
+
+#: varasm.c:1431
+#, gcc-internal-format
+msgid "register name given for non-register variable %q+D"
+msgstr ""
+
+#: varasm.c:1548
+#, gcc-internal-format
+msgid "global destructors not supported on this target"
+msgstr ""
+
+#: varasm.c:1614
+#, gcc-internal-format
+msgid "global constructors not supported on this target"
+msgstr ""
+
+#: varasm.c:2001
+#, gcc-internal-format
+msgid "thread-local COMMON data not implemented"
+msgstr ""
+
+#: varasm.c:2030
+#, gcc-internal-format
+msgid "requested alignment for %q+D is greater than implemented alignment of %wu"
+msgstr ""
+
+#: varasm.c:4665
+#, gcc-internal-format
+msgid "initializer for integer/fixed-point value is too complicated"
+msgstr ""
+
+#: varasm.c:4670
+#, gcc-internal-format
+msgid "initializer for floating value is not a floating constant"
+msgstr ""
+
+#: varasm.c:4976
+#, gcc-internal-format
+msgid "invalid initial value for member %qE"
+msgstr ""
+
+#: varasm.c:5285 varasm.c:5329
+#, gcc-internal-format
+msgid "weak declaration of %q+D must precede definition"
+msgstr ""
+
+#: varasm.c:5293
+#, gcc-internal-format
+msgid "weak declaration of %q+D after first use results in unspecified behavior"
+msgstr ""
+
+#: varasm.c:5327
+#, gcc-internal-format
+msgid "weak declaration of %q+D must be public"
+msgstr ""
+
+#: varasm.c:5331
+#, gcc-internal-format
+msgid "weak declaration of %q+D not supported"
+msgstr ""
+
+#: varasm.c:5360 varasm.c:5766
+#, gcc-internal-format
+msgid "only weak aliases are supported in this configuration"
+msgstr ""
+
+#: varasm.c:5581
+#, gcc-internal-format
+msgid "weakref is not supported in this configuration"
+msgstr ""
+
+#: varasm.c:5695
+#, gcc-internal-format
+msgid "%q+D aliased to undefined symbol %qE"
+msgstr ""
+
+#: varasm.c:5705
+#, gcc-internal-format
+msgid "%q+D aliased to external symbol %qE"
+msgstr ""
+
+#: varasm.c:5744
+#, gcc-internal-format
+msgid "weakref %q+D ultimately targets itself"
+msgstr ""
+
+#: varasm.c:5753
+#, gcc-internal-format
+msgid "weakref %q+D must have static linkage"
+msgstr ""
+
+#: varasm.c:5760
+#, gcc-internal-format
+msgid "alias definitions not supported in this configuration"
+msgstr ""
+
+#: varasm.c:5822 config/sol2.c:156
+#, gcc-internal-format
+msgid "visibility attribute not supported in this configuration; ignored"
+msgstr ""
+
+#: varray.c:197
+#, gcc-internal-format
+msgid "virtual array %s[%lu]: element %lu out of bounds in %s, at %s:%d"
+msgstr ""
+
+#: varray.c:207
+#, gcc-internal-format
+msgid "underflowed virtual array %s in %s, at %s:%d"
+msgstr ""
+
+#: vec.c:523
+#, gcc-internal-format
+msgid "vector %s %s domain error, in %s at %s:%u"
+msgstr ""
+
+#. Print an error message for unrecognized stab codes.
+#: xcoffout.c:187
+#, gcc-internal-format
+msgid "no sclass for %s stab (0x%x)"
+msgstr ""
+
+#: config/darwin-c.c:85
+#, gcc-internal-format
+msgid "too many #pragma options align=reset"
+msgstr ""
+
+#: config/darwin-c.c:105 config/darwin-c.c:108 config/darwin-c.c:110
+#: config/darwin-c.c:112
+#, gcc-internal-format
+msgid "malformed '#pragma options', ignoring"
+msgstr ""
+
+#: config/darwin-c.c:115
+#, gcc-internal-format
+msgid "junk at end of '#pragma options'"
+msgstr ""
+
+#: config/darwin-c.c:125
+#, gcc-internal-format
+msgid "malformed '#pragma options align={mac68k|power|reset}', ignoring"
+msgstr ""
+
+#: config/darwin-c.c:137
+#, gcc-internal-format
+msgid "missing '(' after '#pragma unused', ignoring"
+msgstr ""
+
+#: config/darwin-c.c:155
+#, gcc-internal-format
+msgid "missing ')' after '#pragma unused', ignoring"
+msgstr ""
+
+#: config/darwin-c.c:158
+#, gcc-internal-format
+msgid "junk at end of '#pragma unused'"
+msgstr ""
+
+#: config/darwin-c.c:169
+#, gcc-internal-format
+msgid "malformed '#pragma ms_struct', ignoring"
+msgstr ""
+
+#: config/darwin-c.c:177
+#, gcc-internal-format
+msgid "malformed '#pragma ms_struct {on|off|reset}', ignoring"
+msgstr ""
+
+#: config/darwin-c.c:180
+#, gcc-internal-format
+msgid "junk at end of '#pragma ms_struct'"
+msgstr ""
+
+#: config/darwin-c.c:406
+#, gcc-internal-format
+msgid "subframework include %s conflicts with framework include"
+msgstr ""
+
+#: config/darwin-c.c:589
+#, gcc-internal-format
+msgid "Unknown value %qs of -mmacosx-version-min"
+msgstr ""
+
+#: config/darwin.c:1428
+#, gcc-internal-format
+msgid "%qE 2.95 vtable-compatibility attribute applies only when compiling a kext"
+msgstr ""
+
+#: config/darwin.c:1435
+#, gcc-internal-format
+msgid "%qE 2.95 vtable-compatibility attribute applies only to C++ classes"
+msgstr ""
+
+#: config/darwin.c:1560
+#, gcc-internal-format
+msgid "internal and protected visibility attributes not supported in this configuration; ignored"
+msgstr ""
+
+#: config/host-darwin.c:62
+#, gcc-internal-format
+msgid "couldn't unmap pch_address_space: %m"
+msgstr ""
+
+#: config/sol2-c.c:93 config/sol2-c.c:109
+#, gcc-internal-format
+msgid "malformed %<#pragma align%>, ignoring"
+msgstr ""
+
+#: config/sol2-c.c:102
+#, gcc-internal-format
+msgid "invalid alignment for %<#pragma align%>, ignoring"
+msgstr ""
+
+#: config/sol2-c.c:117
+#, gcc-internal-format
+msgid "%<#pragma align%> must appear before the declaration of %D, ignoring"
+msgstr ""
+
+#: config/sol2-c.c:129 config/sol2-c.c:141
+#, gcc-internal-format
+msgid "malformed %<#pragma align%>"
+msgstr ""
+
+#: config/sol2-c.c:136
+#, gcc-internal-format
+msgid "junk at end of %<#pragma align%>"
+msgstr ""
+
+#: config/sol2-c.c:157 config/sol2-c.c:164
+#, gcc-internal-format
+msgid "malformed %<#pragma init%>, ignoring"
+msgstr ""
+
+#: config/sol2-c.c:188 config/sol2-c.c:200
+#, gcc-internal-format
+msgid "malformed %<#pragma init%>"
+msgstr ""
+
+#: config/sol2-c.c:195
+#, gcc-internal-format
+msgid "junk at end of %<#pragma init%>"
+msgstr ""
+
+#: config/sol2-c.c:216 config/sol2-c.c:223
+#, gcc-internal-format
+msgid "malformed %<#pragma fini%>, ignoring"
+msgstr ""
+
+#: config/sol2-c.c:247 config/sol2-c.c:259
+#, gcc-internal-format
+msgid "malformed %<#pragma fini%>"
+msgstr ""
+
+#: config/sol2-c.c:254
+#, gcc-internal-format
+msgid "junk at end of %<#pragma fini%>"
+msgstr ""
+
+#: config/sol2.c:54
+#, gcc-internal-format
+msgid "ignoring %<#pragma align%> for explicitly aligned %q+D"
+msgstr ""
+
+#: config/vxworks.c:146
+#, gcc-internal-format
+msgid "PIC is only supported for RTPs"
+msgstr ""
+
+#. Mach-O supports 'weak imports', and 'weak definitions' in coalesced
+#. sections.  machopic_select_section ensures that weak variables go in
+#. coalesced sections.  Weak aliases (or any other kind of aliases) are
+#. not supported.  Weak symbols that aren't visible outside the .s file
+#. are not supported.
+#: config/darwin.h:497
+#, gcc-internal-format
+msgid "alias definitions not supported in Mach-O; ignored"
+msgstr ""
+
+#. No profiling.
+#: config/vx-common.h:89
+#, gcc-internal-format
+msgid "profiler support for VxWorks"
+msgstr ""
+
+#: config/alpha/alpha.c:230 config/rs6000/rs6000.c:3144
+#, gcc-internal-format
+msgid "bad value %qs for -mtls-size switch"
+msgstr ""
+
+#: config/alpha/alpha.c:284
+#, gcc-internal-format
+msgid "-f%s ignored for Unicos/Mk (not supported)"
+msgstr ""
+
+#: config/alpha/alpha.c:308
+#, gcc-internal-format
+msgid "-mieee not supported on Unicos/Mk"
+msgstr ""
+
+#: config/alpha/alpha.c:319
+#, gcc-internal-format
+msgid "-mieee-with-inexact not supported on Unicos/Mk"
+msgstr ""
+
+#: config/alpha/alpha.c:336
+#, gcc-internal-format
+msgid "bad value %qs for -mtrap-precision switch"
+msgstr ""
+
+#: config/alpha/alpha.c:350
+#, gcc-internal-format
+msgid "bad value %qs for -mfp-rounding-mode switch"
+msgstr ""
+
+#: config/alpha/alpha.c:365
+#, gcc-internal-format
+msgid "bad value %qs for -mfp-trap-mode switch"
+msgstr ""
+
+#: config/alpha/alpha.c:379
+#, gcc-internal-format
+msgid "bad value %qs for -mcpu switch"
+msgstr ""
+
+#: config/alpha/alpha.c:391
+#, gcc-internal-format
+msgid "bad value %qs for -mtune switch"
+msgstr ""
+
+#: config/alpha/alpha.c:398
+#, gcc-internal-format
+msgid "trap mode not supported on Unicos/Mk"
+msgstr ""
+
+#: config/alpha/alpha.c:405
+#, gcc-internal-format
+msgid "fp software completion requires -mtrap-precision=i"
+msgstr ""
+
+#: config/alpha/alpha.c:421
+#, gcc-internal-format
+msgid "rounding mode not supported for VAX floats"
+msgstr ""
+
+#: config/alpha/alpha.c:426
+#, gcc-internal-format
+msgid "trap mode not supported for VAX floats"
+msgstr ""
+
+#: config/alpha/alpha.c:430
+#, gcc-internal-format
+msgid "128-bit long double not supported for VAX floats"
+msgstr ""
+
+#: config/alpha/alpha.c:458
+#, gcc-internal-format
+msgid "L%d cache latency unknown for %s"
+msgstr ""
+
+#: config/alpha/alpha.c:473
+#, gcc-internal-format
+msgid "bad value %qs for -mmemory-latency"
+msgstr ""
+
+#: config/alpha/alpha.c:6732 config/alpha/alpha.c:6735 config/s390/s390.c:8824
+#: config/s390/s390.c:8827
+#, gcc-internal-format
+msgid "bad builtin fcode"
+msgstr ""
+
+#: config/arc/arc.c:393
+#, gcc-internal-format
+msgid "argument of %qE attribute is not a string constant"
+msgstr ""
+
+#: config/arc/arc.c:401
+#, gcc-internal-format
+msgid "argument of %qE attribute is not \"ilink1\" or \"ilink2\""
+msgstr ""
+
+#: config/arm/arm.c:1337
+#, gcc-internal-format
+msgid "switch -mcpu=%s conflicts with -march= switch"
+msgstr ""
+
+#: config/arm/arm.c:1347 config/rs6000/rs6000.c:2363 config/sparc/sparc.c:776
+#, gcc-internal-format
+msgid "bad value (%s) for %s switch"
+msgstr ""
+
+#: config/arm/arm.c:1460
+#, gcc-internal-format
+msgid "invalid __fp16 format option: -mfp16-format=%s"
+msgstr ""
+
+#: config/arm/arm.c:1477
+#, gcc-internal-format
+msgid "invalid ABI option: -mabi=%s"
+msgstr ""
+
+#: config/arm/arm.c:1485
+#, gcc-internal-format
+msgid "target CPU does not support ARM mode"
+msgstr ""
+
+#: config/arm/arm.c:1491
+#, gcc-internal-format
+msgid "target CPU does not support interworking"
+msgstr ""
+
+#: config/arm/arm.c:1497
+#, gcc-internal-format
+msgid "target CPU does not support THUMB instructions"
+msgstr ""
+
+#: config/arm/arm.c:1515
+#, gcc-internal-format
+msgid "enabling backtrace support is only meaningful when compiling for the Thumb"
+msgstr ""
+
+#: config/arm/arm.c:1518
+#, gcc-internal-format
+msgid "enabling callee interworking support is only meaningful when compiling for the Thumb"
+msgstr ""
+
+#: config/arm/arm.c:1521
+#, gcc-internal-format
+msgid "enabling caller interworking support is only meaningful when compiling for the Thumb"
+msgstr ""
+
+#: config/arm/arm.c:1525
+#, gcc-internal-format
+msgid "-mapcs-stack-check incompatible with -mno-apcs-frame"
+msgstr ""
+
+#: config/arm/arm.c:1533
+#, gcc-internal-format
+msgid "-fpic and -mapcs-reent are incompatible"
+msgstr ""
+
+#: config/arm/arm.c:1536
+#, gcc-internal-format
+msgid "APCS reentrant code not supported.  Ignored"
+msgstr ""
+
+#: config/arm/arm.c:1544
+#, gcc-internal-format
+msgid "-g with -mno-apcs-frame may not give sensible debugging"
+msgstr ""
+
+#: config/arm/arm.c:1547
+#, gcc-internal-format
+msgid "passing floating point arguments in fp regs not yet supported"
+msgstr ""
+
+#: config/arm/arm.c:1605
+#, gcc-internal-format
+msgid "iwmmxt requires an AAPCS compatible ABI for proper operation"
+msgstr ""
+
+#: config/arm/arm.c:1608
+#, gcc-internal-format
+msgid "iwmmxt abi requires an iwmmxt capable cpu"
+msgstr ""
+
+#: config/arm/arm.c:1617
+#, gcc-internal-format
+msgid "invalid floating point emulation option: -mfpe=%s"
+msgstr ""
+
+#: config/arm/arm.c:1645
+#, gcc-internal-format
+msgid "invalid floating point option: -mfpu=%s"
+msgstr ""
+
+#: config/arm/arm.c:1684
+#, gcc-internal-format
+msgid "invalid floating point abi: -mfloat-abi=%s"
+msgstr ""
+
+#: config/arm/arm.c:1692
+#, gcc-internal-format
+msgid "FPA is unsupported in the AAPCS"
+msgstr ""
+
+#: config/arm/arm.c:1697
+#, gcc-internal-format
+msgid "AAPCS does not support -mcaller-super-interworking"
+msgstr ""
+
+#: config/arm/arm.c:1700
+#, gcc-internal-format
+msgid "AAPCS does not support -mcallee-super-interworking"
+msgstr ""
+
+#: config/arm/arm.c:1707
+#, gcc-internal-format
+msgid "iWMMXt and hardware floating point"
+msgstr ""
+
+#: config/arm/arm.c:1711
+#, gcc-internal-format
+msgid "Thumb-2 iWMMXt"
+msgstr ""
+
+#: config/arm/arm.c:1715
+#, gcc-internal-format
+msgid "__fp16 and no ldrh"
+msgstr ""
+
+#: config/arm/arm.c:1735
+#, gcc-internal-format
+msgid "-mfloat-abi=hard and VFP"
+msgstr ""
+
+#: config/arm/arm.c:1759
+#, gcc-internal-format
+msgid "invalid thread pointer option: -mtp=%s"
+msgstr ""
+
+#: config/arm/arm.c:1772
+#, gcc-internal-format
+msgid "can not use -mtp=cp15 with 16-bit Thumb"
+msgstr ""
+
+#: config/arm/arm.c:1786
+#, gcc-internal-format
+msgid "structure size boundary can only be set to %s"
+msgstr ""
+
+#: config/arm/arm.c:1792
+#, gcc-internal-format
+msgid "RTP PIC is incompatible with Thumb"
+msgstr ""
+
+#: config/arm/arm.c:1801
+#, gcc-internal-format
+msgid "RTP PIC is incompatible with -msingle-pic-base"
+msgstr ""
+
+#: config/arm/arm.c:1813
+#, gcc-internal-format
+msgid "-mpic-register= is useless without -fpic"
+msgstr ""
+
+#: config/arm/arm.c:1822
+#, gcc-internal-format
+msgid "unable to use '%s' for PIC register"
+msgstr ""
+
+#: config/arm/arm.c:1875
+#, gcc-internal-format
+msgid "-freorder-blocks-and-partition not supported on this architecture"
+msgstr ""
+
+#: config/arm/arm.c:3630
+#, gcc-internal-format
+msgid "Non-AAPCS derived PCS variant"
+msgstr ""
+
+#: config/arm/arm.c:3632
+#, gcc-internal-format
+msgid "Variadic functions must use the base AAPCS variant"
+msgstr ""
+
+#: config/arm/arm.c:3651
+#, gcc-internal-format
+msgid "PCS variant"
+msgstr ""
+
+#: config/arm/arm.c:4529 config/arm/arm.c:4547 config/avr/avr.c:4838
+#: config/avr/avr.c:4854 config/bfin/bfin.c:5551 config/bfin/bfin.c:5612
+#: config/bfin/bfin.c:5641 config/h8300/h8300.c:5343 config/i386/i386.c:4413
+#: config/i386/i386.c:25989 config/i386/i386.c:26069
+#: config/m68hc11/m68hc11.c:1168 config/m68k/m68k.c:806
+#: config/mcore/mcore.c:3036 config/mep/mep.c:4042 config/mep/mep.c:4056
+#: config/mep/mep.c:4130 config/rs6000/rs6000.c:23490 config/rx/rx.c:2099
+#: config/sh/sh.c:8716 config/sh/sh.c:8734 config/sh/sh.c:8763
+#: config/sh/sh.c:8845 config/sh/sh.c:8868 config/spu/spu.c:3851
+#: config/stormy16/stormy16.c:2230 config/v850/v850.c:2080
+#, gcc-internal-format
+msgid "%qE attribute only applies to functions"
+msgstr ""
+
+#: config/arm/arm.c:16401
+#, gcc-internal-format
+msgid "unable to compute real location of stacked parameter"
+msgstr ""
+
+#: config/arm/arm.c:17981
+#, gcc-internal-format
+msgid "argument must be a constant"
+msgstr ""
+
+#. @@@ better error message
+#: config/arm/arm.c:18289 config/arm/arm.c:18326
+#, gcc-internal-format
+msgid "selector must be an immediate"
+msgstr ""
+
+#. @@@ better error message
+#: config/arm/arm.c:18369
+#, gcc-internal-format
+msgid "mask must be an immediate"
+msgstr ""
+
+#: config/arm/arm.c:19031
+#, gcc-internal-format
+msgid "no low registers available for popping high registers"
+msgstr ""
+
+#: config/arm/arm.c:19254
+#, gcc-internal-format
+msgid "interrupt Service Routines cannot be coded in Thumb mode"
+msgstr ""
+
+#: config/arm/arm.c:21374
+#, gcc-internal-format
+msgid "the mangling of %<va_list%> has changed in GCC 4.4"
+msgstr ""
+
+#: config/arm/pe.c:158 config/mcore/mcore.c:2911
+#, gcc-internal-format
+msgid "initialized variable %q+D is marked dllimport"
+msgstr ""
+
+#: config/arm/pe.c:167
+#, gcc-internal-format
+msgid "static variable %q+D is marked dllimport"
+msgstr ""
+
+#: config/avr/avr.c:425
+#, gcc-internal-format
+msgid "'builtin_return_address' contains only 2 bytes of address"
+msgstr ""
+
+#: config/avr/avr.c:1141
+#, gcc-internal-format
+msgid "Pointer offset from symbol maybe incorrect."
+msgstr ""
+
+#: config/avr/avr.c:1198
+#, gcc-internal-format
+msgid "accessing data memory with program memory address"
+msgstr ""
+
+#: config/avr/avr.c:1238
+#, gcc-internal-format
+msgid "accessing program  memory with data memory address"
+msgstr ""
+
+#: config/avr/avr.c:4652
+#, gcc-internal-format
+msgid "%qs appears to be a misspelled interrupt handler"
+msgstr ""
+
+#: config/avr/avr.c:4661
+#, gcc-internal-format
+msgid "%qs appears to be a misspelled signal handler"
+msgstr ""
+
+#: config/avr/avr.c:4811
+#, gcc-internal-format
+msgid "only initialized variables can be placed into program memory area"
+msgstr ""
+
+#: config/avr/avr.c:4945
+#, gcc-internal-format
+msgid "only uninitialized variables can be placed in the .noinit section"
+msgstr ""
+
+#: config/avr/avr.c:4959
+#, gcc-internal-format
+msgid "MCU %qs supported for assembler only"
+msgstr ""
+
+#: config/bfin/bfin.c:2555 config/m68k/m68k.c:523
+#, gcc-internal-format
+msgid "-mshared-library-id=%s is not between 0 and %d"
+msgstr ""
+
+#: config/bfin/bfin.c:2575
+#, gcc-internal-format
+msgid "-mcpu=%s is not valid"
+msgstr ""
+
+#: config/bfin/bfin.c:2611
+#, gcc-internal-format
+msgid "-mcpu=%s has invalid silicon revision"
+msgstr ""
+
+#: config/bfin/bfin.c:2676
+#, gcc-internal-format
+msgid "-mshared-library-id= specified without -mid-shared-library"
+msgstr ""
+
+#: config/bfin/bfin.c:2679
+#, gcc-internal-format
+msgid "Can't use multiple stack checking methods together."
+msgstr ""
+
+#: config/bfin/bfin.c:2682
+#, gcc-internal-format
+msgid "ID shared libraries and FD-PIC mode can't be used together."
+msgstr ""
+
+#: config/bfin/bfin.c:2687 config/m68k/m68k.c:631
+#, gcc-internal-format
+msgid "cannot specify both -msep-data and -mid-shared-library"
+msgstr ""
+
+#: config/bfin/bfin.c:2707
+#, gcc-internal-format
+msgid "-mmulticore can only be used with BF561"
+msgstr ""
+
+#: config/bfin/bfin.c:2710
+#, gcc-internal-format
+msgid "-mcorea should be used with -mmulticore"
+msgstr ""
+
+#: config/bfin/bfin.c:2713
+#, gcc-internal-format
+msgid "-mcoreb should be used with -mmulticore"
+msgstr ""
+
+#: config/bfin/bfin.c:2716
+#, gcc-internal-format
+msgid "-mcorea and -mcoreb can't be used together"
+msgstr ""
+
+#: config/bfin/bfin.c:5556
+#, gcc-internal-format
+msgid "multiple function type attributes specified"
+msgstr ""
+
+#: config/bfin/bfin.c:5623
+#, gcc-internal-format
+msgid "can't apply both longcall and shortcall attributes to the same function"
+msgstr ""
+
+#: config/bfin/bfin.c:5673 config/i386/winnt.c:59 config/mep/mep.c:3946
+#: config/mep/mep.c:4084
+#, gcc-internal-format
+msgid "%qE attribute only applies to variables"
+msgstr ""
+
+#: config/bfin/bfin.c:5680
+#, gcc-internal-format
+msgid "%qE attribute cannot be specified for local variables"
+msgstr ""
+
+#. This function is for retrieving a part of an instruction name for
+#. an operator, for immediate output.  If that ever happens for
+#. MULT, we need to apply TARGET_MUL_BUG in the caller.  Make sure
+#. we notice.
+#: config/cris/cris.c:471
+#, gcc-internal-format
+msgid "MULT case in cris_op_str"
+msgstr ""
+
+#: config/cris/cris.c:861
+#, gcc-internal-format
+msgid "invalid use of ':' modifier"
+msgstr "số dòng sai"
+
+#: config/cris/cris.c:1048 config/moxie/moxie.c:169
+#, gcc-internal-format
+msgid "internal error: bad register: %d"
+msgstr ""
+
+#: config/cris/cris.c:1615
+#, gcc-internal-format
+msgid "internal error: sideeffect-insn affecting main effect"
+msgstr ""
+
+#: config/cris/cris.c:1712
+#, gcc-internal-format
+msgid "unknown cc_attr value"
+msgstr ""
+
+#. If we get here, the caller got its initial tests wrong.
+#: config/cris/cris.c:2096
+#, gcc-internal-format
+msgid "internal error: cris_side_effect_mode_ok with bad operands"
+msgstr ""
+
+#: config/cris/cris.c:2388
+#, gcc-internal-format
+msgid "-max-stackframe=%d is not usable, not between 0 and %d"
+msgstr ""
+
+#: config/cris/cris.c:2416
+#, gcc-internal-format
+msgid "unknown CRIS version specification in -march= or -mcpu= : %s"
+msgstr ""
+
+#: config/cris/cris.c:2452
+#, gcc-internal-format
+msgid "unknown CRIS cpu version specification in -mtune= : %s"
+msgstr ""
+
+#: config/cris/cris.c:2473
+#, gcc-internal-format
+msgid "-fPIC and -fpic are not supported in this configuration"
+msgstr ""
+
+#: config/cris/cris.c:2488
+#, gcc-internal-format
+msgid "that particular -g option is invalid with -maout and -melinux"
+msgstr ""
+
+#: config/cris/cris.c:2714
+#, gcc-internal-format
+msgid "Unknown src"
+msgstr ""
+
+#: config/cris/cris.c:2775
+#, gcc-internal-format
+msgid "Unknown dest"
+msgstr ""
+
+#: config/cris/cris.c:3060
+#, gcc-internal-format
+msgid "stackframe too big: %d bytes"
+msgstr ""
+
+#: config/cris/cris.c:3554 config/cris/cris.c:3582
+#, gcc-internal-format
+msgid "expand_binop failed in movsi got"
+msgstr ""
+
+#: config/cris/cris.c:3664
+#, gcc-internal-format
+msgid "emitting PIC operand, but PIC register isn't set up"
+msgstr ""
+
+#. Definitions for GCC.  Part of the machine description for CRIS.
+#. Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2007, 2008,
+#. 2009 Free Software Foundation, Inc.
+#. Contributed by Axis Communications.  Written by Hans-Peter Nilsson.
+#.
+#. This file is part of GCC.
+#.
+#. GCC is free software; you can redistribute it and/or modify
+#. it under the terms of the GNU General Public License as published by
+#. the Free Software Foundation; either version 3, or (at your option)
+#. any later version.
+#.
+#. GCC is distributed in the hope that it will be useful,
+#. but WITHOUT ANY WARRANTY; without even the implied warranty of
+#. MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+#. GNU General Public License for more details.
+#.
+#. You should have received a copy of the GNU General Public License
+#. along with GCC; see the file COPYING3.  If not see
+#. <http://www.gnu.org/licenses/>.
+#. After the first "Node:" comment comes all preprocessor directives and
+#. attached declarations described in the info files, the "Using and
+#. Porting GCC" manual (uapgcc), in the same order as found in the "Target
+#. macros" section in the gcc-2.9x CVS edition of 2000-03-17.  FIXME: Not
+#. really, but needs an update anyway.
+#.
+#. There is no generic copy-of-uapgcc comment, you'll have to see uapgcc
+#. for that.  If applicable, there is a CRIS-specific comment.  The order
+#. of macro definitions follow the order in the manual.  Every section in
+#. the manual (node in the info pages) has an introductory `Node:
+#. <subchapter>' comment.  If no macros are defined for a section, only
+#. the section-comment is present.
+#. Note that other header files (e.g. config/elfos.h, config/linux.h,
+#. config/cris/linux.h and config/cris/aout.h) are responsible for lots of
+#. settings not repeated below.  This file contains general CRIS
+#. definitions and definitions for the cris-*-elf subtarget.
+#. We don't want to use gcc_assert for everything, as that can be
+#. compiled out.
+#: config/cris/cris.h:43
+#, gcc-internal-format
+msgid "CRIS-port assertion failed: "
+msgstr ""
+
+#. Node: Caller Saves
+#. (no definitions)
+#. Node: Function entry
+#. See cris.c for TARGET_ASM_FUNCTION_PROLOGUE and
+#. TARGET_ASM_FUNCTION_EPILOGUE.
+#. Node: Profiling
+#: config/cris/cris.h:929
+#, gcc-internal-format
+msgid "no FUNCTION_PROFILER for CRIS"
+msgstr ""
+
+#: config/crx/crx.h:363
+#, gcc-internal-format
+msgid "Profiler support for CRX"
+msgstr ""
+
+#: config/frv/frv.c:8732
+#, gcc-internal-format
+msgid "accumulator is not a constant integer"
+msgstr ""
+
+#: config/frv/frv.c:8737
+#, gcc-internal-format
+msgid "accumulator number is out of bounds"
+msgstr ""
+
+#: config/frv/frv.c:8748
+#, gcc-internal-format
+msgid "inappropriate accumulator for %qs"
+msgstr ""
+
+#: config/frv/frv.c:8825
+#, gcc-internal-format
+msgid "invalid IACC argument"
+msgstr ""
+
+#: config/frv/frv.c:8848
+#, gcc-internal-format
+msgid "%qs expects a constant argument"
+msgstr ""
+
+#: config/frv/frv.c:8853
+#, gcc-internal-format
+msgid "constant argument out of range for %qs"
+msgstr ""
+
+#: config/frv/frv.c:9334
+#, gcc-internal-format
+msgid "media functions are not available unless -mmedia is used"
+msgstr ""
+
+#: config/frv/frv.c:9346
+#, gcc-internal-format
+msgid "this media function is only available on the fr500"
+msgstr ""
+
+#: config/frv/frv.c:9374
+#, gcc-internal-format
+msgid "this media function is only available on the fr400 and fr550"
+msgstr ""
+
+#: config/frv/frv.c:9393
+#, gcc-internal-format
+msgid "this builtin function is only available on the fr405 and fr450"
+msgstr ""
+
+#: config/frv/frv.c:9402
+#, gcc-internal-format
+msgid "this builtin function is only available on the fr500 and fr550"
+msgstr ""
+
+#: config/frv/frv.c:9414
+#, gcc-internal-format
+msgid "this builtin function is only available on the fr450"
+msgstr ""
+
+#: config/h8300/h8300.c:332
+#, gcc-internal-format
+msgid "-ms2600 is used without -ms"
+msgstr ""
+
+#: config/h8300/h8300.c:338
+#, gcc-internal-format
+msgid "-mn is used without -mh or -ms"
+msgstr ""
+
+#: config/i386/host-cygwin.c:64
+#, gcc-internal-format
+msgid "can't extend PCH file: %m"
+msgstr ""
+
+#: config/i386/host-cygwin.c:75
+#, gcc-internal-format
+msgid "can't set position in PCH file: %m"
+msgstr ""
+
+#: config/i386/i386.c:2832 config/i386/i386.c:3081
+#, gcc-internal-format
+msgid "bad value (%s) for %stune=%s %s"
+msgstr ""
+
+#: config/i386/i386.c:2835
+#, gcc-internal-format
+msgid "%stune=x86-64%s is deprecated.  Use %stune=k8%s or %stune=generic%s instead as appropriate."
+msgstr ""
+
+#: config/i386/i386.c:2881
+#, gcc-internal-format
+msgid "bad value (%s) for %sstringop-strategy=%s %s"
+msgstr ""
+
+#: config/i386/i386.c:2898
+#, gcc-internal-format
+msgid "unknown ABI (%s) for %sabi=%s %s"
+msgstr ""
+
+#: config/i386/i386.c:2913
+#, gcc-internal-format
+msgid "code model %s does not support PIC mode"
+msgstr ""
+
+#: config/i386/i386.c:2919
+#, gcc-internal-format
+msgid "bad value (%s) for %scmodel=%s %s"
+msgstr ""
+
+#: config/i386/i386.c:2943
+#, gcc-internal-format
+msgid "bad value (%s) for %sasm=%s %s"
+msgstr ""
+
+#: config/i386/i386.c:2947
+#, gcc-internal-format
+msgid "code model %qs not supported in the %s bit mode"
+msgstr ""
+
+#: config/i386/i386.c:2950
+#, gcc-internal-format
+msgid "%i-bit mode not compiled in"
+msgstr ""
+
+#: config/i386/i386.c:2962 config/i386/i386.c:3066
+#, gcc-internal-format
+msgid "CPU you selected does not support x86-64 instruction set"
+msgstr ""
+
+#: config/i386/i386.c:3038
+#, gcc-internal-format
+msgid "generic CPU can be used only for %stune=%s %s"
+msgstr ""
+
+#: config/i386/i386.c:3041
+#, gcc-internal-format
+msgid "bad value (%s) for %sarch=%s %s"
+msgstr ""
+
+#: config/i386/i386.c:3100
+#, gcc-internal-format
+msgid "%sregparm%s is ignored in 64-bit mode"
+msgstr ""
+
+#: config/i386/i386.c:3103
+#, gcc-internal-format
+msgid "%sregparm=%d%s is not between 0 and %d"
+msgstr ""
+
+#: config/i386/i386.c:3116
+#, gcc-internal-format
+msgid "%salign-loops%s is obsolete, use -falign-loops%s"
+msgstr ""
+
+#: config/i386/i386.c:3122 config/i386/i386.c:3137 config/i386/i386.c:3152
+#, gcc-internal-format
+msgid "%salign-loops=%d%s is not between 0 and %d"
+msgstr ""
+
+#: config/i386/i386.c:3131
+#, gcc-internal-format
+msgid "%salign-jumps%s is obsolete, use -falign-jumps%s"
+msgstr ""
+
+#: config/i386/i386.c:3146
+#, gcc-internal-format
+msgid "%salign-functions%s is obsolete, use -falign-functions%s"
+msgstr ""
+
+#: config/i386/i386.c:3181
+#, gcc-internal-format
+msgid "%sbranch-cost=%d%s is not between 0 and 5"
+msgstr ""
+
+#: config/i386/i386.c:3189
+#, gcc-internal-format
+msgid "%slarge-data-threshold=%d%s is negative"
+msgstr ""
+
+#: config/i386/i386.c:3201
+#, gcc-internal-format
+msgid "bad value (%s) for %stls-dialect=%s %s"
+msgstr ""
+
+#: config/i386/i386.c:3209
+#, gcc-internal-format
+msgid "pc%d is not valid precision setting (32, 64 or 80)"
+msgstr ""
+
+#: config/i386/i386.c:3225
+#, gcc-internal-format
+msgid "%srtd%s is ignored in 64bit mode"
+msgstr ""
+
+#: config/i386/i386.c:3280
+#, gcc-internal-format
+msgid "%spreferred-stack-boundary=%d%s is not between %d and 12"
+msgstr ""
+
+#: config/i386/i386.c:3299
+#, gcc-internal-format
+msgid "-mincoming-stack-boundary=%d is not between %d and 12"
+msgstr ""
+
+#: config/i386/i386.c:3312
+#, gcc-internal-format
+msgid "%ssseregparm%s used without SSE enabled"
+msgstr ""
+
+#: config/i386/i386.c:3323 config/i386/i386.c:3337
+#, gcc-internal-format
+msgid "SSE instruction set disabled, using 387 arithmetics"
+msgstr ""
+
+#: config/i386/i386.c:3342
+#, gcc-internal-format
+msgid "387 instruction set disabled, using SSE arithmetics"
+msgstr ""
+
+#: config/i386/i386.c:3349
+#, gcc-internal-format
+msgid "bad value (%s) for %sfpmath=%s %s"
+msgstr ""
+
+#: config/i386/i386.c:3365
+#, gcc-internal-format
+msgid "unknown vectorization library ABI type (%s) for %sveclibabi=%s %s"
+msgstr ""
+
+#: config/i386/i386.c:3385
+#, gcc-internal-format
+msgid "unwind tables currently require either a frame pointer or %saccumulate-outgoing-args%s for correctness"
+msgstr ""
+
+#: config/i386/i386.c:3398
+#, gcc-internal-format
+msgid "stack probing requires %saccumulate-outgoing-args%s for correctness"
+msgstr ""
+
+#: config/i386/i386.c:3809
+#, gcc-internal-format
+msgid "attribute(target(\"%s\")) is unknown"
+msgstr ""
+
+#: config/i386/i386.c:3831
+#, gcc-internal-format
+msgid "option(\"%s\") was already specified"
+msgstr ""
+
+#: config/i386/i386.c:4426 config/i386/i386.c:4471
+#, gcc-internal-format
+msgid "fastcall and regparm attributes are not compatible"
+msgstr ""
+
+#: config/i386/i386.c:4433
+#, gcc-internal-format
+msgid "%qE attribute requires an integer constant argument"
+msgstr ""
+
+#: config/i386/i386.c:4439
+#, gcc-internal-format
+msgid "argument to %qE attribute larger than %d"
+msgstr ""
+
+#: config/i386/i386.c:4463 config/i386/i386.c:4498
+#, gcc-internal-format
+msgid "fastcall and cdecl attributes are not compatible"
+msgstr ""
+
+#: config/i386/i386.c:4467
+#, gcc-internal-format
+msgid "fastcall and stdcall attributes are not compatible"
+msgstr ""
+
+#: config/i386/i386.c:4481 config/i386/i386.c:4494
+#, gcc-internal-format
+msgid "stdcall and cdecl attributes are not compatible"
+msgstr ""
+
+#: config/i386/i386.c:4485
+#, gcc-internal-format
+msgid "stdcall and fastcall attributes are not compatible"
+msgstr ""
+
+#: config/i386/i386.c:4628
+#, gcc-internal-format
+msgid "Calling %qD with attribute sseregparm without SSE/SSE2 enabled"
+msgstr ""
+
+#: config/i386/i386.c:4631
+#, gcc-internal-format
+msgid "Calling %qT with attribute sseregparm without SSE/SSE2 enabled"
+msgstr ""
+
+#: config/i386/i386.c:4836
+#, gcc-internal-format
+msgid "ms_hook_prologue is not compatible with nested function"
+msgstr ""
+
+#: config/i386/i386.c:4909
+#, gcc-internal-format
+msgid "ms_abi attribute requires -maccumulate-outgoing-args or subtarget optimization implying it"
+msgstr ""
+
+#: config/i386/i386.c:5028
+#, gcc-internal-format
+msgid "AVX vector argument without AVX enabled changes the ABI"
+msgstr ""
+
+#: config/i386/i386.c:5210
+#, gcc-internal-format
+msgid "The ABI of passing struct with a flexible array member has changed in GCC 4.4"
+msgstr ""
+
+#: config/i386/i386.c:5326
+#, gcc-internal-format
+msgid "The ABI of passing union with long double has changed in GCC 4.4"
+msgstr ""
+
+#: config/i386/i386.c:5441
+#, gcc-internal-format
+msgid "The ABI of passing structure with complex float member has changed in GCC 4.4"
+msgstr ""
+
+#: config/i386/i386.c:5587
+#, gcc-internal-format
+msgid "SSE register return with SSE disabled"
+msgstr ""
+
+#: config/i386/i386.c:5593
+#, gcc-internal-format
+msgid "SSE register argument with SSE disabled"
+msgstr ""
+
+#: config/i386/i386.c:5609
+#, gcc-internal-format
+msgid "x87 register return with x87 disabled"
+msgstr ""
+
+#: config/i386/i386.c:5979
+#, gcc-internal-format
+msgid "SSE vector argument without SSE enabled changes the ABI"
+msgstr ""
+
+#: config/i386/i386.c:6017
+#, gcc-internal-format
+msgid "MMX vector argument without MMX enabled changes the ABI"
+msgstr ""
+
+#: config/i386/i386.c:6619
+#, gcc-internal-format
+msgid "SSE vector return without SSE enabled changes the ABI"
+msgstr ""
+
+#: config/i386/i386.c:6629
+#, gcc-internal-format
+msgid "MMX vector return without MMX enabled changes the ABI"
+msgstr ""
+
+#: config/i386/i386.c:11279
+#, gcc-internal-format
+msgid "extended registers have no high halves"
+msgstr ""
+
+#: config/i386/i386.c:11294
+#, gcc-internal-format
+msgid "unsupported operand size for extended register"
+msgstr ""
+
+#: config/i386/i386.c:11538
+#, gcc-internal-format
+msgid "non-integer operand used with operand code '%c'"
+msgstr ""
+
+#: config/i386/i386.c:22959
+#, gcc-internal-format
+msgid "last argument must be an immediate"
+msgstr ""
+
+#: config/i386/i386.c:23256
+#, gcc-internal-format
+msgid "the fifth argument must be a 8-bit immediate"
+msgstr ""
+
+#: config/i386/i386.c:23351
+#, gcc-internal-format
+msgid "the third argument must be a 8-bit immediate"
+msgstr ""
+
+#: config/i386/i386.c:23704
+#, gcc-internal-format
+msgid "the last argument must be a 4-bit immediate"
+msgstr ""
+
+#: config/i386/i386.c:23713
+#, gcc-internal-format
+msgid "the last argument must be a 2-bit immediate"
+msgstr ""
+
+#: config/i386/i386.c:23722
+#, gcc-internal-format
+msgid "the last argument must be a 1-bit immediate"
+msgstr ""
+
+#: config/i386/i386.c:23731
+#, gcc-internal-format
+msgid "the last argument must be a 5-bit immediate"
+msgstr ""
+
+#: config/i386/i386.c:23740
+#, gcc-internal-format
+msgid "the next to last argument must be an 8-bit immediate"
+msgstr ""
+
+#: config/i386/i386.c:23744 config/i386/i386.c:23942
+#, gcc-internal-format
+msgid "the last argument must be an 8-bit immediate"
+msgstr ""
+
+#: config/i386/i386.c:23940
+#, gcc-internal-format
+msgid "the last argument must be a 32-bit immediate"
+msgstr ""
+
+#: config/i386/i386.c:24006 config/rs6000/rs6000.c:10239
+#, gcc-internal-format
+msgid "selector must be an integer constant in the range 0..%wi"
+msgstr ""
+
+#: config/i386/i386.c:24149
+#, gcc-internal-format
+msgid "%qE needs unknown isa option"
+msgstr ""
+
+#: config/i386/i386.c:24153
+#, gcc-internal-format
+msgid "%qE needs isa option %s"
+msgstr ""
+
+#: config/i386/i386.c:25996
+#, gcc-internal-format
+msgid "%qE attribute only available for 64-bit"
+msgstr ""
+
+#: config/i386/i386.c:26007 config/i386/i386.c:26016
+#, gcc-internal-format
+msgid "ms_abi and sysv_abi attributes are not compatible"
+msgstr ""
+
+#: config/i386/i386.c:26054 config/rs6000/rs6000.c:23573
+#, gcc-internal-format
+msgid "%qE incompatible attribute ignored"
+msgstr ""
+
+#: config/i386/i386.c:26077
+#, gcc-internal-format
+msgid "%qE attribute only available for 32-bit"
+msgstr ""
+
+#: config/i386/i386.c:26083
+#, gcc-internal-format
+msgid "ms_hook_prologue attribute needs assembler swap suffix support"
+msgstr ""
+
+#: config/i386/i386.c:30003
+#, gcc-internal-format
+msgid "vector permutation requires vector constant"
+msgstr ""
+
+#: config/i386/i386.c:30013
+#, gcc-internal-format
+msgid "invalid vector permutation constant"
+msgstr ""
+
+#: config/i386/i386.c:30061
+#, gcc-internal-format
+msgid "vector permutation (%d %d)"
+msgstr ""
+
+#: config/i386/i386.c:30064
+#, gcc-internal-format
+msgid "vector permutation (%d %d %d %d)"
+msgstr ""
+
+#: config/i386/i386.c:30068
+#, gcc-internal-format
+msgid "vector permutation (%d %d %d %d %d %d %d %d)"
+msgstr ""
+
+#: config/i386/i386.c:30073
+#, gcc-internal-format
+msgid "vector permutation (%d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d)"
+msgstr ""
+
+#: config/i386/winnt.c:81
+#, gcc-internal-format
+msgid "%qE attribute applies only to initialized variables with external linkage"
+msgstr ""
+
+#: config/i386/winnt.c:143 config/sh/symbian-c.c:96
+#: config/sh/symbian-cxx.c:120
+#, gcc-internal-format
+msgid "definition of static data member %q+D of dllimport'd class"
+msgstr ""
+
+#: config/i386/winnt.c:292
+#, gcc-internal-format
+msgid "%q+D:'selectany' attribute applies only to initialized objects"
+msgstr ""
+
+#: config/i386/winnt.c:440
+#, gcc-internal-format
+msgid "%q+D causes a section type conflict"
+msgstr ""
+
+#: config/i386/cygming.h:150
+#, gcc-internal-format
+msgid "-f%s ignored for target (all code is position independent)"
+msgstr ""
+
+#: config/i386/djgpp.h:180
+#, gcc-internal-format
+msgid "-mbnu210 is ignored (option is obsolete)"
+msgstr ""
+
+#: config/i386/i386-interix.h:256
+#, gcc-internal-format
+msgid "ms-bitfields not supported for objc"
+msgstr ""
+
+#. Don't allow flag_pic to propagate since invalid relocations will
+#. result otherwise.
+#: config/i386/netware.h:81
+#, gcc-internal-format
+msgid "-fPIC and -fpic are not supported for this target"
+msgstr ""
+
+#: config/ia64/ia64-c.c:51
+#, gcc-internal-format
+msgid "malformed #pragma builtin"
+msgstr ""
+
+#: config/ia64/ia64.c:601
+#, gcc-internal-format
+msgid "invalid argument of %qE attribute"
+msgstr ""
+
+#: config/ia64/ia64.c:614
+#, gcc-internal-format
+msgid "an address area attribute cannot be specified for local variables"
+msgstr ""
+
+#: config/ia64/ia64.c:621
+#, gcc-internal-format
+msgid "address area of %q+D conflicts with previous declaration"
+msgstr ""
+
+#: config/ia64/ia64.c:629
+#, gcc-internal-format
+msgid "address area attribute cannot be specified for functions"
+msgstr ""
+
+#: config/ia64/ia64.c:670
+#, gcc-internal-format
+msgid "%qE attribute requires a string constant argument"
+msgstr ""
+
+#: config/ia64/ia64.c:5384 config/pa/pa.c:371 config/sh/sh.c:8564
+#: config/spu/spu.c:5041
+#, gcc-internal-format
+msgid "value of -mfixed-range must have form REG1-REG2"
+msgstr ""
+
+#: config/ia64/ia64.c:5411 config/pa/pa.c:398 config/sh/sh.c:8590
+#: config/spu/spu.c:5067
+#, gcc-internal-format
+msgid "%s-%s is an empty range"
+msgstr ""
+
+#: config/ia64/ia64.c:5439
+#, gcc-internal-format
+msgid "bad value %<%s%> for -mtls-size= switch"
+msgstr ""
+
+#: config/ia64/ia64.c:5464
+#, gcc-internal-format
+msgid "bad value %<%s%> for -mtune= switch"
+msgstr ""
+
+#: config/ia64/ia64.c:10634
+#, gcc-internal-format
+msgid "version attribute is not a string"
+msgstr ""
+
+#: config/iq2000/iq2000.c:1831
+#, gcc-internal-format
+msgid "gp_offset (%ld) or end_offset (%ld) is less than zero"
+msgstr ""
+
+#: config/iq2000/iq2000.c:2630
+#, gcc-internal-format
+msgid "argument %qd is not a constant"
+msgstr ""
+
+#: config/iq2000/iq2000.c:2932 config/xtensa/xtensa.c:2335
+#, gcc-internal-format
+msgid "PRINT_OPERAND_ADDRESS, null pointer"
+msgstr ""
+
+#: config/iq2000/iq2000.c:3087
+#, gcc-internal-format
+msgid "PRINT_OPERAND: Unknown punctuation '%c'"
+msgstr ""
+
+#: config/iq2000/iq2000.c:3096 config/xtensa/xtensa.c:2189
+#, gcc-internal-format
+msgid "PRINT_OPERAND null pointer"
+msgstr ""
+
+#: config/m32c/m32c-pragma.c:63
+#, gcc-internal-format
+msgid "junk at end of #pragma GCC memregs [0..16]"
+msgstr ""
+
+#: config/m32c/m32c-pragma.c:70
+#, gcc-internal-format
+msgid "#pragma GCC memregs must precede any function decls"
+msgstr ""
+
+#: config/m32c/m32c-pragma.c:81 config/m32c/m32c-pragma.c:88
+#, gcc-internal-format
+msgid "#pragma GCC memregs takes a number [0..16]"
+msgstr ""
+
+#: config/m32c/m32c.c:424
+#, gcc-internal-format
+msgid "invalid target memregs value '%d'"
+msgstr ""
+
+#: config/m32c/m32c.c:2845
+#, gcc-internal-format
+msgid "%qE attribute is not supported for R8C target"
+msgstr ""
+
+#. The argument must be a constant integer.
+#: config/m32c/m32c.c:2861 config/sh/sh.c:8771 config/sh/sh.c:8877
+#, gcc-internal-format
+msgid "%qE attribute argument not an integer constant"
+msgstr ""
+
+#: config/m32c/m32c.c:2870
+#, gcc-internal-format
+msgid "%qE attribute argument should be between 18 to 255"
+msgstr ""
+
+#: config/m32c/m32c.c:4001
+#, gcc-internal-format
+msgid "%<bank_switch%> has no effect on non-interrupt functions"
+msgstr ""
+
+#: config/m32c/m32c.c:4102
+#, gcc-internal-format
+msgid "%<fast_interrupt%> attribute directive ignored"
+msgstr ""
+
+#: config/m32r/m32r.c:382
+#, gcc-internal-format
+msgid "invalid argument of %qs attribute"
+msgstr ""
+
+#: config/m68hc11/m68hc11.c:301
+#, gcc-internal-format
+msgid "-f%s ignored for 68HC11/68HC12 (not supported)"
+msgstr ""
+
+#: config/m68hc11/m68hc11.c:1253
+#, gcc-internal-format
+msgid "%<trap%> and %<far%> attributes are not compatible, ignoring %<far%>"
+msgstr ""
+
+#: config/m68hc11/m68hc11.c:1260
+#, gcc-internal-format
+msgid "%<trap%> attribute is already used"
+msgstr ""
+
+#: config/m68k/m68k.c:572
+#, gcc-internal-format
+msgid "-mcpu=%s conflicts with -march=%s"
+msgstr ""
+
+#: config/m68k/m68k.c:643
+#, gcc-internal-format
+msgid "-mpcrel -fPIC is not currently supported on selected cpu"
+msgstr ""
+
+#: config/m68k/m68k.c:705
+#, gcc-internal-format
+msgid "-falign-labels=%d is not supported"
+msgstr ""
+
+#: config/m68k/m68k.c:710
+#, gcc-internal-format
+msgid "-falign-loops=%d is not supported"
+msgstr ""
+
+#: config/m68k/m68k.c:813
+#, gcc-internal-format
+msgid "multiple interrupt attributes not allowed"
+msgstr ""
+
+#: config/m68k/m68k.c:820
+#, gcc-internal-format
+msgid "interrupt_thread is available only on fido"
+msgstr ""
+
+#: config/m68k/m68k.c:1149 config/rs6000/rs6000.c:18071
+#, gcc-internal-format
+msgid "stack limit expression is not supported"
+msgstr ""
+
+#: config/mep/mep-pragma.c:65
+#, gcc-internal-format
+msgid "junk at end of #pragma io_volatile"
+msgstr ""
+
+#: config/mep/mep-pragma.c:79
+#, gcc-internal-format
+msgid "#pragma io_volatile takes only on or off"
+msgstr ""
+
+#: config/mep/mep-pragma.c:118
+#, gcc-internal-format
+msgid "invalid coprocessor register range"
+msgstr ""
+
+#: config/mep/mep-pragma.c:138
+#, gcc-internal-format
+msgid "invalid coprocessor register %qE"
+msgstr ""
+
+#: config/mep/mep-pragma.c:161
+#, gcc-internal-format
+msgid "malformed coprocessor register"
+msgstr ""
+
+#: config/mep/mep-pragma.c:248
+#, gcc-internal-format
+msgid "junk at end of #pragma GCC coprocessor width"
+msgstr ""
+
+#: config/mep/mep-pragma.c:255
+#, gcc-internal-format
+msgid "#pragma GCC coprocessor width takes only 32 or 64"
+msgstr ""
+
+#: config/mep/mep-pragma.c:275
+#, gcc-internal-format
+msgid "#pragma GCC coprocessor subclass letter must be in [ABCD]"
+msgstr ""
+
+#: config/mep/mep-pragma.c:280
+#, gcc-internal-format
+msgid "#pragma GCC coprocessor subclass '%c' already defined"
+msgstr ""
+
+#: config/mep/mep-pragma.c:298
+#, gcc-internal-format
+msgid "malformed #pragma GCC coprocessor subclass"
+msgstr ""
+
+#: config/mep/mep-pragma.c:320
+#, gcc-internal-format
+msgid "malformed #pragma disinterrupt"
+msgstr ""
+
+#: config/mep/mep-pragma.c:334
+#, gcc-internal-format
+msgid "malformed #pragma GCC coprocessor"
+msgstr ""
+
+#: config/mep/mep-pragma.c:339
+#, gcc-internal-format
+msgid "coprocessor not enabled"
+msgstr ""
+
+#: config/mep/mep-pragma.c:350
+#, gcc-internal-format
+msgid "unknown #pragma GCC coprocessor %E"
+msgstr ""
+
+#: config/mep/mep-pragma.c:372
+#, gcc-internal-format
+msgid "malformed #pragma call"
+msgstr ""
+
+#: config/mep/mep.c:388
+#, gcc-internal-format
+msgid "-fpic is not supported"
+msgstr ""
+
+#: config/mep/mep.c:390
+#, gcc-internal-format
+msgid "-fPIC is not supported"
+msgstr ""
+
+#: config/mep/mep.c:392
+#, gcc-internal-format
+msgid "only one of -ms and -mm may be given"
+msgstr ""
+
+#: config/mep/mep.c:394
+#, gcc-internal-format
+msgid "only one of -ms and -ml may be given"
+msgstr ""
+
+#: config/mep/mep.c:396
+#, gcc-internal-format
+msgid "only one of -mm and -ml may be given"
+msgstr ""
+
+#: config/mep/mep.c:398
+#, gcc-internal-format
+msgid "only one of -ms and -mtiny= may be given"
+msgstr ""
+
+#: config/mep/mep.c:400
+#, gcc-internal-format
+msgid "only one of -mm and -mtiny= may be given"
+msgstr ""
+
+#: config/mep/mep.c:402
+#, gcc-internal-format
+msgid "-mclip currently has no effect without -mminmax"
+msgstr ""
+
+#: config/mep/mep.c:409
+#, gcc-internal-format
+msgid "-mc= must be -mc=tiny, -mc=near, or -mc=far"
+msgstr ""
+
+#: config/mep/mep.c:1534
+#, gcc-internal-format
+msgid "unusual TP-relative address"
+msgstr ""
+
+#: config/mep/mep.c:3510
+#, gcc-internal-format
+msgid "unconvertible operand %c %qs"
+msgstr ""
+
+#: config/mep/mep.c:3953 config/mep/mep.c:4016
+#, gcc-internal-format
+msgid "address region attributes not allowed with auto storage class"
+msgstr ""
+
+#: config/mep/mep.c:3959 config/mep/mep.c:4022
+#, gcc-internal-format
+msgid "address region attributes on pointed-to types ignored"
+msgstr ""
+
+#: config/mep/mep.c:4008
+#, gcc-internal-format
+msgid "%qE attribute only applies to variables and functions"
+msgstr ""
+
+#: config/mep/mep.c:4028 config/mep/mep.c:4316
+#, gcc-internal-format
+msgid "duplicate address region attribute %qE in declaration of %qE on line %d"
+msgstr ""
+
+#: config/mep/mep.c:4062
+#, gcc-internal-format
+msgid "cannot inline interrupt function %qE"
+msgstr ""
+
+#: config/mep/mep.c:4068
+#, gcc-internal-format
+msgid "interrupt function must have return type of void"
+msgstr ""
+
+#: config/mep/mep.c:4073
+#, gcc-internal-format
+msgid "interrupt function must have no arguments"
+msgstr ""
+
+#: config/mep/mep.c:4094
+#, gcc-internal-format
+msgid "%qE attribute allows only an integer constant argument"
+msgstr ""
+
+#: config/mep/mep.c:4127
+#, gcc-internal-format
+msgid "%qE attribute only applies to functions, not %s"
+msgstr ""
+
+#: config/mep/mep.c:4137
+#, gcc-internal-format
+msgid "To describe a pointer to a VLIW function, use syntax like this:"
+msgstr ""
+
+#: config/mep/mep.c:4138
+#, gcc-internal-format
+msgid "  typedef int (__vliw *vfuncptr) ();"
+msgstr ""
+
+#: config/mep/mep.c:4145
+#, gcc-internal-format
+msgid "To describe an array of VLIW function pointers, use syntax like this:"
+msgstr ""
+
+#: config/mep/mep.c:4146
+#, gcc-internal-format
+msgid "  typedef int (__vliw *vfuncptr[]) ();"
+msgstr ""
+
+#: config/mep/mep.c:4151
+#, gcc-internal-format
+msgid "VLIW functions are not allowed without a VLIW configuration"
+msgstr ""
+
+#: config/mep/mep.c:4299
+#, gcc-internal-format
+msgid "\"#pragma disinterrupt %s\" not used"
+msgstr ""
+
+#: config/mep/mep.c:4441
+#, gcc-internal-format
+msgid "__io address 0x%x is the same for %qE and %qE"
+msgstr ""
+
+#: config/mep/mep.c:4589
+#, gcc-internal-format
+msgid "variable %s (%ld bytes) is too large for the %s section (%d bytes)"
+msgstr ""
+
+#: config/mep/mep.c:4687
+#, gcc-internal-format
+msgid "variable %D of type %<io%> must be uninitialized"
+msgstr ""
+
+#: config/mep/mep.c:4692
+#, gcc-internal-format
+msgid "variable %D of type %<cb%> must be uninitialized"
+msgstr ""
+
+#: config/mep/mep.c:6145
+#, gcc-internal-format
+msgid "coprocessor intrinsic %qs is not available in this configuration"
+msgstr ""
+
+#: config/mep/mep.c:6148
+#, gcc-internal-format
+msgid "%qs is not available in VLIW functions"
+msgstr ""
+
+#: config/mep/mep.c:6151
+#, gcc-internal-format
+msgid "%qs is not available in non-VLIW functions"
+msgstr ""
+
+#: config/mep/mep.c:6313 config/mep/mep.c:6431
+#, gcc-internal-format
+msgid "argument %d of %qE must be in the range %d...%d"
+msgstr ""
+
+#: config/mep/mep.c:6316
+#, gcc-internal-format
+msgid "argument %d of %qE must be a multiple of %d"
+msgstr ""
+
+#: config/mep/mep.c:6370
+#, gcc-internal-format
+msgid "too few arguments to %qE"
+msgstr ""
+
+#: config/mep/mep.c:6375
+#, gcc-internal-format
+msgid "too many arguments to %qE"
+msgstr ""
+
+#: config/mep/mep.c:6393
+#, gcc-internal-format
+msgid "argument %d of %qE must be an address"
+msgstr ""
+
+#: config/mep/mep.c:7189
+#, gcc-internal-format
+msgid "2 byte cop instructions are not allowed in 64-bit VLIW mode"
+msgstr ""
+
+#: config/mep/mep.c:7195
+#, gcc-internal-format
+msgid "unexpected %d byte cop instruction"
+msgstr ""
+
+#: config/mips/mips.c:1343 config/mips/mips.c:1345
+#, gcc-internal-format
+msgid "%qs attribute only applies to functions"
+msgstr ""
+
+#: config/mips/mips.c:1355
+#, gcc-internal-format
+msgid "%qE cannot have both %<mips16%> and %<nomips16%> attributes"
+msgstr ""
+
+#: config/mips/mips.c:1377 config/mips/mips.c:1380
+#, gcc-internal-format
+msgid "%qE redeclared with conflicting %qs attributes"
+msgstr ""
+
+#: config/mips/mips.c:2895
+#, gcc-internal-format
+msgid "MIPS16 TLS"
+msgstr ""
+
+#: config/mips/mips.c:6374
+#, gcc-internal-format
+msgid "cannot handle inconsistent calls to %qs"
+msgstr ""
+
+#: config/mips/mips.c:9181
+#, gcc-internal-format
+msgid "the %<interrupt%> attribute requires a MIPS32r2 processor"
+msgstr ""
+
+#: config/mips/mips.c:9183
+#, gcc-internal-format
+msgid "the %<interrupt%> attribute requires %<-msoft-float%>"
+msgstr ""
+
+#: config/mips/mips.c:9185
+#, gcc-internal-format
+msgid "interrupt handlers cannot be MIPS16 functions"
+msgstr ""
+
+#: config/mips/mips.c:13094
+#, gcc-internal-format
+msgid "invalid argument to built-in function"
+msgstr ""
+
+#: config/mips/mips.c:13335
+#, gcc-internal-format
+msgid "built-in function %qE not supported for MIPS16"
+msgstr ""
+
+#: config/mips/mips.c:13925
+#, gcc-internal-format
+msgid "%qs does not support MIPS16 code"
+msgstr ""
+
+#: config/mips/mips.c:15129
+#, gcc-internal-format
+msgid "MIPS16 PIC for ABIs other than o32 and o64"
+msgstr ""
+
+#: config/mips/mips.c:15132
+#, gcc-internal-format
+msgid "MIPS16 -mxgot code"
+msgstr ""
+
+#: config/mips/mips.c:15135
+#, gcc-internal-format
+msgid "hard-float MIPS16 code for ABIs other than o32 and o64"
+msgstr ""
+
+#: config/mips/mips.c:15266
+#, gcc-internal-format
+msgid "CPU names must be lower case"
+msgstr ""
+
+#: config/mips/mips.c:15409
+#, gcc-internal-format
+msgid "%<-%s%> conflicts with the other architecture options, which specify a %s processor"
+msgstr ""
+
+#: config/mips/mips.c:15425
+#, gcc-internal-format
+msgid "%<-march=%s%> is not compatible with the selected ABI"
+msgstr ""
+
+#: config/mips/mips.c:15440
+#, gcc-internal-format
+msgid "%<-mgp64%> used with a 32-bit processor"
+msgstr ""
+
+#: config/mips/mips.c:15442
+#, gcc-internal-format
+msgid "%<-mgp32%> used with a 64-bit ABI"
+msgstr ""
+
+#: config/mips/mips.c:15444
+#, gcc-internal-format
+msgid "%<-mgp64%> used with a 32-bit ABI"
+msgstr ""
+
+#: config/mips/mips.c:15460 config/mips/mips.c:15462 config/mips/mips.c:15529
+#, gcc-internal-format
+msgid "unsupported combination: %s"
+msgstr ""
+
+#: config/mips/mips.c:15466
+#, gcc-internal-format
+msgid "%<-mgp32%> and %<-mfp64%> can only be combined if the target supports the mfhc1 and mthc1 instructions"
+msgstr ""
+
+#: config/mips/mips.c:15469
+#, gcc-internal-format
+msgid "%<-mgp32%> and %<-mfp64%> can only be combined when using the o32 ABI"
+msgstr ""
+
+#: config/mips/mips.c:15523
+#, gcc-internal-format
+msgid "the %qs architecture does not support branch-likely instructions"
+msgstr ""
+
+#: config/mips/mips.c:15563
+#, gcc-internal-format
+msgid "%<-mno-gpopt%> needs %<-mexplicit-relocs%>"
+msgstr ""
+
+#: config/mips/mips.c:15571 config/mips/mips.c:15574
+#, gcc-internal-format
+msgid "cannot use small-data accesses for %qs"
+msgstr ""
+
+#: config/mips/mips.c:15588
+#, gcc-internal-format
+msgid "%<-mips3d%> requires %<-mpaired-single%>"
+msgstr ""
+
+#: config/mips/mips.c:15597
+#, gcc-internal-format
+msgid "%qs must be used with %qs"
+msgstr ""
+
+#: config/mips/mips.c:15604
+#, gcc-internal-format
+msgid "the %qs architecture does not support paired-single instructions"
+msgstr ""
+
+#: config/mips/mips.c:15610
+#, gcc-internal-format
+msgid "%qs requires a target that provides the %qs instruction"
+msgstr ""
+
+#: config/mips/mips.c:15715
+#, gcc-internal-format
+msgid "%qs requires branch-likely instructions"
+msgstr ""
+
+#: config/mips/mips.c:15719
+#, gcc-internal-format
+msgid "the %qs architecture does not support the synci instruction"
+msgstr ""
+
+#: config/mips/mips.c:16186
+#, gcc-internal-format
+msgid "mips16 function profiling"
+msgstr ""
+
+#: config/mmix/mmix.c:239
+#, gcc-internal-format
+msgid "-f%s not supported: ignored"
+msgstr ""
+
+#: config/mmix/mmix.c:687
+#, gcc-internal-format
+msgid "support for mode %qs"
+msgstr ""
+
+#: config/mmix/mmix.c:701
+#, gcc-internal-format
+msgid "too large function value type, needs %d registers, have only %d registers for this"
+msgstr ""
+
+#: config/mmix/mmix.c:871
+#, gcc-internal-format
+msgid "function_profiler support for MMIX"
+msgstr ""
+
+#: config/mmix/mmix.c:893
+#, gcc-internal-format
+msgid "MMIX Internal: Last named vararg would not fit in a register"
+msgstr ""
+
+#: config/mmix/mmix.c:1502 config/mmix/mmix.c:1526 config/mmix/mmix.c:1642
+#, gcc-internal-format
+msgid "MMIX Internal: Bad register: %d"
+msgstr ""
+
+#. Presumably there's a missing case above if we get here.
+#: config/mmix/mmix.c:1634
+#, gcc-internal-format
+msgid "MMIX Internal: Missing %qc case in mmix_print_operand"
+msgstr ""
+
+#: config/mmix/mmix.c:1920
+#, gcc-internal-format
+msgid "stack frame not a multiple of 8 bytes: %wd"
+msgstr ""
+
+#: config/mmix/mmix.c:2156
+#, gcc-internal-format
+msgid "stack frame not a multiple of octabyte: %wd"
+msgstr ""
+
+#: config/mmix/mmix.c:2440 config/mmix/mmix.c:2504
+#, gcc-internal-format
+msgid "MMIX Internal: %s is not a shiftable int"
+msgstr ""
+
+#: config/pa/pa.c:503
+#, gcc-internal-format
+msgid "PIC code generation is not supported in the portable runtime model"
+msgstr ""
+
+#: config/pa/pa.c:508
+#, gcc-internal-format
+msgid "PIC code generation is not compatible with fast indirect calls"
+msgstr ""
+
+#: config/pa/pa.c:513
+#, gcc-internal-format
+msgid "-g is only supported when using GAS on this processor,"
+msgstr ""
+
+#: config/pa/pa.c:514
+#, gcc-internal-format
+msgid "-g option disabled"
+msgstr ""
+
+#: config/pa/pa.c:8466
+#, gcc-internal-format
+msgid "alignment (%u) for %s exceeds maximum alignment for global common data.  Using %u"
+msgstr ""
+
+#: config/pa/pa-hpux11.h:82
+#, gcc-internal-format
+msgid "-munix=98 option required for C89 Amendment 1 features.\n"
+msgstr ""
+
+#: config/picochip/picochip.c:383
+#, gcc-internal-format
+msgid "invalid AE type specified (%s)\n"
+msgstr ""
+
+#: config/picochip/picochip.c:406
+#, gcc-internal-format
+msgid "Invalid mul type specified (%s) - expected mac, mul or none"
+msgstr ""
+
+#: config/picochip/picochip.c:638
+#, gcc-internal-format
+msgid "unexpected mode %s encountered in picochip_emit_save_register\n"
+msgstr ""
+
+#: config/picochip/picochip.c:805
+#, gcc-internal-format
+msgid "Defaulting to stack for %s register creation\n"
+msgstr ""
+
+#: config/picochip/picochip.c:1342
+#, gcc-internal-format
+msgid "LCFI labels have already been deferred."
+msgstr ""
+
+#: config/picochip/picochip.c:1405
+#, gcc-internal-format
+msgid "LM label has already been deferred."
+msgstr ""
+
+#: config/picochip/picochip.c:1685
+#, gcc-internal-format
+msgid "picochip_asm_output_opcode - Found multiple lines in VLIW packet %s\n"
+msgstr ""
+
+#: config/picochip/picochip.c:1788
+#, gcc-internal-format
+msgid "picochip_asm_output_opcode - can't output unknown operator %c\n"
+msgstr ""
+
+#: config/picochip/picochip.c:2040 config/picochip/picochip.c:2099
+#, gcc-internal-format
+msgid "%s: At least one operand can't be handled"
+msgstr ""
+
+#: config/picochip/picochip.c:2180
+#, gcc-internal-format
+msgid "Unknown short branch in %s (type %d)\n"
+msgstr ""
+
+#: config/picochip/picochip.c:2217
+#, gcc-internal-format
+msgid "Unknown long branch in %s (type %d)\n"
+msgstr ""
+
+#: config/picochip/picochip.c:2257 config/picochip/picochip.c:2325
+#, gcc-internal-format
+msgid "PUT uses port array index %d, which is out of range [%d..%d)"
+msgstr ""
+
+#: config/picochip/picochip.c:2291
+#, gcc-internal-format
+msgid "GET uses port array index %d, which is out of range [%d..%d)"
+msgstr ""
+
+#: config/picochip/picochip.c:3134
+#, gcc-internal-format
+msgid "Too many ALU instructions emitted (%d)\n"
+msgstr ""
+
+#: config/picochip/picochip.c:3765 config/picochip/picochip.c:3858
+#, gcc-internal-format
+msgid "%s: Second source operand is not a constant"
+msgstr ""
+
+#: config/picochip/picochip.c:3768 config/picochip/picochip.c:3819
+#: config/picochip/picochip.c:3861
+#, gcc-internal-format
+msgid "%s: Third source operand is not a constant"
+msgstr ""
+
+#: config/picochip/picochip.c:3822
+#, gcc-internal-format
+msgid "%s: Fourth source operand is not a constant"
+msgstr ""
+
+#: config/picochip/picochip.c:4132
+#, gcc-internal-format
+msgid "%s (disable warning using -mno-inefficient-warnings)"
+msgstr ""
+
+#: config/rs6000/host-darwin.c:62
+#, gcc-internal-format
+msgid "Segmentation Fault (code)"
+msgstr ""
+
+#: config/rs6000/host-darwin.c:132
+#, gcc-internal-format
+msgid "Segmentation Fault"
+msgstr ""
+
+#: config/rs6000/host-darwin.c:146
+#, gcc-internal-format
+msgid "While setting up signal stack: %m"
+msgstr ""
+
+#: config/rs6000/host-darwin.c:152
+#, gcc-internal-format
+msgid "While setting up signal handler: %m"
+msgstr ""
+
+#. Handle the machine specific pragma longcall.  Its syntax is
+#.
+#. # pragma longcall ( TOGGLE )
+#.
+#. where TOGGLE is either 0 or 1.
+#.
+#. rs6000_default_long_calls is set to the value of TOGGLE, changing
+#. whether or not new function declarations receive a longcall
+#. attribute by default.
+#: config/rs6000/rs6000-c.c:52
+#, gcc-internal-format
+msgid "ignoring malformed #pragma longcall"
+msgstr ""
+
+#: config/rs6000/rs6000-c.c:65
+#, gcc-internal-format
+msgid "missing open paren"
+msgstr ""
+
+#: config/rs6000/rs6000-c.c:67
+#, gcc-internal-format
+msgid "missing number"
+msgstr ""
+
+#: config/rs6000/rs6000-c.c:69
+#, gcc-internal-format
+msgid "missing close paren"
+msgstr ""
+
+#: config/rs6000/rs6000-c.c:72
+#, gcc-internal-format
+msgid "number must be 0 or 1"
+msgstr ""
+
+#: config/rs6000/rs6000-c.c:75
+#, gcc-internal-format
+msgid "junk at end of #pragma longcall"
+msgstr ""
+
+#: config/rs6000/rs6000-c.c:3246
+#, gcc-internal-format
+msgid "%s only accepts %d arguments"
+msgstr ""
+
+#: config/rs6000/rs6000-c.c:3251
+#, gcc-internal-format
+msgid "%s only accepts 1 argument"
+msgstr ""
+
+#: config/rs6000/rs6000-c.c:3256
+#, gcc-internal-format
+msgid "%s only accepts 2 arguments"
+msgstr ""
+
+#: config/rs6000/rs6000-c.c:3321
+#, gcc-internal-format
+msgid "vec_extract only accepts 2 arguments"
+msgstr ""
+
+#: config/rs6000/rs6000-c.c:3397
+#, gcc-internal-format
+msgid "vec_insert only accepts 3 arguments"
+msgstr ""
+
+#: config/rs6000/rs6000-c.c:3500
+#, gcc-internal-format
+msgid "passing arg %d of %qE discards qualifiers frompointer target type"
+msgstr ""
+
+#: config/rs6000/rs6000-c.c:3543
+#, gcc-internal-format
+msgid "invalid parameter combination for AltiVec intrinsic"
+msgstr ""
+
+#: config/rs6000/rs6000.c:2108
+#, gcc-internal-format
+msgid "-mdynamic-no-pic overrides -fpic or -fPIC"
+msgstr ""
+
+#: config/rs6000/rs6000.c:2119
+#, gcc-internal-format
+msgid "-m64 requires PowerPC64 architecture, enabling"
+msgstr ""
+
+#: config/rs6000/rs6000.c:2371
+#, gcc-internal-format
+msgid "AltiVec not supported in this target"
+msgstr ""
+
+#: config/rs6000/rs6000.c:2373
+#, gcc-internal-format
+msgid "Spe not supported in this target"
+msgstr ""
+
+#: config/rs6000/rs6000.c:2400
+#, gcc-internal-format
+msgid "-mmultiple is not supported on little endian systems"
+msgstr ""
+
+#: config/rs6000/rs6000.c:2407
+#, gcc-internal-format
+msgid "-mstring is not supported on little endian systems"
+msgstr ""
+
+#: config/rs6000/rs6000.c:2466
+#, gcc-internal-format
+msgid "unknown -mdebug-%s switch"
+msgstr ""
+
+#: config/rs6000/rs6000.c:2506
+#, gcc-internal-format
+msgid "unknown -mtraceback arg %qs; expecting %<full%>, %<partial%> or %<none%>"
+msgstr ""
+
+#: config/rs6000/rs6000.c:3127
+#, gcc-internal-format
+msgid "unknown -m%s= option specified: '%s'"
+msgstr ""
+
+#: config/rs6000/rs6000.c:3173
+#, gcc-internal-format
+msgid "unknown value %s for -mfpu"
+msgstr ""
+
+#: config/rs6000/rs6000.c:3504
+#, gcc-internal-format
+msgid "not configured for ABI: '%s'"
+msgstr ""
+
+#: config/rs6000/rs6000.c:3517
+#, gcc-internal-format
+msgid "Using darwin64 ABI"
+msgstr ""
+
+#: config/rs6000/rs6000.c:3522
+#, gcc-internal-format
+msgid "Using old darwin ABI"
+msgstr ""
+
+#: config/rs6000/rs6000.c:3529
+#, gcc-internal-format
+msgid "Using IBM extended precision long double"
+msgstr ""
+
+#: config/rs6000/rs6000.c:3535
+#, gcc-internal-format
+msgid "Using IEEE extended precision long double"
+msgstr ""
+
+#: config/rs6000/rs6000.c:3540
+#, gcc-internal-format
+msgid "unknown ABI specified: '%s'"
+msgstr ""
+
+#: config/rs6000/rs6000.c:3567
+#, gcc-internal-format
+msgid "invalid option for -mfloat-gprs: '%s'"
+msgstr ""
+
+#: config/rs6000/rs6000.c:3577
+#, gcc-internal-format
+msgid "Unknown switch -mlong-double-%s"
+msgstr ""
+
+#: config/rs6000/rs6000.c:3598
+#, gcc-internal-format
+msgid "-malign-power is not supported for 64-bit Darwin; it is incompatible with the installed C and C++ libraries"
+msgstr ""
+
+#: config/rs6000/rs6000.c:3606
+#, gcc-internal-format
+msgid "unknown -malign-XXXXX option specified: '%s'"
+msgstr ""
+
+#: config/rs6000/rs6000.c:3613
+#, gcc-internal-format
+msgid "-msingle-float option equivalent to -mhard-float"
+msgstr ""
+
+#: config/rs6000/rs6000.c:3629
+#, gcc-internal-format
+msgid "-msimple-fpu option ignored"
+msgstr ""
+
+#: config/rs6000/rs6000.c:6779
+#, gcc-internal-format
+msgid "GCC vector returned by reference: non-standard ABI extension with no compatibility guarantee"
+msgstr ""
+
+#: config/rs6000/rs6000.c:6852
+#, gcc-internal-format
+msgid "cannot return value in vector register because altivec instructions are disabled, use -maltivec to enable them"
+msgstr ""
+
+#: config/rs6000/rs6000.c:7111
+#, gcc-internal-format
+msgid "cannot pass argument in vector register because altivec instructions are disabled, use -maltivec to enable them"
+msgstr ""
+
+#: config/rs6000/rs6000.c:8013
+#, gcc-internal-format
+msgid "GCC vector passed by reference: non-standard ABI extension with no compatibility guarantee"
+msgstr ""
+
+#: config/rs6000/rs6000.c:8595
+#, gcc-internal-format
+msgid "internal error: builtin function to %s already processed."
+msgstr ""
+
+#: config/rs6000/rs6000.c:9534
+#, gcc-internal-format
+msgid "argument 1 must be a 5-bit signed literal"
+msgstr ""
+
+#: config/rs6000/rs6000.c:9637 config/rs6000/rs6000.c:10609
+#, gcc-internal-format
+msgid "argument 2 must be a 5-bit unsigned literal"
+msgstr ""
+
+#: config/rs6000/rs6000.c:9676
+#, gcc-internal-format
+msgid "argument 1 of __builtin_altivec_predicate must be a constant"
+msgstr ""
+
+#: config/rs6000/rs6000.c:9728
+#, gcc-internal-format
+msgid "argument 1 of __builtin_altivec_predicate is out of range"
+msgstr ""
+
+#: config/rs6000/rs6000.c:9978
+#, gcc-internal-format
+msgid "argument 3 must be a 4-bit unsigned literal"
+msgstr ""
+
+#: config/rs6000/rs6000.c:9996
+#, gcc-internal-format
+msgid "argument 3 must be a 2-bit unsigned literal"
+msgstr ""
+
+#: config/rs6000/rs6000.c:10008
+#, gcc-internal-format
+msgid "argument 3 must be a 1-bit unsigned literal"
+msgstr ""
+
+#: config/rs6000/rs6000.c:10184
+#, gcc-internal-format
+msgid "argument to %qs must be a 2-bit unsigned literal"
+msgstr ""
+
+#: config/rs6000/rs6000.c:10328
+#, gcc-internal-format
+msgid "unresolved overload for Altivec builtin %qF"
+msgstr ""
+
+#: config/rs6000/rs6000.c:10419
+#, gcc-internal-format
+msgid "argument to dss must be a 2-bit unsigned literal"
+msgstr ""
+
+#: config/rs6000/rs6000.c:10729
+#, gcc-internal-format
+msgid "argument 1 of __builtin_paired_predicate must be a constant"
+msgstr ""
+
+#: config/rs6000/rs6000.c:10776
+#, gcc-internal-format
+msgid "argument 1 of __builtin_paired_predicate is out of range"
+msgstr ""
+
+#: config/rs6000/rs6000.c:10801
+#, gcc-internal-format
+msgid "argument 1 of __builtin_spe_predicate must be a constant"
+msgstr ""
+
+#: config/rs6000/rs6000.c:10873
+#, gcc-internal-format
+msgid "argument 1 of __builtin_spe_predicate is out of range"
+msgstr ""
+
+#: config/rs6000/rs6000.c:12219
+#, gcc-internal-format
+msgid "internal error: builtin function %s had no type"
+msgstr ""
+
+#: config/rs6000/rs6000.c:12226
+#, gcc-internal-format
+msgid "internal error: builtin function %s had an unexpected return type %s"
+msgstr ""
+
+#: config/rs6000/rs6000.c:12239
+#, gcc-internal-format
+msgid "internal error: builtin function %s, argument %d had unexpected argument type %s"
+msgstr ""
+
+#: config/rs6000/rs6000.c:18041
+#, gcc-internal-format
+msgid "stack frame too large"
+msgstr ""
+
+#: config/rs6000/rs6000.c:18437
+#, gcc-internal-format
+msgid "Out-of-line save/restore routines not supported on Darwin"
+msgstr ""
+
+#: config/rs6000/rs6000.c:21332
+#, gcc-internal-format
+msgid "no profiling of 64-bit code for this ABI"
+msgstr ""
+
+#: config/rs6000/rs6000.c:23360
+#, gcc-internal-format
+msgid "use of %<long double%> in AltiVec types is invalid"
+msgstr ""
+
+#: config/rs6000/rs6000.c:23362
+#, gcc-internal-format
+msgid "use of boolean types in AltiVec types is invalid"
+msgstr ""
+
+#: config/rs6000/rs6000.c:23364
+#, gcc-internal-format
+msgid "use of %<complex%> in AltiVec types is invalid"
+msgstr ""
+
+#: config/rs6000/rs6000.c:23366
+#, gcc-internal-format
+msgid "use of decimal floating point types in AltiVec types is invalid"
+msgstr ""
+
+#: config/rs6000/rs6000.c:23372
+#, gcc-internal-format
+msgid "use of %<long%> in AltiVec types is invalid for 64-bit code without -mvsx"
+msgstr ""
+
+#: config/rs6000/rs6000.c:23375
+#, gcc-internal-format
+msgid "use of %<long%> in AltiVec types is deprecated; use %<int%>"
+msgstr ""
+
+#: config/rs6000/rs6000.c:23380
+#, gcc-internal-format
+msgid "use of %<long long%> in AltiVec types is invalid without -mvsx"
+msgstr ""
+
+#: config/rs6000/rs6000.c:23383
+#, gcc-internal-format
+msgid "use of %<double%> in AltiVec types is invalid without -mvsx"
+msgstr ""
+
+#: config/rs6000/rs6000.c:25785
+#, gcc-internal-format
+msgid "emitting microcode insn %s\t[%s] #%d"
+msgstr ""
+
+#: config/rs6000/rs6000.c:25789
+#, gcc-internal-format
+msgid "emitting conditional microcode insn %s\t[%s] #%d"
+msgstr ""
+
+#: config/rs6000/aix43.h:38 config/rs6000/aix51.h:38 config/rs6000/aix52.h:38
+#: config/rs6000/aix53.h:38 config/rs6000/aix61.h:38
+#, gcc-internal-format
+msgid "-maix64 and POWER architecture are incompatible"
+msgstr ""
+
+#: config/rs6000/aix43.h:43 config/rs6000/aix51.h:43 config/rs6000/aix52.h:43
+#: config/rs6000/aix53.h:43 config/rs6000/aix61.h:43
+#, gcc-internal-format
+msgid "-maix64 requires PowerPC64 architecture remain enabled"
+msgstr ""
+
+#: config/rs6000/aix43.h:49 config/rs6000/aix52.h:49 config/rs6000/aix53.h:49
+#: config/rs6000/aix61.h:49
+#, gcc-internal-format
+msgid "soft-float and long-double-128 are incompatible"
+msgstr ""
+
+#: config/rs6000/aix43.h:53 config/rs6000/aix51.h:47 config/rs6000/aix52.h:53
+#: config/rs6000/aix53.h:53 config/rs6000/aix61.h:53
+#, gcc-internal-format
+msgid "-maix64 required: 64-bit computation with 32-bit addressing not yet supported"
+msgstr ""
+
+#: config/rs6000/e500.h:40
+#, gcc-internal-format
+msgid "AltiVec and E500 instructions cannot coexist"
+msgstr ""
+
+#: config/rs6000/e500.h:42
+#, gcc-internal-format
+msgid "VSX and E500 instructions cannot coexist"
+msgstr ""
+
+#: config/rs6000/e500.h:44
+#, gcc-internal-format
+msgid "64-bit E500 not supported"
+msgstr ""
+
+#: config/rs6000/e500.h:46
+#, gcc-internal-format
+msgid "E500 and FPRs not supported"
+msgstr ""
+
+#: config/rs6000/eabispe.h:41 config/rs6000/linuxspe.h:41
+#, gcc-internal-format
+msgid "-m64 not supported in this configuration"
+msgstr ""
+
+#: config/rs6000/linux64.h:115
+#, gcc-internal-format
+msgid "-m64 requires a PowerPC64 cpu"
+msgstr ""
+
+#. Definitions for __builtin_return_address and __builtin_frame_address.
+#. __builtin_return_address (0) should give link register (65), enable
+#. this.
+#. This should be uncommented, so that the link register is used, but
+#. currently this would result in unmatched insns and spilling fixed
+#. registers so we'll leave it for another day.  When these problems are
+#. taken care of one additional fetch will be necessary in RETURN_ADDR_RTX.
+#. (mrs)
+#. #define RETURN_ADDR_IN_PREVIOUS_FRAME
+#. Number of bytes into the frame return addresses can be found.  See
+#. rs6000_stack_info in rs6000.c for more information on how the different
+#. abi's store the return address.
+#: config/rs6000/rs6000.h:1760
+#, gcc-internal-format
+msgid "RETURN_ADDRESS_OFFSET not supported"
+msgstr ""
+
+#. Sometimes certain combinations of command options do not make sense
+#. on a particular target machine.  You can define a macro
+#. `OVERRIDE_OPTIONS' to take account of this.  This macro, if
+#. defined, is executed once just after all the command options have
+#. been parsed.
+#.
+#. The macro SUBTARGET_OVERRIDE_OPTIONS is provided for subtargets, to
+#. get control.
+#: config/rs6000/sysv4.h:136
+#, gcc-internal-format
+msgid "bad value for -mcall-%s"
+msgstr ""
+
+#: config/rs6000/sysv4.h:152
+#, gcc-internal-format
+msgid "bad value for -msdata=%s"
+msgstr ""
+
+#: config/rs6000/sysv4.h:169
+#, gcc-internal-format
+msgid "-mrelocatable and -msdata=%s are incompatible"
+msgstr ""
+
+#: config/rs6000/sysv4.h:178
+#, gcc-internal-format
+msgid "-f%s and -msdata=%s are incompatible"
+msgstr ""
+
+#: config/rs6000/sysv4.h:187
+#, gcc-internal-format
+msgid "-msdata=%s and -mcall-%s are incompatible"
+msgstr ""
+
+#: config/rs6000/sysv4.h:196
+#, gcc-internal-format
+msgid "-mrelocatable and -mno-minimal-toc are incompatible"
+msgstr ""
+
+#: config/rs6000/sysv4.h:202
+#, gcc-internal-format
+msgid "-mrelocatable and -mcall-%s are incompatible"
+msgstr ""
+
+#: config/rs6000/sysv4.h:209
+#, gcc-internal-format
+msgid "-fPIC and -mcall-%s are incompatible"
+msgstr ""
+
+#: config/rs6000/sysv4.h:216
+#, gcc-internal-format
+msgid "-mcall-aixdesc must be big endian"
+msgstr ""
+
+#: config/rs6000/sysv4.h:221
+#, gcc-internal-format
+msgid "-msecure-plt not supported by your assembler"
+msgstr ""
+
+#: config/rs6000/sysv4.h:239
+#, gcc-internal-format
+msgid "-m%s not supported in this configuration"
+msgstr ""
+
+#: config/rx/rx.c:425
+#, gcc-internal-format
+msgid "unreocgnized control register number: %d - using 'psw'"
+msgstr ""
+
+#: config/rx/rx.c:2037 config/xtensa/xtensa.c:3025 config/xtensa/xtensa.c:3065
+#, gcc-internal-format
+msgid "bad builtin code"
+msgstr ""
+
+#: config/rx/rx.c:2164
+#, gcc-internal-format
+msgid "unrecognized argument '%s' to -mcpu= option"
+msgstr ""
+
+#: config/rx/rx.c:2169
+#, gcc-internal-format
+msgid "The RX200 cpu does not have FPU hardware"
+msgstr ""
+
+#: config/rx/rx.c:2208
+#, gcc-internal-format
+msgid "RX FPU instructions are not IEEE compliant"
+msgstr ""
+
+#: config/rx/rx.c:2211
+#, gcc-internal-format
+msgid "Changing the FPU insns/math optimizations pairing is not supported"
+msgstr ""
+
+#: config/s390/s390.c:1525
+#, gcc-internal-format
+msgid "stack guard value must be an exact power of 2"
+msgstr ""
+
+#: config/s390/s390.c:1532
+#, gcc-internal-format
+msgid "stack size must be an exact power of 2"
+msgstr ""
+
+#: config/s390/s390.c:1577
+#, gcc-internal-format
+msgid "z/Architecture mode not supported on %s"
+msgstr ""
+
+#: config/s390/s390.c:1579
+#, gcc-internal-format
+msgid "64-bit ABI not supported in ESA/390 mode"
+msgstr ""
+
+#: config/s390/s390.c:1586
+#, gcc-internal-format
+msgid "Hardware decimal floating point instructions not available on %s"
+msgstr ""
+
+#: config/s390/s390.c:1589
+#, gcc-internal-format
+msgid "Hardware decimal floating point instructions not available in ESA/390 mode"
+msgstr ""
+
+#: config/s390/s390.c:1599
+#, gcc-internal-format
+msgid "-mhard-dfp can't be used in conjunction with -msoft-float"
+msgstr ""
+
+#: config/s390/s390.c:1621
+#, gcc-internal-format
+msgid "-mbackchain -mpacked-stack -mhard-float are not supported in combination"
+msgstr ""
+
+#: config/s390/s390.c:1627
+#, gcc-internal-format
+msgid "stack size must be greater than the stack guard value"
+msgstr ""
+
+#: config/s390/s390.c:1629
+#, gcc-internal-format
+msgid "stack size must not be greater than 64k"
+msgstr ""
+
+#: config/s390/s390.c:1632
+#, gcc-internal-format
+msgid "-mstack-guard implies use of -mstack-size"
+msgstr ""
+
+#: config/s390/s390.c:7096
+#, gcc-internal-format
+msgid "total size of local variables exceeds architecture limit"
+msgstr ""
+
+#: config/s390/s390.c:7794 config/s390/s390.c:7810
+#, gcc-internal-format
+msgid "frame size of function %qs is "
+msgstr ""
+
+#: config/s390/s390.c:7839
+#, gcc-internal-format
+msgid "frame size of %qs is "
+msgstr ""
+
+#: config/s390/s390.c:7843
+#, gcc-internal-format
+msgid "%qs uses dynamic stack allocation"
+msgstr ""
+
+#: config/score/score3.c:649 config/score/score7.c:648
+#, gcc-internal-format
+msgid "-fPIC and -G are incompatible"
+msgstr ""
+
+#: config/sh/sh.c:892
+#, gcc-internal-format
+msgid "ignoring -fschedule-insns because of exception handling bug"
+msgstr ""
+
+#: config/sh/sh.c:7499
+#, gcc-internal-format
+msgid "__builtin_saveregs not supported by this subtarget"
+msgstr ""
+
+#: config/sh/sh.c:8652
+#, gcc-internal-format
+msgid "%qE attribute only applies to interrupt functions"
+msgstr ""
+
+#: config/sh/sh.c:8710
+#, gcc-internal-format
+msgid "%qE attribute is supported only for SH2A"
+msgstr ""
+
+#: config/sh/sh.c:8740
+#, gcc-internal-format
+msgid "attribute interrupt_handler is not compatible with -m5-compact"
+msgstr ""
+
+#: config/sh/sh.c:8757
+#, gcc-internal-format
+msgid "%qE attribute only applies to SH2A"
+msgstr ""
+
+#: config/sh/sh.c:8779
+#, gcc-internal-format
+msgid "%qE attribute argument should be between 0 to 255"
+msgstr ""
+
+#. The argument must be a constant string.
+#: config/sh/sh.c:8852
+#, gcc-internal-format
+msgid "%qE attribute argument not a string constant"
+msgstr ""
+
+#: config/sh/sh.c:11274
+#, gcc-internal-format
+msgid "r0 needs to be available as a call-clobbered register"
+msgstr ""
+
+#: config/sh/sh.c:11295
+#, gcc-internal-format
+msgid "Need a second call-clobbered general purpose register"
+msgstr ""
+
+#: config/sh/sh.c:11303
+#, gcc-internal-format
+msgid "Need a call-clobbered target register"
+msgstr ""
+
+#: config/sh/symbian-base.c:112
+#, gcc-internal-format
+msgid "%qE declared as both exported to and imported from a DLL"
+msgstr ""
+
+#: config/sh/symbian-base.c:119
+#, gcc-internal-format
+msgid "failure in redeclaration of %q+D: dllimport'd symbol lacks external linkage"
+msgstr ""
+
+#: config/sh/symbian-base.c:210
+#, gcc-internal-format
+msgid "%s %q+D %s after being referenced with dllimport linkage"
+msgstr ""
+
+#: config/sh/symbian-c.c:83 config/sh/symbian-cxx.c:94
+#, gcc-internal-format
+msgid "function %q+D is defined after prior declaration as dllimport: attribute ignored"
+msgstr ""
+
+#: config/sh/symbian-c.c:122 config/sh/symbian-c.c:129
+#: config/sh/symbian-cxx.c:554 config/sh/symbian-cxx.c:561
+#: ada/gcc-interface/utils.c:5183 ada/gcc-interface/utils.c:5359
+#: ada/gcc-interface/utils.c:5379 ada/gcc-interface/utils.c:5439
+#, gcc-internal-format
+msgid "%qs attribute ignored"
+msgstr ""
+
+#: config/sh/symbian-cxx.c:106
+#, gcc-internal-format
+msgid "inline function %q+D is declared as dllimport: attribute ignored"
+msgstr ""
+
+#. FIXME
+#: config/sh/netbsd-elf.h:94
+#, gcc-internal-format
+msgid "unimplemented-shmedia profiling"
+msgstr ""
+
+#. The kernel loader cannot handle the relaxation			 relocations, so it cannot load kernel modules			 (which are ET_REL) or RTP executables (which are		 linked with --emit-relocs).  No relaxation relocations		 appear in shared libraries, so relaxation is OK		 for RTP PIC.
+#: config/sh/vxworks.h:43
+#, gcc-internal-format
+msgid "-mrelax is only supported for RTP PIC"
+msgstr ""
+
+#: config/sparc/sparc.c:713
+#, gcc-internal-format
+msgid "%s is not supported by this configuration"
+msgstr ""
+
+#: config/sparc/sparc.c:720
+#, gcc-internal-format
+msgid "-mlong-double-64 not allowed with -m64"
+msgstr ""
+
+#: config/sparc/sparc.c:740
+#, gcc-internal-format
+msgid "bad value (%s) for -mcmodel= switch"
+msgstr ""
+
+#: config/sparc/sparc.c:745
+#, gcc-internal-format
+msgid "-mcmodel= is not supported on 32 bit systems"
+msgstr ""
+
+#: config/spu/spu-c.c:141
+#, gcc-internal-format
+msgid "insufficient arguments to overloaded function %s"
+msgstr ""
+
+#: config/spu/spu-c.c:172
+#, gcc-internal-format
+msgid "too many arguments to overloaded function %s"
+msgstr ""
+
+#: config/spu/spu-c.c:184
+#, gcc-internal-format
+msgid "parameter list does not match a valid signature for %s()"
+msgstr ""
+
+#: config/spu/spu.c:516 config/spu/spu.c:527
+#, gcc-internal-format
+msgid "Unknown architecture '%s'"
+msgstr ""
+
+#: config/spu/spu.c:5321 config/spu/spu.c:5324
+#, gcc-internal-format
+msgid "creating run-time relocation for %qD"
+msgstr ""
+
+#: config/spu/spu.c:5329 config/spu/spu.c:5331
+#, gcc-internal-format
+msgid "creating run-time relocation"
+msgstr ""
+
+#: config/spu/spu.c:6389
+#, gcc-internal-format
+msgid "%s expects an integer literal in the range [%d, %d]."
+msgstr ""
+
+#: config/spu/spu.c:6409
+#, gcc-internal-format
+msgid "%s expects an integer literal in the range [%d, %d]. ("
+msgstr ""
+
+#: config/spu/spu.c:6439
+#, gcc-internal-format
+msgid "%d least significant bits of %s are ignored."
+msgstr ""
+
+#: config/stormy16/stormy16.c:1090
+#, gcc-internal-format
+msgid "local variable memory requirements exceed capacity"
+msgstr ""
+
+#: config/stormy16/stormy16.c:1247
+#, gcc-internal-format
+msgid "function_profiler support"
+msgstr ""
+
+#: config/stormy16/stormy16.c:1340
+#, gcc-internal-format
+msgid "cannot use va_start in interrupt function"
+msgstr ""
+
+#: config/stormy16/stormy16.c:1884
+#, gcc-internal-format
+msgid "switch statement of size %lu entries too large"
+msgstr ""
+
+#: config/stormy16/stormy16.c:2253
+#, gcc-internal-format
+msgid "%<__BELOW100__%> attribute only applies to variables"
+msgstr ""
+
+#: config/stormy16/stormy16.c:2260
+#, gcc-internal-format
+msgid "__BELOW100__ attribute not allowed with auto storage class"
+msgstr ""
+
+#: config/v850/v850-c.c:67
+#, gcc-internal-format
+msgid "#pragma GHS endXXXX found without previous startXXX"
+msgstr ""
+
+#: config/v850/v850-c.c:70
+#, gcc-internal-format
+msgid "#pragma GHS endXXX does not match previous startXXX"
+msgstr ""
+
+#: config/v850/v850-c.c:96
+#, gcc-internal-format
+msgid "cannot set interrupt attribute: no current function"
+msgstr ""
+
+#: config/v850/v850-c.c:104
+#, gcc-internal-format
+msgid "cannot set interrupt attribute: no such identifier"
+msgstr ""
+
+#: config/v850/v850-c.c:153
+#, gcc-internal-format
+msgid "junk at end of #pragma ghs section"
+msgstr ""
+
+#: config/v850/v850-c.c:170
+#, gcc-internal-format
+msgid "unrecognized section name %qE"
+msgstr ""
+
+#: config/v850/v850-c.c:185
+#, gcc-internal-format
+msgid "malformed #pragma ghs section"
+msgstr ""
+
+#: config/v850/v850-c.c:204
+#, gcc-internal-format
+msgid "junk at end of #pragma ghs interrupt"
+msgstr ""
+
+#: config/v850/v850-c.c:215
+#, gcc-internal-format
+msgid "junk at end of #pragma ghs starttda"
+msgstr ""
+
+#: config/v850/v850-c.c:226
+#, gcc-internal-format
+msgid "junk at end of #pragma ghs startsda"
+msgstr ""
+
+#: config/v850/v850-c.c:237
+#, gcc-internal-format
+msgid "junk at end of #pragma ghs startzda"
+msgstr ""
+
+#: config/v850/v850-c.c:248
+#, gcc-internal-format
+msgid "junk at end of #pragma ghs endtda"
+msgstr ""
+
+#: config/v850/v850-c.c:259
+#, gcc-internal-format
+msgid "junk at end of #pragma ghs endsda"
+msgstr ""
+
+#: config/v850/v850-c.c:270
+#, gcc-internal-format
+msgid "junk at end of #pragma ghs endzda"
+msgstr ""
+
+#: config/v850/v850.c:212
+#, gcc-internal-format
+msgid "value passed to %<-m%s%> is too large"
+msgstr ""
+
+#: config/v850/v850.c:2117
+#, gcc-internal-format
+msgid "data area attributes cannot be specified for local variables"
+msgstr ""
+
+#: config/v850/v850.c:2128
+#, gcc-internal-format
+msgid "data area of %q+D conflicts with previous declaration"
+msgstr ""
+
+#: config/v850/v850.c:2258
+#, gcc-internal-format
+msgid "bogus JR construction: %d"
+msgstr ""
+
+#: config/v850/v850.c:2276 config/v850/v850.c:2385
+#, gcc-internal-format
+msgid "bad amount of stack space removal: %d"
+msgstr ""
+
+#: config/v850/v850.c:2365
+#, gcc-internal-format
+msgid "bogus JARL construction: %d\n"
+msgstr ""
+
+#: config/v850/v850.c:2664
+#, gcc-internal-format
+msgid "bogus DISPOSE construction: %d"
+msgstr ""
+
+#: config/v850/v850.c:2683
+#, gcc-internal-format
+msgid "too much stack space to dispose of: %d"
+msgstr ""
+
+#: config/v850/v850.c:2785
+#, gcc-internal-format
+msgid "bogus PREPEARE construction: %d"
+msgstr ""
+
+#: config/v850/v850.c:2804
+#, gcc-internal-format
+msgid "too much stack space to prepare: %d"
+msgstr ""
+
+#: config/xtensa/xtensa.c:2076
+#, gcc-internal-format
+msgid "boolean registers required for the floating-point option"
+msgstr ""
+
+#: config/xtensa/xtensa.c:2111
+#, gcc-internal-format
+msgid "-f%s is not supported with CONST16 instructions"
+msgstr ""
+
+#: config/xtensa/xtensa.c:2116
+#, gcc-internal-format
+msgid "PIC is required but not supported with CONST16 instructions"
+msgstr ""
+
+#: config/xtensa/xtensa.c:3175
+#, gcc-internal-format
+msgid "only uninitialized variables can be placed in a .bss section"
+msgstr ""
+
+#: cp/call.c:2710
+#, gcc-internal-format
+msgid "%s %D(%T, %T, %T) <built-in>"
+msgstr ""
+
+#: cp/call.c:2715
+#, gcc-internal-format
+msgid "%s %D(%T, %T) <built-in>"
+msgstr ""
+
+#: cp/call.c:2719
+#, gcc-internal-format
+msgid "%s %D(%T) <built-in>"
+msgstr ""
+
+#: cp/call.c:2723
+#, gcc-internal-format
+msgid "%s %T <conversion>"
+msgstr ""
+
+#: cp/call.c:2725
+#, gcc-internal-format
+msgid "%s %+#D <near match>"
+msgstr ""
+
+#: cp/call.c:2727
+#, gcc-internal-format
+msgid "%s %+#D <deleted>"
+msgstr ""
+
+#: cp/call.c:2729 cp/pt.c:1704
+#, gcc-internal-format
+msgid "%s %+#D"
+msgstr ""
+
+#: cp/call.c:3019
+#, gcc-internal-format
+msgid "conversion from %qT to %qT is ambiguous"
+msgstr ""
+
+#: cp/call.c:3181 cp/call.c:3202 cp/call.c:3267
+#, gcc-internal-format
+msgid "no matching function for call to %<%D(%A)%>"
+msgstr ""
+
+#: cp/call.c:3205 cp/call.c:3270
+#, gcc-internal-format
+msgid "call of overloaded %<%D(%A)%> is ambiguous"
+msgstr ""
+
+#. It's no good looking for an overloaded operator() on a
+#. pointer-to-member-function.
+#: cp/call.c:3349
+#, gcc-internal-format
+msgid "pointer-to-member function %E cannot be called without an object; consider using .* or ->*"
+msgstr ""
+
+#: cp/call.c:3432
+#, gcc-internal-format
+msgid "no match for call to %<(%T) (%A)%>"
+msgstr ""
+
+#: cp/call.c:3445
+#, gcc-internal-format
+msgid "call of %<(%T) (%A)%> is ambiguous"
+msgstr ""
+
+#: cp/call.c:3487
+#, gcc-internal-format
+msgid "ambiguous overload for ternary %<operator?:%> in %<%E ? %E : %E%>"
+msgstr ""
+
+#: cp/call.c:3490
+#, gcc-internal-format
+msgid "no match for ternary %<operator?:%> in %<%E ? %E : %E%>"
+msgstr ""
+
+#: cp/call.c:3497
+#, gcc-internal-format
+msgid "ambiguous overload for %<operator%s%> in %<%E%s%>"
+msgstr ""
+
+#: cp/call.c:3500
+#, gcc-internal-format
+msgid "no match for %<operator%s%> in %<%E%s%>"
+msgstr ""
+
+#: cp/call.c:3506
+#, gcc-internal-format
+msgid "ambiguous overload for %<operator[]%> in %<%E[%E]%>"
+msgstr ""
+
+#: cp/call.c:3509
+#, gcc-internal-format
+msgid "no match for %<operator[]%> in %<%E[%E]%>"
+msgstr ""
+
+#: cp/call.c:3516
+#, gcc-internal-format
+msgid "ambiguous overload for %qs in %<%s %E%>"
+msgstr ""
+
+#: cp/call.c:3519
+#, gcc-internal-format
+msgid "no match for %qs in %<%s %E%>"
+msgstr ""
+
+#: cp/call.c:3526
+#, gcc-internal-format
+msgid "ambiguous overload for %<operator%s%> in %<%E %s %E%>"
+msgstr ""
+
+#: cp/call.c:3529
+#, gcc-internal-format
+msgid "no match for %<operator%s%> in %<%E %s %E%>"
+msgstr ""
+
+#: cp/call.c:3533
+#, gcc-internal-format
+msgid "ambiguous overload for %<operator%s%> in %<%s%E%>"
+msgstr ""
+
+#: cp/call.c:3536
+#, gcc-internal-format
+msgid "no match for %<operator%s%> in %<%s%E%>"
+msgstr ""
+
+#: cp/call.c:3631
+#, gcc-internal-format
+msgid "ISO C++ forbids omitting the middle term of a ?: expression"
+msgstr ""
+
+#: cp/call.c:3712
+#, gcc-internal-format
+msgid "second operand to the conditional operator is of type %<void%>, but the third operand is neither a throw-expression nor of type %<void%>"
+msgstr ""
+
+#: cp/call.c:3717
+#, gcc-internal-format
+msgid "third operand to the conditional operator is of type %<void%>, but the second operand is neither a throw-expression nor of type %<void%>"
+msgstr ""
+
+#: cp/call.c:3759 cp/call.c:3997
+#, gcc-internal-format
+msgid "operands to ?: have different types %qT and %qT"
+msgstr ""
+
+#: cp/call.c:3944
+#, gcc-internal-format
+msgid "enumeral mismatch in conditional expression: %qT vs %qT"
+msgstr ""
+
+#: cp/call.c:3955
+#, gcc-internal-format
+msgid "enumeral and non-enumeral type in conditional expression"
+msgstr ""
+
+#: cp/call.c:4302
+#, gcc-internal-format
+msgid "no %<%D(int)%> declared for postfix %qs, trying prefix operator instead"
+msgstr ""
+
+#: cp/call.c:4304
+#, gcc-internal-format
+msgid "no %<%D(int)%> declared for postfix %qs"
+msgstr ""
+
+#: cp/call.c:4398
+#, gcc-internal-format
+msgid "comparison between %q#T and %q#T"
+msgstr ""
+
+#: cp/call.c:4642
+#, gcc-internal-format
+msgid "non-placement deallocation function %q+D"
+msgstr ""
+
+#: cp/call.c:4643
+#, gcc-internal-format
+msgid "selected for placement delete"
+msgstr ""
+
+#: cp/call.c:4722
+#, gcc-internal-format
+msgid "no corresponding deallocation function for %qD"
+msgstr ""
+
+#: cp/call.c:4727
+#, gcc-internal-format
+msgid "no suitable %<operator %s%> for %qT"
+msgstr ""
+
+#: cp/call.c:4745
+#, gcc-internal-format
+msgid "%q+#D is private"
+msgstr ""
+
+#: cp/call.c:4747
+#, gcc-internal-format
+msgid "%q+#D is protected"
+msgstr ""
+
+#: cp/call.c:4749
+#, gcc-internal-format
+msgid "%q+#D is inaccessible"
+msgstr ""
+
+#: cp/call.c:4750
+#, gcc-internal-format
+msgid "within this context"
+msgstr ""
+
+#: cp/call.c:4798
+#, gcc-internal-format
+msgid "passing NULL to non-pointer argument %P of %qD"
+msgstr ""
+
+#: cp/call.c:4802
+#, gcc-internal-format
+msgid "converting to non-pointer type %qT from NULL"
+msgstr ""
+
+#: cp/call.c:4808
+#, gcc-internal-format
+msgid "converting %<false%> to pointer type for argument %P of %qD"
+msgstr ""
+
+#: cp/call.c:4846
+#, gcc-internal-format
+msgid "too many braces around initializer for %qT"
+msgstr ""
+
+#: cp/call.c:4868 cp/cvt.c:218
+#, gcc-internal-format
+msgid "invalid conversion from %qT to %qT"
+msgstr ""
+
+#: cp/call.c:4870 cp/call.c:5039
+#, gcc-internal-format
+msgid "  initializing argument %P of %qD"
+msgstr ""
+
+#: cp/call.c:4894
+#, gcc-internal-format
+msgid "converting to %qT from initializer list would use explicit constructor %qD"
+msgstr ""
+
+#: cp/call.c:5054
+#, gcc-internal-format
+msgid "cannot bind %qT lvalue to %qT"
+msgstr ""
+
+#: cp/call.c:5057
+#, gcc-internal-format
+msgid "  initializing argument %P of %q+D"
+msgstr ""
+
+#: cp/call.c:5084
+#, gcc-internal-format
+msgid "cannot bind bitfield %qE to %qT"
+msgstr ""
+
+#: cp/call.c:5087 cp/call.c:5105
+#, gcc-internal-format
+msgid "cannot bind packed field %qE to %qT"
+msgstr ""
+
+#: cp/call.c:5090
+#, gcc-internal-format
+msgid "cannot bind rvalue %qE to %qT"
+msgstr ""
+
+#: cp/call.c:5209
+#, gcc-internal-format
+msgid "cannot pass objects of non-trivially-copyable type %q#T through %<...%>"
+msgstr ""
+
+#. conditionally-supported behavior [expr.call] 5.2.2/7.
+#: cp/call.c:5236
+#, gcc-internal-format
+msgid "cannot receive objects of non-trivially-copyable type %q#T through %<...%>; "
+msgstr ""
+
+#: cp/call.c:5282
+#, gcc-internal-format
+msgid "the default argument for parameter %d of %qD has not yet been parsed"
+msgstr ""
+
+#: cp/call.c:5292
+#, gcc-internal-format
+msgid "recursive evaluation of default argument for %q#D"
+msgstr ""
+
+#: cp/call.c:5409
+#, gcc-internal-format
+msgid "argument of function call might be a candidate for a format attribute"
+msgstr ""
+
+#: cp/call.c:5593
+#, gcc-internal-format
+msgid "passing %qT as %<this%> argument of %q#D discards qualifiers"
+msgstr ""
+
+#: cp/call.c:5615
+#, gcc-internal-format
+msgid "%qT is not an accessible base of %qT"
+msgstr ""
+
+#: cp/call.c:5667
+#, gcc-internal-format
+msgid "deducing %qT as %qT"
+msgstr ""
+
+#: cp/call.c:5670
+#, gcc-internal-format
+msgid "  in call to %q+D"
+msgstr ""
+
+#: cp/call.c:5672
+#, gcc-internal-format
+msgid "  (you can disable this with -fno-deduce-init-list)"
+msgstr ""
+
+#: cp/call.c:5965
+#, gcc-internal-format
+msgid "could not find class$ field in java interface type %qT"
+msgstr ""
+
+#: cp/call.c:6224
+#, gcc-internal-format
+msgid "call to non-function %qD"
+msgstr ""
+
+#: cp/call.c:6269 cp/typeck.c:2546
+#, gcc-internal-format
+msgid "cannot call constructor %<%T::%D%> directly"
+msgstr ""
+
+#: cp/call.c:6271
+#, gcc-internal-format
+msgid "  for a function-style cast, remove the redundant %<::%D%>"
+msgstr ""
+
+#: cp/call.c:6393
+#, gcc-internal-format
+msgid "no matching function for call to %<%T::%s(%A)%#V%>"
+msgstr ""
+
+#: cp/call.c:6418
+#, gcc-internal-format
+msgid "call of overloaded %<%s(%A)%> is ambiguous"
+msgstr ""
+
+#: cp/call.c:6447
+#, gcc-internal-format
+msgid "cannot call member function %qD without object"
+msgstr ""
+
+#: cp/call.c:7133
+#, gcc-internal-format
+msgid "passing %qT chooses %qT over %qT"
+msgstr ""
+
+#: cp/call.c:7135 cp/name-lookup.c:5019
+#, gcc-internal-format
+msgid "  in call to %qD"
+msgstr ""
+
+#: cp/call.c:7192
+#, gcc-internal-format
+msgid "choosing %qD over %qD"
+msgstr ""
+
+#: cp/call.c:7193
+#, gcc-internal-format
+msgid "  for conversion from %qT to %qT"
+msgstr ""
+
+#: cp/call.c:7196
+#, gcc-internal-format
+msgid "  because conversion sequence for the argument is better"
+msgstr ""
+
+#: cp/call.c:7314
+#, gcc-internal-format
+msgid "default argument mismatch in overload resolution"
+msgstr ""
+
+#: cp/call.c:7317
+#, gcc-internal-format
+msgid " candidate 1: %q+#F"
+msgstr ""
+
+#: cp/call.c:7319
+#, gcc-internal-format
+msgid " candidate 2: %q+#F"
+msgstr ""
+
+#: cp/call.c:7357
+#, gcc-internal-format
+msgid "ISO C++ says that these are ambiguous, even though the worst conversion for the first is better than the worst conversion for the second:"
+msgstr ""
+
+#: cp/call.c:7510
+#, gcc-internal-format
+msgid "could not convert %qE to %qT"
+msgstr ""
+
+#: cp/call.c:7728
+#, gcc-internal-format
+msgid "invalid initialization of non-const reference of type %qT from an rvalue of type %qT"
+msgstr ""
+
+#: cp/call.c:7732
+#, gcc-internal-format
+msgid "invalid initialization of reference of type %qT from expression of type %qT"
+msgstr ""
+
+#: cp/class.c:278
+#, gcc-internal-format
+msgid "cannot convert from base %qT to derived type %qT via virtual base %qT"
+msgstr ""
+
+#: cp/class.c:972
+#, gcc-internal-format
+msgid "Java class %qT cannot have a destructor"
+msgstr ""
+
+#: cp/class.c:974
+#, gcc-internal-format
+msgid "Java class %qT cannot have an implicit non-trivial destructor"
+msgstr ""
+
+#: cp/class.c:1075
+#, gcc-internal-format
+msgid "repeated using declaration %q+D"
+msgstr ""
+
+#: cp/class.c:1077
+#, gcc-internal-format
+msgid "using declaration %q+D conflicts with a previous using declaration"
+msgstr ""
+
+#: cp/class.c:1082
+#, gcc-internal-format
+msgid "%q+#D cannot be overloaded"
+msgstr ""
+
+#: cp/class.c:1083
+#, gcc-internal-format
+msgid "with %q+#D"
+msgstr ""
+
+#: cp/class.c:1150
+#, gcc-internal-format
+msgid "conflicting access specifications for method %q+D, ignored"
+msgstr ""
+
+#: cp/class.c:1153
+#, gcc-internal-format
+msgid "conflicting access specifications for field %qE, ignored"
+msgstr ""
+
+#: cp/class.c:1214 cp/class.c:1222
+#, gcc-internal-format
+msgid "%q+D invalid in %q#T"
+msgstr ""
+
+#: cp/class.c:1215
+#, gcc-internal-format
+msgid "  because of local method %q+#D with same name"
+msgstr ""
+
+#: cp/class.c:1223
+#, gcc-internal-format
+msgid "  because of local member %q+#D with same name"
+msgstr ""
+
+#: cp/class.c:1272
+#, gcc-internal-format
+msgid "base class %q#T has a non-virtual destructor"
+msgstr ""
+
+#: cp/class.c:1632
+#, gcc-internal-format
+msgid "all member functions in class %qT are private"
+msgstr ""
+
+#: cp/class.c:1644
+#, gcc-internal-format
+msgid "%q#T only defines a private destructor and has no friends"
+msgstr ""
+
+#: cp/class.c:1689
+#, gcc-internal-format
+msgid "%q#T only defines private constructors and has no friends"
+msgstr ""
+
+#: cp/class.c:2082
+#, gcc-internal-format
+msgid "no unique final overrider for %qD in %qT"
+msgstr ""
+
+#. Here we know it is a hider, and no overrider exists.
+#: cp/class.c:2505
+#, gcc-internal-format
+msgid "%q+D was hidden"
+msgstr ""
+
+#: cp/class.c:2506
+#, gcc-internal-format
+msgid "  by %q+D"
+msgstr ""
+
+#: cp/class.c:2549 cp/decl2.c:1325
+#, gcc-internal-format
+msgid "%q+#D invalid; an anonymous union can only have non-static data members"
+msgstr ""
+
+#: cp/class.c:2552
+#, gcc-internal-format
+msgid "%q+#D invalid; an anonymous struct can only have non-static data members"
+msgstr ""
+
+#: cp/class.c:2560 cp/decl2.c:1331
+#, gcc-internal-format
+msgid "private member %q+#D in anonymous union"
+msgstr ""
+
+#: cp/class.c:2562
+#, gcc-internal-format
+msgid "private member %q+#D in anonymous struct"
+msgstr ""
+
+#: cp/class.c:2567 cp/decl2.c:1333
+#, gcc-internal-format
+msgid "protected member %q+#D in anonymous union"
+msgstr ""
+
+#: cp/class.c:2569
+#, gcc-internal-format
+msgid "protected member %q+#D in anonymous struct"
+msgstr ""
+
+#: cp/class.c:2753
+#, gcc-internal-format
+msgid "bit-field %q+#D with non-integral type"
+msgstr ""
+
+#: cp/class.c:2766
+#, gcc-internal-format
+msgid "bit-field %q+D width not an integer constant"
+msgstr ""
+
+#: cp/class.c:2771
+#, gcc-internal-format
+msgid "negative width in bit-field %q+D"
+msgstr ""
+
+#: cp/class.c:2776
+#, gcc-internal-format
+msgid "zero width for bit-field %q+D"
+msgstr ""
+
+#: cp/class.c:2782
+#, gcc-internal-format
+msgid "width of %q+D exceeds its type"
+msgstr ""
+
+#: cp/class.c:2792
+#, gcc-internal-format
+msgid "%q+D is too small to hold all values of %q#T"
+msgstr ""
+
+#: cp/class.c:2849
+#, gcc-internal-format
+msgid "member %q+#D with constructor not allowed in union"
+msgstr ""
+
+#: cp/class.c:2852
+#, gcc-internal-format
+msgid "member %q+#D with destructor not allowed in union"
+msgstr ""
+
+#: cp/class.c:2854
+#, gcc-internal-format
+msgid "member %q+#D with copy assignment operator not allowed in union"
+msgstr ""
+
+#: cp/class.c:2878
+#, gcc-internal-format
+msgid "multiple fields in union %qT initialized"
+msgstr ""
+
+#: cp/class.c:2969
+#, gcc-internal-format
+msgid "%q+D may not be static because it is a member of a union"
+msgstr ""
+
+#: cp/class.c:2974
+#, gcc-internal-format
+msgid "%q+D may not have reference type %qT because it is a member of a union"
+msgstr ""
+
+#: cp/class.c:2985
+#, gcc-internal-format
+msgid "field %q+D invalidly declared function type"
+msgstr ""
+
+#: cp/class.c:2991
+#, gcc-internal-format
+msgid "field %q+D invalidly declared method type"
+msgstr ""
+
+#: cp/class.c:3040
+#, gcc-internal-format
+msgid "ignoring packed attribute because of unpacked non-POD field %q+#D"
+msgstr ""
+
+#: cp/class.c:3123
+#, gcc-internal-format
+msgid "field %q+#D with same name as class"
+msgstr ""
+
+#: cp/class.c:3154
+#, gcc-internal-format
+msgid "%q#T has pointer data members"
+msgstr ""
+
+#: cp/class.c:3159
+#, gcc-internal-format
+msgid "  but does not override %<%T(const %T&)%>"
+msgstr ""
+
+#: cp/class.c:3161
+#, gcc-internal-format
+msgid "  or %<operator=(const %T&)%>"
+msgstr ""
+
+#: cp/class.c:3165
+#, gcc-internal-format
+msgid "  but does not override %<operator=(const %T&)%>"
+msgstr ""
+
+#: cp/class.c:3628
+#, gcc-internal-format
+msgid "offset of empty base %qT may not be ABI-compliant and maychange in a future version of GCC"
+msgstr ""
+
+#: cp/class.c:3755
+#, gcc-internal-format
+msgid "class %qT will be considered nearly empty in a future version of GCC"
+msgstr ""
+
+#: cp/class.c:3837
+#, gcc-internal-format
+msgid "initializer specified for non-virtual method %q+D"
+msgstr ""
+
+#: cp/class.c:4426
+#, gcc-internal-format
+msgid "non-static reference %q+#D in class without a constructor"
+msgstr ""
+
+#: cp/class.c:4431
+#, gcc-internal-format
+msgid "non-static const member %q+#D in class without a constructor"
+msgstr ""
+
+#. If the function is defaulted outside the class, we just
+#. give the synthesis error.
+#: cp/class.c:4457
+#, gcc-internal-format
+msgid "%q+D declared to take const reference, but implicit declaration would take non-const"
+msgstr ""
+
+#: cp/class.c:4460
+#, gcc-internal-format
+msgid "%q+D declared to take non-const reference cannot be defaulted in the class body"
+msgstr ""
+
+#: cp/class.c:4681
+#, gcc-internal-format
+msgid "offset of virtual base %qT is not ABI-compliant and may change in a future version of GCC"
+msgstr ""
+
+#: cp/class.c:4782
+#, gcc-internal-format
+msgid "direct base %qT inaccessible in %qT due to ambiguity"
+msgstr ""
+
+#: cp/class.c:4794
+#, gcc-internal-format
+msgid "virtual base %qT inaccessible in %qT due to ambiguity"
+msgstr ""
+
+#: cp/class.c:4973
+#, gcc-internal-format
+msgid "size assigned to %qT may not be ABI-compliant and may change in a future version of GCC"
+msgstr ""
+
+#: cp/class.c:5013
+#, gcc-internal-format
+msgid "the offset of %qD may not be ABI-compliant and may change in a future version of GCC"
+msgstr ""
+
+#: cp/class.c:5041
+#, gcc-internal-format
+msgid "offset of %q+D is not ABI-compliant and may change in a future version of GCC"
+msgstr ""
+
+#: cp/class.c:5051
+#, gcc-internal-format
+msgid "%q+D contains empty classes which may cause base classes to be placed at different locations in a future version of GCC"
+msgstr ""
+
+#: cp/class.c:5139
+#, gcc-internal-format
+msgid "layout of classes derived from empty class %qT may change in a future version of GCC"
+msgstr ""
+
+#: cp/class.c:5292 cp/parser.c:16363
+#, gcc-internal-format
+msgid "redefinition of %q#T"
+msgstr ""
+
+#: cp/class.c:5444
+#, gcc-internal-format
+msgid "%q#T has virtual functions and accessible non-virtual destructor"
+msgstr ""
+
+#: cp/class.c:5549
+#, gcc-internal-format
+msgid "trying to finish struct, but kicked out due to previous parse errors"
+msgstr ""
+
+#: cp/class.c:6013
+#, gcc-internal-format
+msgid "language string %<\"%E\"%> not recognized"
+msgstr ""
+
+#: cp/class.c:6103
+#, gcc-internal-format
+msgid "cannot resolve overloaded function %qD based on conversion to type %qT"
+msgstr ""
+
+#: cp/class.c:6227
+#, gcc-internal-format
+msgid "no matches converting function %qD to type %q#T"
+msgstr ""
+
+#: cp/class.c:6257
+#, gcc-internal-format
+msgid "converting overloaded function %qD to type %q#T is ambiguous"
+msgstr ""
+
+#: cp/class.c:6284
+#, gcc-internal-format
+msgid "assuming pointer to member %qD"
+msgstr ""
+
+#: cp/class.c:6287
+#, gcc-internal-format
+msgid "(a pointer to member can only be formed with %<&%E%>)"
+msgstr ""
+
+#: cp/class.c:6349 cp/class.c:6383
+#, gcc-internal-format
+msgid "not enough type information"
+msgstr ""
+
+#: cp/class.c:6366
+#, gcc-internal-format
+msgid "argument of type %qT does not match %qT"
+msgstr ""
+
+#. [basic.scope.class]
+#.
+#. A name N used in a class S shall refer to the same declaration
+#. in its context and when re-evaluated in the completed scope of
+#. S.
+#: cp/class.c:6668 cp/decl.c:1196 cp/name-lookup.c:525
+#, gcc-internal-format
+msgid "declaration of %q#D"
+msgstr ""
+
+#: cp/class.c:6669
+#, gcc-internal-format
+msgid "changes meaning of %qD from %q+#D"
+msgstr ""
+
+#: cp/cp-gimplify.c:94
+#, gcc-internal-format
+msgid "continue statement not within loop or switch"
+msgstr ""
+
+#: cp/cp-gimplify.c:1201
+#, gcc-internal-format
+msgid "%qE implicitly determined as %<firstprivate%> has reference type"
+msgstr ""
+
+#: cp/cvt.c:91
+#, gcc-internal-format
+msgid "can't convert from incomplete type %qT to %qT"
+msgstr ""
+
+#: cp/cvt.c:100
+#, gcc-internal-format
+msgid "conversion of %qE from %qT to %qT is ambiguous"
+msgstr ""
+
+#: cp/cvt.c:169 cp/cvt.c:194 cp/cvt.c:239
+#, gcc-internal-format
+msgid "cannot convert %qE from type %qT to type %qT"
+msgstr ""
+
+#: cp/cvt.c:371
+#, gcc-internal-format
+msgid "initialization of volatile reference type %q#T from rvalue of type %qT"
+msgstr ""
+
+#: cp/cvt.c:374
+#, gcc-internal-format
+msgid "conversion to volatile reference type %q#T from rvalue of type %qT"
+msgstr ""
+
+#: cp/cvt.c:377
+#, gcc-internal-format
+msgid "initialization of non-const reference type %q#T from rvalue of type %qT"
+msgstr ""
+
+#: cp/cvt.c:380
+#, gcc-internal-format
+msgid "conversion to non-const reference type %q#T from rvalue of type %qT"
+msgstr ""
+
+#: cp/cvt.c:453
+#, gcc-internal-format
+msgid "conversion from %qT to %qT discards qualifiers"
+msgstr ""
+
+#: cp/cvt.c:471 cp/typeck.c:5919
+#, gcc-internal-format
+msgid "casting %qT to %qT does not dereference pointer"
+msgstr ""
+
+#: cp/cvt.c:499
+#, gcc-internal-format
+msgid "cannot convert type %qT to type %qT"
+msgstr ""
+
+#: cp/cvt.c:670
+#, gcc-internal-format
+msgid "conversion from %q#T to %q#T"
+msgstr ""
+
+#: cp/cvt.c:685
+#, gcc-internal-format
+msgid "the result of the conversion is unspecified because %qE is outside the range of type %qT"
+msgstr ""
+
+#: cp/cvt.c:696 cp/cvt.c:716
+#, gcc-internal-format
+msgid "%q#T used where a %qT was expected"
+msgstr ""
+
+#: cp/cvt.c:731
+#, gcc-internal-format
+msgid "%q#T used where a floating point value was expected"
+msgstr ""
+
+#: cp/cvt.c:791
+#, gcc-internal-format
+msgid "conversion from %qT to non-scalar type %qT requested"
+msgstr ""
+
+#: cp/cvt.c:830
+#, gcc-internal-format
+msgid "pseudo-destructor is not called"
+msgstr ""
+
+#: cp/cvt.c:893
+#, gcc-internal-format
+msgid "object of incomplete type %qT will not be accessed in %s"
+msgstr ""
+
+#: cp/cvt.c:901
+#, gcc-internal-format
+msgid "object of type %qT will not be accessed in %s"
+msgstr ""
+
+#: cp/cvt.c:932
+#, gcc-internal-format
+msgid "object %qE of incomplete type %qT will not be accessed in %s"
+msgstr ""
+
+#: cp/cvt.c:972
+#, gcc-internal-format
+msgid "%s cannot resolve address of overloaded function"
+msgstr ""
+
+#: cp/cvt.c:982
+#, gcc-internal-format
+msgid "%s is a reference, not call, to function %qE"
+msgstr ""
+
+#: cp/cvt.c:1000
+#, gcc-internal-format
+msgid "%s has no effect"
+msgstr ""
+
+#: cp/cvt.c:1145
+#, gcc-internal-format
+msgid "converting NULL to non-pointer type"
+msgstr ""
+
+#: cp/cvt.c:1259
+#, gcc-internal-format
+msgid "ambiguous default type conversion from %qT"
+msgstr ""
+
+#: cp/cvt.c:1261
+#, gcc-internal-format
+msgid "  candidate conversions include %qD and %qD"
+msgstr ""
+
+#: cp/decl.c:1058
+#, gcc-internal-format
+msgid "%qD was declared %<extern%> and later %<static%>"
+msgstr ""
+
+#: cp/decl.c:1059 cp/decl.c:1609 objc/objc-act.c:2986 objc/objc-act.c:7602
+#, gcc-internal-format
+msgid "previous declaration of %q+D"
+msgstr ""
+
+#: cp/decl.c:1092
+#, gcc-internal-format
+msgid "declaration of %qF throws different exceptions"
+msgstr ""
+
+#: cp/decl.c:1093
+#, gcc-internal-format
+msgid "from previous declaration %q+F"
+msgstr ""
+
+#: cp/decl.c:1149
+#, gcc-internal-format
+msgid "function %q+D redeclared as inline"
+msgstr ""
+
+#: cp/decl.c:1151
+#, gcc-internal-format
+msgid "previous declaration of %q+D with attribute noinline"
+msgstr ""
+
+#: cp/decl.c:1158
+#, gcc-internal-format
+msgid "function %q+D redeclared with attribute noinline"
+msgstr ""
+
+#: cp/decl.c:1160
+#, gcc-internal-format
+msgid "previous declaration of %q+D was inline"
+msgstr ""
+
+#: cp/decl.c:1184 cp/decl.c:1258
+#, gcc-internal-format
+msgid "shadowing built-in function %q#D"
+msgstr ""
+
+#: cp/decl.c:1185 cp/decl.c:1259
+#, gcc-internal-format
+msgid "shadowing library function %q#D"
+msgstr ""
+
+#: cp/decl.c:1192
+#, gcc-internal-format
+msgid "library function %q#D redeclared as non-function %q#D"
+msgstr ""
+
+#: cp/decl.c:1197
+#, gcc-internal-format
+msgid "conflicts with built-in declaration %q#D"
+msgstr ""
+
+#: cp/decl.c:1251 cp/decl.c:1378 cp/decl.c:1394
+#, gcc-internal-format
+msgid "new declaration %q#D"
+msgstr ""
+
+#: cp/decl.c:1252
+#, gcc-internal-format
+msgid "ambiguates built-in declaration %q#D"
+msgstr ""
+
+#: cp/decl.c:1342
+#, gcc-internal-format
+msgid "%q#D redeclared as different kind of symbol"
+msgstr ""
+
+#: cp/decl.c:1345
+#, gcc-internal-format
+msgid "previous declaration of %q+#D"
+msgstr ""
+
+#: cp/decl.c:1364
+#, gcc-internal-format
+msgid "declaration of template %q#D"
+msgstr ""
+
+#: cp/decl.c:1365 cp/name-lookup.c:526 cp/name-lookup.c:812
+#: cp/name-lookup.c:823
+#, gcc-internal-format
+msgid "conflicts with previous declaration %q+#D"
+msgstr ""
+
+#: cp/decl.c:1379 cp/decl.c:1395
+#, gcc-internal-format
+msgid "ambiguates old declaration %q+#D"
+msgstr ""
+
+#: cp/decl.c:1387
+#, gcc-internal-format
+msgid "declaration of C function %q#D conflicts with"
+msgstr ""
+
+#: cp/decl.c:1389
+#, gcc-internal-format
+msgid "previous declaration %q+#D here"
+msgstr ""
+
+#: cp/decl.c:1403
+#, gcc-internal-format
+msgid "conflicting declaration %q#D"
+msgstr ""
+
+#: cp/decl.c:1404
+#, gcc-internal-format
+msgid "%q+D has a previous declaration as %q#D"
+msgstr ""
+
+#. [namespace.alias]
+#.
+#. A namespace-name or namespace-alias shall not be declared as
+#. the name of any other entity in the same declarative region.
+#. A namespace-name defined at global scope shall not be
+#. declared as the name of any other entity in any global scope
+#. of the program.
+#: cp/decl.c:1456
+#, gcc-internal-format
+msgid "declaration of namespace %qD conflicts with"
+msgstr ""
+
+#: cp/decl.c:1457
+#, gcc-internal-format
+msgid "previous declaration of namespace %q+D here"
+msgstr ""
+
+#: cp/decl.c:1468
+#, gcc-internal-format
+msgid "%q+#D previously defined here"
+msgstr ""
+
+#. Prototype decl follows defn w/o prototype.
+#: cp/decl.c:1478
+#, gcc-internal-format
+msgid "prototype for %q+#D"
+msgstr ""
+
+#: cp/decl.c:1480
+#, gcc-internal-format
+msgid "follows non-prototype definition here"
+msgstr ""
+
+#: cp/decl.c:1520
+#, gcc-internal-format
+msgid "previous declaration of %q+#D with %qL linkage"
+msgstr ""
+
+#: cp/decl.c:1522
+#, gcc-internal-format
+msgid "conflicts with new declaration with %qL linkage"
+msgstr ""
+
+#: cp/decl.c:1545 cp/decl.c:1551
+#, gcc-internal-format
+msgid "default argument given for parameter %d of %q#D"
+msgstr ""
+
+#: cp/decl.c:1547 cp/decl.c:1553
+#, gcc-internal-format
+msgid "after previous specification in %q+#D"
+msgstr ""
+
+#: cp/decl.c:1608
+#, gcc-internal-format
+msgid "redundant redeclaration of %qD in same scope"
+msgstr ""
+
+#: cp/decl.c:1614
+#, gcc-internal-format
+msgid "deleted definition of %qD"
+msgstr ""
+
+#: cp/decl.c:1615
+#, gcc-internal-format
+msgid "after previous declaration %q+D"
+msgstr ""
+
+#. From [temp.expl.spec]:
+#.
+#. If a template, a member template or the member of a class
+#. template is explicitly specialized then that
+#. specialization shall be declared before the first use of
+#. that specialization that would cause an implicit
+#. instantiation to take place, in every translation unit in
+#. which such a use occurs.
+#: cp/decl.c:1966
+#, gcc-internal-format
+msgid "explicit specialization of %qD after first use"
+msgstr ""
+
+#: cp/decl.c:2063
+#, gcc-internal-format
+msgid "%q+D: visibility attribute ignored because it"
+msgstr ""
+
+#: cp/decl.c:2065
+#, gcc-internal-format
+msgid "conflicts with previous declaration here"
+msgstr ""
+
+#. Reject two definitions.
+#: cp/decl.c:2216 cp/decl.c:2245 cp/decl.c:2274 cp/decl.c:2291 cp/decl.c:2363
+#, gcc-internal-format
+msgid "redefinition of %q#D"
+msgstr ""
+
+#: cp/decl.c:2232
+#, gcc-internal-format
+msgid "%qD conflicts with used function"
+msgstr ""
+
+#: cp/decl.c:2242
+#, gcc-internal-format
+msgid "%q#D not declared in class"
+msgstr ""
+
+#: cp/decl.c:2256 cp/decl.c:2301
+#, gcc-internal-format
+msgid "%q+D redeclared inline with %<gnu_inline%> attribute"
+msgstr ""
+
+#: cp/decl.c:2259 cp/decl.c:2304
+#, gcc-internal-format
+msgid "%q+D redeclared inline without %<gnu_inline%> attribute"
+msgstr ""
+
+#. is_primary=
+#. is_partial=
+#. is_friend_decl=
+#: cp/decl.c:2320
+#, gcc-internal-format
+msgid "redeclaration of friend %q#D may not have default template arguments"
+msgstr ""
+
+#: cp/decl.c:2334
+#, gcc-internal-format
+msgid "thread-local declaration of %q#D follows non-thread-local declaration"
+msgstr ""
+
+#: cp/decl.c:2337
+#, gcc-internal-format
+msgid "non-thread-local declaration of %q#D follows thread-local declaration"
+msgstr ""
+
+#: cp/decl.c:2352 cp/decl.c:2371
+#, gcc-internal-format
+msgid "redeclaration of %q#D"
+msgstr ""
+
+#: cp/decl.c:2514
+#, gcc-internal-format
+msgid "jump to label %qD"
+msgstr ""
+
+#: cp/decl.c:2516
+#, gcc-internal-format
+msgid "jump to case label"
+msgstr ""
+
+#: cp/decl.c:2518 cp/decl.c:2658 cp/decl.c:2699
+#, gcc-internal-format
+msgid "  from here"
+msgstr ""
+
+#: cp/decl.c:2537 cp/decl.c:2702
+#, gcc-internal-format
+msgid "  exits OpenMP structured block"
+msgstr ""
+
+#: cp/decl.c:2558
+#, gcc-internal-format
+msgid "  crosses initialization of %q+#D"
+msgstr ""
+
+#: cp/decl.c:2560 cp/decl.c:2676
+#, gcc-internal-format
+msgid "  enters scope of %q+#D which has non-trivial destructor"
+msgstr ""
+
+#: cp/decl.c:2574 cp/decl.c:2681
+#, gcc-internal-format
+msgid "  enters try block"
+msgstr ""
+
+#. Can't skip init of __exception_info.
+#: cp/decl.c:2576 cp/decl.c:2670 cp/decl.c:2683
+#, gcc-internal-format
+msgid "  enters catch block"
+msgstr ""
+
+#: cp/decl.c:2586 cp/decl.c:2686
+#, gcc-internal-format
+msgid "  enters OpenMP structured block"
+msgstr ""
+
+#: cp/decl.c:2657 cp/decl.c:2698
+#, gcc-internal-format
+msgid "jump to label %q+D"
+msgstr ""
+
+#: cp/decl.c:2674
+#, gcc-internal-format
+msgid "  skips initialization of %q+#D"
+msgstr ""
+
+#: cp/decl.c:2751
+#, gcc-internal-format
+msgid "label named wchar_t"
+msgstr ""
+
+#: cp/decl.c:3022
+#, gcc-internal-format
+msgid "%qD is not a type"
+msgstr ""
+
+#: cp/decl.c:3028 cp/parser.c:4240
+#, gcc-internal-format
+msgid "%qD used without template parameters"
+msgstr ""
+
+#: cp/decl.c:3037
+#, gcc-internal-format
+msgid "%q#T is not a class"
+msgstr ""
+
+#: cp/decl.c:3061 cp/decl.c:3148
+#, gcc-internal-format
+msgid "no class template named %q#T in %q#T"
+msgstr ""
+
+#: cp/decl.c:3074
+#, gcc-internal-format
+msgid "lookup of %qT in %qT is ambiguous"
+msgstr ""
+
+#: cp/decl.c:3083
+#, gcc-internal-format
+msgid "%<typename %T::%D%> names %q#T, which is not a class template"
+msgstr ""
+
+#: cp/decl.c:3090
+#, gcc-internal-format
+msgid "%<typename %T::%D%> names %q#T, which is not a type"
+msgstr ""
+
+#: cp/decl.c:3157
+#, gcc-internal-format
+msgid "template parameters do not match template"
+msgstr ""
+
+#: cp/decl.c:3158 cp/friend.c:321 cp/friend.c:329
+#, gcc-internal-format
+msgid "%q+D declared here"
+msgstr ""
+
+#: cp/decl.c:3840
+#, gcc-internal-format
+msgid "an anonymous struct cannot have function members"
+msgstr ""
+
+#: cp/decl.c:3843
+#, gcc-internal-format
+msgid "an anonymous union cannot have function members"
+msgstr ""
+
+#: cp/decl.c:3861
+#, gcc-internal-format
+msgid "member %q+#D with constructor not allowed in anonymous aggregate"
+msgstr ""
+
+#: cp/decl.c:3864
+#, gcc-internal-format
+msgid "member %q+#D with destructor not allowed in anonymous aggregate"
+msgstr ""
+
+#: cp/decl.c:3867
+#, gcc-internal-format
+msgid "member %q+#D with copy assignment operator not allowed in anonymous aggregate"
+msgstr ""
+
+#: cp/decl.c:3892
+#, gcc-internal-format
+msgid "multiple types in one declaration"
+msgstr ""
+
+#: cp/decl.c:3896
+#, gcc-internal-format
+msgid "redeclaration of C++ built-in type %qT"
+msgstr ""
+
+#: cp/decl.c:3933
+#, gcc-internal-format
+msgid "missing type-name in typedef-declaration"
+msgstr ""
+
+#: cp/decl.c:3940
+#, gcc-internal-format
+msgid "ISO C++ prohibits anonymous structs"
+msgstr ""
+
+#: cp/decl.c:3947
+#, gcc-internal-format
+msgid "%qs can only be specified for functions"
+msgstr ""
+
+#: cp/decl.c:3953
+#, gcc-internal-format
+msgid "%<friend%> can only be specified inside a class"
+msgstr ""
+
+#: cp/decl.c:3955
+#, gcc-internal-format
+msgid "%<explicit%> can only be specified for constructors"
+msgstr ""
+
+#: cp/decl.c:3957
+#, gcc-internal-format
+msgid "a storage class can only be specified for objects and functions"
+msgstr ""
+
+#: cp/decl.c:3963
+#, gcc-internal-format
+msgid "qualifiers can only be specified for objects and functions"
+msgstr ""
+
+#: cp/decl.c:3966
+#, gcc-internal-format
+msgid "%<typedef%> was ignored in this declaration"
+msgstr ""
+
+#: cp/decl.c:3968
+#, gcc-internal-format
+msgid "%<constexpr> cannot be used for type declarations"
+msgstr ""
+
+#: cp/decl.c:3997
+#, gcc-internal-format
+msgid "attribute ignored in declaration of %q+#T"
+msgstr ""
+
+#: cp/decl.c:3998
+#, gcc-internal-format
+msgid "attribute for %q+#T must follow the %qs keyword"
+msgstr ""
+
+#: cp/decl.c:4043
+#, gcc-internal-format
+msgid "ignoring attributes applied to class type %qT outside of definition"
+msgstr ""
+
+#. A template type parameter or other dependent type.
+#: cp/decl.c:4047
+#, gcc-internal-format
+msgid "ignoring attributes applied to dependent type %qT without an associated declaration"
+msgstr ""
+
+#: cp/decl.c:4120 cp/decl2.c:820
+#, gcc-internal-format
+msgid "typedef %qD is initialized (use decltype instead)"
+msgstr ""
+
+#: cp/decl.c:4138
+#, gcc-internal-format
+msgid "declaration of %q#D has %<extern%> and is initialized"
+msgstr ""
+
+#: cp/decl.c:4163
+#, gcc-internal-format
+msgid "definition of %q#D is marked %<dllimport%>"
+msgstr ""
+
+#: cp/decl.c:4182
+#, gcc-internal-format
+msgid "%q#D is not a static member of %q#T"
+msgstr ""
+
+#: cp/decl.c:4188
+#, gcc-internal-format
+msgid "ISO C++ does not permit %<%T::%D%> to be defined as %<%T::%D%>"
+msgstr ""
+
+#: cp/decl.c:4197
+#, gcc-internal-format
+msgid "template header not allowed in member definition of explicitly specialized class"
+msgstr ""
+
+#: cp/decl.c:4205
+#, gcc-internal-format
+msgid "duplicate initialization of %qD"
+msgstr ""
+
+#: cp/decl.c:4210
+#, gcc-internal-format
+msgid "%qD declared %<constexpr%> outside its class"
+msgstr ""
+
+#: cp/decl.c:4247
+#, gcc-internal-format
+msgid "declaration of %q#D outside of class is not definition"
+msgstr ""
+
+#: cp/decl.c:4345
+#, gcc-internal-format
+msgid "variable %q#D has initializer but incomplete type"
+msgstr ""
+
+#: cp/decl.c:4351 cp/decl.c:5102
+#, gcc-internal-format
+msgid "elements of array %q#D have incomplete type"
+msgstr ""
+
+#: cp/decl.c:4358 cp/decl.c:5598
+#, gcc-internal-format
+msgid "declaration of %q#D has no initializer"
+msgstr ""
+
+#: cp/decl.c:4360
+#, gcc-internal-format
+msgid "aggregate %q#D has incomplete type and cannot be defined"
+msgstr ""
+
+#: cp/decl.c:4396
+#, gcc-internal-format
+msgid "%qD declared as reference but not initialized"
+msgstr ""
+
+#: cp/decl.c:4421
+#, gcc-internal-format
+msgid "cannot initialize %qT from %qT"
+msgstr ""
+
+#: cp/decl.c:4485
+#, gcc-internal-format
+msgid "name used in a GNU-style designated initializer for an array"
+msgstr ""
+
+#: cp/decl.c:4490
+#, gcc-internal-format
+msgid "name %qD used in a GNU-style designated initializer for an array"
+msgstr ""
+
+#: cp/decl.c:4540
+#, gcc-internal-format
+msgid "initializer fails to determine size of %qD"
+msgstr ""
+
+#: cp/decl.c:4547
+#, gcc-internal-format
+msgid "array size missing in %qD"
+msgstr ""
+
+#: cp/decl.c:4559
+#, gcc-internal-format
+msgid "zero-size array %qD"
+msgstr ""
+
+#. An automatic variable with an incomplete type: that is an error.
+#. Don't talk about array types here, since we took care of that
+#. message in grokdeclarator.
+#: cp/decl.c:4602
+#, gcc-internal-format
+msgid "storage size of %qD isn't known"
+msgstr ""
+
+#: cp/decl.c:4625
+#, gcc-internal-format
+msgid "storage size of %qD isn't constant"
+msgstr ""
+
+#: cp/decl.c:4671
+#, gcc-internal-format
+msgid "sorry: semantics of inline function static data %q+#D are wrong (you'll wind up with multiple copies)"
+msgstr ""
+
+#: cp/decl.c:4675
+#, gcc-internal-format
+msgid "  you can work around this by removing the initializer"
+msgstr ""
+
+#: cp/decl.c:4695
+#, gcc-internal-format
+msgid "missing initializer for constexpr %qD"
+msgstr ""
+
+#: cp/decl.c:4705
+#, gcc-internal-format
+msgid "uninitialized const %qD"
+msgstr ""
+
+#: cp/decl.c:4817
+#, gcc-internal-format
+msgid "invalid type %qT as initializer for a vector of type %qT"
+msgstr ""
+
+#: cp/decl.c:4859
+#, gcc-internal-format
+msgid "initializer for %qT must be brace-enclosed"
+msgstr ""
+
+#: cp/decl.c:4877
+#, gcc-internal-format
+msgid "%qT has no non-static data member named %qD"
+msgstr ""
+
+#: cp/decl.c:4936
+#, gcc-internal-format
+msgid "braces around scalar initializer for type %qT"
+msgstr ""
+
+#: cp/decl.c:5027
+#, gcc-internal-format
+msgid "missing braces around initializer for %qT"
+msgstr ""
+
+#: cp/decl.c:5084 cp/typeck2.c:1019 cp/typeck2.c:1194 cp/typeck2.c:1217
+#: cp/typeck2.c:1260
+#, gcc-internal-format
+msgid "too many initializers for %qT"
+msgstr ""
+
+#: cp/decl.c:5104
+#, gcc-internal-format
+msgid "elements of array %q#T have incomplete type"
+msgstr ""
+
+#: cp/decl.c:5113
+#, gcc-internal-format
+msgid "variable-sized object %qD may not be initialized"
+msgstr ""
+
+#: cp/decl.c:5115
+#, gcc-internal-format
+msgid "variable-sized compound literal"
+msgstr ""
+
+#: cp/decl.c:5169
+#, gcc-internal-format
+msgid "%qD has incomplete type"
+msgstr ""
+
+#: cp/decl.c:5189
+#, gcc-internal-format
+msgid "scalar object %qD requires one element in initializer"
+msgstr ""
+
+#: cp/decl.c:5220
+#, gcc-internal-format
+msgid "in C++98 %qD must be initialized by constructor, not by %<{...}%>"
+msgstr ""
+
+#: cp/decl.c:5252
+#, gcc-internal-format
+msgid "array %qD initialized by parenthesized string literal %qE"
+msgstr ""
+
+#: cp/decl.c:5266
+#, gcc-internal-format
+msgid "structure %qD with uninitialized const members"
+msgstr ""
+
+#: cp/decl.c:5268
+#, gcc-internal-format
+msgid "structure %qD with uninitialized reference members"
+msgstr ""
+
+#: cp/decl.c:5565
+#, gcc-internal-format
+msgid "assignment (not initialization) in declaration"
+msgstr ""
+
+#: cp/decl.c:5706
+#, gcc-internal-format
+msgid "shadowing previous type declaration of %q#D"
+msgstr ""
+
+#: cp/decl.c:5738
+#, gcc-internal-format
+msgid "%qD cannot be thread-local because it has non-trivial type %qT"
+msgstr ""
+
+#: cp/decl.c:5781
+#, gcc-internal-format
+msgid "Java object %qD not allocated with %<new%>"
+msgstr ""
+
+#: cp/decl.c:5798
+#, gcc-internal-format
+msgid "%qD is thread-local and so cannot be dynamically initialized"
+msgstr ""
+
+#: cp/decl.c:5816
+#, gcc-internal-format
+msgid "%qD cannot be initialized by a non-constant expression when being declared"
+msgstr ""
+
+#: cp/decl.c:5865
+#, gcc-internal-format
+msgid "non-static data member %qD has Java class type"
+msgstr ""
+
+#: cp/decl.c:5929
+#, gcc-internal-format
+msgid "function %q#D is initialized like a variable"
+msgstr ""
+
+#: cp/decl.c:6509
+#, gcc-internal-format
+msgid "destructor for alien class %qT cannot be a member"
+msgstr ""
+
+#: cp/decl.c:6511
+#, gcc-internal-format
+msgid "constructor for alien class %qT cannot be a member"
+msgstr ""
+
+#: cp/decl.c:6532
+#, gcc-internal-format
+msgid "%qD declared as a %<virtual%> %s"
+msgstr ""
+
+#: cp/decl.c:6534
+#, gcc-internal-format
+msgid "%qD declared as an %<inline%> %s"
+msgstr ""
+
+#: cp/decl.c:6536
+#, gcc-internal-format
+msgid "%<const%> and %<volatile%> function specifiers on %qD invalid in %s declaration"
+msgstr ""
+
+#: cp/decl.c:6540
+#, gcc-internal-format
+msgid "%q+D declared as a friend"
+msgstr ""
+
+#: cp/decl.c:6546
+#, gcc-internal-format
+msgid "%q+D declared with an exception specification"
+msgstr ""
+
+#: cp/decl.c:6580
+#, gcc-internal-format
+msgid "definition of %qD is not in namespace enclosing %qT"
+msgstr ""
+
+#: cp/decl.c:6701
+#, gcc-internal-format
+msgid "defining explicit specialization %qD in friend declaration"
+msgstr ""
+
+#. Something like `template <class T> friend void f<T>()'.
+#: cp/decl.c:6711
+#, gcc-internal-format
+msgid "invalid use of template-id %qD in declaration of primary template"
+msgstr ""
+
+#: cp/decl.c:6741
+#, gcc-internal-format
+msgid "default arguments are not allowed in declaration of friend template specialization %qD"
+msgstr ""
+
+#: cp/decl.c:6749
+#, gcc-internal-format
+msgid "%<inline%> is not allowed in declaration of friend template specialization %qD"
+msgstr ""
+
+#: cp/decl.c:6792
+#, gcc-internal-format
+msgid "cannot declare %<::main%> to be a template"
+msgstr ""
+
+#: cp/decl.c:6794
+#, gcc-internal-format
+msgid "cannot declare %<::main%> to be inline"
+msgstr ""
+
+#: cp/decl.c:6796
+#, gcc-internal-format
+msgid "cannot declare %<::main%> to be static"
+msgstr ""
+
+#: cp/decl.c:6824
+#, gcc-internal-format
+msgid "non-local function %q#D uses anonymous type"
+msgstr ""
+
+#: cp/decl.c:6827 cp/decl.c:7110 cp/decl2.c:3480
+#, gcc-internal-format
+msgid "%q+#D does not refer to the unqualified type, so it is not used for linkage"
+msgstr ""
+
+#: cp/decl.c:6833
+#, gcc-internal-format
+msgid "non-local function %q#D uses local type %qT"
+msgstr ""
+
+#: cp/decl.c:6852
+#, gcc-internal-format
+msgid "static member function %qD cannot have cv-qualifier"
+msgstr ""
+
+#: cp/decl.c:6853
+#, gcc-internal-format
+msgid "non-member function %qD cannot have cv-qualifier"
+msgstr ""
+
+#: cp/decl.c:6898
+#, gcc-internal-format
+msgid "%<::main%> must return %<int%>"
+msgstr ""
+
+#: cp/decl.c:6938
+#, gcc-internal-format
+msgid "definition of implicitly-declared %qD"
+msgstr ""
+
+#: cp/decl.c:6955 cp/decl2.c:730
+#, gcc-internal-format
+msgid "no %q#D member function declared in class %qT"
+msgstr ""
+
+#. DRs 132, 319 and 389 seem to indicate types with
+#. no linkage can only be used to declare extern "C"
+#. entities.  Since it's not always an error in the
+#. ISO C++ 90 Standard, we only issue a warning.
+#: cp/decl.c:7107
+#, gcc-internal-format
+msgid "non-local variable %q#D uses anonymous type"
+msgstr ""
+
+#: cp/decl.c:7116
+#, gcc-internal-format
+msgid "non-local variable %q#D uses local type %qT"
+msgstr ""
+
+#: cp/decl.c:7237
+#, gcc-internal-format
+msgid "invalid in-class initialization of static data member of non-integral type %qT"
+msgstr ""
+
+#: cp/decl.c:7247
+#, gcc-internal-format
+msgid "ISO C++ forbids in-class initialization of non-const static member %qD"
+msgstr ""
+
+#: cp/decl.c:7251
+#, gcc-internal-format
+msgid "ISO C++ forbids initialization of member constant %qD of non-integral type %qT"
+msgstr ""
+
+#: cp/decl.c:7276
+#, gcc-internal-format
+msgid "size of array %qD has non-integral type %qT"
+msgstr ""
+
+#: cp/decl.c:7278
+#, gcc-internal-format
+msgid "size of array has non-integral type %qT"
+msgstr ""
+
+#: cp/decl.c:7327
+#, gcc-internal-format
+msgid "size of array %qD is negative"
+msgstr ""
+
+#: cp/decl.c:7329
+#, gcc-internal-format
+msgid "size of array is negative"
+msgstr ""
+
+#: cp/decl.c:7337
+#, gcc-internal-format
+msgid "ISO C++ forbids zero-size array %qD"
+msgstr ""
+
+#: cp/decl.c:7339
+#, gcc-internal-format
+msgid "ISO C++ forbids zero-size array"
+msgstr ""
+
+#: cp/decl.c:7346
+#, gcc-internal-format
+msgid "size of array %qD is not an integral constant-expression"
+msgstr ""
+
+#: cp/decl.c:7349
+#, gcc-internal-format
+msgid "size of array is not an integral constant-expression"
+msgstr ""
+
+#: cp/decl.c:7355
+#, gcc-internal-format
+msgid "ISO C++ forbids variable length array %qD"
+msgstr ""
+
+#: cp/decl.c:7357
+#, gcc-internal-format
+msgid "ISO C++ forbids variable length array"
+msgstr ""
+
+#: cp/decl.c:7363
+#, gcc-internal-format
+msgid "variable length array %qD is used"
+msgstr ""
+
+#: cp/decl.c:7399
+#, gcc-internal-format
+msgid "overflow in array dimension"
+msgstr ""
+
+#: cp/decl.c:7455
+#, gcc-internal-format
+msgid "declaration of %qD as array of void"
+msgstr ""
+
+#: cp/decl.c:7457
+#, gcc-internal-format
+msgid "creating array of void"
+msgstr ""
+
+#: cp/decl.c:7462
+#, gcc-internal-format
+msgid "declaration of %qD as array of functions"
+msgstr ""
+
+#: cp/decl.c:7464
+#, gcc-internal-format
+msgid "creating array of functions"
+msgstr ""
+
+#: cp/decl.c:7469
+#, gcc-internal-format
+msgid "declaration of %qD as array of references"
+msgstr ""
+
+#: cp/decl.c:7471
+#, gcc-internal-format
+msgid "creating array of references"
+msgstr ""
+
+#: cp/decl.c:7476
+#, gcc-internal-format
+msgid "declaration of %qD as array of function members"
+msgstr ""
+
+#: cp/decl.c:7478
+#, gcc-internal-format
+msgid "creating array of function members"
+msgstr ""
+
+#: cp/decl.c:7492
+#, gcc-internal-format
+msgid "declaration of %qD as multidimensional array must have bounds for all dimensions except the first"
+msgstr ""
+
+#: cp/decl.c:7496
+#, gcc-internal-format
+msgid "multidimensional array must have bounds for all dimensions except the first"
+msgstr ""
+
+#: cp/decl.c:7531
+#, gcc-internal-format
+msgid "return type specification for constructor invalid"
+msgstr ""
+
+#: cp/decl.c:7541
+#, gcc-internal-format
+msgid "return type specification for destructor invalid"
+msgstr ""
+
+#: cp/decl.c:7554
+#, gcc-internal-format
+msgid "return type specified for %<operator %T%>"
+msgstr ""
+
+#: cp/decl.c:7576
+#, gcc-internal-format
+msgid "unnamed variable or field declared void"
+msgstr ""
+
+#: cp/decl.c:7583
+#, gcc-internal-format
+msgid "variable or field declared void"
+msgstr ""
+
+#: cp/decl.c:7762
+#, gcc-internal-format
+msgid "invalid use of qualified-name %<::%D%>"
+msgstr ""
+
+#: cp/decl.c:7765
+#, gcc-internal-format
+msgid "invalid use of qualified-name %<%T::%D%>"
+msgstr ""
+
+#: cp/decl.c:7768
+#, gcc-internal-format
+msgid "invalid use of qualified-name %<%D::%D%>"
+msgstr ""
+
+#: cp/decl.c:7780
+#, gcc-internal-format
+msgid "type %qT is not derived from type %qT"
+msgstr ""
+
+#: cp/decl.c:7796 cp/decl.c:7888 cp/decl.c:9157
+#, gcc-internal-format
+msgid "declaration of %qD as non-function"
+msgstr ""
+
+#: cp/decl.c:7802
+#, gcc-internal-format
+msgid "declaration of %qD as non-member"
+msgstr ""
+
+#: cp/decl.c:7833
+#, gcc-internal-format
+msgid "declarator-id missing; using reserved word %qD"
+msgstr ""
+
+#: cp/decl.c:7880
+#, gcc-internal-format
+msgid "function definition does not declare parameters"
+msgstr ""
+
+#: cp/decl.c:7922
+#, gcc-internal-format
+msgid "two or more data types in declaration of %qs"
+msgstr ""
+
+#: cp/decl.c:7928
+#, gcc-internal-format
+msgid "conflicting specifiers in declaration of %qs"
+msgstr ""
+
+#: cp/decl.c:7999 cp/decl.c:8002 cp/decl.c:8005
+#, gcc-internal-format
+msgid "ISO C++ forbids declaration of %qs with no type"
+msgstr ""
+
+#: cp/decl.c:8030 cp/decl.c:8048
+#, gcc-internal-format
+msgid "%<signed%> or %<unsigned%> invalid for %qs"
+msgstr ""
+
+#: cp/decl.c:8032
+#, gcc-internal-format
+msgid "%<signed%> and %<unsigned%> specified together for %qs"
+msgstr ""
+
+#: cp/decl.c:8034
+#, gcc-internal-format
+msgid "%<long long%> invalid for %qs"
+msgstr ""
+
+#: cp/decl.c:8036
+#, gcc-internal-format
+msgid "%<long%> invalid for %qs"
+msgstr ""
+
+#: cp/decl.c:8038
+#, gcc-internal-format
+msgid "%<short%> invalid for %qs"
+msgstr ""
+
+#: cp/decl.c:8040
+#, gcc-internal-format
+msgid "%<long%> or %<short%> invalid for %qs"
+msgstr ""
+
+#: cp/decl.c:8042
+#, gcc-internal-format
+msgid "%<long%> or %<short%> specified with char for %qs"
+msgstr ""
+
+#: cp/decl.c:8044
+#, gcc-internal-format
+msgid "%<long%> and %<short%> specified together for %qs"
+msgstr ""
+
+#: cp/decl.c:8050
+#, gcc-internal-format
+msgid "%<short%> or %<long%> invalid for %qs"
+msgstr ""
+
+#: cp/decl.c:8058
+#, gcc-internal-format
+msgid "long, short, signed or unsigned used invalidly for %qs"
+msgstr ""
+
+#: cp/decl.c:8122
+#, gcc-internal-format
+msgid "complex invalid for %qs"
+msgstr ""
+
+#: cp/decl.c:8153
+#, gcc-internal-format
+msgid "both %<const%> and %<constexpr%> cannot be used here"
+msgstr ""
+
+#: cp/decl.c:8162
+#, gcc-internal-format
+msgid "qualifiers are not allowed on declaration of %<operator %T%>"
+msgstr ""
+
+#: cp/decl.c:8175 cp/typeck.c:7831
+#, gcc-internal-format
+msgid "ignoring %qV qualifiers added to function type %qT"
+msgstr ""
+
+#: cp/decl.c:8198
+#, gcc-internal-format
+msgid "member %qD cannot be declared both virtual and static"
+msgstr ""
+
+#: cp/decl.c:8206
+#, gcc-internal-format
+msgid "%<%T::%D%> is not a valid declarator"
+msgstr ""
+
+#: cp/decl.c:8215
+#, gcc-internal-format
+msgid "typedef declaration invalid in parameter declaration"
+msgstr ""
+
+#: cp/decl.c:8220
+#, gcc-internal-format
+msgid "storage class specified for template parameter %qs"
+msgstr ""
+
+#: cp/decl.c:8226
+#, gcc-internal-format
+msgid "storage class specifiers invalid in parameter declarations"
+msgstr ""
+
+#: cp/decl.c:8230
+#, gcc-internal-format
+msgid "parameter declared %<auto%>"
+msgstr ""
+
+#: cp/decl.c:8238
+#, gcc-internal-format
+msgid "a parameter cannot be declared %<constexpr%>"
+msgstr ""
+
+#: cp/decl.c:8247
+#, gcc-internal-format
+msgid "%<virtual%> outside class declaration"
+msgstr ""
+
+#: cp/decl.c:8265
+#, gcc-internal-format
+msgid "multiple storage classes in declaration of %qs"
+msgstr ""
+
+#: cp/decl.c:8288
+#, gcc-internal-format
+msgid "storage class specified for %qs"
+msgstr ""
+
+#: cp/decl.c:8292
+#, gcc-internal-format
+msgid "storage class specified for parameter %qs"
+msgstr ""
+
+#: cp/decl.c:8305
+#, gcc-internal-format
+msgid "nested function %qs declared %<extern%>"
+msgstr ""
+
+#: cp/decl.c:8309
+#, gcc-internal-format
+msgid "top-level declaration of %qs specifies %<auto%>"
+msgstr ""
+
+#: cp/decl.c:8315
+#, gcc-internal-format
+msgid "function-scope %qs implicitly auto and declared %<__thread%>"
+msgstr ""
+
+#: cp/decl.c:8322
+#, gcc-internal-format
+msgid "storage class specifiers invalid in friend function declarations"
+msgstr ""
+
+#: cp/decl.c:8416
+#, gcc-internal-format
+msgid "%qs declared as function returning a function"
+msgstr ""
+
+#: cp/decl.c:8421
+#, gcc-internal-format
+msgid "%qs declared as function returning an array"
+msgstr ""
+
+#: cp/decl.c:8442
+#, gcc-internal-format
+msgid "%qs function uses %<auto%> type specifier without late return type"
+msgstr ""
+
+#: cp/decl.c:8448
+#, gcc-internal-format
+msgid "%qs function with late return type has %qT as its type rather than plain %<auto%>"
+msgstr ""
+
+#: cp/decl.c:8456
+#, gcc-internal-format
+msgid "%qs function with late return type not declared with %<auto%> type specifier"
+msgstr ""
+
+#: cp/decl.c:8489
+#, gcc-internal-format
+msgid "destructor cannot be static member function"
+msgstr ""
+
+#: cp/decl.c:8494
+#, gcc-internal-format
+msgid "destructors may not be cv-qualified"
+msgstr ""
+
+#: cp/decl.c:8512
+#, gcc-internal-format
+msgid "constructors cannot be declared virtual"
+msgstr ""
+
+#: cp/decl.c:8525
+#, gcc-internal-format
+msgid "can't initialize friend function %qs"
+msgstr ""
+
+#. Cannot be both friend and virtual.
+#: cp/decl.c:8529
+#, gcc-internal-format
+msgid "virtual functions cannot be friends"
+msgstr ""
+
+#: cp/decl.c:8533
+#, gcc-internal-format
+msgid "friend declaration not in class definition"
+msgstr ""
+
+#: cp/decl.c:8535
+#, gcc-internal-format
+msgid "can't define friend function %qs in a local class definition"
+msgstr ""
+
+#: cp/decl.c:8553
+#, gcc-internal-format
+msgid "the %<constexpr%> specifier cannot be used in a function declaration that is not a definition"
+msgstr ""
+
+#: cp/decl.c:8571
+#, gcc-internal-format
+msgid "destructors may not have parameters"
+msgstr ""
+
+#: cp/decl.c:8590
+#, gcc-internal-format
+msgid "cannot declare pointer to %q#T"
+msgstr ""
+
+#: cp/decl.c:8603 cp/decl.c:8610
+#, gcc-internal-format
+msgid "cannot declare reference to %q#T"
+msgstr ""
+
+#: cp/decl.c:8612
+#, gcc-internal-format
+msgid "cannot declare pointer to %q#T member"
+msgstr ""
+
+#: cp/decl.c:8633
+#, gcc-internal-format
+msgid "cannot declare reference to qualified function type %qT"
+msgstr ""
+
+#: cp/decl.c:8634
+#, gcc-internal-format
+msgid "cannot declare pointer to qualified function type %qT"
+msgstr ""
+
+#: cp/decl.c:8670
+#, gcc-internal-format
+msgid "cannot declare reference to %q#T, which is not a typedef or a template type argument"
+msgstr ""
+
+#: cp/decl.c:8714
+#, gcc-internal-format
+msgid "template-id %qD used as a declarator"
+msgstr ""
+
+#: cp/decl.c:8765
+#, gcc-internal-format
+msgid "member functions are implicitly friends of their class"
+msgstr ""
+
+#: cp/decl.c:8770
+#, gcc-internal-format
+msgid "extra qualification %<%T::%> on member %qs"
+msgstr ""
+
+#: cp/decl.c:8802
+#, gcc-internal-format
+msgid "cannot define member function %<%T::%s%> within %<%T%>"
+msgstr ""
+
+#: cp/decl.c:8811
+#, gcc-internal-format
+msgid "a constexpr function cannot be defined outside of its class"
+msgstr ""
+
+#: cp/decl.c:8825
+#, gcc-internal-format
+msgid "cannot declare member %<%T::%s%> within %qT"
+msgstr ""
+
+#: cp/decl.c:8848
+#, gcc-internal-format
+msgid "non-parameter %qs cannot be a parameter pack"
+msgstr ""
+
+#: cp/decl.c:8858
+#, gcc-internal-format
+msgid "size of array %qs is too large"
+msgstr ""
+
+#: cp/decl.c:8869
+#, gcc-internal-format
+msgid "data member may not have variably modified type %qT"
+msgstr ""
+
+#: cp/decl.c:8871
+#, gcc-internal-format
+msgid "parameter may not have variably modified type %qT"
+msgstr ""
+
+#. [dcl.fct.spec] The explicit specifier shall only be used in
+#. declarations of constructors within a class definition.
+#: cp/decl.c:8879
+#, gcc-internal-format
+msgid "only declarations of constructors can be %<explicit%>"
+msgstr ""
+
+#: cp/decl.c:8887
+#, gcc-internal-format
+msgid "non-member %qs cannot be declared %<mutable%>"
+msgstr ""
+
+#: cp/decl.c:8892
+#, gcc-internal-format
+msgid "non-object member %qs cannot be declared %<mutable%>"
+msgstr ""
+
+#: cp/decl.c:8898
+#, gcc-internal-format
+msgid "function %qs cannot be declared %<mutable%>"
+msgstr ""
+
+#: cp/decl.c:8903
+#, gcc-internal-format
+msgid "static %qs cannot be declared %<mutable%>"
+msgstr ""
+
+#: cp/decl.c:8908
+#, gcc-internal-format
+msgid "const %qs cannot be declared %<mutable%>"
+msgstr ""
+
+#: cp/decl.c:8946
+#, gcc-internal-format
+msgid "typedef name may not be a nested-name-specifier"
+msgstr ""
+
+#: cp/decl.c:8964
+#, gcc-internal-format
+msgid "ISO C++ forbids nested type %qD with same name as enclosing class"
+msgstr ""
+
+#: cp/decl.c:9058
+#, gcc-internal-format
+msgid "qualified function types cannot be used to declare static member functions"
+msgstr ""
+
+#: cp/decl.c:9060
+#, gcc-internal-format
+msgid "qualified function types cannot be used to declare free functions"
+msgstr ""
+
+#: cp/decl.c:9087
+#, gcc-internal-format
+msgid "type qualifiers specified for friend class declaration"
+msgstr ""
+
+#: cp/decl.c:9092
+#, gcc-internal-format
+msgid "%<inline%> specified for friend class declaration"
+msgstr ""
+
+#: cp/decl.c:9100
+#, gcc-internal-format
+msgid "template parameters cannot be friends"
+msgstr ""
+
+#: cp/decl.c:9102
+#, gcc-internal-format
+msgid "friend declaration requires class-key, i.e. %<friend class %T::%D%>"
+msgstr ""
+
+#: cp/decl.c:9106
+#, gcc-internal-format
+msgid "friend declaration requires class-key, i.e. %<friend %#T%>"
+msgstr ""
+
+#: cp/decl.c:9119
+#, gcc-internal-format
+msgid "trying to make class %qT a friend of global scope"
+msgstr ""
+
+#: cp/decl.c:9137
+#, gcc-internal-format
+msgid "invalid qualifiers on non-member function type"
+msgstr ""
+
+#: cp/decl.c:9147
+#, gcc-internal-format
+msgid "abstract declarator %qT used as declaration"
+msgstr ""
+
+#: cp/decl.c:9176
+#, gcc-internal-format
+msgid "cannot use %<::%> in parameter declaration"
+msgstr ""
+
+#. Something like struct S { int N::j; };
+#: cp/decl.c:9222
+#, gcc-internal-format
+msgid "invalid use of %<::%>"
+msgstr ""
+
+#: cp/decl.c:9237
+#, gcc-internal-format
+msgid "can't make %qD into a method -- not in a class"
+msgstr ""
+
+#: cp/decl.c:9246
+#, gcc-internal-format
+msgid "function %qD declared virtual inside a union"
+msgstr ""
+
+#: cp/decl.c:9255
+#, gcc-internal-format
+msgid "%qD cannot be declared virtual, since it is always static"
+msgstr ""
+
+#: cp/decl.c:9273
+#, gcc-internal-format
+msgid "expected qualified name in friend declaration for destructor %qD"
+msgstr ""
+
+#: cp/decl.c:9280
+#, gcc-internal-format
+msgid "declaration of %qD as member of %qT"
+msgstr ""
+
+#: cp/decl.c:9285
+#, gcc-internal-format
+msgid "a destructor cannot be %<constexpr%>"
+msgstr ""
+
+#: cp/decl.c:9289
+#, gcc-internal-format
+msgid "expected qualified name in friend declaration for constructor %qD"
+msgstr ""
+
+#: cp/decl.c:9353
+#, gcc-internal-format
+msgid "field %qD has incomplete type"
+msgstr ""
+
+#: cp/decl.c:9355
+#, gcc-internal-format
+msgid "name %qT has incomplete type"
+msgstr ""
+
+#: cp/decl.c:9364
+#, gcc-internal-format
+msgid "  in instantiation of template %qT"
+msgstr ""
+
+#: cp/decl.c:9373
+#, gcc-internal-format
+msgid "%qE is neither function nor member function; cannot be declared friend"
+msgstr ""
+
+#. An attempt is being made to initialize a non-static
+#. member.  But, from [class.mem]:
+#.
+#. 4 A member-declarator can contain a
+#. constant-initializer only if it declares a static
+#. member (_class.static_) of integral or enumeration
+#. type, see _class.static.data_.
+#.
+#. This used to be relatively common practice, but
+#. the rest of the compiler does not correctly
+#. handle the initialization unless the member is
+#. static so we make it static below.
+#: cp/decl.c:9426
+#, gcc-internal-format
+msgid "ISO C++ forbids initialization of member %qD"
+msgstr ""
+
+#: cp/decl.c:9428
+#, gcc-internal-format
+msgid "making %qD static"
+msgstr ""
+
+#: cp/decl.c:9462
+#, gcc-internal-format
+msgid "non-static data member %qE declared %<constexpr%>"
+msgstr ""
+
+#: cp/decl.c:9497
+#, gcc-internal-format
+msgid "storage class %<auto%> invalid for function %qs"
+msgstr ""
+
+#: cp/decl.c:9499
+#, gcc-internal-format
+msgid "storage class %<register%> invalid for function %qs"
+msgstr ""
+
+#: cp/decl.c:9501
+#, gcc-internal-format
+msgid "storage class %<__thread%> invalid for function %qs"
+msgstr ""
+
+#: cp/decl.c:9513
+#, gcc-internal-format
+msgid "%<static%> specified invalid for function %qs declared out of global scope"
+msgstr ""
+
+#: cp/decl.c:9517
+#, gcc-internal-format
+msgid "%<inline%> specifier invalid for function %qs declared out of global scope"
+msgstr ""
+
+#: cp/decl.c:9524
+#, gcc-internal-format
+msgid "%q#T is not a class or a namespace"
+msgstr ""
+
+#: cp/decl.c:9532
+#, gcc-internal-format
+msgid "virtual non-class function %qs"
+msgstr ""
+
+#: cp/decl.c:9539
+#, gcc-internal-format
+msgid "%qs defined in a non-class scope"
+msgstr ""
+
+#: cp/decl.c:9572
+#, gcc-internal-format
+msgid "cannot declare member function %qD to have static linkage"
+msgstr ""
+
+#. FIXME need arm citation
+#: cp/decl.c:9579
+#, gcc-internal-format
+msgid "cannot declare static function inside another function"
+msgstr ""
+
+#: cp/decl.c:9609
+#, gcc-internal-format
+msgid "%<static%> may not be used when defining (as opposed to declaring) a static data member"
+msgstr ""
+
+#: cp/decl.c:9616
+#, gcc-internal-format
+msgid "static member %qD declared %<register%>"
+msgstr ""
+
+#: cp/decl.c:9622
+#, gcc-internal-format
+msgid "cannot explicitly declare member %q#D to have extern linkage"
+msgstr ""
+
+#: cp/decl.c:9636
+#, gcc-internal-format
+msgid "%qs initialized and declared %<extern%>"
+msgstr ""
+
+#: cp/decl.c:9640
+#, gcc-internal-format
+msgid "%qs has both %<extern%> and initializer"
+msgstr ""
+
+#: cp/decl.c:9767
+#, gcc-internal-format
+msgid "default argument for %q#D has type %qT"
+msgstr ""
+
+#: cp/decl.c:9770
+#, gcc-internal-format
+msgid "default argument for parameter of type %qT has type %qT"
+msgstr ""
+
+#: cp/decl.c:9786
+#, gcc-internal-format
+msgid "default argument %qE uses local variable %qD"
+msgstr ""
+
+#: cp/decl.c:9874
+#, gcc-internal-format
+msgid "parameter %qD has Java class type"
+msgstr ""
+
+#: cp/decl.c:9902
+#, gcc-internal-format
+msgid "parameter %qD invalidly declared method type"
+msgstr ""
+
+#: cp/decl.c:9927
+#, gcc-internal-format
+msgid "parameter %qD includes pointer to array of unknown bound %qT"
+msgstr ""
+
+#: cp/decl.c:9929
+#, gcc-internal-format
+msgid "parameter %qD includes reference to array of unknown bound %qT"
+msgstr ""
+
+#: cp/decl.c:9944
+#, gcc-internal-format
+msgid "parameter packs must be at the end of the parameter list"
+msgstr ""
+
+#. [class.copy]
+#.
+#. A declaration of a constructor for a class X is ill-formed if
+#. its first parameter is of type (optionally cv-qualified) X
+#. and either there are no other parameters or else all other
+#. parameters have default arguments.
+#.
+#. We *don't* complain about member template instantiations that
+#. have this form, though; they can occur as we try to decide
+#. what constructor to use during overload resolution.  Since
+#. overload resolution will never prefer such a constructor to
+#. the non-template copy constructor (which is either explicitly
+#. or implicitly defined), there's no need to worry about their
+#. existence.  Theoretically, they should never even be
+#. instantiated, but that's hard to forestall.
+#: cp/decl.c:10167
+#, gcc-internal-format
+msgid "invalid constructor; you probably meant %<%T (const %T&)%>"
+msgstr ""
+
+#: cp/decl.c:10289
+#, gcc-internal-format
+msgid "%qD may not be declared within a namespace"
+msgstr ""
+
+#: cp/decl.c:10294
+#, gcc-internal-format
+msgid "%qD may not be declared as static"
+msgstr ""
+
+#: cp/decl.c:10320
+#, gcc-internal-format
+msgid "%qD must be a nonstatic member function"
+msgstr ""
+
+#: cp/decl.c:10329
+#, gcc-internal-format
+msgid "%qD must be either a non-static member function or a non-member function"
+msgstr ""
+
+#: cp/decl.c:10351
+#, gcc-internal-format
+msgid "%qD must have an argument of class or enumerated type"
+msgstr ""
+
+#: cp/decl.c:10380
+#, gcc-internal-format
+msgid "conversion to a reference to void will never use a type conversion operator"
+msgstr ""
+
+#: cp/decl.c:10382
+#, gcc-internal-format
+msgid "conversion to void will never use a type conversion operator"
+msgstr ""
+
+#: cp/decl.c:10389
+#, gcc-internal-format
+msgid "conversion to a reference to the same type will never use a type conversion operator"
+msgstr ""
+
+#: cp/decl.c:10391
+#, gcc-internal-format
+msgid "conversion to the same type will never use a type conversion operator"
+msgstr ""
+
+#: cp/decl.c:10399
+#, gcc-internal-format
+msgid "conversion to a reference to a base class will never use a type conversion operator"
+msgstr ""
+
+#: cp/decl.c:10401
+#, gcc-internal-format
+msgid "conversion to a base class will never use a type conversion operator"
+msgstr ""
+
+#. 13.4.0.3
+#: cp/decl.c:10410
+#, gcc-internal-format
+msgid "ISO C++ prohibits overloading operator ?:"
+msgstr ""
+
+#: cp/decl.c:10415
+#, gcc-internal-format
+msgid "%qD must not have variable number of arguments"
+msgstr ""
+
+#: cp/decl.c:10466
+#, gcc-internal-format
+msgid "postfix %qD must take %<int%> as its argument"
+msgstr ""
+
+#: cp/decl.c:10469
+#, gcc-internal-format
+msgid "postfix %qD must take %<int%> as its second argument"
+msgstr ""
+
+#: cp/decl.c:10477
+#, gcc-internal-format
+msgid "%qD must take either zero or one argument"
+msgstr ""
+
+#: cp/decl.c:10479
+#, gcc-internal-format
+msgid "%qD must take either one or two arguments"
+msgstr ""
+
+#: cp/decl.c:10501
+#, gcc-internal-format
+msgid "prefix %qD should return %qT"
+msgstr ""
+
+#: cp/decl.c:10507
+#, gcc-internal-format
+msgid "postfix %qD should return %qT"
+msgstr ""
+
+#: cp/decl.c:10516
+#, gcc-internal-format
+msgid "%qD must take %<void%>"
+msgstr ""
+
+#: cp/decl.c:10518 cp/decl.c:10527
+#, gcc-internal-format
+msgid "%qD must take exactly one argument"
+msgstr ""
+
+#: cp/decl.c:10529
+#, gcc-internal-format
+msgid "%qD must take exactly two arguments"
+msgstr ""
+
+#: cp/decl.c:10538
+#, gcc-internal-format
+msgid "user-defined %qD always evaluates both arguments"
+msgstr ""
+
+#: cp/decl.c:10552
+#, gcc-internal-format
+msgid "%qD should return by value"
+msgstr ""
+
+#: cp/decl.c:10563 cp/decl.c:10568
+#, gcc-internal-format
+msgid "%qD cannot have default arguments"
+msgstr ""
+
+#: cp/decl.c:10626
+#, gcc-internal-format
+msgid "using template type parameter %qT after %qs"
+msgstr ""
+
+#: cp/decl.c:10642
+#, gcc-internal-format
+msgid "using typedef-name %qD after %qs"
+msgstr ""
+
+#: cp/decl.c:10643
+#, gcc-internal-format
+msgid "%q+D has a previous declaration here"
+msgstr ""
+
+#: cp/decl.c:10651
+#, gcc-internal-format
+msgid "%qT referred to as %qs"
+msgstr ""
+
+#: cp/decl.c:10652 cp/decl.c:10659
+#, gcc-internal-format
+msgid "%q+T has a previous declaration here"
+msgstr ""
+
+#: cp/decl.c:10658
+#, gcc-internal-format
+msgid "%qT referred to as enum"
+msgstr ""
+
+#. If a class template appears as elaborated type specifier
+#. without a template header such as:
+#.
+#. template <class T> class C {};
+#. void f(class C);		// No template header here
+#.
+#. then the required template argument is missing.
+#: cp/decl.c:10673
+#, gcc-internal-format
+msgid "template argument required for %<%s %T%>"
+msgstr ""
+
+#: cp/decl.c:10721 cp/name-lookup.c:2823
+#, gcc-internal-format
+msgid "%qD has the same name as the class in which it is declared"
+msgstr ""
+
+#: cp/decl.c:10751 cp/name-lookup.c:2328 cp/name-lookup.c:3098
+#: cp/name-lookup.c:3143 cp/parser.c:4245 cp/parser.c:18116
+#, gcc-internal-format
+msgid "reference to %qD is ambiguous"
+msgstr ""
+
+#: cp/decl.c:10865
+#, gcc-internal-format
+msgid "use of enum %q#D without previous declaration"
+msgstr ""
+
+#: cp/decl.c:10886
+#, gcc-internal-format
+msgid "redeclaration of %qT as a non-template"
+msgstr ""
+
+#: cp/decl.c:10887
+#, gcc-internal-format
+msgid "previous declaration %q+D"
+msgstr ""
+
+#: cp/decl.c:11001
+#, gcc-internal-format
+msgid "derived union %qT invalid"
+msgstr ""
+
+#: cp/decl.c:11010
+#, gcc-internal-format
+msgid "Java class %qT cannot have multiple bases"
+msgstr ""
+
+#: cp/decl.c:11021
+#, gcc-internal-format
+msgid "Java class %qT cannot have virtual bases"
+msgstr ""
+
+#: cp/decl.c:11041
+#, gcc-internal-format
+msgid "base type %qT fails to be a struct or class type"
+msgstr ""
+
+#: cp/decl.c:11074
+#, gcc-internal-format
+msgid "recursive type %qT undefined"
+msgstr ""
+
+#: cp/decl.c:11076
+#, gcc-internal-format
+msgid "duplicate base type %qT invalid"
+msgstr ""
+
+#: cp/decl.c:11160
+#, gcc-internal-format
+msgid "multiple definition of %q#T"
+msgstr ""
+
+#: cp/decl.c:11162
+#, gcc-internal-format
+msgid "previous definition here"
+msgstr ""
+
+#: cp/decl.c:11209
+#, gcc-internal-format
+msgid "underlying type %<%T%> of %<%T%> must be an integral type"
+msgstr ""
+
+#. DR 377
+#.
+#. IF no integral type can represent all the enumerator values, the
+#. enumeration is ill-formed.
+#: cp/decl.c:11343
+#, gcc-internal-format
+msgid "no integral type can represent all of the enumerator values for %qT"
+msgstr ""
+
+#: cp/decl.c:11475
+#, gcc-internal-format
+msgid "enumerator value for %qD is not an integer constant"
+msgstr ""
+
+#: cp/decl.c:11507
+#, gcc-internal-format
+msgid "overflow in enumeration values at %qD"
+msgstr ""
+
+#: cp/decl.c:11527
+#, gcc-internal-format
+msgid "enumerator value %E is too large for underlying type %<%T%>"
+msgstr ""
+
+#: cp/decl.c:11628
+#, gcc-internal-format
+msgid "return type %q#T is incomplete"
+msgstr ""
+
+#: cp/decl.c:11630
+#, gcc-internal-format
+msgid "return type has Java class type %q#T"
+msgstr ""
+
+#: cp/decl.c:11758 cp/typeck.c:7467
+#, gcc-internal-format
+msgid "%<operator=%> should return a reference to %<*this%>"
+msgstr ""
+
+#: cp/decl.c:11853
+#, gcc-internal-format
+msgid "no previous declaration for %q+D"
+msgstr ""
+
+#: cp/decl.c:12074
+#, gcc-internal-format
+msgid "invalid function declaration"
+msgstr ""
+
+#: cp/decl.c:12158
+#, gcc-internal-format
+msgid "parameter %qD declared void"
+msgstr ""
+
+#: cp/decl.c:12659
+#, gcc-internal-format
+msgid "invalid member function declaration"
+msgstr ""
+
+#: cp/decl.c:12674
+#, gcc-internal-format
+msgid "%qD is already defined in class %qT"
+msgstr ""
+
+#: cp/decl.c:12885
+#, gcc-internal-format
+msgid "static member function %q#D declared with type qualifiers"
+msgstr ""
+
+#: cp/decl2.c:315
+#, gcc-internal-format
+msgid "name missing for member function"
+msgstr ""
+
+#: cp/decl2.c:386 cp/decl2.c:400
+#, gcc-internal-format
+msgid "ambiguous conversion for array subscript"
+msgstr ""
+
+#: cp/decl2.c:394
+#, gcc-internal-format
+msgid "invalid types %<%T[%T]%> for array subscript"
+msgstr ""
+
+#: cp/decl2.c:437
+#, gcc-internal-format
+msgid "deleting array %q#D"
+msgstr ""
+
+#: cp/decl2.c:443
+#, gcc-internal-format
+msgid "type %q#T argument given to %<delete%>, expected pointer"
+msgstr ""
+
+#: cp/decl2.c:455
+#, gcc-internal-format
+msgid "cannot delete a function.  Only pointer-to-objects are valid arguments to %<delete%>"
+msgstr ""
+
+#: cp/decl2.c:463
+#, gcc-internal-format
+msgid "deleting %qT is undefined"
+msgstr ""
+
+#: cp/decl2.c:506 cp/pt.c:4380
+#, gcc-internal-format
+msgid "template declaration of %q#D"
+msgstr ""
+
+#: cp/decl2.c:558
+#, gcc-internal-format
+msgid "Java method %qD has non-Java return type %qT"
+msgstr ""
+
+#: cp/decl2.c:575
+#, gcc-internal-format
+msgid "Java method %qD has non-Java parameter type %qT"
+msgstr ""
+
+#: cp/decl2.c:624
+#, gcc-internal-format
+msgid "template parameter lists provided don't match the template parameters of %qD"
+msgstr ""
+
+#: cp/decl2.c:692
+#, gcc-internal-format
+msgid "prototype for %q#D does not match any in class %qT"
+msgstr ""
+
+#: cp/decl2.c:768
+#, gcc-internal-format
+msgid "local class %q#T shall not have static data member %q#D"
+msgstr ""
+
+#: cp/decl2.c:776
+#, gcc-internal-format
+msgid "initializer invalid for static member with constructor"
+msgstr ""
+
+#: cp/decl2.c:779
+#, gcc-internal-format
+msgid "(an out of class initialization is required)"
+msgstr ""
+
+#: cp/decl2.c:840
+#, gcc-internal-format
+msgid "explicit template argument list not allowed"
+msgstr ""
+
+#: cp/decl2.c:846
+#, gcc-internal-format
+msgid "member %qD conflicts with virtual function table field name"
+msgstr ""
+
+#: cp/decl2.c:882
+#, gcc-internal-format
+msgid "%qD is already defined in %qT"
+msgstr ""
+
+#: cp/decl2.c:917
+#, gcc-internal-format
+msgid "invalid initializer for member function %qD"
+msgstr ""
+
+#: cp/decl2.c:923
+#, gcc-internal-format
+msgid "initializer specified for static member function %qD"
+msgstr ""
+
+#: cp/decl2.c:946
+#, gcc-internal-format
+msgid "field initializer is not constant"
+msgstr ""
+
+#: cp/decl2.c:973
+#, gcc-internal-format
+msgid "%<asm%> specifiers are not permitted on non-static data members"
+msgstr ""
+
+#: cp/decl2.c:1025
+#, gcc-internal-format
+msgid "bit-field %qD with non-integral type"
+msgstr ""
+
+#: cp/decl2.c:1031
+#, gcc-internal-format
+msgid "cannot declare %qD to be a bit-field type"
+msgstr ""
+
+#: cp/decl2.c:1041
+#, gcc-internal-format
+msgid "cannot declare bit-field %qD with function type"
+msgstr ""
+
+#: cp/decl2.c:1048
+#, gcc-internal-format
+msgid "%qD is already defined in the class %qT"
+msgstr ""
+
+#: cp/decl2.c:1055
+#, gcc-internal-format
+msgid "static member %qD cannot be a bit-field"
+msgstr ""
+
+#: cp/decl2.c:1312
+#, gcc-internal-format
+msgid "anonymous struct not inside named type"
+msgstr ""
+
+#: cp/decl2.c:1398
+#, gcc-internal-format
+msgid "namespace-scope anonymous aggregates must be static"
+msgstr ""
+
+#: cp/decl2.c:1407
+#, gcc-internal-format
+msgid "anonymous union with no members"
+msgstr ""
+
+#: cp/decl2.c:1444
+#, gcc-internal-format
+msgid "%<operator new%> must return type %qT"
+msgstr ""
+
+#. [basic.stc.dynamic.allocation]
+#.
+#. The first parameter shall not have an associated default
+#. argument.
+#: cp/decl2.c:1455
+#, gcc-internal-format
+msgid "the first parameter of %<operator new%> cannot have a default argument"
+msgstr ""
+
+#: cp/decl2.c:1471
+#, gcc-internal-format
+msgid "%<operator new%> takes type %<size_t%> (%qT) as first parameter"
+msgstr ""
+
+#: cp/decl2.c:1500
+#, gcc-internal-format
+msgid "%<operator delete%> must return type %qT"
+msgstr ""
+
+#: cp/decl2.c:1509
+#, gcc-internal-format
+msgid "%<operator delete%> takes type %qT as first parameter"
+msgstr ""
+
+#: cp/decl2.c:2233
+#, gcc-internal-format
+msgid "%qT has a field %qD whose type uses the anonymous namespace"
+msgstr ""
+
+#: cp/decl2.c:2240
+#, gcc-internal-format
+msgid "%qT declared with greater visibility than the type of its field %qD"
+msgstr ""
+
+#: cp/decl2.c:2253
+#, gcc-internal-format
+msgid "%qT has a base %qT whose type uses the anonymous namespace"
+msgstr ""
+
+#: cp/decl2.c:2259
+#, gcc-internal-format
+msgid "%qT declared with greater visibility than its base %qT"
+msgstr ""
+
+#: cp/decl2.c:3477
+#, gcc-internal-format
+msgid "%q+#D, declared using anonymous type, is used but never defined"
+msgstr ""
+
+#: cp/decl2.c:3484
+#, gcc-internal-format
+msgid "%q+#D, declared using local type %qT, is used but never defined"
+msgstr ""
+
+#: cp/decl2.c:3793
+#, gcc-internal-format
+msgid "inline function %q+D used but never defined"
+msgstr ""
+
+#: cp/decl2.c:3959
+#, gcc-internal-format
+msgid "default argument missing for parameter %P of %q+#D"
+msgstr ""
+
+#. We mark a lambda conversion op as deleted if we can't
+#. generate it properly; see maybe_add_lambda_conv_op.
+#: cp/decl2.c:4017
+#, gcc-internal-format
+msgid "converting lambda which uses %<...%> to function pointer"
+msgstr ""
+
+#: cp/decl2.c:4022 cp/search.c:1892
+#, gcc-internal-format
+msgid "deleted function %q+D"
+msgstr ""
+
+#: cp/decl2.c:4023
+#, gcc-internal-format
+msgid "used here"
+msgstr ""
+
+#: cp/error.c:2922
+#, gcc-internal-format
+msgid "extended initializer lists only available with -std=c++0x or -std=gnu++0x"
+msgstr ""
+
+#: cp/error.c:2927
+#, gcc-internal-format
+msgid "explicit conversion operators only available with -std=c++0x or -std=gnu++0x"
+msgstr ""
+
+#: cp/error.c:2932
+#, gcc-internal-format
+msgid "variadic templates only available with -std=c++0x or -std=gnu++0x"
+msgstr ""
+
+#: cp/error.c:2937
+#, gcc-internal-format
+msgid "lambda expressions only available with -std=c++0x or -std=gnu++0x"
+msgstr ""
+
+#: cp/error.c:2942
+#, gcc-internal-format
+msgid "C++0x auto only available with -std=c++0x or -std=gnu++0x"
+msgstr ""
+
+#: cp/error.c:2946
+#, gcc-internal-format
+msgid "scoped enums only available with -std=c++0x or -std=gnu++0x"
+msgstr ""
+
+#: cp/error.c:2950
+#, gcc-internal-format
+msgid "defaulted and deleted functions only available with -std=c++0x or -std=gnu++0x"
+msgstr ""
+
+#. Can't throw a reference.
+#: cp/except.c:277
+#, gcc-internal-format
+msgid "type %qT is disallowed in Java %<throw%> or %<catch%>"
+msgstr ""
+
+#: cp/except.c:288
+#, gcc-internal-format
+msgid "call to Java %<catch%> or %<throw%> with %<jthrowable%> undefined"
+msgstr ""
+
+#. Thrown object must be a Throwable.
+#: cp/except.c:295
+#, gcc-internal-format
+msgid "type %qT is not derived from %<java::lang::Throwable%>"
+msgstr ""
+
+#: cp/except.c:357
+#, gcc-internal-format
+msgid "mixing C++ and Java catches in a single translation unit"
+msgstr ""
+
+#: cp/except.c:630
+#, gcc-internal-format
+msgid "throwing NULL, which has integral, not pointer type"
+msgstr ""
+
+#: cp/except.c:653 cp/init.c:1886
+#, gcc-internal-format
+msgid "%qD should never be overloaded"
+msgstr ""
+
+#: cp/except.c:751
+#, gcc-internal-format
+msgid "  in thrown expression"
+msgstr ""
+
+#: cp/except.c:911
+#, gcc-internal-format
+msgid "expression %qE of abstract class type %qT cannot be used in throw-expression"
+msgstr ""
+
+#: cp/except.c:997
+#, gcc-internal-format
+msgid "exception of type %qT will be caught"
+msgstr ""
+
+#: cp/except.c:1000
+#, gcc-internal-format
+msgid "   by earlier handler for %qT"
+msgstr ""
+
+#: cp/except.c:1029
+#, gcc-internal-format
+msgid "%<...%> handler must be the last handler for its try block"
+msgstr ""
+
+#: cp/friend.c:156
+#, gcc-internal-format
+msgid "%qD is already a friend of class %qT"
+msgstr ""
+
+#: cp/friend.c:232
+#, gcc-internal-format
+msgid "invalid type %qT declared %<friend%>"
+msgstr ""
+
+#. [temp.friend]
+#. Friend declarations shall not declare partial
+#. specializations.
+#. template <class U> friend class T::X<U>;
+#. [temp.friend]
+#. Friend declarations shall not declare partial
+#. specializations.
+#: cp/friend.c:248 cp/friend.c:278
+#, gcc-internal-format
+msgid "partial specialization %qT declared %<friend%>"
+msgstr ""
+
+#: cp/friend.c:256
+#, gcc-internal-format
+msgid "class %qT is implicitly friends with itself"
+msgstr ""
+
+#: cp/friend.c:314
+#, gcc-internal-format
+msgid "%qT is not a member of %qT"
+msgstr ""
+
+#: cp/friend.c:319
+#, gcc-internal-format
+msgid "%qT is not a member class template of %qT"
+msgstr ""
+
+#: cp/friend.c:327
+#, gcc-internal-format
+msgid "%qT is not a nested class of %qT"
+msgstr ""
+
+#. template <class T> friend class T;
+#: cp/friend.c:340
+#, gcc-internal-format
+msgid "template parameter type %qT declared %<friend%>"
+msgstr ""
+
+#. template <class T> friend class A; where A is not a template
+#: cp/friend.c:346
+#, gcc-internal-format
+msgid "%q#T is not a template"
+msgstr ""
+
+#: cp/friend.c:368
+#, gcc-internal-format
+msgid "%qD is already a friend of %qT"
+msgstr ""
+
+#: cp/friend.c:377
+#, gcc-internal-format
+msgid "%qT is already a friend of %qT"
+msgstr ""
+
+#: cp/friend.c:501
+#, gcc-internal-format
+msgid "member %qD declared as friend before type %qT defined"
+msgstr ""
+
+#: cp/friend.c:550
+#, gcc-internal-format
+msgid "friend declaration %qD in local class without prior declaration"
+msgstr ""
+
+#: cp/friend.c:573
+#, gcc-internal-format
+msgid "friend declaration %q#D declares a non-template function"
+msgstr ""
+
+#: cp/friend.c:577
+#, gcc-internal-format
+msgid "(if this is not what you intended, make sure the function template has already been declared and add <> after the function name here) "
+msgstr ""
+
+#: cp/init.c:352
+#, gcc-internal-format
+msgid "value-initialization of reference"
+msgstr ""
+
+#: cp/init.c:431
+#, gcc-internal-format
+msgid "%qD should be initialized in the member initialization list"
+msgstr ""
+
+#: cp/init.c:457
+#, gcc-internal-format
+msgid "value-initialization of %q#D, which has reference type"
+msgstr ""
+
+#: cp/init.c:498 cp/init.c:515
+#, gcc-internal-format
+msgid "uninitialized member %qD with %<const%> type %qT"
+msgstr ""
+
+#: cp/init.c:511
+#, gcc-internal-format
+msgid "uninitialized reference member %qD"
+msgstr ""
+
+#: cp/init.c:660
+#, gcc-internal-format
+msgid "%q+D will be initialized after"
+msgstr ""
+
+#: cp/init.c:663
+#, gcc-internal-format
+msgid "base %qT will be initialized after"
+msgstr ""
+
+#: cp/init.c:666
+#, gcc-internal-format
+msgid "  %q+#D"
+msgstr ""
+
+#: cp/init.c:668
+#, gcc-internal-format
+msgid "  base %qT"
+msgstr ""
+
+#: cp/init.c:670
+#, gcc-internal-format
+msgid "  when initialized here"
+msgstr ""
+
+#: cp/init.c:687
+#, gcc-internal-format
+msgid "multiple initializations given for %qD"
+msgstr ""
+
+#: cp/init.c:691
+#, gcc-internal-format
+msgid "multiple initializations given for base %qT"
+msgstr ""
+
+#: cp/init.c:759
+#, gcc-internal-format
+msgid "initializations for multiple members of %qT"
+msgstr ""
+
+#: cp/init.c:823
+#, gcc-internal-format
+msgid "base class %q#T should be explicitly initialized in the copy constructor"
+msgstr ""
+
+#: cp/init.c:1047 cp/init.c:1066
+#, gcc-internal-format
+msgid "class %qT does not have any field named %qD"
+msgstr ""
+
+#: cp/init.c:1053
+#, gcc-internal-format
+msgid "%q#D is a static data member; it can only be initialized at its definition"
+msgstr ""
+
+#: cp/init.c:1060
+#, gcc-internal-format
+msgid "%q#D is not a non-static data member of %qT"
+msgstr ""
+
+#: cp/init.c:1099
+#, gcc-internal-format
+msgid "unnamed initializer for %qT, which has no base classes"
+msgstr ""
+
+#: cp/init.c:1107
+#, gcc-internal-format
+msgid "unnamed initializer for %qT, which uses multiple inheritance"
+msgstr ""
+
+#: cp/init.c:1153
+#, gcc-internal-format
+msgid "%qD is both a direct base and an indirect virtual base"
+msgstr ""
+
+#: cp/init.c:1161
+#, gcc-internal-format
+msgid "type %qT is not a direct or virtual base of %qT"
+msgstr ""
+
+#: cp/init.c:1164
+#, gcc-internal-format
+msgid "type %qT is not a direct base of %qT"
+msgstr ""
+
+#: cp/init.c:1245
+#, gcc-internal-format
+msgid "bad array initializer"
+msgstr ""
+
+#: cp/init.c:1456 cp/semantics.c:2623
+#, gcc-internal-format
+msgid "%qT is not a class type"
+msgstr ""
+
+#: cp/init.c:1510
+#, gcc-internal-format
+msgid "incomplete type %qT does not have member %qD"
+msgstr ""
+
+#: cp/init.c:1523
+#, gcc-internal-format
+msgid "invalid pointer to bit-field %qD"
+msgstr ""
+
+#: cp/init.c:1601
+#, gcc-internal-format
+msgid "invalid use of non-static member function %qD"
+msgstr ""
+
+#: cp/init.c:1607
+#, gcc-internal-format
+msgid "invalid use of non-static data member %qD"
+msgstr ""
+
+#: cp/init.c:1833
+#, gcc-internal-format
+msgid "invalid type %<void%> for new"
+msgstr ""
+
+#: cp/init.c:1846
+#, gcc-internal-format
+msgid "uninitialized const in %<new%> of %q#T"
+msgstr ""
+
+#: cp/init.c:1880
+#, gcc-internal-format
+msgid "call to Java constructor with %qs undefined"
+msgstr ""
+
+#: cp/init.c:1898
+#, gcc-internal-format
+msgid "Java class %q#T object allocated using placement new"
+msgstr ""
+
+#: cp/init.c:1928
+#, gcc-internal-format
+msgid "no suitable %qD found in class %qT"
+msgstr ""
+
+#: cp/init.c:1935 cp/search.c:1105
+#, gcc-internal-format
+msgid "request for member %qD is ambiguous"
+msgstr ""
+
+#: cp/init.c:2125
+#, gcc-internal-format
+msgid "non-constant array size in new, unable to verify length of initializer-list"
+msgstr ""
+
+#: cp/init.c:2134
+#, gcc-internal-format
+msgid "ISO C++ forbids initialization in array new"
+msgstr ""
+
+#: cp/init.c:2360
+#, gcc-internal-format
+msgid "size in array new must have integral type"
+msgstr ""
+
+#: cp/init.c:2373
+#, gcc-internal-format
+msgid "new cannot be applied to a reference type"
+msgstr ""
+
+#: cp/init.c:2382
+#, gcc-internal-format
+msgid "new cannot be applied to a function type"
+msgstr ""
+
+#: cp/init.c:2426
+#, gcc-internal-format
+msgid "call to Java constructor, while %<jclass%> undefined"
+msgstr ""
+
+#: cp/init.c:2444
+#, gcc-internal-format
+msgid "can't find %<class$%> in %qT"
+msgstr ""
+
+#: cp/init.c:2831
+#, gcc-internal-format
+msgid "initializer ends prematurely"
+msgstr ""
+
+#: cp/init.c:2889
+#, gcc-internal-format
+msgid "cannot initialize multi-dimensional array with initializer"
+msgstr ""
+
+#: cp/init.c:3038
+#, gcc-internal-format
+msgid "possible problem detected in invocation of delete operator:"
+msgstr ""
+
+#: cp/init.c:3042
+#, gcc-internal-format
+msgid "neither the destructor nor the class-specific operator delete will be called, even if they are declared when the class is defined."
+msgstr ""
+
+#: cp/init.c:3064
+#, gcc-internal-format
+msgid "unknown array size in delete"
+msgstr ""
+
+#: cp/init.c:3319
+#, gcc-internal-format
+msgid "type to vector delete is neither pointer or array type"
+msgstr ""
+
+#: cp/lex.c:321
+#, gcc-internal-format
+msgid "junk at end of #pragma %s"
+msgstr ""
+
+#: cp/lex.c:328
+#, gcc-internal-format
+msgid "invalid #pragma %s"
+msgstr ""
+
+#: cp/lex.c:336
+#, gcc-internal-format
+msgid "#pragma vtable no longer supported"
+msgstr ""
+
+#: cp/lex.c:408
+#, gcc-internal-format
+msgid "#pragma implementation for %qs appears after file is included"
+msgstr ""
+
+#: cp/lex.c:432
+#, gcc-internal-format
+msgid "junk at end of #pragma GCC java_exceptions"
+msgstr ""
+
+#: cp/lex.c:447
+#, gcc-internal-format
+msgid "%qD not defined"
+msgstr ""
+
+#: cp/lex.c:451
+#, gcc-internal-format
+msgid "%qD was not declared in this scope"
+msgstr ""
+
+#. In a template, it is invalid to write "f()" or "f(3)" if no
+#. declaration of "f" is available.  Historically, G++ and most
+#. other compilers accepted that usage since they deferred all name
+#. lookup until instantiation time rather than doing unqualified
+#. name lookup at template definition time; explain to the user what
+#. is going wrong.
+#.
+#. Note that we have the exact wording of the following message in
+#. the manual (trouble.texi, node "Name lookup"), so they need to
+#. be kept in synch.
+#: cp/lex.c:489
+#, gcc-internal-format
+msgid "there are no arguments to %qD that depend on a template parameter, so a declaration of %qD must be available"
+msgstr ""
+
+#: cp/lex.c:498
+#, gcc-internal-format
+msgid "(if you use %<-fpermissive%>, G++ will accept your code, but allowing the use of an undeclared name is deprecated)"
+msgstr ""
+
+#: cp/mangle.c:1937
+#, gcc-internal-format
+msgid "mangling typeof, use decltype instead"
+msgstr ""
+
+#: cp/mangle.c:2156
+#, gcc-internal-format
+msgid "mangling unknown fixed point type"
+msgstr ""
+
+#: cp/mangle.c:2561
+#, gcc-internal-format
+msgid "mangling %C"
+msgstr ""
+
+#: cp/mangle.c:2613
+#, gcc-internal-format
+msgid "mangling new-expression"
+msgstr ""
+
+#: cp/mangle.c:2647
+#, gcc-internal-format
+msgid "omitted middle operand to %<?:%> operand cannot be mangled"
+msgstr ""
+
+#: cp/mangle.c:2955
+#, gcc-internal-format
+msgid "the mangled name of %qD will change in a future version of GCC"
+msgstr ""
+
+#: cp/mangle.c:3071
+#, gcc-internal-format
+msgid "-fabi-version=4 (or =0) avoids this error with a change in vector mangling"
+msgstr ""
+
+#: cp/method.c:396
+#, gcc-internal-format
+msgid "generic thunk code fails for method %q#D which uses %<...%>"
+msgstr ""
+
+#: cp/method.c:577
+#, gcc-internal-format
+msgid "non-static const member %q#D, can't use default assignment operator"
+msgstr ""
+
+#: cp/method.c:583
+#, gcc-internal-format
+msgid "non-static reference member %q#D, can't use default assignment operator"
+msgstr ""
+
+#: cp/method.c:696
+#, gcc-internal-format
+msgid "synthesized method %qD first required here "
+msgstr ""
+
+#: cp/method.c:1023
+#, gcc-internal-format
+msgid "defaulted declaration %q+D"
+msgstr ""
+
+#: cp/method.c:1025
+#, gcc-internal-format
+msgid "does not match expected signature %qD"
+msgstr ""
+
+#: cp/method.c:1057
+#, gcc-internal-format
+msgid "%qD cannot be defaulted"
+msgstr ""
+
+#: cp/method.c:1066
+#, gcc-internal-format
+msgid "defaulted function %q+D with default argument"
+msgstr ""
+
+#: cp/method.c:1072
+#, gcc-internal-format
+msgid "%qD declared explicit cannot be defaulted in the class body"
+msgstr ""
+
+#: cp/method.c:1075
+#, gcc-internal-format
+msgid "%qD declared with non-public access cannot be defaulted in the class body"
+msgstr ""
+
+#: cp/method.c:1078
+#, gcc-internal-format
+msgid "function %q+D defaulted on its first declaration must not have an exception-specification"
+msgstr ""
+
+#: cp/method.c:1081
+#, gcc-internal-format
+msgid "%qD declared virtual cannot be defaulted in the class body"
+msgstr ""
+
+#: cp/method.c:1130
+#, gcc-internal-format
+msgid "vtable layout for class %qT may not be ABI-compliantand may change in a future version of GCC due to implicit virtual destructor"
+msgstr ""
+
+#: cp/name-lookup.c:733
+#, gcc-internal-format
+msgid "redeclaration of %<wchar_t%> as %qT"
+msgstr ""
+
+#. A redeclaration of main, but not a duplicate of the
+#. previous one.
+#.
+#. [basic.start.main]
+#.
+#. This function shall not be overloaded.
+#: cp/name-lookup.c:763
+#, gcc-internal-format
+msgid "invalid redeclaration of %q+D"
+msgstr ""
+
+#: cp/name-lookup.c:764
+#, gcc-internal-format
+msgid "as %qD"
+msgstr ""
+
+#: cp/name-lookup.c:810 cp/name-lookup.c:821
+#, gcc-internal-format
+msgid "declaration of %q#D with C language linkage"
+msgstr ""
+
+#: cp/name-lookup.c:814
+#, gcc-internal-format
+msgid "due to different exception specifications"
+msgstr ""
+
+#: cp/name-lookup.c:905
+#, gcc-internal-format
+msgid "type mismatch with previous external decl of %q#D"
+msgstr ""
+
+#: cp/name-lookup.c:906
+#, gcc-internal-format
+msgid "previous external decl of %q+#D"
+msgstr ""
+
+#: cp/name-lookup.c:997
+#, gcc-internal-format
+msgid "extern declaration of %q#D doesn't match"
+msgstr ""
+
+#: cp/name-lookup.c:998
+#, gcc-internal-format
+msgid "global declaration %q+#D"
+msgstr ""
+
+#: cp/name-lookup.c:1040 cp/name-lookup.c:1048
+#, gcc-internal-format
+msgid "declaration of %q#D shadows a parameter"
+msgstr ""
+
+#. Location of previous decl is not useful in this case.
+#: cp/name-lookup.c:1074
+#, gcc-internal-format
+msgid "declaration of %qD shadows a member of 'this'"
+msgstr ""
+
+#: cp/name-lookup.c:1081
+#, gcc-internal-format
+msgid "declaration of %qD shadows a previous local"
+msgstr ""
+
+#: cp/name-lookup.c:1090
+#, gcc-internal-format
+msgid "declaration of %qD shadows a global declaration"
+msgstr ""
+
+#: cp/name-lookup.c:1213
+#, gcc-internal-format
+msgid "name lookup of %qD changed"
+msgstr ""
+
+#: cp/name-lookup.c:1214
+#, gcc-internal-format
+msgid "  matches this %q+D under ISO standard rules"
+msgstr ""
+
+#: cp/name-lookup.c:1216
+#, gcc-internal-format
+msgid "  matches this %q+D under old rules"
+msgstr ""
+
+#: cp/name-lookup.c:1234 cp/name-lookup.c:1242
+#, gcc-internal-format
+msgid "name lookup of %qD changed for ISO %<for%> scoping"
+msgstr ""
+
+#: cp/name-lookup.c:1236
+#, gcc-internal-format
+msgid "  cannot use obsolete binding at %q+D because it has a destructor"
+msgstr ""
+
+#: cp/name-lookup.c:1245
+#, gcc-internal-format
+msgid "  using obsolete binding at %q+D"
+msgstr ""
+
+#: cp/name-lookup.c:1251 cp/parser.c:10897
+#, gcc-internal-format
+msgid "(if you use %<-fpermissive%> G++ will accept your code)"
+msgstr ""
+
+#: cp/name-lookup.c:1306
+#, gcc-internal-format
+msgid "%s %s(%E) %p %d\n"
+msgstr ""
+
+#: cp/name-lookup.c:1309
+#, gcc-internal-format
+msgid "%s %s %p %d\n"
+msgstr ""
+
+#: cp/name-lookup.c:2041
+#, gcc-internal-format
+msgid "%q#D hides constructor for %q#T"
+msgstr ""
+
+#: cp/name-lookup.c:2058
+#, gcc-internal-format
+msgid "%q#D conflicts with previous using declaration %q#D"
+msgstr ""
+
+#: cp/name-lookup.c:2081
+#, gcc-internal-format
+msgid "previous non-function declaration %q+#D"
+msgstr ""
+
+#: cp/name-lookup.c:2082
+#, gcc-internal-format
+msgid "conflicts with function declaration %q#D"
+msgstr ""
+
+#. It's a nested name with template parameter dependent scope.
+#. This can only be using-declaration for class member.
+#: cp/name-lookup.c:2160 cp/name-lookup.c:2185
+#, gcc-internal-format
+msgid "%qT is not a namespace"
+msgstr ""
+
+#. 7.3.3/5
+#. A using-declaration shall not name a template-id.
+#: cp/name-lookup.c:2170
+#, gcc-internal-format
+msgid "a using-declaration cannot specify a template-id.  Try %<using %D%>"
+msgstr ""
+
+#: cp/name-lookup.c:2177
+#, gcc-internal-format
+msgid "namespace %qD not allowed in using-declaration"
+msgstr ""
+
+#: cp/name-lookup.c:2213
+#, gcc-internal-format
+msgid "%qD not declared"
+msgstr ""
+
+#: cp/name-lookup.c:2249 cp/name-lookup.c:2286 cp/name-lookup.c:2320
+#: cp/name-lookup.c:2335
+#, gcc-internal-format
+msgid "%qD is already declared in this scope"
+msgstr ""
+
+#: cp/name-lookup.c:2942
+#, gcc-internal-format
+msgid "using-declaration for non-member at class scope"
+msgstr ""
+
+#: cp/name-lookup.c:2949
+#, gcc-internal-format
+msgid "%<%T::%D%> names destructor"
+msgstr ""
+
+#: cp/name-lookup.c:2954
+#, gcc-internal-format
+msgid "%<%T::%D%> names constructor"
+msgstr ""
+
+#: cp/name-lookup.c:2959
+#, gcc-internal-format
+msgid "%<%T::%D%> names constructor in %qT"
+msgstr ""
+
+#: cp/name-lookup.c:3009
+#, gcc-internal-format
+msgid "no members matching %<%T::%D%> in %q#T"
+msgstr ""
+
+#: cp/name-lookup.c:3077
+#, gcc-internal-format
+msgid "declaration of %qD not in a namespace surrounding %qD"
+msgstr ""
+
+#: cp/name-lookup.c:3085
+#, gcc-internal-format
+msgid "explicit qualification in declaration of %qD"
+msgstr ""
+
+#: cp/name-lookup.c:3168
+#, gcc-internal-format
+msgid "%qD should have been declared inside %qD"
+msgstr ""
+
+#: cp/name-lookup.c:3213
+#, gcc-internal-format
+msgid "%qD attribute requires a single NTBS argument"
+msgstr ""
+
+#: cp/name-lookup.c:3220
+#, gcc-internal-format
+msgid "%qD attribute is meaningless since members of the anonymous namespace get local symbols"
+msgstr ""
+
+#: cp/name-lookup.c:3229 cp/name-lookup.c:3599
+#, gcc-internal-format
+msgid "%qD attribute directive ignored"
+msgstr ""
+
+#: cp/name-lookup.c:3274
+#, gcc-internal-format
+msgid "namespace alias %qD not allowed here, assuming %qD"
+msgstr ""
+
+#: cp/name-lookup.c:3587
+#, gcc-internal-format
+msgid "strong using only meaningful at namespace scope"
+msgstr ""
+
+#: cp/name-lookup.c:3591
+#, gcc-internal-format
+msgid "current namespace %qD does not enclose strongly used namespace %qD"
+msgstr ""
+
+#: cp/name-lookup.c:5018
+#, gcc-internal-format
+msgid "argument dependent lookup finds %q+D"
+msgstr ""
+
+#: cp/name-lookup.c:5462
+#, gcc-internal-format
+msgid "XXX entering pop_everything ()\n"
+msgstr ""
+
+#: cp/name-lookup.c:5471
+#, gcc-internal-format
+msgid "XXX leaving pop_everything ()\n"
+msgstr ""
+
+#: cp/optimize.c:346
+#, gcc-internal-format
+msgid "making multiple clones of %qD"
+msgstr ""
+
+#: cp/parser.c:436
+#, gcc-internal-format
+msgid "identifier %qE will become a keyword in C++0x"
+msgstr ""
+
+#: cp/parser.c:2102
+#, gcc-internal-format
+msgid "%<#pragma%> is not allowed here"
+msgstr ""
+
+#: cp/parser.c:2133
+#, gcc-internal-format
+msgid "%<%E::%E%> has not been declared"
+msgstr ""
+
+#: cp/parser.c:2136
+#, gcc-internal-format
+msgid "%<::%E%> has not been declared"
+msgstr ""
+
+#: cp/parser.c:2139
+#, gcc-internal-format
+msgid "request for member %qE in non-class type %qT"
+msgstr ""
+
+#: cp/parser.c:2142
+#, gcc-internal-format
+msgid "%<%T::%E%> has not been declared"
+msgstr ""
+
+#: cp/parser.c:2145
+#, gcc-internal-format
+msgid "%qE has not been declared"
+msgstr ""
+
+#: cp/parser.c:2148
+#, gcc-internal-format
+msgid "%<%E::%E%> %s"
+msgstr ""
+
+#: cp/parser.c:2150
+#, gcc-internal-format
+msgid "%<::%E%> %s"
+msgstr ""
+
+#: cp/parser.c:2152
+#, gcc-internal-format
+msgid "%qE %s"
+msgstr ""
+
+#: cp/parser.c:2190
+#, gcc-internal-format
+msgid "ISO C++ 1998 does not support %<long long%>"
+msgstr ""
+
+#: cp/parser.c:2211
+#, gcc-internal-format
+msgid "duplicate %qs"
+msgstr ""
+
+#: cp/parser.c:2256
+#, gcc-internal-format
+msgid "new types may not be defined in a return type"
+msgstr ""
+
+#: cp/parser.c:2258
+#, gcc-internal-format
+msgid "(perhaps a semicolon is missing after the definition of %qT)"
+msgstr ""
+
+#: cp/parser.c:2278 cp/parser.c:4291 cp/pt.c:6335
+#, gcc-internal-format
+msgid "%qT is not a template"
+msgstr ""
+
+#: cp/parser.c:2280
+#, gcc-internal-format
+msgid "%qE is not a template"
+msgstr ""
+
+#: cp/parser.c:2282
+#, gcc-internal-format
+msgid "invalid template-id"
+msgstr ""
+
+#: cp/parser.c:2345
+#, gcc-internal-format
+msgid "invalid use of template-name %qE without an argument list"
+msgstr ""
+
+#: cp/parser.c:2348
+#, gcc-internal-format
+msgid "invalid use of destructor %qD as a type"
+msgstr ""
+
+#. Something like 'unsigned A a;'
+#: cp/parser.c:2351
+#, gcc-internal-format
+msgid "invalid combination of multiple type-specifiers"
+msgstr ""
+
+#. Issue an error message.
+#: cp/parser.c:2355
+#, gcc-internal-format
+msgid "%qE does not name a type"
+msgstr ""
+
+#: cp/parser.c:2388
+#, gcc-internal-format
+msgid "(perhaps %<typename %T::%E%> was intended)"
+msgstr ""
+
+#: cp/parser.c:2403
+#, gcc-internal-format
+msgid "%qE in namespace %qE does not name a type"
+msgstr ""
+
+#. A<T>::A<T>()
+#: cp/parser.c:2409
+#, gcc-internal-format
+msgid "%<%T::%E%> names the constructor, not the type"
+msgstr ""
+
+#: cp/parser.c:2412
+#, gcc-internal-format
+msgid "and %qT has no template constructors"
+msgstr ""
+
+#: cp/parser.c:2417
+#, gcc-internal-format
+msgid "need %<typename%> before %<%T::%E%> because %qT is a dependent scope"
+msgstr ""
+
+#: cp/parser.c:2421
+#, gcc-internal-format
+msgid "%qE in class %qT does not name a type"
+msgstr ""
+
+#: cp/parser.c:3210
+#, gcc-internal-format
+msgid "fixed-point types not supported in C++"
+msgstr ""
+
+#: cp/parser.c:3291
+#, gcc-internal-format
+msgid "ISO C++ forbids braced-groups within expressions"
+msgstr ""
+
+#: cp/parser.c:3303
+#, gcc-internal-format
+msgid "statement-expressions are not allowed outside functions nor in template-argument lists"
+msgstr ""
+
+#: cp/parser.c:3376
+#, gcc-internal-format
+msgid "%<this%> may not be used in this context"
+msgstr ""
+
+#: cp/parser.c:3597
+#, gcc-internal-format
+msgid "local variable %qD may not appear in this context"
+msgstr ""
+
+#: cp/parser.c:3891
+#, gcc-internal-format
+msgid "scope %qT before %<~%> is not a class-name"
+msgstr ""
+
+#: cp/parser.c:4010
+#, gcc-internal-format
+msgid "declaration of %<~%T%> as member of %qT"
+msgstr ""
+
+#: cp/parser.c:4025
+#, gcc-internal-format
+msgid "typedef-name %qD used as destructor declarator"
+msgstr ""
+
+#: cp/parser.c:4552 cp/parser.c:6165
+#, gcc-internal-format
+msgid "types may not be defined in casts"
+msgstr ""
+
+#: cp/parser.c:4615
+#, gcc-internal-format
+msgid "types may not be defined in a %<typeid%> expression"
+msgstr ""
+
+#. Warn the user that a compound literal is not
+#. allowed in standard C++.
+#: cp/parser.c:4725
+#, gcc-internal-format
+msgid "ISO C++ forbids compound-literals"
+msgstr ""
+
+#: cp/parser.c:5102
+#, gcc-internal-format
+msgid "%qE does not have class type"
+msgstr ""
+
+#: cp/parser.c:5187 cp/typeck.c:2325
+#, gcc-internal-format
+msgid "invalid use of %qD"
+msgstr ""
+
+#: cp/parser.c:5770
+#, gcc-internal-format
+msgid "array bound forbidden after parenthesized type-id"
+msgstr ""
+
+#: cp/parser.c:5772
+#, gcc-internal-format
+msgid "try removing the parentheses around the type-id"
+msgstr ""
+
+#: cp/parser.c:5852
+#, gcc-internal-format
+msgid "types may not be defined in a new-type-id"
+msgstr ""
+
+#: cp/parser.c:5976
+#, gcc-internal-format
+msgid "expression in new-declarator must have integral or enumeration type"
+msgstr ""
+
+#: cp/parser.c:6230
+#, gcc-internal-format
+msgid "use of old-style cast"
+msgstr ""
+
+#: cp/parser.c:6361
+#, gcc-internal-format
+msgid "%<>>%> operator will be treated as two right angle brackets in C++0x"
+msgstr ""
+
+#: cp/parser.c:6364
+#, gcc-internal-format
+msgid "suggest parentheses around %<>>%> expression"
+msgstr ""
+
+#: cp/parser.c:7203
+#, gcc-internal-format
+msgid "expected end of capture-list"
+msgstr ""
+
+#: cp/parser.c:7254
+#, gcc-internal-format
+msgid "ISO C++ does not allow initializers in lambda expression capture lists"
+msgstr ""
+
+#: cp/parser.c:7348
+#, gcc-internal-format
+msgid "default argument specified for lambda parameter"
+msgstr ""
+
+#: cp/parser.c:7745
+#, gcc-internal-format
+msgid "case label %qE not within a switch statement"
+msgstr ""
+
+#: cp/parser.c:7818
+#, gcc-internal-format
+msgid "need %<typename%> before %qE because %qT is a dependent scope"
+msgstr ""
+
+#: cp/parser.c:7827
+#, gcc-internal-format
+msgid "%<%T::%D%> names the constructor, not the type"
+msgstr ""
+
+#: cp/parser.c:8113
+#, gcc-internal-format
+msgid "types may not be defined in conditions"
+msgstr ""
+
+#. Issue a warning about this use of a GNU extension.
+#: cp/parser.c:8462
+#, gcc-internal-format
+msgid "ISO C++ forbids computed gotos"
+msgstr ""
+
+#: cp/parser.c:8607 cp/parser.c:16615
+#, gcc-internal-format
+msgid "extra %<;%>"
+msgstr ""
+
+#: cp/parser.c:8828
+#, gcc-internal-format
+msgid "%<__label__%> not at the beginning of a block"
+msgstr ""
+
+#: cp/parser.c:8966
+#, gcc-internal-format
+msgid "mixing declarations and function-definitions is forbidden"
+msgstr ""
+
+#: cp/parser.c:9107
+#, gcc-internal-format
+msgid "%<friend%> used outside of class"
+msgstr ""
+
+#. Complain about `auto' as a storage specifier, if
+#. we're complaining about C++0x compatibility.
+#: cp/parser.c:9166
+#, gcc-internal-format
+msgid "%<auto%> will change meaning in C++0x; please remove it"
+msgstr ""
+
+#: cp/parser.c:9288
+#, gcc-internal-format
+msgid "class definition may not be declared a friend"
+msgstr ""
+
+#: cp/parser.c:9357 cp/parser.c:16939
+#, gcc-internal-format
+msgid "templates may not be %<virtual%>"
+msgstr ""
+
+#: cp/parser.c:9523
+#, gcc-internal-format
+msgid "types may not be defined in %<decltype%> expressions"
+msgstr ""
+
+#: cp/parser.c:9778
+#, gcc-internal-format
+msgid "invalid use of %<auto%> in conversion operator"
+msgstr ""
+
+#: cp/parser.c:9863
+#, gcc-internal-format
+msgid "only constructors take base initializers"
+msgstr ""
+
+#: cp/parser.c:9885
+#, gcc-internal-format
+msgid "cannot expand initializer for member %<%D%>"
+msgstr ""
+
+#: cp/parser.c:9940
+#, gcc-internal-format
+msgid "anachronistic old-style base class initializer"
+msgstr ""
+
+#: cp/parser.c:10008
+#, gcc-internal-format
+msgid "keyword %<typename%> not allowed in this context (a qualified member initializer is implicitly a type)"
+msgstr ""
+
+#. Warn that we do not support `export'.
+#: cp/parser.c:10353
+#, gcc-internal-format
+msgid "keyword %<export%> not implemented, and will be ignored"
+msgstr ""
+
+#: cp/parser.c:10539 cp/parser.c:10638 cp/parser.c:10745 cp/parser.c:15324
+#, gcc-internal-format
+msgid "template parameter pack %qD cannot have a default argument"
+msgstr ""
+
+#: cp/parser.c:10543 cp/parser.c:15331
+#, gcc-internal-format
+msgid "template parameter pack cannot have a default argument"
+msgstr ""
+
+#: cp/parser.c:10642 cp/parser.c:10749
+#, gcc-internal-format
+msgid "template parameter packs cannot have default arguments"
+msgstr ""
+
+#: cp/parser.c:10889
+#, gcc-internal-format
+msgid "%<<::%> cannot begin a template-argument list"
+msgstr ""
+
+#: cp/parser.c:10893
+#, gcc-internal-format
+msgid "%<<:%> is an alternate spelling for %<[%>. Insert whitespace between %<<%> and %<::%>"
+msgstr ""
+
+#: cp/parser.c:10971
+#, gcc-internal-format
+msgid "parse error in template argument list"
+msgstr ""
+
+#. Explain what went wrong.
+#: cp/parser.c:11085
+#, gcc-internal-format
+msgid "non-template %qD used as template"
+msgstr ""
+
+#: cp/parser.c:11087
+#, gcc-internal-format
+msgid "use %<%T::template %D%> to indicate that it is a template"
+msgstr ""
+
+#: cp/parser.c:11220
+#, gcc-internal-format
+msgid "expected parameter pack before %<...%>"
+msgstr ""
+
+#: cp/parser.c:11638
+#, gcc-internal-format
+msgid "template specialization with C linkage"
+msgstr ""
+
+#: cp/parser.c:12454
+#, gcc-internal-format
+msgid "declaration %qD does not declare anything"
+msgstr ""
+
+#: cp/parser.c:12540
+#, gcc-internal-format
+msgid "attributes ignored on uninstantiated type"
+msgstr ""
+
+#: cp/parser.c:12544
+#, gcc-internal-format
+msgid "attributes ignored on template instantiation"
+msgstr ""
+
+#: cp/parser.c:12549
+#, gcc-internal-format
+msgid "attributes ignored on elaborated-type-specifier that is not a forward declaration"
+msgstr ""
+
+#: cp/parser.c:12834
+#, gcc-internal-format
+msgid "%qD is not a namespace-name"
+msgstr ""
+
+#: cp/parser.c:12961
+#, gcc-internal-format
+msgid "%<namespace%> definition is not allowed here"
+msgstr ""
+
+#: cp/parser.c:13102
+#, gcc-internal-format
+msgid "a template-id may not appear in a using-declaration"
+msgstr ""
+
+#: cp/parser.c:13528
+#, gcc-internal-format
+msgid "an asm-specification is not allowed on a function-definition"
+msgstr ""
+
+#: cp/parser.c:13532
+#, gcc-internal-format
+msgid "attributes are not allowed on a function-definition"
+msgstr ""
+
+#: cp/parser.c:13685
+#, gcc-internal-format
+msgid "initializer provided for function"
+msgstr ""
+
+#: cp/parser.c:13718
+#, gcc-internal-format
+msgid "attributes after parenthesized initializer ignored"
+msgstr ""
+
+#: cp/parser.c:14236
+#, gcc-internal-format
+msgid "cannot define member of dependent typedef %qT"
+msgstr ""
+
+#: cp/parser.c:14240
+#, gcc-internal-format
+msgid "%<%T::%E%> is not a type"
+msgstr ""
+
+#: cp/parser.c:14268
+#, gcc-internal-format
+msgid "invalid use of constructor as a template"
+msgstr ""
+
+#: cp/parser.c:14270
+#, gcc-internal-format
+msgid "use %<%T::%D%> instead of %<%T::%D%> to name the constructor in a qualified name"
+msgstr ""
+
+#: cp/parser.c:14448
+#, gcc-internal-format
+msgid "%qD is a namespace"
+msgstr ""
+
+#: cp/parser.c:14523
+#, gcc-internal-format
+msgid "duplicate cv-qualifier"
+msgstr ""
+
+#: cp/parser.c:14645 cp/typeck2.c:501
+#, gcc-internal-format
+msgid "invalid use of %<auto%>"
+msgstr ""
+
+#: cp/parser.c:15039
+#, gcc-internal-format
+msgid "types may not be defined in parameter types"
+msgstr ""
+
+#: cp/parser.c:15257
+#, gcc-internal-format
+msgid "file ends in default argument"
+msgstr ""
+
+#: cp/parser.c:15303
+#, gcc-internal-format
+msgid "deprecated use of default argument for parameter of non-function"
+msgstr ""
+
+#: cp/parser.c:15307
+#, gcc-internal-format
+msgid "default arguments are only permitted for function parameters"
+msgstr ""
+
+#: cp/parser.c:15593
+#, gcc-internal-format
+msgid "ISO C++ does not allow designated initializers"
+msgstr ""
+
+#: cp/parser.c:16207
+#, gcc-internal-format
+msgid "invalid class name in declaration of %qD"
+msgstr ""
+
+#: cp/parser.c:16221
+#, gcc-internal-format
+msgid "declaration of %qD in namespace %qD which does not enclose %qD"
+msgstr ""
+
+#: cp/parser.c:16226
+#, gcc-internal-format
+msgid "declaration of %qD in %qD which does not enclose %qD"
+msgstr ""
+
+#: cp/parser.c:16240
+#, gcc-internal-format
+msgid "extra qualification not allowed"
+msgstr ""
+
+#: cp/parser.c:16252
+#, gcc-internal-format
+msgid "an explicit specialization must be preceded by %<template <>%>"
+msgstr ""
+
+#: cp/parser.c:16282
+#, gcc-internal-format
+msgid "function template %qD redeclared as a class template"
+msgstr ""
+
+#: cp/parser.c:16365
+#, gcc-internal-format
+msgid "previous definition of %q+#T"
+msgstr ""
+
+#: cp/parser.c:16634
+#, gcc-internal-format
+msgid "a class-key must be used when declaring a friend"
+msgstr ""
+
+#: cp/parser.c:16649
+#, gcc-internal-format
+msgid "friend declaration does not name a class or function"
+msgstr ""
+
+#: cp/parser.c:16831
+#, gcc-internal-format
+msgid "pure-specifier on function-definition"
+msgstr ""
+
+#: cp/parser.c:17144
+#, gcc-internal-format
+msgid "keyword %<typename%> not allowed outside of templates"
+msgstr ""
+
+#: cp/parser.c:17147
+#, gcc-internal-format
+msgid "keyword %<typename%> not allowed in this context (the base class is implicitly a type)"
+msgstr ""
+
+#: cp/parser.c:17229
+#, gcc-internal-format
+msgid "types may not be defined in an exception-specification"
+msgstr ""
+
+#: cp/parser.c:17410
+#, gcc-internal-format
+msgid "types may not be defined in exception-declarations"
+msgstr ""
+
+#: cp/parser.c:18303
+#, gcc-internal-format
+msgid "specializing member %<%T::%E%> requires %<template<>%> syntax"
+msgstr ""
+
+#: cp/parser.c:18308
+#, gcc-internal-format
+msgid "invalid declaration of %<%T::%E%>"
+msgstr ""
+
+#: cp/parser.c:18312
+#, gcc-internal-format
+msgid "too few template-parameter-lists"
+msgstr ""
+
+#. Otherwise, there are too many template parameter lists.  We have
+#. something like:
+#.
+#. template <class T> template <class U> void S::f();
+#: cp/parser.c:18319
+#, gcc-internal-format
+msgid "too many template-parameter-lists"
+msgstr ""
+
+#: cp/parser.c:18607
+#, gcc-internal-format
+msgid "named return values are no longer supported"
+msgstr ""
+
+#: cp/parser.c:18687
+#, gcc-internal-format
+msgid "invalid declaration of member template in local class"
+msgstr ""
+
+#: cp/parser.c:18696
+#, gcc-internal-format
+msgid "template with C linkage"
+msgstr ""
+
+#: cp/parser.c:18844
+#, gcc-internal-format
+msgid "template declaration of %<typedef%>"
+msgstr ""
+
+#: cp/parser.c:18913
+#, gcc-internal-format
+msgid "explicit template specialization cannot have a storage class"
+msgstr ""
+
+#: cp/parser.c:19138
+#, gcc-internal-format
+msgid "%<>>%> should be %<> >%> within a nested template argument list"
+msgstr ""
+
+#: cp/parser.c:19151
+#, gcc-internal-format
+msgid "spurious %<>>%>, use %<>%> to terminate a template argument list"
+msgstr ""
+
+#: cp/parser.c:19494
+#, gcc-internal-format
+msgid "invalid use of %qD in linkage specification"
+msgstr ""
+
+#: cp/parser.c:19507
+#, gcc-internal-format
+msgid "%<__thread%> before %qD"
+msgstr ""
+
+#: cp/parser.c:19828
+#, gcc-internal-format
+msgid "%qs tag used in naming %q#T"
+msgstr ""
+
+#: cp/parser.c:19849
+#, gcc-internal-format
+msgid "%qD redeclared with different access"
+msgstr ""
+
+#: cp/parser.c:19868
+#, gcc-internal-format
+msgid "%<template%> (as a disambiguator) is only allowed within templates"
+msgstr ""
+
+#: cp/parser.c:20135 cp/parser.c:21063 cp/parser.c:21196
+#, gcc-internal-format
+msgid "misplaced %<@%D%> Objective-C++ construct"
+msgstr ""
+
+#: cp/parser.c:20280
+#, gcc-internal-format
+msgid "%<@encode%> must specify a type as an argument"
+msgstr ""
+
+#: cp/parser.c:20596
+#, gcc-internal-format
+msgid "invalid Objective-C++ selector name"
+msgstr ""
+
+#: cp/parser.c:20927
+#, gcc-internal-format
+msgid "identifier expected after %<@protocol%>"
+msgstr ""
+
+#: cp/parser.c:22266
+#, gcc-internal-format
+msgid "parenthesized initialization is not allowed in OpenMP %<for%> loop"
+msgstr ""
+
+#: cp/parser.c:22434 cp/pt.c:11413
+#, gcc-internal-format
+msgid "iteration variable %qD should not be reduction"
+msgstr ""
+
+#: cp/parser.c:22501
+#, gcc-internal-format
+msgid "not enough collapsed for loops"
+msgstr ""
+
+#: cp/parser.c:22963
+#, gcc-internal-format
+msgid "junk at end of %<#pragma GCC pch_preprocess%>"
+msgstr ""
+
+#: cp/parser.c:23126
+#, gcc-internal-format
+msgid "inter-module optimizations not implemented for C++"
+msgstr ""
+
+#: cp/pt.c:272
+#, gcc-internal-format
+msgid "data member %qD cannot be a member template"
+msgstr ""
+
+#: cp/pt.c:284
+#, gcc-internal-format
+msgid "invalid member template declaration %qD"
+msgstr ""
+
+#: cp/pt.c:651
+#, gcc-internal-format
+msgid "explicit specialization in non-namespace scope %qD"
+msgstr ""
+
+#: cp/pt.c:665
+#, gcc-internal-format
+msgid "enclosing class templates are not explicitly specialized"
+msgstr ""
+
+#: cp/pt.c:751
+#, gcc-internal-format
+msgid "specialization of %qD must appear at namespace scope"
+msgstr ""
+
+#: cp/pt.c:759
+#, gcc-internal-format
+msgid "specialization of %qD in different namespace"
+msgstr ""
+
+#: cp/pt.c:760 cp/pt.c:862
+#, gcc-internal-format
+msgid "  from definition of %q+#D"
+msgstr ""
+
+#: cp/pt.c:777
+#, gcc-internal-format
+msgid "explicit instantiation of %qD in namespace %qD (which does not enclose namespace %qD)"
+msgstr ""
+
+#: cp/pt.c:795
+#, gcc-internal-format
+msgid "name of class shadows template template parameter %qD"
+msgstr ""
+
+#: cp/pt.c:828
+#, gcc-internal-format
+msgid "specialization of %qT after instantiation"
+msgstr ""
+
+#: cp/pt.c:861
+#, gcc-internal-format
+msgid "specializing %q#T in different namespace"
+msgstr ""
+
+#. But if we've had an implicit instantiation, that's a
+#. problem ([temp.expl.spec]/6).
+#: cp/pt.c:899
+#, gcc-internal-format
+msgid "specialization %qT after instantiation %qT"
+msgstr ""
+
+#: cp/pt.c:913
+#, gcc-internal-format
+msgid "explicit specialization of non-template %qT"
+msgstr ""
+
+#: cp/pt.c:1329
+#, gcc-internal-format
+msgid "specialization of %qD after instantiation"
+msgstr ""
+
+#: cp/pt.c:1787
+#, gcc-internal-format
+msgid "%qD is not a function template"
+msgstr ""
+
+#: cp/pt.c:1996
+#, gcc-internal-format
+msgid "template-id %qD for %q+D does not match any template declaration"
+msgstr ""
+
+#: cp/pt.c:1999
+#, gcc-internal-format
+msgid "saw %d %<template<>%>, need %d for specializing a member function template"
+msgstr ""
+
+#: cp/pt.c:2008
+#, gcc-internal-format
+msgid "ambiguous template specialization %qD for %q+D"
+msgstr ""
+
+#. This case handles bogus declarations like template <>
+#. template <class T> void f<int>();
+#: cp/pt.c:2244 cp/pt.c:2298
+#, gcc-internal-format
+msgid "template-id %qD in declaration of primary template"
+msgstr ""
+
+#: cp/pt.c:2257
+#, gcc-internal-format
+msgid "template parameter list used in explicit instantiation"
+msgstr ""
+
+#: cp/pt.c:2263
+#, gcc-internal-format
+msgid "definition provided for explicit instantiation"
+msgstr ""
+
+#: cp/pt.c:2271
+#, gcc-internal-format
+msgid "too many template parameter lists in declaration of %qD"
+msgstr ""
+
+#: cp/pt.c:2274
+#, gcc-internal-format
+msgid "too few template parameter lists in declaration of %qD"
+msgstr ""
+
+#: cp/pt.c:2276
+#, gcc-internal-format
+msgid "explicit specialization of %qD must be introduced by %<template <>%>"
+msgstr ""
+
+#: cp/pt.c:2295
+#, gcc-internal-format
+msgid "function template partial specialization %qD is not allowed"
+msgstr ""
+
+#: cp/pt.c:2327
+#, gcc-internal-format
+msgid "default argument specified in explicit specialization"
+msgstr ""
+
+#: cp/pt.c:2357
+#, gcc-internal-format
+msgid "%qD is not a template function"
+msgstr ""
+
+#: cp/pt.c:2365
+#, gcc-internal-format
+msgid "%qD is not declared in %qD"
+msgstr ""
+
+#. From [temp.expl.spec]:
+#.
+#. If such an explicit specialization for the member
+#. of a class template names an implicitly-declared
+#. special member function (clause _special_), the
+#. program is ill-formed.
+#.
+#. Similar language is found in [temp.explicit].
+#: cp/pt.c:2427
+#, gcc-internal-format
+msgid "specialization of implicitly-declared special member function"
+msgstr ""
+
+#: cp/pt.c:2471
+#, gcc-internal-format
+msgid "no member function %qD declared in %qT"
+msgstr ""
+
+#: cp/pt.c:3090
+#, gcc-internal-format
+msgid "base initializer expansion %<%T%> contains no parameter packs"
+msgstr ""
+
+#: cp/pt.c:3151
+#, gcc-internal-format
+msgid "expansion pattern %<%T%> contains no argument packs"
+msgstr ""
+
+#: cp/pt.c:3153
+#, gcc-internal-format
+msgid "expansion pattern %<%E%> contains no argument packs"
+msgstr ""
+
+#: cp/pt.c:3194
+#, gcc-internal-format
+msgid "parameter packs not expanded with %<...%>:"
+msgstr ""
+
+#: cp/pt.c:3209 cp/pt.c:3897
+#, gcc-internal-format
+msgid "        %qD"
+msgstr ""
+
+#: cp/pt.c:3211
+#, gcc-internal-format
+msgid "        <anonymous>"
+msgstr ""
+
+#: cp/pt.c:3328
+#, gcc-internal-format
+msgid "declaration of %q+#D"
+msgstr ""
+
+#: cp/pt.c:3329
+#, gcc-internal-format
+msgid " shadows template parm %q+#D"
+msgstr ""
+
+#: cp/pt.c:3893
+#, gcc-internal-format
+msgid "template parameters not used in partial specialization:"
+msgstr ""
+
+#: cp/pt.c:3908
+#, gcc-internal-format
+msgid "partial specialization %qT does not specialize any template arguments"
+msgstr ""
+
+#: cp/pt.c:3953
+#, gcc-internal-format
+msgid "parameter pack argument %qE must be at the end of the template argument list"
+msgstr ""
+
+#: cp/pt.c:3956
+#, gcc-internal-format
+msgid "parameter pack argument %qT must be at the end of the template argument list"
+msgstr ""
+
+#: cp/pt.c:3975
+#, gcc-internal-format
+msgid "template argument %qE involves template parameter(s)"
+msgstr ""
+
+#: cp/pt.c:4022
+#, gcc-internal-format
+msgid "type %qT of template argument %qE depends on a template parameter"
+msgid_plural "type %qT of template argument %qE depends on template parameters"
+msgstr[0] ""
+
+#: cp/pt.c:4129
+#, gcc-internal-format
+msgid "no default argument for %qD"
+msgstr ""
+
+#: cp/pt.c:4150
+#, gcc-internal-format
+msgid "parameter pack %qE must be at the end of the template parameter list"
+msgstr ""
+
+#: cp/pt.c:4153
+#, gcc-internal-format
+msgid "parameter pack %qT must be at the end of the template parameter list"
+msgstr ""
+
+#: cp/pt.c:4190
+#, gcc-internal-format
+msgid "default template arguments may not be used in function template friend re-declaration"
+msgstr ""
+
+#: cp/pt.c:4193
+#, gcc-internal-format
+msgid "default template arguments may not be used in function template friend declarations"
+msgstr ""
+
+#: cp/pt.c:4196
+#, gcc-internal-format
+msgid "default template arguments may not be used in function templates without -std=c++0x or -std=gnu++0x"
+msgstr ""
+
+#: cp/pt.c:4199
+#, gcc-internal-format
+msgid "default template arguments may not be used in partial specializations"
+msgstr ""
+
+#: cp/pt.c:4202 cp/pt.c:4253
+#, gcc-internal-format
+msgid "default argument for template parameter for class enclosing %qD"
+msgstr ""
+
+#: cp/pt.c:4346
+#, gcc-internal-format
+msgid "template class without a name"
+msgstr ""
+
+#. [temp.mem]
+#.
+#. A destructor shall not be a member template.
+#: cp/pt.c:4356
+#, gcc-internal-format
+msgid "destructor %qD declared as member template"
+msgstr ""
+
+#. [basic.stc.dynamic.allocation]
+#.
+#. An allocation function can be a function
+#. template. ... Template allocation functions shall
+#. have two or more parameters.
+#: cp/pt.c:4371
+#, gcc-internal-format
+msgid "invalid template declaration of %qD"
+msgstr ""
+
+#: cp/pt.c:4488
+#, gcc-internal-format
+msgid "template definition of non-template %q#D"
+msgstr ""
+
+#: cp/pt.c:4531
+#, gcc-internal-format
+msgid "expected %d levels of template parms for %q#D, got %d"
+msgstr ""
+
+#: cp/pt.c:4543
+#, gcc-internal-format
+msgid "got %d template parameters for %q#D"
+msgstr ""
+
+#: cp/pt.c:4546
+#, gcc-internal-format
+msgid "got %d template parameters for %q#T"
+msgstr ""
+
+#: cp/pt.c:4548
+#, gcc-internal-format
+msgid "  but %d required"
+msgstr ""
+
+#: cp/pt.c:4569
+#, gcc-internal-format
+msgid "template arguments to %qD do not match original template %qD"
+msgstr ""
+
+#: cp/pt.c:4573
+#, gcc-internal-format
+msgid "use template<> for an explicit specialization"
+msgstr ""
+
+#: cp/pt.c:4669
+#, gcc-internal-format
+msgid "%qT is not a template type"
+msgstr ""
+
+#: cp/pt.c:4682
+#, gcc-internal-format
+msgid "template specifiers not specified in declaration of %qD"
+msgstr ""
+
+#: cp/pt.c:4693
+#, gcc-internal-format
+msgid "redeclared with %d template parameter"
+msgid_plural "redeclared with %d template parameters"
+msgstr[0] ""
+
+#: cp/pt.c:4697
+#, gcc-internal-format
+msgid "previous declaration %q+D used %d template parameter"
+msgid_plural "previous declaration %q+D used %d template parameters"
+msgstr[0] ""
+
+#: cp/pt.c:4734
+#, gcc-internal-format
+msgid "template parameter %q+#D"
+msgstr ""
+
+#: cp/pt.c:4735
+#, gcc-internal-format
+msgid "redeclared here as %q#D"
+msgstr ""
+
+#. We have in [temp.param]:
+#.
+#. A template-parameter may not be given default arguments
+#. by two different declarations in the same scope.
+#: cp/pt.c:4745
+#, gcc-internal-format
+msgid "redefinition of default argument for %q#D"
+msgstr ""
+
+#: cp/pt.c:4747
+#, gcc-internal-format
+msgid "original definition appeared here"
+msgstr ""
+
+#: cp/pt.c:4851
+#, gcc-internal-format
+msgid "%qE is not a valid template argument for type %qT because function %qD has not external linkage"
+msgstr ""
+
+#: cp/pt.c:4870 cp/pt.c:5157
+#, gcc-internal-format
+msgid "%qE is not a valid template argument for type %qT"
+msgstr ""
+
+#: cp/pt.c:4872
+#, gcc-internal-format
+msgid "it must be a pointer-to-member of the form `&X::Y'"
+msgstr ""
+
+#: cp/pt.c:4908
+#, gcc-internal-format
+msgid "%qE is not a valid template argument for type %qT because string literals can never be used in this context"
+msgstr ""
+
+#: cp/pt.c:4985
+#, gcc-internal-format
+msgid "%qE is not a valid template argument for type %qT because it is a non-constant expression"
+msgstr ""
+
+#: cp/pt.c:5029
+#, gcc-internal-format
+msgid "%qD is not a valid template argument because %qD is a variable, not the address of a variable"
+msgstr ""
+
+#: cp/pt.c:5047
+#, gcc-internal-format
+msgid "%qE is not a valid template argument of type %qT because %qE is not a variable"
+msgstr ""
+
+#: cp/pt.c:5054
+#, gcc-internal-format
+msgid "%qE is not a valid template argument of type %qT because %qD does not have external linkage"
+msgstr ""
+
+#: cp/pt.c:5084
+#, gcc-internal-format
+msgid "%qE is not a valid template argument for type %qT because of conflicts in cv-qualification"
+msgstr ""
+
+#: cp/pt.c:5091
+#, gcc-internal-format
+msgid "%qE is not a valid template argument for type %qT because it is not an lvalue"
+msgstr ""
+
+#: cp/pt.c:5108
+#, gcc-internal-format
+msgid "%q#D is not a valid template argument for type %qT because a reference variable does not have a constant address"
+msgstr ""
+
+#: cp/pt.c:5117
+#, gcc-internal-format
+msgid "%qE is not a valid template argument for type %qT because it is not an object with external linkage"
+msgstr ""
+
+#: cp/pt.c:5125
+#, gcc-internal-format
+msgid "%qE is not a valid template argument for type %qT because object %qD has not external linkage"
+msgstr ""
+
+#: cp/pt.c:5158
+#, gcc-internal-format
+msgid "it must be the address of a function with external linkage"
+msgstr ""
+
+#: cp/pt.c:5172
+#, gcc-internal-format
+msgid "%qE is not a valid template argument for type %qT because it is a pointer"
+msgstr ""
+
+#: cp/pt.c:5174
+#, gcc-internal-format
+msgid "try using %qE instead"
+msgstr ""
+
+#: cp/pt.c:5212
+#, gcc-internal-format
+msgid "%qE is not a valid template argument for type %qT because it is of type %qT"
+msgstr ""
+
+#: cp/pt.c:5218
+#, gcc-internal-format
+msgid "standard conversions are not allowed in this context"
+msgstr ""
+
+#: cp/pt.c:5551
+#, gcc-internal-format
+msgid "injected-class-name %qD used as template template argument"
+msgstr ""
+
+#: cp/pt.c:5576
+#, gcc-internal-format
+msgid "to refer to a type member of a template parameter, use %<typename %E%>"
+msgstr ""
+
+#: cp/pt.c:5592 cp/pt.c:5611 cp/pt.c:5657
+#, gcc-internal-format
+msgid "type/value mismatch at argument %d in template parameter list for %qD"
+msgstr ""
+
+#: cp/pt.c:5596
+#, gcc-internal-format
+msgid "  expected a constant of type %qT, got %qT"
+msgstr ""
+
+#: cp/pt.c:5600
+#, gcc-internal-format
+msgid "  expected a class template, got %qE"
+msgstr ""
+
+#: cp/pt.c:5602
+#, gcc-internal-format
+msgid "  expected a type, got %qE"
+msgstr ""
+
+#: cp/pt.c:5615
+#, gcc-internal-format
+msgid "  expected a type, got %qT"
+msgstr ""
+
+#: cp/pt.c:5617
+#, gcc-internal-format
+msgid "  expected a class template, got %qT"
+msgstr ""
+
+#: cp/pt.c:5660
+#, gcc-internal-format
+msgid "  expected a template of type %qD, got %qT"
+msgstr ""
+
+#. Not sure if this is reachable, but it doesn't hurt
+#. to be robust.
+#: cp/pt.c:5693
+#, gcc-internal-format
+msgid "type mismatch in nontype parameter pack"
+msgstr ""
+
+#: cp/pt.c:5715
+#, gcc-internal-format
+msgid "could not convert template argument %qE to %qT"
+msgstr ""
+
+#: cp/pt.c:5780
+#, gcc-internal-format
+msgid "wrong number of template arguments (%d, should be %d)"
+msgstr ""
+
+#: cp/pt.c:5922
+#, gcc-internal-format
+msgid "wrong number of template arguments (%d, should be %d%s)"
+msgstr ""
+
+#: cp/pt.c:5926
+#, gcc-internal-format
+msgid "provided for %q+D"
+msgstr ""
+
+#: cp/pt.c:5993
+#, gcc-internal-format
+msgid "cannot expand %<%E%> into a fixed-length argument list"
+msgstr ""
+
+#: cp/pt.c:5996
+#, gcc-internal-format
+msgid "cannot expand %<%T%> into a fixed-length argument list"
+msgstr ""
+
+#: cp/pt.c:6019
+#, gcc-internal-format
+msgid "template argument %d is invalid"
+msgstr ""
+
+#: cp/pt.c:6347
+#, gcc-internal-format
+msgid "non-template type %qT used as a template"
+msgstr ""
+
+#: cp/pt.c:6349
+#, gcc-internal-format
+msgid "for template declaration %q+D"
+msgstr ""
+
+#: cp/pt.c:7060
+#, gcc-internal-format
+msgid "template instantiation depth exceeds maximum of %d (use -ftemplate-depth= to increase the maximum) instantiating %qD"
+msgstr ""
+
+#: cp/pt.c:8326
+#, gcc-internal-format
+msgid "mismatched argument pack lengths while expanding %<%T%>"
+msgstr ""
+
+#: cp/pt.c:8330
+#, gcc-internal-format
+msgid "mismatched argument pack lengths while expanding %<%E%>"
+msgstr ""
+
+#: cp/pt.c:9370
+#, gcc-internal-format
+msgid "instantiation of %q+D as type %qT"
+msgstr ""
+
+#. It may seem that this case cannot occur, since:
+#.
+#. typedef void f();
+#. void g() { f x; }
+#.
+#. declares a function, not a variable.  However:
+#.
+#. typedef void f();
+#. template <typename T> void g() { T t; }
+#. template void g<f>();
+#.
+#. is an attempt to declare a variable with function
+#. type.
+#: cp/pt.c:9515
+#, gcc-internal-format
+msgid "variable %qD has function type"
+msgstr ""
+
+#: cp/pt.c:9678
+#, gcc-internal-format
+msgid "invalid parameter type %qT"
+msgstr ""
+
+#: cp/pt.c:9680
+#, gcc-internal-format
+msgid "in declaration %q+D"
+msgstr ""
+
+#: cp/pt.c:9757
+#, gcc-internal-format
+msgid "function returning an array"
+msgstr ""
+
+#: cp/pt.c:9759
+#, gcc-internal-format
+msgid "function returning a function"
+msgstr ""
+
+#: cp/pt.c:9786
+#, gcc-internal-format
+msgid "creating pointer to member function of non-class type %qT"
+msgstr ""
+
+#: cp/pt.c:10016
+#, gcc-internal-format
+msgid "array bound is not an integer constant"
+msgstr ""
+
+#: cp/pt.c:10036
+#, gcc-internal-format
+msgid "creating array with negative size (%qE)"
+msgstr ""
+
+#: cp/pt.c:10285
+#, gcc-internal-format
+msgid "forming reference to void"
+msgstr ""
+
+#: cp/pt.c:10287
+#, gcc-internal-format
+msgid "forming pointer to reference type %qT"
+msgstr ""
+
+#: cp/pt.c:10289
+#, gcc-internal-format
+msgid "forming reference to reference type %qT"
+msgstr ""
+
+#: cp/pt.c:10338
+#, gcc-internal-format
+msgid "creating pointer to member of non-class type %qT"
+msgstr ""
+
+#: cp/pt.c:10344
+#, gcc-internal-format
+msgid "creating pointer to member reference type %qT"
+msgstr ""
+
+#: cp/pt.c:10350
+#, gcc-internal-format
+msgid "creating pointer to member of type void"
+msgstr ""
+
+#: cp/pt.c:10412
+#, gcc-internal-format
+msgid "creating array of %qT"
+msgstr ""
+
+#: cp/pt.c:10418
+#, gcc-internal-format
+msgid "creating array of %qT, which is an abstract class type"
+msgstr ""
+
+#: cp/pt.c:10470
+#, gcc-internal-format
+msgid "%qT is not a class, struct, or union type"
+msgstr ""
+
+#: cp/pt.c:10506
+#, gcc-internal-format
+msgid "%qT resolves to %qT, which is not an enumeration type"
+msgstr ""
+
+#: cp/pt.c:10509
+#, gcc-internal-format
+msgid "%qT resolves to %qT, which is is not a class type"
+msgstr ""
+
+#: cp/pt.c:10630
+#, gcc-internal-format
+msgid "use of %qs in template"
+msgstr ""
+
+#: cp/pt.c:10761
+#, gcc-internal-format
+msgid "qualifying type %qT does not match destructor name ~%qT"
+msgstr ""
+
+#: cp/pt.c:10776
+#, gcc-internal-format
+msgid "dependent-name %qE is parsed as a non-type, but instantiation yields a type"
+msgstr ""
+
+#: cp/pt.c:10778
+#, gcc-internal-format
+msgid "say %<typename %E%> if a type is meant"
+msgstr ""
+
+#: cp/pt.c:10924
+#, gcc-internal-format
+msgid "using invalid field %qD"
+msgstr ""
+
+#: cp/pt.c:11254 cp/pt.c:11926
+#, gcc-internal-format
+msgid "invalid use of pack expansion expression"
+msgstr ""
+
+#: cp/pt.c:11258 cp/pt.c:11930
+#, gcc-internal-format
+msgid "use %<...%> to expand argument pack"
+msgstr ""
+
+#: cp/pt.c:12090
+#, gcc-internal-format
+msgid "a cast to a type other than an integral or enumeration type cannot appear in a constant-expression"
+msgstr ""
+
+#: cp/pt.c:12630
+#, gcc-internal-format
+msgid "%qT is not a class or namespace"
+msgstr ""
+
+#: cp/pt.c:12633
+#, gcc-internal-format
+msgid "%qD is not a class or namespace"
+msgstr ""
+
+#: cp/pt.c:12896
+#, gcc-internal-format
+msgid "%qT is/uses anonymous type"
+msgstr ""
+
+#: cp/pt.c:12898
+#, gcc-internal-format
+msgid "template argument for %qD uses local type %qT"
+msgstr ""
+
+#: cp/pt.c:12908
+#, gcc-internal-format
+msgid "%qT is a variably modified type"
+msgstr ""
+
+#: cp/pt.c:12919
+#, gcc-internal-format
+msgid "integral expression %qE is not constant"
+msgstr ""
+
+#: cp/pt.c:12937
+#, gcc-internal-format
+msgid "  trying to instantiate %qD"
+msgstr ""
+
+#: cp/pt.c:16016
+#, gcc-internal-format
+msgid "ambiguous class template instantiation for %q#T"
+msgstr ""
+
+#: cp/pt.c:16020
+#, gcc-internal-format
+msgid "%s %+#T"
+msgstr ""
+
+#: cp/pt.c:16044 cp/pt.c:16127
+#, gcc-internal-format
+msgid "explicit instantiation of non-template %q#D"
+msgstr ""
+
+#: cp/pt.c:16059
+#, gcc-internal-format
+msgid "%qD is not a static data member of a class template"
+msgstr ""
+
+#: cp/pt.c:16065 cp/pt.c:16122
+#, gcc-internal-format
+msgid "no matching template for %qD found"
+msgstr ""
+
+#: cp/pt.c:16070
+#, gcc-internal-format
+msgid "type %qT for explicit instantiation %qD does not match declared type %qT"
+msgstr ""
+
+#: cp/pt.c:16078
+#, gcc-internal-format
+msgid "explicit instantiation of %q#D"
+msgstr ""
+
+#: cp/pt.c:16114
+#, gcc-internal-format
+msgid "duplicate explicit instantiation of %q#D"
+msgstr ""
+
+#: cp/pt.c:16137 cp/pt.c:16229
+#, gcc-internal-format
+msgid "ISO C++ 1998 forbids the use of %<extern%> on explicit instantiations"
+msgstr ""
+
+#: cp/pt.c:16142 cp/pt.c:16246
+#, gcc-internal-format
+msgid "storage class %qD applied to template instantiation"
+msgstr ""
+
+#: cp/pt.c:16207
+#, gcc-internal-format
+msgid "explicit instantiation of non-template type %qT"
+msgstr ""
+
+#: cp/pt.c:16216
+#, gcc-internal-format
+msgid "explicit instantiation of %q#T before definition of template"
+msgstr ""
+
+#: cp/pt.c:16234
+#, gcc-internal-format
+msgid "ISO C++ forbids the use of %qE on explicit instantiations"
+msgstr ""
+
+#: cp/pt.c:16280
+#, gcc-internal-format
+msgid "duplicate explicit instantiation of %q#T"
+msgstr ""
+
+#. [temp.explicit]
+#.
+#. The definition of a non-exported function template, a
+#. non-exported member function template, or a non-exported
+#. member function or static data member of a class template
+#. shall be present in every translation unit in which it is
+#. explicitly instantiated.
+#: cp/pt.c:16744
+#, gcc-internal-format
+msgid "explicit instantiation of %qD but no definition available"
+msgstr ""
+
+#: cp/pt.c:16910
+#, gcc-internal-format
+msgid "template instantiation depth exceeds maximum of %d instantiating %q+D, possibly from virtual table generation (use -ftemplate-depth= to increase the maximum)"
+msgstr ""
+
+#: cp/pt.c:17265
+#, gcc-internal-format
+msgid "%q#T is not a valid type for a template constant parameter"
+msgstr ""
+
+#: cp/pt.c:18262
+#, gcc-internal-format
+msgid "deducing from brace-enclosed initializer list requires #include <initializer_list>"
+msgstr ""
+
+#: cp/pt.c:18315
+#, gcc-internal-format
+msgid "variable %q#D with %<auto%> type used in its own initializer"
+msgstr ""
+
+#: cp/pt.c:18337
+#, gcc-internal-format
+msgid "unable to deduce %qT from %qE"
+msgstr ""
+
+#: cp/pt.c:18348
+#, gcc-internal-format
+msgid "inconsistent deduction for %qT: %qT and then %qT"
+msgstr ""
+
+#: cp/repo.c:119
+#, gcc-internal-format
+msgid "-frepo must be used with -c"
+msgstr ""
+
+#: cp/repo.c:209
+#, gcc-internal-format
+msgid "mysterious repository information in %s"
+msgstr ""
+
+#: cp/repo.c:227
+#, gcc-internal-format
+msgid "can't create repository information file %qs"
+msgstr ""
+
+#: cp/rtti.c:290
+#, gcc-internal-format
+msgid "cannot use typeid with -fno-rtti"
+msgstr ""
+
+#: cp/rtti.c:296
+#, gcc-internal-format
+msgid "must #include <typeinfo> before using typeid"
+msgstr ""
+
+#: cp/rtti.c:393
+#, gcc-internal-format
+msgid "cannot create type information for type %qT because it involves types of variable size"
+msgstr ""
+
+#: cp/rtti.c:651 cp/rtti.c:666
+#, gcc-internal-format
+msgid "dynamic_cast of %q#D to %q#T can never succeed"
+msgstr ""
+
+#: cp/rtti.c:677
+#, gcc-internal-format
+msgid "%<dynamic_cast%> not permitted with -fno-rtti"
+msgstr ""
+
+#: cp/rtti.c:756
+#, gcc-internal-format
+msgid "cannot dynamic_cast %qE (of type %q#T) to type %q#T (%s)"
+msgstr ""
+
+#: cp/search.c:261
+#, gcc-internal-format
+msgid "%qT is an ambiguous base of %qT"
+msgstr ""
+
+#: cp/search.c:279
+#, gcc-internal-format
+msgid "%qT is an inaccessible base of %qT"
+msgstr ""
+
+#: cp/search.c:1842
+#, gcc-internal-format
+msgid "deprecated covariant return type for %q+#D"
+msgstr ""
+
+#: cp/search.c:1844 cp/search.c:1859 cp/search.c:1864 cp/search.c:1883
+#, gcc-internal-format
+msgid "  overriding %q+#D"
+msgstr ""
+
+#: cp/search.c:1858
+#, gcc-internal-format
+msgid "invalid covariant return type for %q+#D"
+msgstr ""
+
+#: cp/search.c:1863
+#, gcc-internal-format
+msgid "conflicting return type specified for %q+#D"
+msgstr ""
+
+#: cp/search.c:1873
+#, gcc-internal-format
+msgid "looser throw specifier for %q+#F"
+msgstr ""
+
+#: cp/search.c:1874
+#, gcc-internal-format
+msgid "  overriding %q+#F"
+msgstr ""
+
+#: cp/search.c:1882
+#, gcc-internal-format
+msgid "conflicting type attributes specified for %q+#D"
+msgstr ""
+
+#: cp/search.c:1893
+#, gcc-internal-format
+msgid "overriding non-deleted function %q+D"
+msgstr ""
+
+#: cp/search.c:1897
+#, gcc-internal-format
+msgid "non-deleted function %q+D"
+msgstr ""
+
+#: cp/search.c:1898
+#, gcc-internal-format
+msgid "overriding deleted function %q+D"
+msgstr ""
+
+#. A static member function cannot match an inherited
+#. virtual member function.
+#: cp/search.c:1990
+#, gcc-internal-format
+msgid "%q+#D cannot be declared"
+msgstr ""
+
+#: cp/search.c:1991
+#, gcc-internal-format
+msgid "  since %q+#D declared in base class"
+msgstr ""
+
+#: cp/semantics.c:760
+#, gcc-internal-format
+msgid "suggest explicit braces around empty body in %<do%> statement"
+msgstr ""
+
+#: cp/semantics.c:1285
+#, gcc-internal-format
+msgid "type of asm operand %qE could not be determined"
+msgstr ""
+
+#: cp/semantics.c:1343
+#, gcc-internal-format
+msgid "__label__ declarations are only allowed in function scopes"
+msgstr ""
+
+#: cp/semantics.c:1441
+#, gcc-internal-format
+msgid "invalid use of member %q+D in static member function"
+msgstr ""
+
+#: cp/semantics.c:1443
+#, gcc-internal-format
+msgid "invalid use of non-static data member %q+D"
+msgstr ""
+
+#: cp/semantics.c:1444 cp/semantics.c:1508
+#, gcc-internal-format
+msgid "from this location"
+msgstr ""
+
+#: cp/semantics.c:1507
+#, gcc-internal-format
+msgid "object missing in reference to %q+D"
+msgstr ""
+
+#: cp/semantics.c:2063
+#, gcc-internal-format
+msgid "arguments to destructor are not allowed"
+msgstr ""
+
+#: cp/semantics.c:2121
+#, gcc-internal-format
+msgid "%<this%> is unavailable for static member functions"
+msgstr ""
+
+#: cp/semantics.c:2127
+#, gcc-internal-format
+msgid "invalid use of %<this%> in non-member function"
+msgstr ""
+
+#: cp/semantics.c:2129
+#, gcc-internal-format
+msgid "invalid use of %<this%> at top level"
+msgstr ""
+
+#: cp/semantics.c:2153
+#, gcc-internal-format
+msgid "invalid qualifying scope in pseudo-destructor name"
+msgstr ""
+
+#: cp/semantics.c:2158 cp/typeck.c:2351
+#, gcc-internal-format
+msgid "qualified type %qT does not match destructor name ~%qT"
+msgstr ""
+
+#: cp/semantics.c:2180
+#, gcc-internal-format
+msgid "%qE is not of type %qT"
+msgstr ""
+
+#: cp/semantics.c:2224
+#, gcc-internal-format
+msgid "compound literal of non-object type %qT"
+msgstr ""
+
+#: cp/semantics.c:2309
+#, gcc-internal-format
+msgid "template type parameters must use the keyword %<class%> or %<typename%>"
+msgstr ""
+
+#: cp/semantics.c:2351
+#, gcc-internal-format
+msgid "invalid use of type %qT as a default value for a template template-parameter"
+msgstr ""
+
+#: cp/semantics.c:2354
+#, gcc-internal-format
+msgid "invalid default argument for a template template parameter"
+msgstr ""
+
+#: cp/semantics.c:2371
+#, gcc-internal-format
+msgid "definition of %q#T inside template parameter list"
+msgstr ""
+
+#: cp/semantics.c:2402
+#, gcc-internal-format
+msgid "invalid definition of qualified type %qT"
+msgstr ""
+
+#: cp/semantics.c:2618
+#, gcc-internal-format
+msgid "invalid base-class specification"
+msgstr ""
+
+#: cp/semantics.c:2630
+#, gcc-internal-format
+msgid "base class %qT has cv qualifiers"
+msgstr ""
+
+#: cp/semantics.c:2655
+#, gcc-internal-format
+msgid "incomplete type %qT used in nested name specifier"
+msgstr ""
+
+#: cp/semantics.c:2659
+#, gcc-internal-format
+msgid "reference to %<%T::%D%> is ambiguous"
+msgstr ""
+
+#: cp/semantics.c:2664 cp/typeck.c:2151
+#, gcc-internal-format
+msgid "%qD is not a member of %qT"
+msgstr ""
+
+#: cp/semantics.c:2667
+#, gcc-internal-format
+msgid "%qD is not a member of %qD"
+msgstr ""
+
+#: cp/semantics.c:2669
+#, gcc-internal-format
+msgid "%<::%D%> has not been declared"
+msgstr ""
+
+#: cp/semantics.c:2886 cp/semantics.c:5637
+#, gcc-internal-format
+msgid "%qD is not captured"
+msgstr ""
+
+#: cp/semantics.c:2892
+#, gcc-internal-format
+msgid "use of %<auto%> variable from containing function"
+msgstr ""
+
+#: cp/semantics.c:2894
+#, gcc-internal-format
+msgid "  %q+#D declared here"
+msgstr ""
+
+#: cp/semantics.c:2932
+#, gcc-internal-format
+msgid "template parameter %qD of type %qT is not allowed in an integral constant expression because it is not of integral or enumeration type"
+msgstr ""
+
+#: cp/semantics.c:3096
+#, gcc-internal-format
+msgid "%qD cannot appear in a constant-expression"
+msgstr ""
+
+#: cp/semantics.c:3104
+#, gcc-internal-format
+msgid "use of namespace %qD as expression"
+msgstr ""
+
+#: cp/semantics.c:3109
+#, gcc-internal-format
+msgid "use of class template %qT as expression"
+msgstr ""
+
+#. Ambiguous reference to base members.
+#: cp/semantics.c:3115
+#, gcc-internal-format
+msgid "request for member %qD is ambiguous in multiple inheritance lattice"
+msgstr ""
+
+#: cp/semantics.c:3237 cp/semantics.c:5019
+#, gcc-internal-format
+msgid "type of %qE is unknown"
+msgstr ""
+
+#: cp/semantics.c:3252
+#, gcc-internal-format
+msgid "cannot apply %<offsetof%> to destructor %<~%T%>"
+msgstr ""
+
+#: cp/semantics.c:3263
+#, gcc-internal-format
+msgid "cannot apply %<offsetof%> to member function %qD"
+msgstr ""
+
+#: cp/semantics.c:3732
+#, gcc-internal-format
+msgid "%qD is not a variable in clause %qs"
+msgstr ""
+
+#: cp/semantics.c:3741 cp/semantics.c:3763 cp/semantics.c:3785
+#, gcc-internal-format
+msgid "%qD appears more than once in data clauses"
+msgstr ""
+
+#: cp/semantics.c:3755
+#, gcc-internal-format
+msgid "%qD is not a variable in clause %<firstprivate%>"
+msgstr ""
+
+#: cp/semantics.c:3777
+#, gcc-internal-format
+msgid "%qD is not a variable in clause %<lastprivate%>"
+msgstr ""
+
+#: cp/semantics.c:3807
+#, gcc-internal-format
+msgid "num_threads expression must be integral"
+msgstr ""
+
+#: cp/semantics.c:3821
+#, gcc-internal-format
+msgid "schedule chunk size expression must be integral"
+msgstr ""
+
+#: cp/semantics.c:3953
+#, gcc-internal-format
+msgid "%qE has reference type for %qs"
+msgstr ""
+
+#: cp/semantics.c:4024
+#, gcc-internal-format
+msgid "%<threadprivate%> %qD is not file, namespace or block scope variable"
+msgstr ""
+
+#: cp/semantics.c:4038
+#, gcc-internal-format
+msgid "%<threadprivate%> %qE directive not in %qT definition"
+msgstr ""
+
+#: cp/semantics.c:4183
+#, gcc-internal-format
+msgid "difference between %qE and %qD does not have integer type"
+msgstr ""
+
+#. Report the error.
+#: cp/semantics.c:4709
+#, gcc-internal-format
+msgid "static assertion failed: %E"
+msgstr ""
+
+#: cp/semantics.c:4711
+#, gcc-internal-format
+msgid "non-constant condition for static assertion"
+msgstr ""
+
+#: cp/semantics.c:4796 cp/semantics.c:4925
+#, gcc-internal-format
+msgid "argument to decltype must be an expression"
+msgstr ""
+
+#: cp/semantics.c:4875
+#, gcc-internal-format
+msgid "%qE refers to a set of overloaded functions"
+msgstr ""
+
+#: cp/semantics.c:4963
+#, gcc-internal-format
+msgid "unable to determine the declared type of expression %<%E%>"
+msgstr ""
+
+#: cp/semantics.c:5224
+#, gcc-internal-format
+msgid "__is_convertible_to"
+msgstr ""
+
+#: cp/semantics.c:5265 cp/semantics.c:5275
+#, gcc-internal-format
+msgid "incomplete type %qT not allowed"
+msgstr ""
+
+#: cp/semantics.c:5338
+#, gcc-internal-format
+msgid "the type %qT of constexpr variable %qD is not literal"
+msgstr ""
+
+#: cp/semantics.c:5373
+#, gcc-internal-format
+msgid "parameter %q#D is not of literal type"
+msgstr ""
+
+#: cp/semantics.c:5386
+#, gcc-internal-format
+msgid "return type %qT of function %qD is not a literal type"
+msgstr ""
+
+#: cp/semantics.c:5683
+#, gcc-internal-format
+msgid "cannot capture %qE by reference"
+msgstr ""
+
+#: cp/semantics.c:5706
+#, gcc-internal-format
+msgid "already captured %<this%> in lambda expression"
+msgstr ""
+
+#: cp/semantics.c:5837
+#, gcc-internal-format
+msgid "%<this%> was not captured for this lambda function"
+msgstr ""
+
+#: cp/tree.c:901
+#, gcc-internal-format
+msgid "%qV qualifiers cannot be applied to %qT"
+msgstr ""
+
+#: cp/tree.c:2492
+#, gcc-internal-format
+msgid "%qE attribute can only be applied to Java class definitions"
+msgstr ""
+
+#: cp/tree.c:2521
+#, gcc-internal-format
+msgid "%qE attribute can only be applied to class definitions"
+msgstr ""
+
+#: cp/tree.c:2527
+#, gcc-internal-format
+msgid "%qE is obsolete; g++ vtables are now COM-compatible by default"
+msgstr ""
+
+#: cp/tree.c:2551
+#, gcc-internal-format
+msgid "requested init_priority is not an integer constant"
+msgstr ""
+
+#: cp/tree.c:2572
+#, gcc-internal-format
+msgid "can only use %qE attribute on file-scope definitions of objects of class type"
+msgstr ""
+
+#: cp/tree.c:2580
+#, gcc-internal-format
+msgid "requested init_priority is out of range"
+msgstr ""
+
+#: cp/tree.c:2590
+#, gcc-internal-format
+msgid "requested init_priority is reserved for internal use"
+msgstr ""
+
+#: cp/tree.c:2601
+#, gcc-internal-format
+msgid "%qE attribute is not supported on this platform"
+msgstr ""
+
+#: cp/tree.c:3191
+#, gcc-internal-format
+msgid "lang_* check: failed in %s, at %s:%d"
+msgstr ""
+
+#: cp/typeck.c:470 cp/typeck.c:504 cp/typeck.c:645
+#, gcc-internal-format
+msgid "comparison between distinct pointer types %qT and %qT lacks a cast"
+msgstr ""
+
+#: cp/typeck.c:475 cp/typeck.c:509 cp/typeck.c:649
+#, gcc-internal-format
+msgid "conversion between distinct pointer types %qT and %qT lacks a cast"
+msgstr ""
+
+#: cp/typeck.c:480 cp/typeck.c:514 cp/typeck.c:653
+#, gcc-internal-format
+msgid "conditional expression between distinct pointer types %qT and %qT lacks a cast"
+msgstr ""
+
+#: cp/typeck.c:588
+#, gcc-internal-format
+msgid "ISO C++ forbids comparison between pointer of type %<void *%> and pointer-to-function"
+msgstr ""
+
+#: cp/typeck.c:593
+#, gcc-internal-format
+msgid "ISO C++ forbids conversion between pointer of type %<void *%> and pointer-to-function"
+msgstr ""
+
+#: cp/typeck.c:598
+#, gcc-internal-format
+msgid "ISO C++ forbids conditional expression between pointer of type %<void *%> and pointer-to-function"
+msgstr ""
+
+#: cp/typeck.c:681
+#, gcc-internal-format
+msgid "comparison between distinct pointer-to-member types %qT and %qT lacks a cast"
+msgstr ""
+
+#: cp/typeck.c:686
+#, gcc-internal-format
+msgid "conversion between distinct pointer-to-member types %qT and %qT lacks a cast"
+msgstr ""
+
+#: cp/typeck.c:691
+#, gcc-internal-format
+msgid "conditional expression between distinct pointer-to-member types %qT and %qT lacks a cast"
+msgstr ""
+
+#: cp/typeck.c:1416
+#, gcc-internal-format
+msgid "canonical types differ for identical types %T and %T"
+msgstr ""
+
+#: cp/typeck.c:1423
+#, gcc-internal-format
+msgid "same canonical type node for different types %T and %T"
+msgstr ""
+
+#: cp/typeck.c:1536
+#, gcc-internal-format
+msgid "invalid application of %qs to a member function"
+msgstr ""
+
+#: cp/typeck.c:1604
+#, gcc-internal-format
+msgid "invalid application of %<sizeof%> to a bit-field"
+msgstr ""
+
+#: cp/typeck.c:1612
+#, gcc-internal-format
+msgid "ISO C++ forbids applying %<sizeof%> to an expression of function type"
+msgstr ""
+
+#: cp/typeck.c:1661
+#, gcc-internal-format
+msgid "invalid application of %<__alignof%> to a bit-field"
+msgstr ""
+
+#: cp/typeck.c:1672
+#, gcc-internal-format
+msgid "ISO C++ forbids applying %<__alignof%> to an expression of function type"
+msgstr ""
+
+#: cp/typeck.c:1730
+#, gcc-internal-format
+msgid "invalid use of non-static member function"
+msgstr ""
+
+#: cp/typeck.c:1997
+#, gcc-internal-format
+msgid "deprecated conversion from string constant to %qT"
+msgstr ""
+
+#: cp/typeck.c:2120 cp/typeck.c:2495
+#, gcc-internal-format
+msgid "request for member %qD in %qE, which is of non-class type %qT"
+msgstr ""
+
+#: cp/typeck.c:2149
+#, gcc-internal-format
+msgid "invalid use of nonstatic data member %qE"
+msgstr ""
+
+#: cp/typeck.c:2204
+#, gcc-internal-format
+msgid "invalid access to non-static data member %qD of NULL object"
+msgstr ""
+
+#: cp/typeck.c:2207 cp/typeck.c:2238
+#, gcc-internal-format
+msgid "(perhaps the %<offsetof%> macro was used incorrectly)"
+msgstr ""
+
+#: cp/typeck.c:2235
+#, gcc-internal-format
+msgid "invalid access to non-static data member %qD  of NULL object"
+msgstr ""
+
+#: cp/typeck.c:2363
+#, gcc-internal-format
+msgid "object type %qT does not match destructor name ~%qT"
+msgstr ""
+
+#: cp/typeck.c:2371
+#, gcc-internal-format
+msgid "the type being destroyed is %qT, but the destructor refers to %qT"
+msgstr ""
+
+#: cp/typeck.c:2410 cp/typeck.c:2430
+#, gcc-internal-format
+msgid "%qD is not a template"
+msgstr ""
+
+#: cp/typeck.c:2534
+#, gcc-internal-format
+msgid "%<%D::%D%> is not a member of %qT"
+msgstr ""
+
+#: cp/typeck.c:2558
+#, gcc-internal-format
+msgid "%qT is not a base of %qT"
+msgstr ""
+
+#: cp/typeck.c:2578
+#, gcc-internal-format
+msgid "%qD has no member named %qE"
+msgstr ""
+
+#: cp/typeck.c:2594
+#, gcc-internal-format
+msgid "%qD is not a member template function"
+msgstr ""
+
+#: cp/typeck.c:2739
+#, gcc-internal-format
+msgid "%qT is not a pointer-to-object type"
+msgstr ""
+
+#: cp/typeck.c:2770
+#, gcc-internal-format
+msgid "invalid use of array indexing on pointer to member"
+msgstr ""
+
+#: cp/typeck.c:2773
+#, gcc-internal-format
+msgid "invalid use of unary %<*%> on pointer to member"
+msgstr ""
+
+#: cp/typeck.c:2776
+#, gcc-internal-format
+msgid "invalid use of implicit conversion on pointer to member"
+msgstr ""
+
+#: cp/typeck.c:2785
+#, gcc-internal-format
+msgid "invalid type argument"
+msgstr ""
+
+#: cp/typeck.c:2788
+#, gcc-internal-format
+msgid "invalid type argument of array indexing"
+msgstr ""
+
+#: cp/typeck.c:2791
+#, gcc-internal-format
+msgid "invalid type argument of unary %<*%>"
+msgstr ""
+
+#: cp/typeck.c:2794
+#, gcc-internal-format
+msgid "invalid type argument of implicit conversion"
+msgstr ""
+
+#: cp/typeck.c:2824
+#, gcc-internal-format
+msgid "subscript missing in array reference"
+msgstr ""
+
+#: cp/typeck.c:2904
+#, gcc-internal-format
+msgid "ISO C++ forbids subscripting non-lvalue array"
+msgstr ""
+
+#: cp/typeck.c:2916
+#, gcc-internal-format
+msgid "subscripting array declared %<register%>"
+msgstr ""
+
+#: cp/typeck.c:3008
+#, gcc-internal-format
+msgid "object missing in use of %qE"
+msgstr ""
+
+#: cp/typeck.c:3187
+#, gcc-internal-format
+msgid "ISO C++ forbids calling %<::main%> from within program"
+msgstr ""
+
+#: cp/typeck.c:3206
+#, gcc-internal-format
+msgid "must use %<.*%> or %<->*%> to call pointer-to-member function in %<%E (...)%>, e.g. %<(... ->* %E) (...)%>"
+msgstr ""
+
+#: cp/typeck.c:3221
+#, gcc-internal-format
+msgid "%qE cannot be used as a function"
+msgstr ""
+
+#: cp/typeck.c:3312
+#, gcc-internal-format
+msgid "too many arguments to %s %q#D"
+msgstr ""
+
+#: cp/typeck.c:3318
+#, gcc-internal-format
+msgid "too many arguments to function"
+msgstr ""
+
+#: cp/typeck.c:3353
+#, gcc-internal-format
+msgid "parameter %P of %qD has incomplete type %qT"
+msgstr ""
+
+#: cp/typeck.c:3356
+#, gcc-internal-format
+msgid "parameter %P has incomplete type %qT"
+msgstr ""
+
+#: cp/typeck.c:3426
+#, gcc-internal-format
+msgid "too few arguments to %s %q#D"
+msgstr ""
+
+#: cp/typeck.c:3432
+#, gcc-internal-format
+msgid "too few arguments to function"
+msgstr ""
+
+#: cp/typeck.c:3638 cp/typeck.c:3649
+#, gcc-internal-format
+msgid "assuming cast to type %qT from overloaded function"
+msgstr ""
+
+#. Some sort of arithmetic operation involving NULL was
+#. performed.
+#: cp/typeck.c:3692
+#, gcc-internal-format
+msgid "NULL used in arithmetic"
+msgstr ""
+
+#: cp/typeck.c:3883
+#, gcc-internal-format
+msgid "left rotate count is negative"
+msgstr ""
+
+#: cp/typeck.c:3884
+#, gcc-internal-format
+msgid "right rotate count is negative"
+msgstr ""
+
+#: cp/typeck.c:3890
+#, gcc-internal-format
+msgid "left rotate count >= width of type"
+msgstr ""
+
+#: cp/typeck.c:3891
+#, gcc-internal-format
+msgid "right rotate count >= width of type"
+msgstr ""
+
+#: cp/typeck.c:3910 cp/typeck.c:4133
+#, gcc-internal-format
+msgid "comparison with string literal results in unspecified behaviour"
+msgstr ""
+
+#: cp/typeck.c:3950 cp/typeck.c:3958 cp/typeck.c:4153 cp/typeck.c:4161
+#, gcc-internal-format
+msgid "ISO C++ forbids comparison between pointer and integer"
+msgstr ""
+
+#: cp/typeck.c:4178
+#, gcc-internal-format
+msgid "unordered comparison on non-floating point argument"
+msgstr ""
+
+#: cp/typeck.c:4218
+#, gcc-internal-format
+msgid "invalid operands of types %qT and %qT to binary %qO"
+msgstr ""
+
+#: cp/typeck.c:4435
+#, gcc-internal-format
+msgid "ISO C++ forbids using pointer of type %<void *%> in subtraction"
+msgstr ""
+
+#: cp/typeck.c:4437
+#, gcc-internal-format
+msgid "ISO C++ forbids using pointer to a function in subtraction"
+msgstr ""
+
+#: cp/typeck.c:4439
+#, gcc-internal-format
+msgid "ISO C++ forbids using pointer to a method in subtraction"
+msgstr ""
+
+#: cp/typeck.c:4452
+#, gcc-internal-format
+msgid "invalid use of a pointer to an incomplete type in pointer arithmetic"
+msgstr ""
+
+#: cp/typeck.c:4510
+#, gcc-internal-format
+msgid "taking address of constructor %qE"
+msgstr ""
+
+#: cp/typeck.c:4511
+#, gcc-internal-format
+msgid "taking address of destructor %qE"
+msgstr ""
+
+#: cp/typeck.c:4525
+#, gcc-internal-format
+msgid "invalid use of %qE to form a pointer-to-member-function"
+msgstr ""
+
+#: cp/typeck.c:4528
+#, gcc-internal-format
+msgid "  a qualified-id is required"
+msgstr ""
+
+#: cp/typeck.c:4533
+#, gcc-internal-format
+msgid "parentheses around %qE cannot be used to form a pointer-to-member-function"
+msgstr ""
+
+#: cp/typeck.c:4556
+#, gcc-internal-format
+msgid "taking address of temporary"
+msgstr ""
+
+#: cp/typeck.c:4826
+#, gcc-internal-format
+msgid "ISO C++ forbids incrementing an enum"
+msgstr ""
+
+#: cp/typeck.c:4827
+#, gcc-internal-format
+msgid "ISO C++ forbids decrementing an enum"
+msgstr ""
+
+#: cp/typeck.c:4843
+#, gcc-internal-format
+msgid "cannot increment a pointer to incomplete type %qT"
+msgstr ""
+
+#: cp/typeck.c:4844
+#, gcc-internal-format
+msgid "cannot decrement a pointer to incomplete type %qT"
+msgstr ""
+
+#: cp/typeck.c:4855
+#, gcc-internal-format
+msgid "ISO C++ forbids incrementing a pointer of type %qT"
+msgstr ""
+
+#: cp/typeck.c:4856
+#, gcc-internal-format
+msgid "ISO C++ forbids decrementing a pointer of type %qT"
+msgstr ""
+
+#: cp/typeck.c:4882
+#, gcc-internal-format
+msgid "invalid use of Boolean expression as operand to %<operator--%>"
+msgstr ""
+
+#: cp/typeck.c:4917
+#, gcc-internal-format
+msgid "ISO C++ forbids taking address of function %<::main%>"
+msgstr ""
+
+#. An expression like &memfn.
+#: cp/typeck.c:4978
+#, gcc-internal-format
+msgid "ISO C++ forbids taking the address of an unqualified or parenthesized non-static member function to form a pointer to member function.  Say %<&%T::%D%>"
+msgstr ""
+
+#: cp/typeck.c:4983
+#, gcc-internal-format
+msgid "ISO C++ forbids taking the address of a bound member function to form a pointer to member function.  Say %<&%T::%D%>"
+msgstr ""
+
+#: cp/typeck.c:5012
+#, gcc-internal-format
+msgid "ISO C++ forbids taking the address of a cast to a non-lvalue expression"
+msgstr ""
+
+#: cp/typeck.c:5040
+#, gcc-internal-format
+msgid "cannot create pointer to reference member %qD"
+msgstr ""
+
+#: cp/typeck.c:5255
+#, gcc-internal-format
+msgid "cannot take the address of %<this%>, which is an rvalue expression"
+msgstr ""
+
+#: cp/typeck.c:5278
+#, gcc-internal-format
+msgid "address of explicit register variable %qD requested"
+msgstr ""
+
+#: cp/typeck.c:5283
+#, gcc-internal-format
+msgid "address requested for %qD, which is declared %<register%>"
+msgstr ""
+
+#: cp/typeck.c:5350 cp/typeck.c:5377
+#, gcc-internal-format
+msgid "%s expression list treated as compound expression"
+msgstr ""
+
+#: cp/typeck.c:5450
+#, gcc-internal-format
+msgid "no context to resolve type of %qE"
+msgstr ""
+
+#: cp/typeck.c:5481
+#, gcc-internal-format
+msgid "cast from type %qT to type %qT casts away qualifiers"
+msgstr ""
+
+#: cp/typeck.c:5486
+#, gcc-internal-format
+msgid "static_cast from type %qT to type %qT casts away qualifiers"
+msgstr ""
+
+#: cp/typeck.c:5491
+#, gcc-internal-format
+msgid "reinterpret_cast from type %qT to type %qT casts away qualifiers"
+msgstr ""
+
+#: cp/typeck.c:5834
+#, gcc-internal-format
+msgid "invalid static_cast from type %qT to type %qT"
+msgstr ""
+
+#: cp/typeck.c:5857
+#, gcc-internal-format
+msgid "converting from %qT to %qT"
+msgstr ""
+
+#: cp/typeck.c:5906
+#, gcc-internal-format
+msgid "invalid cast of an rvalue expression of type %qT to type %qT"
+msgstr ""
+
+#: cp/typeck.c:5973
+#, gcc-internal-format
+msgid "cast from %qT to %qT loses precision"
+msgstr ""
+
+#: cp/typeck.c:6003
+#, gcc-internal-format
+msgid "cast from %qT to %qT increases required alignment of target type"
+msgstr ""
+
+#. Only issue a warning, as we have always supported this
+#. where possible, and it is necessary in some cases.  DR 195
+#. addresses this issue, but as of 2004/10/26 is still in
+#. drafting.
+#: cp/typeck.c:6022
+#, gcc-internal-format
+msgid "ISO C++ forbids casting between pointer-to-function and pointer-to-object"
+msgstr ""
+
+#: cp/typeck.c:6035
+#, gcc-internal-format
+msgid "invalid cast from type %qT to type %qT"
+msgstr ""
+
+#: cp/typeck.c:6091
+#, gcc-internal-format
+msgid "invalid use of const_cast with type %qT, which is not a pointer, reference, nor a pointer-to-data-member type"
+msgstr ""
+
+#: cp/typeck.c:6100
+#, gcc-internal-format
+msgid "invalid use of const_cast with type %qT, which is a pointer or reference to a function type"
+msgstr ""
+
+#: cp/typeck.c:6125
+#, gcc-internal-format
+msgid "invalid const_cast of an rvalue of type %qT to type %qT"
+msgstr ""
+
+#: cp/typeck.c:6174
+#, gcc-internal-format
+msgid "invalid const_cast from type %qT to type %qT"
+msgstr ""
+
+#: cp/typeck.c:6251 cp/typeck.c:6259
+#, gcc-internal-format
+msgid "ISO C++ forbids casting to an array type %qT"
+msgstr ""
+
+#: cp/typeck.c:6268
+#, gcc-internal-format
+msgid "invalid cast to function type %qT"
+msgstr ""
+
+#: cp/typeck.c:6514
+#, gcc-internal-format
+msgid "  in evaluation of %<%Q(%#T, %#T)%>"
+msgstr ""
+
+#: cp/typeck.c:6572
+#, gcc-internal-format
+msgid "incompatible types in assignment of %qT to %qT"
+msgstr ""
+
+#: cp/typeck.c:6586
+#, gcc-internal-format
+msgid "array used as initializer"
+msgstr ""
+
+#: cp/typeck.c:6588
+#, gcc-internal-format
+msgid "invalid array assignment"
+msgstr ""
+
+#: cp/typeck.c:6688
+#, gcc-internal-format
+msgid "   in pointer to member function conversion"
+msgstr ""
+
+#: cp/typeck.c:6699
+#, gcc-internal-format
+msgid "pointer to member conversion via virtual base %qT"
+msgstr ""
+
+#: cp/typeck.c:6739 cp/typeck.c:6752
+#, gcc-internal-format
+msgid "   in pointer to member conversion"
+msgstr ""
+
+#: cp/typeck.c:6830
+#, gcc-internal-format
+msgid "invalid conversion to type %qT from type %qT"
+msgstr ""
+
+#: cp/typeck.c:7101
+#, gcc-internal-format
+msgid "cannot convert %qT to %qT for argument %qP to %qD"
+msgstr ""
+
+#: cp/typeck.c:7104
+#, gcc-internal-format
+msgid "cannot convert %qT to %qT in %s"
+msgstr ""
+
+#: cp/typeck.c:7118
+#, gcc-internal-format
+msgid "%s might be a candidate for a format attribute"
+msgstr ""
+
+#: cp/typeck.c:7211 cp/typeck.c:7213
+#, gcc-internal-format
+msgid "in passing argument %P of %q+D"
+msgstr ""
+
+#: cp/typeck.c:7268
+#, gcc-internal-format
+msgid "returning reference to temporary"
+msgstr ""
+
+#: cp/typeck.c:7275
+#, gcc-internal-format
+msgid "reference to non-lvalue returned"
+msgstr ""
+
+#: cp/typeck.c:7291
+#, gcc-internal-format
+msgid "reference to local variable %q+D returned"
+msgstr ""
+
+#: cp/typeck.c:7294
+#, gcc-internal-format
+msgid "address of local variable %q+D returned"
+msgstr ""
+
+#: cp/typeck.c:7329
+#, gcc-internal-format
+msgid "returning a value from a destructor"
+msgstr ""
+
+#. If a return statement appears in a handler of the
+#. function-try-block of a constructor, the program is ill-formed.
+#: cp/typeck.c:7337
+#, gcc-internal-format
+msgid "cannot return from a handler of a function-try-block of a constructor"
+msgstr ""
+
+#. You can't return a value from a constructor.
+#: cp/typeck.c:7340
+#, gcc-internal-format
+msgid "returning a value from a constructor"
+msgstr ""
+
+#: cp/typeck.c:7358
+#, gcc-internal-format
+msgid "lambda return type can only be deduced when the return statement is the only statement in the function body"
+msgstr ""
+
+#: cp/typeck.c:7364
+#, gcc-internal-format
+msgid "inconsistent types %qT and %qT deduced for lambda return type"
+msgstr ""
+
+#: cp/typeck.c:7390
+#, gcc-internal-format
+msgid "return-statement with no value, in function returning %qT"
+msgstr ""
+
+#: cp/typeck.c:7411
+#, gcc-internal-format
+msgid "return-statement with a value, in function returning 'void'"
+msgstr ""
+
+#: cp/typeck.c:7441
+#, gcc-internal-format
+msgid "%<operator new%> must not return NULL unless it is declared %<throw()%> (or -fcheck-new is in effect)"
+msgstr ""
+
+#: cp/typeck2.c:55
+#, gcc-internal-format
+msgid "type %qT is not a base type for type %qT"
+msgstr ""
+
+#: cp/typeck2.c:106
+#, gcc-internal-format
+msgid "assignment of data-member %qD in read-only structure"
+msgstr ""
+
+#: cp/typeck2.c:108
+#, gcc-internal-format
+msgid "assignment (via 'asm' output) of data-member %qD in read-only structure"
+msgstr ""
+
+#: cp/typeck2.c:110
+#, gcc-internal-format
+msgid "increment of data-member %qD in read-only structure"
+msgstr ""
+
+#: cp/typeck2.c:112
+#, gcc-internal-format
+msgid "decrement of data-member %qD in read-only structure"
+msgstr ""
+
+#: cp/typeck2.c:116
+#, gcc-internal-format
+msgid "assignment of read-only data-member %qD"
+msgstr ""
+
+#: cp/typeck2.c:118
+#, gcc-internal-format
+msgid "assignment (via 'asm' output) of read-only data-member %qD"
+msgstr ""
+
+#: cp/typeck2.c:120
+#, gcc-internal-format
+msgid "increment of read-only data-member %qD"
+msgstr ""
+
+#: cp/typeck2.c:122
+#, gcc-internal-format
+msgid "decrement of read-only data-member %qD"
+msgstr ""
+
+#: cp/typeck2.c:131
+#, gcc-internal-format
+msgid "assignment of constant field %qD"
+msgstr ""
+
+#: cp/typeck2.c:133
+#, gcc-internal-format
+msgid "assignment (via 'asm' output) of constant field %qD"
+msgstr ""
+
+#: cp/typeck2.c:135
+#, gcc-internal-format
+msgid "increment of constant field %qD"
+msgstr ""
+
+#: cp/typeck2.c:137
+#, gcc-internal-format
+msgid "decrement of constant field %qD"
+msgstr ""
+
+#: cp/typeck2.c:143
+#, gcc-internal-format
+msgid "assignment (via 'asm' output) of read-only variable %qD"
+msgstr ""
+
+#: cp/typeck2.c:153
+#, gcc-internal-format
+msgid "assignment of read-only parameter %qD"
+msgstr ""
+
+#: cp/typeck2.c:155
+#, gcc-internal-format
+msgid "assignment (via 'asm' output) of read-only parameter %qD"
+msgstr ""
+
+#: cp/typeck2.c:157
+#, gcc-internal-format
+msgid "increment of read-only parameter %qD"
+msgstr ""
+
+#: cp/typeck2.c:159
+#, gcc-internal-format
+msgid "decrement of read-only parameter %qD"
+msgstr ""
+
+#: cp/typeck2.c:166
+#, gcc-internal-format
+msgid "assignment of read-only reference %qD"
+msgstr ""
+
+#: cp/typeck2.c:168
+#, gcc-internal-format
+msgid "assignment (via 'asm' output) of read-only reference %qD"
+msgstr ""
+
+#: cp/typeck2.c:170
+#, gcc-internal-format
+msgid "increment of read-only reference %qD"
+msgstr ""
+
+#: cp/typeck2.c:172
+#, gcc-internal-format
+msgid "decrement of read-only reference %qD"
+msgstr ""
+
+#: cp/typeck2.c:176
+#, gcc-internal-format
+msgid "assignment of read-only named return value %qD"
+msgstr ""
+
+#: cp/typeck2.c:178
+#, gcc-internal-format
+msgid "assignment (via 'asm' output) of read-only named return value %qD"
+msgstr ""
+
+#: cp/typeck2.c:180
+#, gcc-internal-format
+msgid "increment of read-only named return value %qD"
+msgstr ""
+
+#: cp/typeck2.c:182
+#, gcc-internal-format
+msgid "decrement of read-only named return value %qD"
+msgstr ""
+
+#: cp/typeck2.c:186
+#, gcc-internal-format
+msgid "assignment of function %qD"
+msgstr ""
+
+#: cp/typeck2.c:188
+#, gcc-internal-format
+msgid "assignment (via 'asm' output) of function %qD"
+msgstr ""
+
+#: cp/typeck2.c:190
+#, gcc-internal-format
+msgid "increment of function %qD"
+msgstr ""
+
+#: cp/typeck2.c:192
+#, gcc-internal-format
+msgid "decrement of function %qD"
+msgstr ""
+
+#: cp/typeck2.c:198
+#, gcc-internal-format
+msgid "assignment (via 'asm' output) of read-only location %qE"
+msgstr ""
+
+#: cp/typeck2.c:384
+#, gcc-internal-format
+msgid "cannot declare variable %q+D to be of abstract type %qT"
+msgstr ""
+
+#: cp/typeck2.c:387
+#, gcc-internal-format
+msgid "cannot declare parameter %q+D to be of abstract type %qT"
+msgstr ""
+
+#: cp/typeck2.c:390
+#, gcc-internal-format
+msgid "cannot declare field %q+D to be of abstract type %qT"
+msgstr ""
+
+#: cp/typeck2.c:394
+#, gcc-internal-format
+msgid "invalid abstract return type for member function %q+#D"
+msgstr ""
+
+#: cp/typeck2.c:396
+#, gcc-internal-format
+msgid "invalid abstract return type for function %q+#D"
+msgstr ""
+
+#. Here we do not have location information.
+#: cp/typeck2.c:399
+#, gcc-internal-format
+msgid "invalid abstract type %qT for %qE"
+msgstr ""
+
+#: cp/typeck2.c:401
+#, gcc-internal-format
+msgid "invalid abstract type for %q+D"
+msgstr ""
+
+#: cp/typeck2.c:404
+#, gcc-internal-format
+msgid "cannot allocate an object of abstract type %qT"
+msgstr ""
+
+#: cp/typeck2.c:413
+#, gcc-internal-format
+msgid "  because the following virtual functions are pure within %qT:"
+msgstr ""
+
+#: cp/typeck2.c:417
+#, gcc-internal-format
+msgid "\t%+#D"
+msgstr ""
+
+#: cp/typeck2.c:425
+#, gcc-internal-format
+msgid "  since type %qT has pure virtual functions"
+msgstr ""
+
+#: cp/typeck2.c:455
+#, gcc-internal-format
+msgid "%q+D has incomplete type"
+msgstr ""
+
+#: cp/typeck2.c:468
+#, gcc-internal-format
+msgid "invalid use of incomplete type %q#T"
+msgstr ""
+
+#: cp/typeck2.c:471
+#, gcc-internal-format
+msgid "forward declaration of %q+#T"
+msgstr ""
+
+#: cp/typeck2.c:474
+#, gcc-internal-format
+msgid "declaration of %q+#T"
+msgstr ""
+
+#: cp/typeck2.c:479
+#, gcc-internal-format
+msgid "invalid use of %qT"
+msgstr ""
+
+#: cp/typeck2.c:495
+#, gcc-internal-format
+msgid "invalid use of member (did you forget the %<&%> ?)"
+msgstr ""
+
+#: cp/typeck2.c:504
+#, gcc-internal-format
+msgid "invalid use of template type parameter %qT"
+msgstr ""
+
+#: cp/typeck2.c:509
+#, gcc-internal-format
+msgid "invalid use of template template parameter %qT"
+msgstr ""
+
+#: cp/typeck2.c:515
+#, gcc-internal-format
+msgid "invalid use of dependent type %qT"
+msgstr ""
+
+#: cp/typeck2.c:523
+#, gcc-internal-format
+msgid "address of overloaded function with no contextual type information"
+msgstr ""
+
+#: cp/typeck2.c:527
+#, gcc-internal-format
+msgid "overloaded function with no contextual type information"
+msgstr ""
+
+#: cp/typeck2.c:530
+#, gcc-internal-format
+msgid "insufficient contextual information to determine type"
+msgstr ""
+
+#: cp/typeck2.c:705
+#, gcc-internal-format
+msgid "constructor syntax used, but no constructor declared for type %qT"
+msgstr ""
+
+#: cp/typeck2.c:719
+#, gcc-internal-format
+msgid "cannot initialize arrays using this syntax"
+msgstr ""
+
+#: cp/typeck2.c:801
+#, gcc-internal-format
+msgid "narrowing conversion of %qE from %qT to %qT inside { }"
+msgstr ""
+
+#: cp/typeck2.c:859
+#, gcc-internal-format
+msgid "int-array initialized from non-wide string"
+msgstr ""
+
+#: cp/typeck2.c:864
+#, gcc-internal-format
+msgid "int-array initialized from incompatible wide string"
+msgstr ""
+
+#: cp/typeck2.c:879
+#, gcc-internal-format
+msgid "initializer-string for array of chars is too long"
+msgstr ""
+
+#: cp/typeck2.c:925
+#, gcc-internal-format
+msgid "cannot initialize aggregate of type %qT with a compound literal"
+msgstr ""
+
+#: cp/typeck2.c:942
+#, gcc-internal-format
+msgid "array must be initialized with a brace-enclosed initializer"
+msgstr ""
+
+#: cp/typeck2.c:1029 cp/typeck2.c:1137
+#, gcc-internal-format
+msgid "non-trivial designated initializers not supported"
+msgstr ""
+
+#: cp/typeck2.c:1161 cp/typeck2.c:1175
+#, gcc-internal-format
+msgid "missing initializer for member %qD"
+msgstr ""
+
+#: cp/typeck2.c:1166
+#, gcc-internal-format
+msgid "uninitialized const member %qD"
+msgstr ""
+
+#: cp/typeck2.c:1168
+#, gcc-internal-format
+msgid "member %qD with uninitialized const fields"
+msgstr ""
+
+#: cp/typeck2.c:1170
+#, gcc-internal-format
+msgid "member %qD is uninitialized reference"
+msgstr ""
+
+#: cp/typeck2.c:1238
+#, gcc-internal-format
+msgid "no field %qD found in union being initialized"
+msgstr ""
+
+#: cp/typeck2.c:1247
+#, gcc-internal-format
+msgid "index value instead of field name in union initializer"
+msgstr ""
+
+#: cp/typeck2.c:1406
+#, gcc-internal-format
+msgid "circular pointer delegation detected"
+msgstr ""
+
+#: cp/typeck2.c:1419
+#, gcc-internal-format
+msgid "base operand of %<->%> has non-pointer type %qT"
+msgstr ""
+
+#: cp/typeck2.c:1443
+#, gcc-internal-format
+msgid "result of %<operator->()%> yields non-pointer result"
+msgstr ""
+
+#: cp/typeck2.c:1445
+#, gcc-internal-format
+msgid "base operand of %<->%> is not a pointer"
+msgstr ""
+
+#: cp/typeck2.c:1467
+#, gcc-internal-format
+msgid "%qE cannot be used as a member pointer, since it is of type %qT"
+msgstr ""
+
+#: cp/typeck2.c:1476
+#, gcc-internal-format
+msgid "cannot apply member pointer %qE to %qE, which is of non-class type %qT"
+msgstr ""
+
+#: cp/typeck2.c:1498
+#, gcc-internal-format
+msgid "pointer to member type %qT incompatible with object type %qT"
+msgstr ""
+
+#: cp/typeck2.c:1559
+#, gcc-internal-format
+msgid "invalid value-initialization of reference types"
+msgstr ""
+
+#: cp/typeck2.c:1750
+#, gcc-internal-format
+msgid "call to function %qD which throws incomplete type %q#T"
+msgstr ""
+
+#: cp/typeck2.c:1753
+#, gcc-internal-format
+msgid "call to function which throws incomplete type %q#T"
+msgstr ""
+
+#: fortran/arith.c:44
+#, gcc-internal-format
+msgid "Conversion of an Infinity or Not-a-Number at %L to INTEGER"
+msgstr ""
+
+#: fortran/arith.c:943 fortran/arith.c:965
+#, gcc-internal-format
+msgid "Fortran 2003: Noninteger exponent in an initialization expression at %L"
+msgstr ""
+
+#: fortran/arith.c:951
+#, gcc-internal-format
+msgid "Raising a negative REAL at %L to a REAL power is prohibited"
+msgstr ""
+
+#: fortran/arith.c:1977
+#, gcc-internal-format
+msgid "Arithmetic OK converting %s to %s at %L"
+msgstr ""
+
+#: fortran/arith.c:1981
+#, gcc-internal-format
+msgid "Arithmetic overflow converting %s to %s at %L. This check can be disabled with the option -fno-range-check"
+msgstr ""
+
+#: fortran/arith.c:1986
+#, gcc-internal-format
+msgid "Arithmetic underflow converting %s to %s at %L. This check can be disabled with the option -fno-range-check"
+msgstr ""
+
+#: fortran/arith.c:1991
+#, gcc-internal-format
+msgid "Arithmetic NaN converting %s to %s at %L. This check can be disabled with the option -fno-range-check"
+msgstr ""
+
+#: fortran/arith.c:1996
+#, gcc-internal-format
+msgid "Division by zero converting %s to %s at %L"
+msgstr ""
+
+#: fortran/arith.c:2000
+#, gcc-internal-format
+msgid "Array operands are incommensurate converting %s to %s at %L"
+msgstr ""
+
+#: fortran/arith.c:2004
+#, gcc-internal-format
+msgid "Integer outside symmetric range implied by Standard Fortran converting %s to %s at %L"
+msgstr ""
+
+#: fortran/arith.c:2336
+#, gcc-internal-format
+msgid "The Hollerith constant at %L is too long to convert to %s"
+msgstr ""
+
+#: fortran/array.c:90
+#, gcc-internal-format
+msgid "Expected array subscript at %C"
+msgstr ""
+
+#: fortran/array.c:117
+#, gcc-internal-format
+msgid "Expected array subscript stride at %C"
+msgstr ""
+
+#: fortran/array.c:160
+#, gcc-internal-format
+msgid "Invalid form of array reference at %C"
+msgstr ""
+
+#: fortran/array.c:165
+#, gcc-internal-format
+msgid "Array reference at %C cannot have more than %d dimensions"
+msgstr ""
+
+#: fortran/array.c:216
+#, gcc-internal-format
+msgid "Variable '%s' at %L in this context must be constant"
+msgstr ""
+
+#: fortran/array.c:307
+#, gcc-internal-format
+msgid "Expected expression in array specification at %C"
+msgstr ""
+
+#: fortran/array.c:389
+#, gcc-internal-format
+msgid "Bad array specification for an explicitly shaped array at %C"
+msgstr ""
+
+#: fortran/array.c:399
+#, gcc-internal-format
+msgid "Bad array specification for assumed shape array at %C"
+msgstr ""
+
+#: fortran/array.c:413
+#, gcc-internal-format
+msgid "Bad specification for deferred shape array at %C"
+msgstr ""
+
+#: fortran/array.c:417
+#, gcc-internal-format
+msgid "Bad specification for assumed size array at %C"
+msgstr ""
+
+#: fortran/array.c:426
+#, gcc-internal-format
+msgid "Expected another dimension in array declaration at %C"
+msgstr ""
+
+#: fortran/array.c:432
+#, gcc-internal-format
+msgid "Array specification at %C has more than %d dimensions"
+msgstr ""
+
+#: fortran/array.c:438
+#, gcc-internal-format
+msgid "Fortran 2008: Array specification at %C with more than 7 dimensions"
+msgstr ""
+
+#: fortran/array.c:645
+#, gcc-internal-format
+msgid "duplicated initializer"
+msgstr ""
+
+#: fortran/array.c:737
+#, gcc-internal-format
+msgid "DO-iterator '%s' at %L is inside iterator of the same name"
+msgstr ""
+
+#: fortran/array.c:839 fortran/array.c:981
+#, gcc-internal-format
+msgid "Syntax error in array constructor at %C"
+msgstr ""
+
+#: fortran/array.c:896
+#, gcc-internal-format
+msgid "Fortran 2003: [...] style array constructors at %C"
+msgstr ""
+
+#: fortran/array.c:916
+#, gcc-internal-format
+msgid "Fortran 2003: Array constructor including type specification at %C"
+msgstr ""
+
+#: fortran/array.c:931
+#, gcc-internal-format
+msgid "Empty array constructor at %C is not allowed"
+msgstr ""
+
+#: fortran/array.c:1028
+#, gcc-internal-format
+msgid "Element in %s array constructor at %L is %s"
+msgstr ""
+
+#: fortran/array.c:1365
+#, gcc-internal-format
+msgid "Iterator step at %L cannot be zero"
+msgstr ""
+
+#: fortran/array.c:1672
+#, gcc-internal-format
+msgid "Different CHARACTER lengths (%d/%d) in array constructor at %L"
+msgstr ""
+
+#: fortran/check.c:44
+#, gcc-internal-format
+msgid "'%s' argument of '%s' intrinsic at %L must be a scalar"
+msgstr ""
+
+#: fortran/check.c:59
+#, gcc-internal-format
+msgid "'%s' argument of '%s' intrinsic at %L must be %s"
+msgstr ""
+
+#: fortran/check.c:87
+#, gcc-internal-format
+msgid "'%s' argument of '%s' intrinsic at %L must be a numeric type"
+msgstr ""
+
+#: fortran/check.c:101 fortran/check.c:851 fortran/check.c:861
+#, gcc-internal-format
+msgid "'%s' argument of '%s' intrinsic at %L must be INTEGER or REAL"
+msgstr ""
+
+#: fortran/check.c:118
+#, gcc-internal-format
+msgid "'%s' argument of '%s' intrinsic at %L must be REAL or COMPLEX"
+msgstr ""
+
+#: fortran/check.c:147
+#, gcc-internal-format
+msgid "'%s' argument of '%s' intrinsic at %L must be a constant"
+msgstr ""
+
+#: fortran/check.c:156
+#, gcc-internal-format
+msgid "Invalid kind for %s at %L"
+msgstr ""
+
+#: fortran/check.c:175
+#, gcc-internal-format
+msgid "'%s' argument of '%s' intrinsic at %L must be double precision"
+msgstr ""
+
+#: fortran/check.c:192
+#, gcc-internal-format
+msgid "'%s' argument of '%s' intrinsic at %L must be a logical array"
+msgstr ""
+
+#: fortran/check.c:210
+#, gcc-internal-format
+msgid "'%s' argument of '%s' intrinsic at %L must be an array"
+msgstr ""
+
+#: fortran/check.c:225
+#, gcc-internal-format
+msgid "'%s' argument of '%s' intrinsic at %L must be the same type and kind as '%s'"
+msgstr ""
+
+#: fortran/check.c:241
+#, gcc-internal-format
+msgid "'%s' argument of '%s' intrinsic at %L must be of rank %d"
+msgstr ""
+
+#: fortran/check.c:256
+#, gcc-internal-format
+msgid "'%s' argument of '%s' intrinsic at %L must not be OPTIONAL"
+msgstr ""
+
+#: fortran/check.c:275
+#, gcc-internal-format
+msgid "'%s' argument of '%s' intrinsic at %L must be of kind %d"
+msgstr ""
+
+#: fortran/check.c:297
+#, gcc-internal-format
+msgid "'%s' argument of '%s' intrinsic at %L cannot be INTENT(IN)"
+msgstr ""
+
+#: fortran/check.c:303
+#, gcc-internal-format
+msgid "'%s' argument of '%s' intrinsic at %L must be a variable"
+msgstr ""
+
+#: fortran/check.c:364
+#, gcc-internal-format
+msgid "'dim' argument of '%s' intrinsic at %L is not a valid dimension index"
+msgstr ""
+
+#: fortran/check.c:434
+#, gcc-internal-format
+msgid "Unequal character lengths (%ld/%ld) in %s at %L"
+msgstr ""
+
+#: fortran/check.c:543 fortran/check.c:2137 fortran/check.c:2149
+#, gcc-internal-format
+msgid "'%s' argument of '%s' intrinsic at %L must be ALLOCATABLE"
+msgstr ""
+
+#: fortran/check.c:564 fortran/check.c:4232
+#, gcc-internal-format
+msgid "'%s' and '%s' arguments of '%s' intrinsic at %L must have the same type"
+msgstr ""
+
+#: fortran/check.c:573 fortran/check.c:1312 fortran/check.c:1455
+#: fortran/check.c:1529 fortran/check.c:1815
+#, gcc-internal-format
+msgid "Extension: Different type kinds at %L"
+msgstr ""
+
+#: fortran/check.c:611 fortran/check.c:2218
+#, gcc-internal-format
+msgid "'%s' argument of '%s' intrinsic at %L must be a POINTER"
+msgstr ""
+
+#: fortran/check.c:629
+#, gcc-internal-format
+msgid "'%s' argument of '%s' intrinsic at %L must be a pointer or target VARIABLE or FUNCTION"
+msgstr ""
+
+#: fortran/check.c:637
+#, gcc-internal-format
+msgid "'%s' argument of '%s' intrinsic at %L must be a POINTER or a TARGET"
+msgstr ""
+
+#: fortran/check.c:653
+#, gcc-internal-format
+msgid "Array section with a vector subscript at %L shall not be the target of a pointer"
+msgstr ""
+
+#: fortran/check.c:664
+#, gcc-internal-format
+msgid "NULL pointer at %L is not permitted as actual argument of '%s' intrinsic function"
+msgstr ""
+
+#: fortran/check.c:823 fortran/check.c:990
+#, gcc-internal-format
+msgid "'%s' argument of '%s' intrinsic at %L must not be present if 'x' is COMPLEX"
+msgstr ""
+
+#: fortran/check.c:831 fortran/check.c:998
+#, gcc-internal-format
+msgid "'%s' argument of '%s' intrinsic at %L must have a type of either REAL or INTEGER"
+msgstr ""
+
+#: fortran/check.c:884 fortran/check.c:1374 fortran/check.c:1477
+#: fortran/check.c:1633 fortran/check.c:1650 fortran/check.c:2706
+#: fortran/check.c:2845 fortran/check.c:3197 fortran/check.c:3297
+#, gcc-internal-format
+msgid "Fortran 2003: '%s' intrinsic with KIND argument at %L"
+msgstr ""
+
+#: fortran/check.c:931 fortran/check.c:1137
+#, gcc-internal-format
+msgid "'%s' argument of '%s' intrinsic at %L has invalid shape in dimension %d (%ld/%ld)"
+msgstr ""
+
+#: fortran/check.c:946 fortran/check.c:1152 fortran/check.c:1180
+#, gcc-internal-format
+msgid "'%s' argument of intrinsic '%s' at %L of must have rank %d or be a scalar"
+msgstr ""
+
+#: fortran/check.c:1047 fortran/check.c:1909 fortran/check.c:1917
+#, gcc-internal-format
+msgid "'%s' argument of '%s' intrinsic at %L must be numeric or LOGICAL"
+msgstr ""
+
+#: fortran/check.c:1061
+#, gcc-internal-format
+msgid "Different shape for arguments '%s' and '%s' at %L for intrinsic 'dot_product'"
+msgstr ""
+
+#: fortran/check.c:1080 fortran/check.c:1088
+#, gcc-internal-format
+msgid "'%s' argument of '%s' intrinsic at %L must be default real"
+msgstr ""
+
+#: fortran/check.c:1244
+#, gcc-internal-format
+msgid "Fortran 2008: COMPLEX argument '%s' argument of '%s' intrinsic at %L"
+msgstr ""
+
+#: fortran/check.c:1425
+#, gcc-internal-format
+msgid "Argument of %s at %L must be of length one"
+msgstr ""
+
+#: fortran/check.c:1484
+#, gcc-internal-format
+msgid "'%s' argument of '%s' intrinsic at %L must be the same kind as '%s'"
+msgstr ""
+
+#: fortran/check.c:1609
+#, gcc-internal-format
+msgid "'%s' argument of '%s' intrinsic at %L must be a non-derived type"
+msgstr ""
+
+#: fortran/check.c:1788
+#, gcc-internal-format
+msgid "Intrinsic '%s' at %L must have at least two arguments"
+msgstr ""
+
+#: fortran/check.c:1821
+#, gcc-internal-format
+msgid "'a%d' argument of '%s' intrinsic at %L must be %s(%d)"
+msgstr ""
+
+#: fortran/check.c:1852
+#, gcc-internal-format
+msgid "Fortran 2003: '%s' intrinsic with CHARACTER argument at %L"
+msgstr ""
+
+#: fortran/check.c:1859
+#, gcc-internal-format
+msgid "'a1' argument of '%s' intrinsic at %L must be INTEGER, REAL or CHARACTER"
+msgstr ""
+
+#: fortran/check.c:1926
+#, gcc-internal-format
+msgid "Argument types of '%s' intrinsic at %L must match (%s/%s)"
+msgstr ""
+
+#: fortran/check.c:1940
+#, gcc-internal-format
+msgid "Different shape on dimension 1 for arguments '%s' and '%s' at %L for intrinsic matmul"
+msgstr ""
+
+#: fortran/check.c:1959
+#, gcc-internal-format
+msgid "Different shape on dimension 2 for argument '%s' and dimension 1 for argument '%s' at %L for intrinsic matmul"
+msgstr ""
+
+#: fortran/check.c:1968
+#, gcc-internal-format
+msgid "'%s' argument of '%s' intrinsic at %L must be of rank 1 or 2"
+msgstr ""
+
+#: fortran/check.c:2160
+#, gcc-internal-format
+msgid "the '%s' and '%s' arguments of '%s' intrinsic at %L must have the same rank %d/%d"
+msgstr ""
+
+#: fortran/check.c:2169
+#, gcc-internal-format
+msgid "the '%s' and '%s' arguments of '%s' intrinsic at %L must be of the same kind %d/%d"
+msgstr ""
+
+#: fortran/check.c:2289 fortran/check.c:3244
+#, gcc-internal-format
+msgid "'%s' argument of '%s' intrinsic at %L must provide at least as many elements as there are .TRUE. values in '%s' (%ld/%d)"
+msgstr ""
+
+#: fortran/check.c:2314
+#, gcc-internal-format
+msgid "'%s' argument of '%s' intrinsic at %L must be of type REAL or COMPLEX"
+msgstr ""
+
+#: fortran/check.c:2335
+#, gcc-internal-format
+msgid "'%s' argument of '%s' intrinsic at %L must be of a dummy variable"
+msgstr ""
+
+#: fortran/check.c:2343
+#, gcc-internal-format
+msgid "'%s' argument of '%s' intrinsic at %L must be of an OPTIONAL dummy variable"
+msgstr ""
+
+#: fortran/check.c:2359
+#, gcc-internal-format
+msgid "'%s' argument of '%s' intrinsic at %L must not be a subobject of '%s'"
+msgstr ""
+
+#: fortran/check.c:2484
+#, gcc-internal-format
+msgid "'shape' argument of 'reshape' intrinsic at %L must be an array of constant size"
+msgstr ""
+
+#: fortran/check.c:2494
+#, gcc-internal-format
+msgid "'%s' argument of '%s' intrinsic at %L is empty"
+msgstr ""
+
+#: fortran/check.c:2501
+#, gcc-internal-format
+msgid "'shape' argument of 'reshape' intrinsic at %L has more than %d elements"
+msgstr ""
+
+#: fortran/check.c:2521
+#, gcc-internal-format
+msgid "'%s' argument of '%s' intrinsic at %L has negative element (%d)"
+msgstr ""
+
+#: fortran/check.c:2562
+#, gcc-internal-format
+msgid "'%s' argument of '%s' intrinsic at %L has wrong number of elements (%d/%d)"
+msgstr ""
+
+#: fortran/check.c:2583
+#, gcc-internal-format
+msgid "'%s' argument of '%s' intrinsic at %L has out-of-range dimension (%d)"
+msgstr ""
+
+#: fortran/check.c:2592
+#, gcc-internal-format
+msgid "'%s' argument of '%s' intrinsic at %L has invalid permutation of dimensions (dimension '%d' duplicated)"
+msgstr ""
+
+#: fortran/check.c:2627
+#, gcc-internal-format
+msgid "Without padding, there are not enough elements in the intrinsic RESHAPE source at %L to match the shape"
+msgstr ""
+
+#: fortran/check.c:2645 fortran/check.c:2661
+#, gcc-internal-format
+msgid "'%s' argument of '%s' intrinsic at %L must be of a derived type"
+msgstr ""
+
+#: fortran/check.c:2653 fortran/check.c:2669
+#, gcc-internal-format
+msgid "'%s' argument of '%s' intrinsic at %L must be of an extensible type"
+msgstr ""
+
+#: fortran/check.c:2768
+#, gcc-internal-format
+msgid "Missing arguments to %s intrinsic at %L"
+msgstr ""
+
+#: fortran/check.c:2809
+#, gcc-internal-format
+msgid "'source' argument of 'shape' intrinsic at %L must not be an assumed size array"
+msgstr ""
+
+#: fortran/check.c:2880
+#, gcc-internal-format
+msgid "'%s' argument of '%s' intrinsic at %L must be less than rank %d"
+msgstr ""
+
+#: fortran/check.c:2899
+#, gcc-internal-format
+msgid "'%s' argument of '%s' intrinsic at %L is not a valid dimension index"
+msgstr ""
+
+#: fortran/check.c:3152
+#, gcc-internal-format
+msgid "'MOLD' argument of 'TRANSFER' intrinsic at %L must not be %s"
+msgstr ""
+
+#: fortran/check.c:3258
+#, gcc-internal-format
+msgid "'%s' argument of '%s' intrinsic at %L must have the same rank as '%s' or be a scalar"
+msgstr ""
+
+#: fortran/check.c:3271
+#, gcc-internal-format
+msgid "'%s' and '%s' arguments of '%s' intrinsic at %L must have identical shape."
+msgstr ""
+
+#: fortran/check.c:3514 fortran/check.c:3546
+#, gcc-internal-format
+msgid "Size of '%s' argument of '%s' intrinsic at %L too small (%i/%i)"
+msgstr ""
+
+#: fortran/check.c:3554
+#, gcc-internal-format
+msgid "Too many arguments to %s at %L"
+msgstr ""
+
+#: fortran/check.c:3666 fortran/check.c:4143 fortran/check.c:4167
+#, gcc-internal-format
+msgid "'%s' argument of '%s' intrinsic at %L must be INTEGER or PROCEDURE"
+msgstr ""
+
+#: fortran/check.c:3849
+#, gcc-internal-format
+msgid "'%s' argument of '%s' intrinsic at %L must be of a kind not wider than the default kind (%d)"
+msgstr ""
+
+#: fortran/check.c:4216 fortran/check.c:4224
+#, gcc-internal-format
+msgid "'%s' argument of '%s' intrinsic at %L must be INTEGER or LOGICAL"
+msgstr ""
+
+#: fortran/cpp.c:439
+#, gcc-internal-format
+msgid "To enable preprocessing, use -cpp"
+msgstr ""
+
+#: fortran/cpp.c:525 fortran/cpp.c:535
+#, gcc-internal-format
+msgid "opening output file %s: %s"
+msgstr ""
+
+#: fortran/data.c:63
+#, gcc-internal-format
+msgid "non-constant array in DATA statement %L"
+msgstr ""
+
+#: fortran/data.c:190
+#, gcc-internal-format
+msgid "failure to simplify substring reference in DATA statement at %L"
+msgstr ""
+
+#: fortran/data.c:215
+#, gcc-internal-format
+msgid "initialization string truncated to match variable at %L"
+msgstr ""
+
+#: fortran/data.c:294
+#, gcc-internal-format
+msgid "'%s' at %L already is initialized at %L"
+msgstr ""
+
+#: fortran/data.c:318
+#, gcc-internal-format
+msgid "Data element below array lower bound at %L"
+msgstr ""
+
+#: fortran/data.c:330
+#, gcc-internal-format
+msgid "Data element above array upper bound at %L"
+msgstr ""
+
+#: fortran/data.c:435
+#, gcc-internal-format
+msgid "Extension: re-initialization of '%s' at %L"
+msgstr ""
+
+#: fortran/decl.c:259
+#, gcc-internal-format
+msgid "Host associated variable '%s' may not be in the DATA statement at %C"
+msgstr ""
+
+#: fortran/decl.c:266
+#, gcc-internal-format
+msgid "Extension: initialization of common block variable '%s' in DATA statement at %C"
+msgstr ""
+
+#: fortran/decl.c:371
+#, gcc-internal-format
+msgid "Symbol '%s' must be a PARAMETER in DATA statement at %C"
+msgstr ""
+
+#: fortran/decl.c:396
+#, gcc-internal-format
+msgid "Invalid initializer %s in Data statement at %C"
+msgstr ""
+
+#: fortran/decl.c:499
+#, gcc-internal-format
+msgid "Initialization at %C is not allowed in a PURE procedure"
+msgstr ""
+
+#: fortran/decl.c:558
+#, gcc-internal-format
+msgid "DATA statement at %C is not allowed in a PURE procedure"
+msgstr ""
+
+#: fortran/decl.c:587
+#, gcc-internal-format
+msgid "Bad INTENT specification at %C"
+msgstr ""
+
+#: fortran/decl.c:634
+#, gcc-internal-format
+msgid "Conflict in attributes of function argument at %C"
+msgstr ""
+
+#: fortran/decl.c:658
+#, gcc-internal-format
+msgid "Obsolescent feature: Old-style character length at %C"
+msgstr ""
+
+#: fortran/decl.c:690
+#, gcc-internal-format
+msgid "Syntax error in character length specification at %C"
+msgstr ""
+
+#: fortran/decl.c:813
+#, gcc-internal-format
+msgid "Procedure '%s' at %C is already defined at %L"
+msgstr ""
+
+#: fortran/decl.c:821
+#, gcc-internal-format
+msgid "Name '%s' at %C is already defined as a generic interface at %L"
+msgstr ""
+
+#: fortran/decl.c:834
+#, gcc-internal-format
+msgid "Procedure '%s' at %C has an explicit interface and must not have attributes declared at %L"
+msgstr ""
+
+#: fortran/decl.c:906
+#, gcc-internal-format
+msgid "Procedure '%s' at %L must have the BIND(C) attribute to be C interoperable"
+msgstr ""
+
+#: fortran/decl.c:936
+#, gcc-internal-format
+msgid "Type '%s' at %L is a parameter to the BIND(C)  procedure '%s' but is not C interoperable because derived type '%s' is not C interoperable"
+msgstr ""
+
+#: fortran/decl.c:943
+#, gcc-internal-format
+msgid "Variable '%s' at %L is a parameter to the BIND(C) procedure '%s' but may not be C interoperable"
+msgstr ""
+
+#: fortran/decl.c:958
+#, gcc-internal-format
+msgid "Character argument '%s' at %L must be length 1 because procedure '%s' is BIND(C)"
+msgstr ""
+
+#: fortran/decl.c:972
+#, gcc-internal-format
+msgid "Variable '%s' at %L cannot have the ALLOCATABLE attribute because procedure '%s' is BIND(C)"
+msgstr ""
+
+#: fortran/decl.c:981
+#, gcc-internal-format
+msgid "Variable '%s' at %L cannot have the POINTER attribute because procedure '%s' is BIND(C)"
+msgstr ""
+
+#: fortran/decl.c:990
+#, gcc-internal-format
+msgid "Variable '%s' at %L cannot have the OPTIONAL attribute because procedure '%s' is BIND(C)"
+msgstr ""
+
+#: fortran/decl.c:1003
+#, gcc-internal-format
+msgid "Assumed-shape array '%s' at %L cannot be an argument to the procedure '%s' at %L because the procedure is BIND(C)"
+msgstr ""
+
+#: fortran/decl.c:1013
+#, gcc-internal-format
+msgid "Deferred-shape array '%s' at %L cannot be an argument to the procedure '%s' at %L because the procedure is BIND(C)"
+msgstr ""
+
+#: fortran/decl.c:1090
+#, gcc-internal-format
+msgid "Variable '%s' in common block '%s' at %C must be declared with a C interoperable kind since common block '%s' is BIND(C)"
+msgstr ""
+
+#: fortran/decl.c:1137
+#, gcc-internal-format
+msgid "CHARACTER expression at %L is being truncated (%d/%d)"
+msgstr ""
+
+#: fortran/decl.c:1144
+#, gcc-internal-format
+msgid "The CHARACTER elements of the array constructor at %L must have the same length (%d/%d)"
+msgstr ""
+
+#: fortran/decl.c:1234
+#, gcc-internal-format
+msgid "Initializer not allowed for PARAMETER '%s' at %C"
+msgstr ""
+
+#: fortran/decl.c:1244
+#, gcc-internal-format
+msgid "PARAMETER at %L is missing an initializer"
+msgstr ""
+
+#: fortran/decl.c:1254
+#, gcc-internal-format
+msgid "Variable '%s' at %C with an initializer already appears in a DATA statement"
+msgstr ""
+
+#: fortran/decl.c:1406
+#, gcc-internal-format
+msgid "Component at %C must have the POINTER attribute"
+msgstr ""
+
+#: fortran/decl.c:1414
+#, gcc-internal-format
+msgid "Array component of structure at %C must have explicit or deferred shape"
+msgstr ""
+
+#: fortran/decl.c:1489
+#, gcc-internal-format
+msgid "Pointer array component of structure at %C must have a deferred shape"
+msgstr ""
+
+#: fortran/decl.c:1498
+#, gcc-internal-format
+msgid "Allocatable component of structure at %C must have a deferred shape"
+msgstr ""
+
+#: fortran/decl.c:1507
+#, gcc-internal-format
+msgid "Array component of structure at %C must have an explicit shape"
+msgstr ""
+
+#: fortran/decl.c:1537
+#, gcc-internal-format
+msgid "NULL() initialization at %C is ambiguous"
+msgstr ""
+
+#: fortran/decl.c:1654 fortran/decl.c:5866
+#, gcc-internal-format
+msgid "Duplicate array spec for Cray pointee at %C"
+msgstr ""
+
+#: fortran/decl.c:1725
+#, gcc-internal-format
+msgid "the type of '%s' at %C has not been declared within the interface"
+msgstr ""
+
+#: fortran/decl.c:1741
+#, gcc-internal-format
+msgid "Function name '%s' not allowed at %C"
+msgstr ""
+
+#: fortran/decl.c:1757
+#, gcc-internal-format
+msgid "Extension: Old-style initialization at %C"
+msgstr ""
+
+#: fortran/decl.c:1772 fortran/decl.c:4391
+#, gcc-internal-format
+msgid "Initialization at %C isn't for a pointer variable"
+msgstr ""
+
+#: fortran/decl.c:1780 fortran/decl.c:4399 fortran/decl.c:4539
+#, gcc-internal-format
+msgid "Pointer initialization requires a NULL() at %C"
+msgstr ""
+
+#: fortran/decl.c:1786 fortran/decl.c:4405 fortran/decl.c:4544
+#, gcc-internal-format
+msgid "Initialization of pointer at %C is not allowed in a PURE procedure"
+msgstr ""
+
+#: fortran/decl.c:1799
+#, gcc-internal-format
+msgid "Pointer initialization at %C requires '=>', not '='"
+msgstr ""
+
+#: fortran/decl.c:1808 fortran/decl.c:7102
+#, gcc-internal-format
+msgid "Expected an initialization expression at %C"
+msgstr ""
+
+#: fortran/decl.c:1815
+#, gcc-internal-format
+msgid "Initialization of variable at %C is not allowed in a PURE procedure"
+msgstr ""
+
+#: fortran/decl.c:1828
+#, gcc-internal-format
+msgid "Initialization of allocatable component at %C is not allowed"
+msgstr ""
+
+#: fortran/decl.c:1882 fortran/decl.c:1891
+#, gcc-internal-format
+msgid "Old-style type declaration %s*%d not supported at %C"
+msgstr ""
+
+#: fortran/decl.c:1896
+#, gcc-internal-format
+msgid "Nonstandard type declaration %s*%d at %C"
+msgstr ""
+
+#: fortran/decl.c:1947 fortran/decl.c:2023
+#, gcc-internal-format
+msgid "Missing right parenthesis at %C"
+msgstr ""
+
+#: fortran/decl.c:1960 fortran/decl.c:2068
+#, gcc-internal-format
+msgid "Expected initialization expression at %C"
+msgstr ""
+
+#: fortran/decl.c:1968 fortran/decl.c:2074
+#, gcc-internal-format
+msgid "Expected scalar initialization expression at %C"
+msgstr ""
+
+#: fortran/decl.c:1999
+#, gcc-internal-format
+msgid "Kind %d not supported for type %s at %C"
+msgstr ""
+
+#: fortran/decl.c:2012
+#, gcc-internal-format
+msgid "C kind type parameter is for type %s but type at %L is %s"
+msgstr ""
+
+#: fortran/decl.c:2021
+#, gcc-internal-format
+msgid "Missing right parenthesis or comma at %C"
+msgstr ""
+
+#: fortran/decl.c:2094
+#, gcc-internal-format
+msgid "Kind %d is not supported for CHARACTER at %C"
+msgstr ""
+
+#: fortran/decl.c:2224
+#, gcc-internal-format
+msgid "Syntax error in CHARACTER declaration at %C"
+msgstr ""
+
+#: fortran/decl.c:2307
+#, gcc-internal-format
+msgid "Extension: BYTE type at %C"
+msgstr ""
+
+#: fortran/decl.c:2313
+#, gcc-internal-format
+msgid "BYTE type used at %C is not available on the target machine"
+msgstr ""
+
+#: fortran/decl.c:2362
+#, gcc-internal-format
+msgid "DOUBLE COMPLEX at %C does not conform to the Fortran 95 standard"
+msgstr ""
+
+#: fortran/decl.c:2388
+#, gcc-internal-format
+msgid "Fortran 2003: CLASS statement at %C"
+msgstr ""
+
+#: fortran/decl.c:2411 fortran/decl.c:2420 fortran/decl.c:2733
+#: fortran/decl.c:2741
+#, gcc-internal-format
+msgid "Type name '%s' at %C is ambiguous"
+msgstr ""
+
+#: fortran/decl.c:2496
+#, gcc-internal-format
+msgid "Missing character range in IMPLICIT at %C"
+msgstr ""
+
+#: fortran/decl.c:2542
+#, gcc-internal-format
+msgid "Letters must be in alphabetic order in IMPLICIT statement at %C"
+msgstr ""
+
+#: fortran/decl.c:2598
+#, gcc-internal-format
+msgid "Empty IMPLICIT statement at %C"
+msgstr ""
+
+#: fortran/decl.c:2699
+#, gcc-internal-format
+msgid "IMPORT statement at %C only permitted in an INTERFACE body"
+msgstr ""
+
+#: fortran/decl.c:2704
+#, gcc-internal-format
+msgid "Fortran 2003: IMPORT statement at %C"
+msgstr ""
+
+#: fortran/decl.c:2719
+#, gcc-internal-format
+msgid "Expecting list of named entities at %C"
+msgstr ""
+
+#: fortran/decl.c:2747
+#, gcc-internal-format
+msgid "Cannot IMPORT '%s' from host scoping unit at %C - does not exist."
+msgstr ""
+
+#: fortran/decl.c:2754
+#, gcc-internal-format
+msgid "'%s' is already IMPORTed from host scoping unit at %C."
+msgstr ""
+
+#: fortran/decl.c:2783
+#, gcc-internal-format
+msgid "Syntax error in IMPORT statement at %C"
+msgstr ""
+
+#: fortran/decl.c:3048
+#, gcc-internal-format
+msgid "Missing dimension specification at %C"
+msgstr ""
+
+#: fortran/decl.c:3125
+#, gcc-internal-format
+msgid "Duplicate %s attribute at %L"
+msgstr ""
+
+#: fortran/decl.c:3144
+#, gcc-internal-format
+msgid "Fortran 2003: ALLOCATABLE attribute at %C in a TYPE definition"
+msgstr ""
+
+#: fortran/decl.c:3154
+#, gcc-internal-format
+msgid "Attribute at %L is not allowed in a TYPE definition"
+msgstr ""
+
+#: fortran/decl.c:3172
+#, gcc-internal-format
+msgid "Fortran 2003: Attribute %s at %L in a TYPE definition"
+msgstr ""
+
+#: fortran/decl.c:3183
+#, gcc-internal-format
+msgid "%s attribute at %L is not allowed outside of the specification part of a module"
+msgstr ""
+
+#: fortran/decl.c:3198
+#, gcc-internal-format
+msgid "Fortran 2003: ASYNCHRONOUS attribute at %C"
+msgstr ""
+
+#: fortran/decl.c:3244 fortran/decl.c:6119
+#, gcc-internal-format
+msgid "PROTECTED at %C only allowed in specification part of a module"
+msgstr ""
+
+#: fortran/decl.c:3250
+#, gcc-internal-format
+msgid "Fortran 2003: PROTECTED attribute at %C"
+msgstr ""
+
+#: fortran/decl.c:3281
+#, gcc-internal-format
+msgid "Fortran 2003: VALUE attribute at %C"
+msgstr ""
+
+#: fortran/decl.c:3291
+#, gcc-internal-format
+msgid "Fortran 2003: VOLATILE attribute at %C"
+msgstr ""
+
+#: fortran/decl.c:3331
+#, gcc-internal-format
+msgid "Multiple identifiers provided with single NAME= specifier at %C"
+msgstr ""
+
+#: fortran/decl.c:3427
+#, gcc-internal-format
+msgid "Implicitly declared BIND(C) function '%s' at %L may not be C interoperable"
+msgstr ""
+
+#: fortran/decl.c:3448
+#, gcc-internal-format
+msgid "Variable '%s' in common block '%s' at %L may not be a C interoperable kind though common block '%s' is BIND(C)"
+msgstr ""
+
+#: fortran/decl.c:3457
+#, gcc-internal-format
+msgid "Type declaration '%s' at %L is not C interoperable but it is BIND(C)"
+msgstr ""
+
+#: fortran/decl.c:3461
+#, gcc-internal-format
+msgid "Variable '%s' at %L may not be a C interoperable kind but it is bind(c)"
+msgstr ""
+
+#: fortran/decl.c:3473
+#, gcc-internal-format
+msgid "Variable '%s' in common block '%s' at %L cannot be declared with BIND(C) since it is not a global"
+msgstr ""
+
+#: fortran/decl.c:3487
+#, gcc-internal-format
+msgid "Variable '%s' at %L cannot have both the POINTER and BIND(C) attributes"
+msgstr ""
+
+#: fortran/decl.c:3495
+#, gcc-internal-format
+msgid "Variable '%s' at %L cannot have both the ALLOCATABLE and BIND(C) attributes"
+msgstr ""
+
+#: fortran/decl.c:3507
+#, gcc-internal-format
+msgid "Return type of BIND(C) function '%s' at %L cannot be an array"
+msgstr ""
+
+#: fortran/decl.c:3515
+#, gcc-internal-format
+msgid "Return type of BIND(C) function '%s' at %L cannot be a character string"
+msgstr ""
+
+#. Use gfc_warning_now because we won't say that the symbol fails
+#. just because of this.
+#: fortran/decl.c:3526
+#, gcc-internal-format
+msgid "Symbol '%s' at %L is marked PRIVATE but has been given the binding label '%s'"
+msgstr ""
+
+#: fortran/decl.c:3601
+#, gcc-internal-format
+msgid "Need either entity or common block name for attribute specification statement at %C"
+msgstr ""
+
+#: fortran/decl.c:3648
+#, gcc-internal-format
+msgid "Missing entity or common block name for attribute specification statement at %C"
+msgstr ""
+
+#. Now we have an error, which we signal, and then fix up
+#. because the knock-on is plain and simple confusing.
+#: fortran/decl.c:3757
+#, gcc-internal-format
+msgid "Derived type at %C has not been previously defined and so cannot appear in a derived type definition"
+msgstr ""
+
+#: fortran/decl.c:3789
+#, gcc-internal-format
+msgid "Syntax error in data declaration at %C"
+msgstr ""
+
+#: fortran/decl.c:3946
+#, gcc-internal-format
+msgid "Name '%s' at %C is the name of the procedure"
+msgstr ""
+
+#: fortran/decl.c:3958
+#, gcc-internal-format
+msgid "Unexpected junk in formal argument list at %C"
+msgstr ""
+
+#: fortran/decl.c:3975
+#, gcc-internal-format
+msgid "Duplicate symbol '%s' in formal argument list at %C"
+msgstr ""
+
+#: fortran/decl.c:4026
+#, gcc-internal-format
+msgid "RESULT variable at %C must be different than function name"
+msgstr ""
+
+#: fortran/decl.c:4103
+#, gcc-internal-format
+msgid "Unexpected junk after function declaration at %C"
+msgstr ""
+
+#: fortran/decl.c:4113 fortran/decl.c:5162
+#, gcc-internal-format
+msgid "Fortran 2008: BIND(C) attribute at %L may not be specified for an internal procedure"
+msgstr ""
+
+#: fortran/decl.c:4257
+#, gcc-internal-format
+msgid "Interface '%s' at %C may not be generic"
+msgstr ""
+
+#: fortran/decl.c:4263
+#, gcc-internal-format
+msgid "Interface '%s' at %C may not be a statement function"
+msgstr ""
+
+#: fortran/decl.c:4276
+#, gcc-internal-format
+msgid "Intrinsic procedure '%s' not allowed in PROCEDURE statement at %C"
+msgstr ""
+
+#: fortran/decl.c:4331
+#, gcc-internal-format
+msgid "BIND(C) attribute at %C requires an interface with BIND(C)"
+msgstr ""
+
+#: fortran/decl.c:4338
+#, gcc-internal-format
+msgid "BIND(C) procedure with NAME may not have POINTER attribute at %C"
+msgstr ""
+
+#: fortran/decl.c:4344
+#, gcc-internal-format
+msgid "Dummy procedure at %C may not have BIND(C) attribute with NAME"
+msgstr ""
+
+#: fortran/decl.c:4367
+#, gcc-internal-format
+msgid "Procedure '%s' at %L already has basic type of %s"
+msgstr ""
+
+#: fortran/decl.c:4428 fortran/decl.c:4606
+#, gcc-internal-format
+msgid "Syntax error in PROCEDURE statement at %C"
+msgstr ""
+
+#: fortran/decl.c:4477 fortran/decl.c:7486
+#, gcc-internal-format
+msgid "Expected '::' after binding-attributes at %C"
+msgstr ""
+
+#: fortran/decl.c:4484
+#, gcc-internal-format
+msgid "NOPASS or explicit interface required at %C"
+msgstr ""
+
+#: fortran/decl.c:4488
+#, gcc-internal-format
+msgid "Fortran 2003: Procedure pointer component at %C"
+msgstr ""
+
+#: fortran/decl.c:4563
+#, gcc-internal-format
+msgid "Syntax error in procedure pointer component at %C"
+msgstr ""
+
+#: fortran/decl.c:4580
+#, gcc-internal-format
+msgid "PROCEDURE at %C must be in a generic interface"
+msgstr ""
+
+#: fortran/decl.c:4645
+#, gcc-internal-format
+msgid "Fortran 2003: PROCEDURE statement at %C"
+msgstr ""
+
+#: fortran/decl.c:4713
+#, gcc-internal-format
+msgid "Expected formal argument list in function definition at %C"
+msgstr ""
+
+#: fortran/decl.c:4737 fortran/decl.c:4741 fortran/decl.c:4940
+#: fortran/decl.c:4944 fortran/decl.c:5130 fortran/decl.c:5134
+#: fortran/symbol.c:1520
+#, gcc-internal-format
+msgid "BIND(C) attribute at %L can only be used for variables or common blocks"
+msgstr ""
+
+#: fortran/decl.c:4862
+#, gcc-internal-format
+msgid "ENTRY statement at %C cannot appear within a PROGRAM"
+msgstr ""
+
+#: fortran/decl.c:4865
+#, gcc-internal-format
+msgid "ENTRY statement at %C cannot appear within a MODULE"
+msgstr ""
+
+#: fortran/decl.c:4868
+#, gcc-internal-format
+msgid "ENTRY statement at %C cannot appear within a BLOCK DATA"
+msgstr ""
+
+#: fortran/decl.c:4872
+#, gcc-internal-format
+msgid "ENTRY statement at %C cannot appear within an INTERFACE"
+msgstr ""
+
+#: fortran/decl.c:4876
+#, gcc-internal-format
+msgid "ENTRY statement at %C cannot appear within a DERIVED TYPE block"
+msgstr ""
+
+#: fortran/decl.c:4880
+#, gcc-internal-format
+msgid "ENTRY statement at %C cannot appear within an IF-THEN block"
+msgstr ""
+
+#: fortran/decl.c:4884
+#, gcc-internal-format
+msgid "ENTRY statement at %C cannot appear within a DO block"
+msgstr ""
+
+#: fortran/decl.c:4888
+#, gcc-internal-format
+msgid "ENTRY statement at %C cannot appear within a SELECT block"
+msgstr ""
+
+#: fortran/decl.c:4892
+#, gcc-internal-format
+msgid "ENTRY statement at %C cannot appear within a FORALL block"
+msgstr ""
+
+#: fortran/decl.c:4896
+#, gcc-internal-format
+msgid "ENTRY statement at %C cannot appear within a WHERE block"
+msgstr ""
+
+#: fortran/decl.c:4900
+#, gcc-internal-format
+msgid "ENTRY statement at %C cannot appear within a contained subprogram"
+msgstr ""
+
+#: fortran/decl.c:4918
+#, gcc-internal-format
+msgid "ENTRY statement at %C cannot appear in a contained procedure"
+msgstr ""
+
+#: fortran/decl.c:4972 fortran/decl.c:5170
+#, gcc-internal-format
+msgid "Missing required parentheses before BIND(C) at %C"
+msgstr ""
+
+#: fortran/decl.c:5232 fortran/decl.c:5248
+#, gcc-internal-format
+msgid "Syntax error in NAME= specifier for binding label at %C"
+msgstr ""
+
+#: fortran/decl.c:5263
+#, gcc-internal-format
+msgid "Missing closing quote '\"' for binding label at %C"
+msgstr ""
+
+#: fortran/decl.c:5272
+#, gcc-internal-format
+msgid "Missing closing quote ''' for binding label at %C"
+msgstr ""
+
+#: fortran/decl.c:5282
+#, gcc-internal-format
+msgid "Missing closing paren for binding label at %C"
+msgstr ""
+
+#: fortran/decl.c:5288
+#, gcc-internal-format
+msgid "No binding name is allowed in BIND(C) at %C"
+msgstr ""
+
+#: fortran/decl.c:5294
+#, gcc-internal-format
+msgid "For dummy procedure %s, no binding name is allowed in BIND(C) at %C"
+msgstr ""
+
+#: fortran/decl.c:5325
+#, gcc-internal-format
+msgid "NAME not allowed on BIND(C) for ABSTRACT INTERFACE at %C"
+msgstr ""
+
+#: fortran/decl.c:5508
+#, gcc-internal-format
+msgid "Unexpected END statement at %C"
+msgstr ""
+
+#. We would have required END [something].
+#: fortran/decl.c:5517
+#, gcc-internal-format
+msgid "%s statement expected at %L"
+msgstr ""
+
+#: fortran/decl.c:5528
+#, gcc-internal-format
+msgid "Expecting %s statement at %C"
+msgstr ""
+
+#: fortran/decl.c:5543
+#, gcc-internal-format
+msgid "Expected block name of '%s' in %s statement at %C"
+msgstr ""
+
+#: fortran/decl.c:5560
+#, gcc-internal-format
+msgid "Expected terminating name at %C"
+msgstr ""
+
+#: fortran/decl.c:5569 fortran/decl.c:5577
+#, gcc-internal-format
+msgid "Expected label '%s' for %s statement at %C"
+msgstr ""
+
+#: fortran/decl.c:5632
+#, gcc-internal-format
+msgid "Missing array specification at %L in DIMENSION statement"
+msgstr ""
+
+#: fortran/decl.c:5640
+#, gcc-internal-format
+msgid "Dimensions specified for %s at %L after its initialisation"
+msgstr ""
+
+#: fortran/decl.c:5649
+#, gcc-internal-format
+msgid "Array specification must be deferred at %L"
+msgstr ""
+
+#: fortran/decl.c:5746
+#, gcc-internal-format
+msgid "Unexpected character in variable list at %C"
+msgstr ""
+
+#: fortran/decl.c:5783
+#, gcc-internal-format
+msgid "Expected '(' at %C"
+msgstr ""
+
+#: fortran/decl.c:5797 fortran/decl.c:5837
+#, gcc-internal-format
+msgid "Expected variable name at %C"
+msgstr ""
+
+#: fortran/decl.c:5813
+#, gcc-internal-format
+msgid "Cray pointer at %C must be an integer"
+msgstr ""
+
+#: fortran/decl.c:5817
+#, gcc-internal-format
+msgid "Cray pointer at %C has %d bytes of precision; memory addresses require %d bytes"
+msgstr ""
+
+#: fortran/decl.c:5823
+#, gcc-internal-format
+msgid "Expected \",\" at %C"
+msgstr ""
+
+#: fortran/decl.c:5886
+#, gcc-internal-format
+msgid "Expected \")\" at %C"
+msgstr ""
+
+#: fortran/decl.c:5898
+#, gcc-internal-format
+msgid "Expected \",\" or end of statement at %C"
+msgstr ""
+
+#: fortran/decl.c:5924
+#, gcc-internal-format
+msgid "INTENT is not allowed inside of BLOCK at %C"
+msgstr ""
+
+#: fortran/decl.c:5956
+#, gcc-internal-format
+msgid "OPTIONAL is not allowed inside of BLOCK at %C"
+msgstr ""
+
+#: fortran/decl.c:5975
+#, gcc-internal-format
+msgid "Cray pointer declaration at %C requires -fcray-pointer flag"
+msgstr ""
+
+#: fortran/decl.c:6070
+#, gcc-internal-format
+msgid "Access specification of the %s operator at %C has already been specified"
+msgstr ""
+
+#: fortran/decl.c:6087
+#, gcc-internal-format
+msgid "Access specification of the .%s. operator at %C has already been specified"
+msgstr ""
+
+#: fortran/decl.c:6125
+#, gcc-internal-format
+msgid "Fortran 2003: PROTECTED statement at %C"
+msgstr ""
+
+#: fortran/decl.c:6165
+#, gcc-internal-format
+msgid "Syntax error in PROTECTED statement at %C"
+msgstr ""
+
+#: fortran/decl.c:6189
+#, gcc-internal-format
+msgid "PRIVATE statement at %C is only allowed in the specification part of a module"
+msgstr ""
+
+#: fortran/decl.c:6226
+#, gcc-internal-format
+msgid "PUBLIC statement at %C is only allowed in the specification part of a module"
+msgstr ""
+
+#: fortran/decl.c:6254
+#, gcc-internal-format
+msgid "Expected variable name at %C in PARAMETER statement"
+msgstr ""
+
+#: fortran/decl.c:6261
+#, gcc-internal-format
+msgid "Expected = sign in PARAMETER statement at %C"
+msgstr ""
+
+#: fortran/decl.c:6267
+#, gcc-internal-format
+msgid "Expected expression at %C in PARAMETER statement"
+msgstr ""
+
+#: fortran/decl.c:6287
+#, gcc-internal-format
+msgid "Initializing already initialized variable at %C"
+msgstr ""
+
+#: fortran/decl.c:6322
+#, gcc-internal-format
+msgid "Unexpected characters in PARAMETER statement at %C"
+msgstr ""
+
+#: fortran/decl.c:6346
+#, gcc-internal-format
+msgid "Blanket SAVE statement at %C follows previous SAVE statement"
+msgstr ""
+
+#: fortran/decl.c:6358
+#, gcc-internal-format
+msgid "SAVE statement at %C follows blanket SAVE statement"
+msgstr ""
+
+#: fortran/decl.c:6405
+#, gcc-internal-format
+msgid "Syntax error in SAVE statement at %C"
+msgstr ""
+
+#: fortran/decl.c:6419
+#, gcc-internal-format
+msgid "VALUE is not allowed inside of BLOCK at %C"
+msgstr ""
+
+#: fortran/decl.c:6423
+#, gcc-internal-format
+msgid "Fortran 2003: VALUE statement at %C"
+msgstr ""
+
+#: fortran/decl.c:6463
+#, gcc-internal-format
+msgid "Syntax error in VALUE statement at %C"
+msgstr ""
+
+#: fortran/decl.c:6474
+#, gcc-internal-format
+msgid "Fortran 2003: VOLATILE statement at %C"
+msgstr ""
+
+#: fortran/decl.c:6516
+#, gcc-internal-format
+msgid "Syntax error in VOLATILE statement at %C"
+msgstr ""
+
+#: fortran/decl.c:6527
+#, gcc-internal-format
+msgid "Fortran 2003: ASYNCHRONOUS statement at %C"
+msgstr ""
+
+#: fortran/decl.c:6569
+#, gcc-internal-format
+msgid "Syntax error in ASYNCHRONOUS statement at %C"
+msgstr ""
+
+#: fortran/decl.c:6592
+#, gcc-internal-format
+msgid "MODULE PROCEDURE at %C must be in a generic module interface"
+msgstr ""
+
+#: fortran/decl.c:6637
+#, gcc-internal-format
+msgid "Intrinsic procedure at %L cannot be a MODULE PROCEDURE"
+msgstr ""
+
+#: fortran/decl.c:6686
+#, gcc-internal-format
+msgid "Ambiguous symbol in TYPE definition at %C"
+msgstr ""
+
+#: fortran/decl.c:6692
+#, gcc-internal-format
+msgid "No such symbol in TYPE definition at %C"
+msgstr ""
+
+#: fortran/decl.c:6698
+#, gcc-internal-format
+msgid "'%s' in EXTENDS expression at %C is not a derived type"
+msgstr ""
+
+#: fortran/decl.c:6705
+#, gcc-internal-format
+msgid "'%s' cannot be extended at %C because it is BIND(C)"
+msgstr ""
+
+#: fortran/decl.c:6712
+#, gcc-internal-format
+msgid "'%s' cannot be extended at %C because it is a SEQUENCE type"
+msgstr ""
+
+#: fortran/decl.c:6735
+#, gcc-internal-format
+msgid "Derived type at %C can only be PRIVATE in the specification part of a module"
+msgstr ""
+
+#: fortran/decl.c:6747
+#, gcc-internal-format
+msgid "Derived type at %C can only be PUBLIC in the specification part of a module"
+msgstr ""
+
+#: fortran/decl.c:6768
+#, gcc-internal-format
+msgid "Fortran 2003: ABSTRACT type at %C"
+msgstr ""
+
+#: fortran/decl.c:6872
+#, gcc-internal-format
+msgid "Expected :: in TYPE definition at %C"
+msgstr ""
+
+#: fortran/decl.c:6883
+#, gcc-internal-format
+msgid "Type name '%s' at %C cannot be the same as an intrinsic type"
+msgstr ""
+
+#: fortran/decl.c:6893
+#, gcc-internal-format
+msgid "Derived type name '%s' at %C already has a basic type of %s"
+msgstr ""
+
+#: fortran/decl.c:6909
+#, gcc-internal-format
+msgid "Derived type definition of '%s' at %C has already been defined"
+msgstr ""
+
+#. Since the extension field is 8 bit wide, we can only have
+#. up to 255 extension levels.
+#: fortran/decl.c:6945 fortran/symbol.c:4737
+#, gcc-internal-format
+msgid "Maximum extension level reached with type '%s' at %L"
+msgstr ""
+
+#: fortran/decl.c:6982
+#, gcc-internal-format
+msgid "Cray Pointee at %C cannot be assumed shape array"
+msgstr ""
+
+#: fortran/decl.c:7002
+#, gcc-internal-format
+msgid "Fortran 2003: ENUM and ENUMERATOR at %C"
+msgstr ""
+
+#: fortran/decl.c:7040
+#, gcc-internal-format
+msgid "Enumerator exceeds the C integer type at %C"
+msgstr ""
+
+#: fortran/decl.c:7119
+#, gcc-internal-format
+msgid "ENUMERATOR %L not initialized with integer expression"
+msgstr ""
+
+#: fortran/decl.c:7167
+#, gcc-internal-format
+msgid "ENUM definition statement expected before %C"
+msgstr ""
+
+#: fortran/decl.c:7203
+#, gcc-internal-format
+msgid "Syntax error in ENUMERATOR definition at %C"
+msgstr ""
+
+#: fortran/decl.c:7250 fortran/decl.c:7265
+#, gcc-internal-format
+msgid "Duplicate access-specifier at %C"
+msgstr ""
+
+#: fortran/decl.c:7285
+#, gcc-internal-format
+msgid "Binding attributes already specify passing, illegal NOPASS at %C"
+msgstr ""
+
+#: fortran/decl.c:7305
+#, gcc-internal-format
+msgid "Binding attributes already specify passing, illegal PASS at %C"
+msgstr ""
+
+#: fortran/decl.c:7332
+#, gcc-internal-format
+msgid "Duplicate POINTER attribute at %C"
+msgstr ""
+
+#: fortran/decl.c:7350
+#, gcc-internal-format
+msgid "Duplicate NON_OVERRIDABLE at %C"
+msgstr ""
+
+#: fortran/decl.c:7366
+#, gcc-internal-format
+msgid "Duplicate DEFERRED at %C"
+msgstr ""
+
+#: fortran/decl.c:7379
+#, gcc-internal-format
+msgid "Expected access-specifier at %C"
+msgstr ""
+
+#: fortran/decl.c:7381
+#, gcc-internal-format
+msgid "Expected binding attribute at %C"
+msgstr ""
+
+#: fortran/decl.c:7389
+#, gcc-internal-format
+msgid "NON_OVERRIDABLE and DEFERRED can't both appear at %C"
+msgstr ""
+
+#: fortran/decl.c:7401
+#, gcc-internal-format
+msgid "POINTER attribute is required for procedure pointer component at %C"
+msgstr ""
+
+#: fortran/decl.c:7442
+#, gcc-internal-format
+msgid "Interface-name expected after '(' at %C"
+msgstr ""
+
+#: fortran/decl.c:7448
+#, gcc-internal-format
+msgid "')' expected at %C"
+msgstr ""
+
+#: fortran/decl.c:7470
+#, gcc-internal-format
+msgid "Interface must be specified for DEFERRED binding at %C"
+msgstr ""
+
+#: fortran/decl.c:7475
+#, gcc-internal-format
+msgid "PROCEDURE(interface) at %C should be declared DEFERRED"
+msgstr ""
+
+#: fortran/decl.c:7496
+#, gcc-internal-format
+msgid "Expected binding name at %C"
+msgstr ""
+
+#: fortran/decl.c:7508
+#, gcc-internal-format
+msgid "'=> target' is invalid for DEFERRED binding at %C"
+msgstr ""
+
+#: fortran/decl.c:7514
+#, gcc-internal-format
+msgid "'::' needed in PROCEDURE binding with explicit target at %C"
+msgstr ""
+
+#: fortran/decl.c:7524
+#, gcc-internal-format
+msgid "Expected binding target after '=>' at %C"
+msgstr ""
+
+#: fortran/decl.c:7536
+#, gcc-internal-format
+msgid "Junk after PROCEDURE declaration at %C"
+msgstr ""
+
+#: fortran/decl.c:7551
+#, gcc-internal-format
+msgid "Type '%s' containing DEFERRED binding at %C is not ABSTRACT"
+msgstr ""
+
+#: fortran/decl.c:7562
+#, gcc-internal-format
+msgid "There's already a procedure with binding name '%s' for the derived type '%s' at %C"
+msgstr ""
+
+#: fortran/decl.c:7602
+#, gcc-internal-format
+msgid "GENERIC at %C must be inside a derived-type CONTAINS"
+msgstr ""
+
+#: fortran/decl.c:7619
+#, gcc-internal-format
+msgid "Expected '::' at %C"
+msgstr ""
+
+#: fortran/decl.c:7631
+#, gcc-internal-format
+msgid "Expected generic name or operator descriptor at %C"
+msgstr ""
+
+#: fortran/decl.c:7657
+#, gcc-internal-format
+msgid "Expected '=>' at %C"
+msgstr ""
+
+#: fortran/decl.c:7699
+#, gcc-internal-format
+msgid "There's already a non-generic procedure with binding name '%s' for the derived type '%s' at %C"
+msgstr ""
+
+#: fortran/decl.c:7707
+#, gcc-internal-format
+msgid "Binding at %C must have the same access as already defined binding '%s'"
+msgstr ""
+
+#: fortran/decl.c:7756
+#, gcc-internal-format
+msgid "Expected specific binding name at %C"
+msgstr ""
+
+#: fortran/decl.c:7766
+#, gcc-internal-format
+msgid "'%s' already defined as specific binding for the generic '%s' at %C"
+msgstr ""
+
+#: fortran/decl.c:7782
+#, gcc-internal-format
+msgid "Junk after GENERIC binding at %C"
+msgstr ""
+
+#: fortran/decl.c:7817
+#, gcc-internal-format
+msgid "FINAL declaration at %C must be inside a derived type CONTAINS section"
+msgstr ""
+
+#: fortran/decl.c:7828
+#, gcc-internal-format
+msgid "Derived type declaration with FINAL at %C must be in the specification part of a MODULE"
+msgstr ""
+
+#: fortran/decl.c:7850
+#, gcc-internal-format
+msgid "Empty FINAL at %C"
+msgstr ""
+
+#: fortran/decl.c:7857
+#, gcc-internal-format
+msgid "Expected module procedure name at %C"
+msgstr ""
+
+#: fortran/decl.c:7867
+#, gcc-internal-format
+msgid "Expected ',' at %C"
+msgstr ""
+
+#: fortran/decl.c:7873
+#, gcc-internal-format
+msgid "Unknown procedure name \"%s\" at %C"
+msgstr ""
+
+#: fortran/decl.c:7887
+#, gcc-internal-format
+msgid "'%s' at %C is already defined as FINAL procedure!"
+msgstr ""
+
+#: fortran/decl.c:7956
+#, gcc-internal-format
+msgid "Unknown attribute in !GCC$ ATTRIBUTES statement at %C"
+msgstr ""
+
+#: fortran/decl.c:8003
+#, gcc-internal-format
+msgid "Syntax error in !GCC$ ATTRIBUTES statement at %C"
+msgstr ""
+
+#. We are told not to check dependencies.
+#. We do it, however, and issue a warning in case we find one.
+#. If a dependency is found in the case
+#. elemental == ELEM_CHECK_VARIABLE, we will generate
+#. a temporary, so we don't need to bother the user.
+#: fortran/dependency.c:486
+#, gcc-internal-format
+msgid "INTENT(%s) actual argument at %L might interfere with actual argument at %L."
+msgstr ""
+
+#: fortran/error.c:301
+#, gcc-internal-format
+msgid "    Included at %s:%d:"
+msgstr ""
+
+#: fortran/error.c:385
+#, gcc-internal-format
+msgid "<During initialization>\n"
+msgstr ""
+
+#: fortran/error.c:719
+#, gcc-internal-format
+msgid "Error count reached limit of %d."
+msgstr ""
+
+#: fortran/error.c:975
+#, gcc-internal-format
+msgid "Internal Error at (1):"
+msgstr ""
+
+#: fortran/expr.c:1088
+#, gcc-internal-format
+msgid "Index in dimension %d is out of bounds at %L"
+msgstr ""
+
+#: fortran/expr.c:1269 fortran/expr.c:1320
+#, gcc-internal-format
+msgid "index in dimension %d is out of bounds at %L"
+msgstr ""
+
+#: fortran/expr.c:1933
+#, gcc-internal-format
+msgid "elemental function arguments at %C are not compliant"
+msgstr ""
+
+#: fortran/expr.c:1977
+#, gcc-internal-format
+msgid "Numeric or CHARACTER operands are required in expression at %L"
+msgstr ""
+
+#: fortran/expr.c:2002
+#, gcc-internal-format
+msgid "Concatenation operator in expression at %L must have two CHARACTER operands"
+msgstr ""
+
+#: fortran/expr.c:2009
+#, gcc-internal-format
+msgid "Concat operator at %L must concatenate strings of the same kind"
+msgstr ""
+
+#: fortran/expr.c:2019
+#, gcc-internal-format
+msgid ".NOT. operator in expression at %L must have a LOGICAL operand"
+msgstr ""
+
+#: fortran/expr.c:2035
+#, gcc-internal-format
+msgid "LOGICAL operands are required in expression at %L"
+msgstr ""
+
+#: fortran/expr.c:2046
+#, gcc-internal-format
+msgid "Only intrinsic operators can be used in expression at %L"
+msgstr ""
+
+#: fortran/expr.c:2054
+#, gcc-internal-format
+msgid "Numeric operands are required in expression at %L"
+msgstr ""
+
+#: fortran/expr.c:2076
+#, gcc-internal-format
+msgid "Invalid initialization expression for ALLOCATABLE component '%s' in structure constructor at %L"
+msgstr ""
+
+#: fortran/expr.c:2173
+#, gcc-internal-format
+msgid "Assumed character length variable '%s' in constant expression at %L"
+msgstr ""
+
+#: fortran/expr.c:2231
+#, gcc-internal-format
+msgid "transformational intrinsic '%s' at %L is not permitted in an initialization expression"
+msgstr ""
+
+#: fortran/expr.c:2262
+#, gcc-internal-format
+msgid "Extension: Evaluation of nonstandard initialization expression at %L"
+msgstr ""
+
+#: fortran/expr.c:2318
+#, gcc-internal-format
+msgid "Function '%s' in initialization expression at %L must be an intrinsic function"
+msgstr ""
+
+#: fortran/expr.c:2330
+#, gcc-internal-format
+msgid "Intrinsic function '%s' at %L is not permitted in an initialization expression"
+msgstr ""
+
+#: fortran/expr.c:2362
+#, gcc-internal-format
+msgid "PARAMETER '%s' is used at %L before its definition is complete"
+msgstr ""
+
+#: fortran/expr.c:2382
+#, gcc-internal-format
+msgid "Assumed size array '%s' at %L is not permitted in an initialization expression"
+msgstr ""
+
+#: fortran/expr.c:2388
+#, gcc-internal-format
+msgid "Assumed shape array '%s' at %L is not permitted in an initialization expression"
+msgstr ""
+
+#: fortran/expr.c:2394
+#, gcc-internal-format
+msgid "Deferred array '%s' at %L is not permitted in an initialization expression"
+msgstr ""
+
+#: fortran/expr.c:2400
+#, gcc-internal-format
+msgid "Array '%s' at %L is a variable, which does not reduce to a constant expression"
+msgstr ""
+
+#: fortran/expr.c:2410
+#, gcc-internal-format
+msgid "Parameter '%s' at %L has not been declared or is a variable, which does not reduce to a constant expression"
+msgstr ""
+
+#: fortran/expr.c:2567
+#, gcc-internal-format
+msgid "Specification function '%s' at %L cannot be a statement function"
+msgstr ""
+
+#: fortran/expr.c:2574
+#, gcc-internal-format
+msgid "Specification function '%s' at %L cannot be an internal function"
+msgstr ""
+
+#: fortran/expr.c:2581
+#, gcc-internal-format
+msgid "Specification function '%s' at %L must be PURE"
+msgstr ""
+
+#: fortran/expr.c:2588
+#, gcc-internal-format
+msgid "Specification function '%s' at %L cannot be RECURSIVE"
+msgstr ""
+
+#: fortran/expr.c:2722
+#, gcc-internal-format
+msgid "Dummy argument '%s' not allowed in expression at %L"
+msgstr ""
+
+#: fortran/expr.c:2729
+#, gcc-internal-format
+msgid "Dummy argument '%s' at %L cannot be OPTIONAL"
+msgstr ""
+
+#: fortran/expr.c:2736
+#, gcc-internal-format
+msgid "Dummy argument '%s' at %L cannot be INTENT(OUT)"
+msgstr ""
+
+#: fortran/expr.c:2767
+#, gcc-internal-format
+msgid "Variable '%s' cannot appear in the expression at %L"
+msgstr ""
+
+#: fortran/expr.c:2817
+#, gcc-internal-format
+msgid "Expression at %L must be of INTEGER type, found %s"
+msgstr ""
+
+#: fortran/expr.c:2827
+#, gcc-internal-format
+msgid "Function '%s' at %L must be PURE"
+msgstr ""
+
+#: fortran/expr.c:2836
+#, gcc-internal-format
+msgid "Expression at %L must be scalar"
+msgstr ""
+
+#: fortran/expr.c:2870
+#, gcc-internal-format
+msgid "Incompatible ranks in %s (%d and %d) at %L"
+msgstr ""
+
+#: fortran/expr.c:2884
+#, gcc-internal-format
+msgid "Different shape for %s at %L on dimension %d (%d and %d)"
+msgstr ""
+
+#: fortran/expr.c:2930 fortran/expr.c:3180
+#, gcc-internal-format
+msgid "Cannot assign to INTENT(IN) variable '%s' at %L"
+msgstr ""
+
+#: fortran/expr.c:2982
+#, gcc-internal-format
+msgid "'%s' at %L is not a VALUE"
+msgstr ""
+
+#: fortran/expr.c:2989
+#, gcc-internal-format
+msgid "Incompatible ranks %d and %d in assignment at %L"
+msgstr ""
+
+#: fortran/expr.c:2996
+#, gcc-internal-format
+msgid "Variable type is UNKNOWN in assignment at %L"
+msgstr ""
+
+#: fortran/expr.c:3008
+#, gcc-internal-format
+msgid "NULL appears on right-hand side in assignment at %L"
+msgstr ""
+
+#: fortran/expr.c:3018
+#, gcc-internal-format
+msgid "POINTER valued function appears on right-hand side of assignment at %L"
+msgstr ""
+
+#: fortran/expr.c:3028
+#, gcc-internal-format
+msgid "Extension: BOZ literal at %L used to initialize non-integer variable '%s'"
+msgstr ""
+
+#: fortran/expr.c:3034 fortran/resolve.c:7874
+#, gcc-internal-format
+msgid "Extension: BOZ literal at %L outside a DATA statement and outside INT/REAL/DBLE/CMPLX"
+msgstr ""
+
+#: fortran/expr.c:3044 fortran/resolve.c:7884
+#, gcc-internal-format
+msgid "BOZ literal at %L is bitwise transferred non-integer symbol '%s'"
+msgstr ""
+
+#: fortran/expr.c:3052 fortran/resolve.c:7893
+#, gcc-internal-format
+msgid "Arithmetic underflow of bit-wise transferred BOZ at %L. This check can be disabled with the option -fno-range-check"
+msgstr ""
+
+#: fortran/expr.c:3056 fortran/resolve.c:7897
+#, gcc-internal-format
+msgid "Arithmetic overflow of bit-wise transferred BOZ at %L. This check can be disabled with the option -fno-range-check"
+msgstr ""
+
+#: fortran/expr.c:3060 fortran/resolve.c:7901
+#, gcc-internal-format
+msgid "Arithmetic NaN of bit-wise transferred BOZ at %L. This check can be disabled with the option -fno-range-check"
+msgstr ""
+
+#: fortran/expr.c:3082
+#, gcc-internal-format
+msgid "Incompatible types in DATA statement at %L; attempted conversion of %s to %s"
+msgstr ""
+
+#: fortran/expr.c:3118
+#, gcc-internal-format
+msgid "Pointer assignment target is not a POINTER at %L"
+msgstr ""
+
+#: fortran/expr.c:3127
+#, gcc-internal-format
+msgid "'%s' in the pointer assignment at %L cannot be an l-value since it is a procedure"
+msgstr ""
+
+#: fortran/expr.c:3158
+#, gcc-internal-format
+msgid "Expected bounds specification for '%s' at %L"
+msgstr ""
+
+#: fortran/expr.c:3163
+#, gcc-internal-format
+msgid "Fortran 2003: Bounds specification for '%s' in pointer assignment at %L"
+msgstr ""
+
+#: fortran/expr.c:3169
+#, gcc-internal-format
+msgid "Pointer bounds remapping at %L is not yet implemented in gfortran"
+msgstr ""
+
+#: fortran/expr.c:3189
+#, gcc-internal-format
+msgid "Pointer assignment to non-POINTER at %L"
+msgstr ""
+
+#: fortran/expr.c:3198
+#, gcc-internal-format
+msgid "Bad pointer object in PURE procedure at %L"
+msgstr ""
+
+#: fortran/expr.c:3223
+#, gcc-internal-format
+msgid "Invalid procedure pointer assignment at %L"
+msgstr ""
+
+#: fortran/expr.c:3229
+#, gcc-internal-format
+msgid "Abstract interface '%s' is invalid in procedure pointer assignment at %L"
+msgstr ""
+
+#: fortran/expr.c:3239
+#, gcc-internal-format
+msgid "Statement function '%s' is invalid in procedure pointer assignment at %L"
+msgstr ""
+
+#: fortran/expr.c:3245
+#, gcc-internal-format
+msgid "Internal procedure '%s' is invalid in procedure pointer assignment at %L"
+msgstr ""
+
+#: fortran/expr.c:3268
+#, gcc-internal-format
+msgid "Mismatch in the procedure pointer assignment at %L: mismatch in the calling convention"
+msgstr ""
+
+#: fortran/expr.c:3299
+#, gcc-internal-format
+msgid "Interface mismatch in procedure pointer assignment at %L: %s"
+msgstr ""
+
+#: fortran/expr.c:3309
+#, gcc-internal-format
+msgid "Different types in pointer assignment at %L; attempted assignment of %s to %s"
+msgstr ""
+
+#: fortran/expr.c:3317
+#, gcc-internal-format
+msgid "Different kind type parameters in pointer assignment at %L"
+msgstr ""
+
+#: fortran/expr.c:3324
+#, gcc-internal-format
+msgid "Different ranks in pointer assignment at %L"
+msgstr ""
+
+#: fortran/expr.c:3346
+#, gcc-internal-format
+msgid "Pointer assignment target is neither TARGET nor POINTER at %L"
+msgstr ""
+
+#: fortran/expr.c:3353
+#, gcc-internal-format
+msgid "Bad target in pointer assignment in PURE procedure at %L"
+msgstr ""
+
+#: fortran/expr.c:3359
+#, gcc-internal-format
+msgid "Pointer assignment with vector subscript on rhs at %L"
+msgstr ""
+
+#: fortran/expr.c:3367
+#, gcc-internal-format
+msgid "Pointer assignment target has PROTECTED attribute at %L"
+msgstr ""
+
+#: fortran/f95-lang.c:214
+#, gcc-internal-format
+msgid "Unexpected type in truthvalue_conversion"
+msgstr ""
+
+#: fortran/f95-lang.c:273
+#, gcc-internal-format
+msgid "can't open input file: %s"
+msgstr ""
+
+#: fortran/interface.c:175
+#, gcc-internal-format
+msgid "Syntax error in generic specification at %C"
+msgstr ""
+
+#: fortran/interface.c:202
+#, gcc-internal-format
+msgid "Syntax error: Trailing garbage in INTERFACE statement at %C"
+msgstr ""
+
+#: fortran/interface.c:221
+#, gcc-internal-format
+msgid "Dummy procedure '%s' at %C cannot have a generic interface"
+msgstr ""
+
+#: fortran/interface.c:254
+#, gcc-internal-format
+msgid "Fortran 2003: ABSTRACT INTERFACE at %C"
+msgstr ""
+
+#: fortran/interface.c:262
+#, gcc-internal-format
+msgid "Syntax error in ABSTRACT INTERFACE statement at %C"
+msgstr ""
+
+#: fortran/interface.c:293
+#, gcc-internal-format
+msgid "Syntax error: Trailing garbage in END INTERFACE statement at %C"
+msgstr ""
+
+#: fortran/interface.c:306
+#, gcc-internal-format
+msgid "Expected a nameless interface at %C"
+msgstr ""
+
+#: fortran/interface.c:317
+#, gcc-internal-format
+msgid "Expected 'END INTERFACE ASSIGNMENT (=)' at %C"
+msgstr ""
+
+#: fortran/interface.c:319
+#, gcc-internal-format
+msgid "Expecting 'END INTERFACE OPERATOR (%s)' at %C"
+msgstr ""
+
+#: fortran/interface.c:333
+#, gcc-internal-format
+msgid "Expecting 'END INTERFACE OPERATOR (.%s.)' at %C"
+msgstr ""
+
+#: fortran/interface.c:344
+#, gcc-internal-format
+msgid "Expecting 'END INTERFACE %s' at %C"
+msgstr ""
+
+#: fortran/interface.c:575
+#, gcc-internal-format
+msgid "Alternate return cannot appear in operator interface at %L"
+msgstr ""
+
+#: fortran/interface.c:603
+#, gcc-internal-format
+msgid "Operator interface at %L has the wrong number of arguments"
+msgstr ""
+
+#: fortran/interface.c:614
+#, gcc-internal-format
+msgid "Assignment operator interface at %L must be a SUBROUTINE"
+msgstr ""
+
+#: fortran/interface.c:620
+#, gcc-internal-format
+msgid "Assignment operator interface at %L must have two arguments"
+msgstr ""
+
+#: fortran/interface.c:636
+#, gcc-internal-format
+msgid "Assignment operator interface at %L must not redefine an INTRINSIC type assignment"
+msgstr ""
+
+#: fortran/interface.c:645
+#, gcc-internal-format
+msgid "Intrinsic operator interface at %L must be a FUNCTION"
+msgstr ""
+
+#: fortran/interface.c:656
+#, gcc-internal-format
+msgid "First argument of defined assignment at %L must be INTENT(OUT) or INTENT(INOUT)"
+msgstr ""
+
+#: fortran/interface.c:663
+#, gcc-internal-format
+msgid "Second argument of defined assignment at %L must be INTENT(IN)"
+msgstr ""
+
+#: fortran/interface.c:672 fortran/resolve.c:12245
+#, gcc-internal-format
+msgid "First argument of operator interface at %L must be INTENT(IN)"
+msgstr ""
+
+#: fortran/interface.c:679 fortran/resolve.c:12263
+#, gcc-internal-format
+msgid "Second argument of operator interface at %L must be INTENT(IN)"
+msgstr ""
+
+#: fortran/interface.c:784
+#, gcc-internal-format
+msgid "Operator interface at %L conflicts with intrinsic interface"
+msgstr ""
+
+#: fortran/interface.c:1078
+#, gcc-internal-format
+msgid "Procedure '%s' in %s at %L has no explicit interface"
+msgstr ""
+
+#: fortran/interface.c:1081
+#, gcc-internal-format
+msgid "Procedure '%s' in %s at %L is neither function nor subroutine"
+msgstr ""
+
+#: fortran/interface.c:1136 fortran/interface.c:1140
+#, gcc-internal-format
+msgid "Ambiguous interfaces '%s' and '%s' in %s at %L"
+msgstr ""
+
+#: fortran/interface.c:1144
+#, gcc-internal-format
+msgid "Although not referenced, '%s' has ambiguous interfaces at %L"
+msgstr ""
+
+#: fortran/interface.c:1178
+#, gcc-internal-format
+msgid "'%s' at %L is not a module procedure"
+msgstr ""
+
+#: fortran/interface.c:1410
+#, gcc-internal-format
+msgid "Invalid procedure argument at %L"
+msgstr ""
+
+#: fortran/interface.c:1418
+#, gcc-internal-format
+msgid "Interface mismatch in dummy procedure '%s' at %L: %s"
+msgstr ""
+
+#: fortran/interface.c:1442
+#, gcc-internal-format
+msgid "Type mismatch in argument '%s' at %L; passed %s to %s"
+msgstr ""
+
+#: fortran/interface.c:1462 fortran/interface.c:1502
+#, gcc-internal-format
+msgid "Rank mismatch in argument '%s' at %L (%d and %d)"
+msgstr ""
+
+#: fortran/interface.c:1489
+#, gcc-internal-format
+msgid "Fortran 2003: Scalar CHARACTER actual argument with array dummy argument '%s' at %L"
+msgstr ""
+
+#: fortran/interface.c:1514
+#, gcc-internal-format
+msgid "Element of assumed-shaped array passed to dummy argument '%s' at %L"
+msgstr ""
+
+#: fortran/interface.c:1831
+#, gcc-internal-format
+msgid "Keyword argument '%s' at %L is not in the procedure"
+msgstr ""
+
+#: fortran/interface.c:1839
+#, gcc-internal-format
+msgid "Keyword argument '%s' at %L is already associated with another actual argument"
+msgstr ""
+
+#: fortran/interface.c:1849
+#, gcc-internal-format
+msgid "More actual than formal arguments in procedure call at %L"
+msgstr ""
+
+#: fortran/interface.c:1861 fortran/interface.c:2097
+#, gcc-internal-format
+msgid "Missing alternate return spec in subroutine call at %L"
+msgstr ""
+
+#: fortran/interface.c:1869
+#, gcc-internal-format
+msgid "Unexpected alternate return spec in subroutine call at %L"
+msgstr ""
+
+#: fortran/interface.c:1892
+#, gcc-internal-format
+msgid "Character length mismatch (%ld/%ld) between actual argument and pointer or allocatable dummy argument '%s' at %L"
+msgstr ""
+
+#: fortran/interface.c:1899
+#, gcc-internal-format
+msgid "Character length mismatch (%ld/%ld) between actual argument and assumed-shape dummy argument '%s' at %L"
+msgstr ""
+
+#: fortran/interface.c:1915
+#, gcc-internal-format
+msgid "Character length of actual argument shorter than of dummy argument '%s' (%lu/%lu) at %L"
+msgstr ""
+
+#: fortran/interface.c:1920
+#, gcc-internal-format
+msgid "Actual argument contains too few elements for dummy argument '%s' (%lu/%lu) at %L"
+msgstr ""
+
+#: fortran/interface.c:1937
+#, gcc-internal-format
+msgid "Expected a procedure pointer for argument '%s' at %L"
+msgstr ""
+
+#: fortran/interface.c:1949
+#, gcc-internal-format
+msgid "Expected a procedure for argument '%s' at %L"
+msgstr ""
+
+#: fortran/interface.c:1959
+#, gcc-internal-format
+msgid "Expected a PURE procedure for argument '%s' at %L"
+msgstr ""
+
+#: fortran/interface.c:1973
+#, gcc-internal-format
+msgid "Actual argument for '%s' cannot be an assumed-size array at %L"
+msgstr ""
+
+#: fortran/interface.c:1982
+#, gcc-internal-format
+msgid "Actual argument for '%s' must be a pointer at %L"
+msgstr ""
+
+#: fortran/interface.c:1991
+#, gcc-internal-format
+msgid "Actual argument for '%s' must be ALLOCATABLE at %L"
+msgstr ""
+
+#: fortran/interface.c:2004
+#, gcc-internal-format
+msgid "Actual argument at %L must be definable as the dummy argument '%s' is INTENT = OUT/INOUT"
+msgstr ""
+
+#: fortran/interface.c:2013
+#, gcc-internal-format
+msgid "Actual argument at %L is use-associated with PROTECTED attribute and dummy argument '%s' is INTENT = OUT/INOUT"
+msgstr ""
+
+#: fortran/interface.c:2026
+#, gcc-internal-format
+msgid "Array-section actual argument with vector subscripts at %L is incompatible with INTENT(OUT), INTENT(INOUT) or VOLATILE attribute of the dummy argument '%s'"
+msgstr ""
+
+#: fortran/interface.c:2043
+#, gcc-internal-format
+msgid "Assumed-shape actual argument at %L is incompatible with the non-assumed-shape dummy argument '%s' due to VOLATILE attribute"
+msgstr ""
+
+#: fortran/interface.c:2055
+#, gcc-internal-format
+msgid "Array-section actual argument at %L is incompatible with the non-assumed-shape dummy argument '%s' due to VOLATILE attribute"
+msgstr ""
+
+#: fortran/interface.c:2074
+#, gcc-internal-format
+msgid "Pointer-array actual argument at %L requires an assumed-shape or pointer-array dummy argument '%s' due to VOLATILE attribute"
+msgstr ""
+
+#: fortran/interface.c:2104
+#, gcc-internal-format
+msgid "Missing actual argument for argument '%s' at %L"
+msgstr ""
+
+#: fortran/interface.c:2290
+#, gcc-internal-format
+msgid "Same actual argument associated with INTENT(%s) argument '%s' and INTENT(%s) argument '%s' at %L"
+msgstr ""
+
+#: fortran/interface.c:2346
+#, gcc-internal-format
+msgid "Procedure argument at %L is INTENT(IN) while interface specifies INTENT(%s)"
+msgstr ""
+
+#: fortran/interface.c:2356
+#, gcc-internal-format
+msgid "Procedure argument at %L is local to a PURE procedure and is passed to an INTENT(%s) argument"
+msgstr ""
+
+#: fortran/interface.c:2364
+#, gcc-internal-format
+msgid "Procedure argument at %L is local to a PURE procedure and has the POINTER attribute"
+msgstr ""
+
+#: fortran/interface.c:2391
+#, gcc-internal-format
+msgid "Procedure '%s' called with an implicit interface at %L"
+msgstr ""
+
+#: fortran/interface.c:2395
+#, gcc-internal-format
+msgid "Procedure '%s' called at %L is not explicitly declared"
+msgstr ""
+
+#: fortran/interface.c:2407
+#, gcc-internal-format
+msgid "Keyword argument requires explicit interface for procedure '%s' at %L"
+msgstr ""
+
+#: fortran/interface.c:2439
+#, gcc-internal-format
+msgid "Procedure pointer component '%s' called with an implicit interface at %L"
+msgstr ""
+
+#: fortran/interface.c:2450
+#, gcc-internal-format
+msgid "Keyword argument requires explicit interface for procedure pointer component '%s' at %L"
+msgstr ""
+
+#: fortran/interface.c:2929
+#, gcc-internal-format
+msgid "Entity '%s' at %C is already present in the interface"
+msgstr ""
+
+#: fortran/intrinsic.c:962
+#, gcc-internal-format
+msgid "The intrinsic '%s' at %L is not included in the selected standard but %s and '%s' will be treated as if declared EXTERNAL.  Use an appropriate -std=* option or define -fall-intrinsics to allow this intrinsic."
+msgstr ""
+
+#: fortran/intrinsic.c:3242
+#, gcc-internal-format
+msgid "Too many arguments in call to '%s' at %L"
+msgstr ""
+
+#: fortran/intrinsic.c:3257
+#, gcc-internal-format
+msgid "The argument list functions %%VAL, %%LOC or %%REF are not allowed in this context at %L"
+msgstr ""
+
+#: fortran/intrinsic.c:3260
+#, gcc-internal-format
+msgid "Can't find keyword named '%s' in call to '%s' at %L"
+msgstr ""
+
+#: fortran/intrinsic.c:3267
+#, gcc-internal-format
+msgid "Argument '%s' is appears twice in call to '%s' at %L"
+msgstr ""
+
+#: fortran/intrinsic.c:3281
+#, gcc-internal-format
+msgid "Missing actual argument '%s' in call to '%s' at %L"
+msgstr ""
+
+#: fortran/intrinsic.c:3296
+#, gcc-internal-format
+msgid "ALTERNATE RETURN not permitted at %L"
+msgstr ""
+
+#: fortran/intrinsic.c:3353
+#, gcc-internal-format
+msgid "Type of argument '%s' in call to '%s' at %L should be %s, not %s"
+msgstr ""
+
+#: fortran/intrinsic.c:3718
+#, gcc-internal-format
+msgid "Intrinsic '%s' (is %s) is used at %L"
+msgstr ""
+
+#: fortran/intrinsic.c:3782
+#, gcc-internal-format
+msgid "Fortran 2003: Function '%s' as initialization expression at %L"
+msgstr ""
+
+#: fortran/intrinsic.c:3858
+#, gcc-internal-format
+msgid "Fortran 2003: Elemental function as initialization expression with non-integer/non-character arguments at %L"
+msgstr ""
+
+#: fortran/intrinsic.c:3919
+#, gcc-internal-format
+msgid "Subroutine call to intrinsic '%s' at %L is not PURE"
+msgstr ""
+
+#: fortran/intrinsic.c:3991
+#, gcc-internal-format
+msgid "Extension: Conversion from %s to %s at %L"
+msgstr ""
+
+#: fortran/intrinsic.c:3994
+#, gcc-internal-format
+msgid "Conversion from %s to %s at %L"
+msgstr ""
+
+#: fortran/intrinsic.c:4042
+#, gcc-internal-format
+msgid "Can't convert %s to %s at %L"
+msgstr ""
+
+#: fortran/intrinsic.c:4136
+#, gcc-internal-format
+msgid "'%s' declared at %L may shadow the intrinsic of the same name.  In order to call the intrinsic, explicit INTRINSIC declarations may be required."
+msgstr ""
+
+#: fortran/intrinsic.c:4141
+#, gcc-internal-format
+msgid "'%s' declared at %L is also the name of an intrinsic.  It can only be called via an explicit interface or if declared EXTERNAL."
+msgstr ""
+
+#: fortran/io.c:167 fortran/primary.c:771
+#, gcc-internal-format
+msgid "Extension: backslash character at %C"
+msgstr ""
+
+#: fortran/io.c:203 fortran/io.c:206
+#, gcc-internal-format
+msgid "Extension: Tab character in format at %C"
+msgstr ""
+
+#: fortran/io.c:452
+#, gcc-internal-format
+msgid "Fortran 2003: DP format specifier not allowed at %C"
+msgstr ""
+
+#: fortran/io.c:459
+#, gcc-internal-format
+msgid "Fortran 2003: DC format specifier not allowed at %C"
+msgstr ""
+
+#: fortran/io.c:648
+#, gcc-internal-format
+msgid "Extension: X descriptor requires leading space count at %L"
+msgstr ""
+
+#: fortran/io.c:678
+#, gcc-internal-format
+msgid "Extension: $ descriptor at %L"
+msgstr ""
+
+#: fortran/io.c:683
+#, gcc-internal-format
+msgid "$ should be the last specifier in format at %L"
+msgstr ""
+
+#: fortran/io.c:781
+#, gcc-internal-format
+msgid "Extension: Missing positive width after L descriptor at %L"
+msgstr ""
+
+#: fortran/io.c:825
+#, gcc-internal-format
+msgid "Fortran 2008: 'G0' in format at %L"
+msgstr ""
+
+#: fortran/io.c:853
+#, gcc-internal-format
+msgid "Positive width required in format specifier %s at %L"
+msgstr ""
+
+#: fortran/io.c:869 fortran/io.c:876
+#, gcc-internal-format
+msgid "Period required in format specifier %s at %L"
+msgstr ""
+
+#: fortran/io.c:948
+#, gcc-internal-format
+msgid "Period required in format specifier at %L"
+msgstr ""
+
+#: fortran/io.c:970
+#, gcc-internal-format
+msgid "The H format specifier at %L is a Fortran 95 deleted feature"
+msgstr ""
+
+#: fortran/io.c:1058 fortran/io.c:1121
+#, gcc-internal-format
+msgid "Extension: Missing comma at %L"
+msgstr ""
+
+#: fortran/io.c:1140
+#, gcc-internal-format
+msgid "%s in format string at %L"
+msgstr ""
+
+#: fortran/io.c:1185
+#, gcc-internal-format
+msgid "Format statement in module main block at %C"
+msgstr ""
+
+#: fortran/io.c:1191
+#, gcc-internal-format
+msgid "Missing format label at %C"
+msgstr ""
+
+#: fortran/io.c:1251 fortran/io.c:1282 fortran/io.c:1344
+#, gcc-internal-format
+msgid "Invalid value for %s specification at %C"
+msgstr ""
+
+#: fortran/io.c:1257 fortran/io.c:1288
+#, gcc-internal-format
+msgid "Duplicate %s specification at %C"
+msgstr ""
+
+#: fortran/io.c:1295
+#, gcc-internal-format
+msgid "Variable %s cannot be INTENT(IN) at %C"
+msgstr ""
+
+#: fortran/io.c:1302
+#, gcc-internal-format
+msgid "Variable %s cannot be assigned in PURE procedure at %C"
+msgstr ""
+
+#: fortran/io.c:1350
+#, gcc-internal-format
+msgid "Duplicate %s label specification at %C"
+msgstr ""
+
+#: fortran/io.c:1370
+#, gcc-internal-format
+msgid "Constant expression in FORMAT tag at %L must be of type default CHARACTER"
+msgstr ""
+
+#: fortran/io.c:1386
+#, gcc-internal-format
+msgid "FORMAT tag at %L must be of type CHARACTER or INTEGER"
+msgstr ""
+
+#: fortran/io.c:1392
+#, gcc-internal-format
+msgid "Deleted feature: ASSIGNED variable in FORMAT tag at %L"
+msgstr ""
+
+#: fortran/io.c:1398
+#, gcc-internal-format
+msgid "Variable '%s' at %L has not been assigned a format label"
+msgstr ""
+
+#: fortran/io.c:1405
+#, gcc-internal-format
+msgid "Scalar '%s' in FORMAT tag at %L is not an ASSIGNED variable"
+msgstr ""
+
+#: fortran/io.c:1417
+#, gcc-internal-format
+msgid "Extension: Non-character in FORMAT tag at %L"
+msgstr ""
+
+#: fortran/io.c:1423
+#, gcc-internal-format
+msgid "Non-character assumed shape array element in FORMAT tag at %L"
+msgstr ""
+
+#: fortran/io.c:1430
+#, gcc-internal-format
+msgid "Non-character assumed size array element in FORMAT tag at %L"
+msgstr ""
+
+#: fortran/io.c:1437
+#, gcc-internal-format
+msgid "Non-character pointer array element in FORMAT tag at %L"
+msgstr ""
+
+#: fortran/io.c:1463
+#, gcc-internal-format
+msgid "%s tag at %L must be of type %s"
+msgstr ""
+
+#: fortran/io.c:1470
+#, gcc-internal-format
+msgid "%s tag at %L must be scalar"
+msgstr ""
+
+#: fortran/io.c:1476
+#, gcc-internal-format
+msgid "Fortran 2003: IOMSG tag at %L"
+msgstr ""
+
+#: fortran/io.c:1484
+#, gcc-internal-format
+msgid "Fortran 95 requires default INTEGER in %s tag at %L"
+msgstr ""
+
+#: fortran/io.c:1492
+#, gcc-internal-format
+msgid "Extension: CONVERT tag at %L"
+msgstr ""
+
+#: fortran/io.c:1678 fortran/io.c:1686
+#, gcc-internal-format
+msgid "Fortran 2003: %s specifier in %s statement at %C has value '%s'"
+msgstr ""
+
+#: fortran/io.c:1705 fortran/io.c:1713
+#, gcc-internal-format
+msgid "Extension: %s specifier in %s statement at %C has value '%s'"
+msgstr ""
+
+#: fortran/io.c:1726 fortran/io.c:1734
+#, gcc-internal-format
+msgid "%s specifier in %s statement at %C has invalid value '%s'"
+msgstr ""
+
+#: fortran/io.c:1789
+#, gcc-internal-format
+msgid "OPEN statement not allowed in PURE procedure at %C"
+msgstr ""
+
+#: fortran/io.c:1800
+#, gcc-internal-format
+msgid "UNIT specifier not allowed with NEWUNIT at %C"
+msgstr ""
+
+#: fortran/io.c:1808
+#, gcc-internal-format
+msgid "NEWUNIT specifier must have FILE= or STATUS='scratch' at %C"
+msgstr ""
+
+#: fortran/io.c:1842
+#, gcc-internal-format
+msgid "Fortran 2003: ASYNCHRONOUS= at %C not allowed in Fortran 95"
+msgstr ""
+
+#: fortran/io.c:1860 fortran/io.c:3274
+#, gcc-internal-format
+msgid "Fortran 2003: BLANK= at %C not allowed in Fortran 95"
+msgstr ""
+
+#: fortran/io.c:1878 fortran/io.c:3253
+#, gcc-internal-format
+msgid "Fortran 2003: DECIMAL= at %C not allowed in Fortran 95"
+msgstr ""
+
+#: fortran/io.c:1896 fortran/io.c:3361
+#, gcc-internal-format
+msgid "Fortran 2003: DELIM= at %C not allowed in Fortran 95"
+msgstr ""
+
+#: fortran/io.c:1914
+#, gcc-internal-format
+msgid "Fortran 2003: ENCODING= at %C not allowed in Fortran 95"
+msgstr ""
+
+#: fortran/io.c:1965
+#, gcc-internal-format
+msgid "Fortran F2003: ROUND= at %C not allowed in Fortran 95"
+msgstr ""
+
+#: fortran/io.c:1985
+#, gcc-internal-format
+msgid "Fortran 2003: SIGN= at %C not allowed in Fortran 95"
+msgstr ""
+
+#: fortran/io.c:2198
+#, gcc-internal-format
+msgid "CLOSE statement not allowed in PURE procedure at %C"
+msgstr ""
+
+#: fortran/io.c:2245
+#, gcc-internal-format
+msgid "UNIT number in CLOSE statement at %L must be non-negative"
+msgstr ""
+
+#: fortran/io.c:2343 fortran/match.c:1976
+#, gcc-internal-format
+msgid "%s statement not allowed in PURE procedure at %C"
+msgstr ""
+
+#: fortran/io.c:2375 fortran/io.c:2783
+#, gcc-internal-format
+msgid "UNIT number in statement at %L must be non-negative"
+msgstr ""
+
+#: fortran/io.c:2407
+#, gcc-internal-format
+msgid "Fortran 2003: FLUSH statement at %C"
+msgstr ""
+
+#: fortran/io.c:2463
+#, gcc-internal-format
+msgid "Duplicate UNIT specification at %C"
+msgstr ""
+
+#: fortran/io.c:2523
+#, gcc-internal-format
+msgid "Duplicate format specification at %C"
+msgstr ""
+
+#: fortran/io.c:2540
+#, gcc-internal-format
+msgid "Symbol '%s' in namelist '%s' is INTENT(IN) at %C"
+msgstr ""
+
+#: fortran/io.c:2576
+#, gcc-internal-format
+msgid "Duplicate NML specification at %C"
+msgstr ""
+
+#: fortran/io.c:2585
+#, gcc-internal-format
+msgid "Symbol '%s' at %C must be a NAMELIST group name"
+msgstr ""
+
+#: fortran/io.c:2650
+#, gcc-internal-format
+msgid "END tag at %C not allowed in output statement"
+msgstr ""
+
+#: fortran/io.c:2721
+#, gcc-internal-format
+msgid "UNIT not specified at %L"
+msgstr ""
+
+#: fortran/io.c:2733
+#, gcc-internal-format
+msgid "UNIT specification at %L must be an INTEGER expression or a CHARACTER variable"
+msgstr ""
+
+#: fortran/io.c:2758
+#, gcc-internal-format
+msgid "Invalid form of WRITE statement at %L, UNIT required"
+msgstr ""
+
+#: fortran/io.c:2769
+#, gcc-internal-format
+msgid "Internal unit with vector subscript at %L"
+msgstr ""
+
+#: fortran/io.c:2776
+#, gcc-internal-format
+msgid "External IO UNIT cannot be an array at %L"
+msgstr ""
+
+#: fortran/io.c:2788
+#, gcc-internal-format
+msgid "Extension: Comma before i/o item list at %L"
+msgstr ""
+
+#: fortran/io.c:2798
+#, gcc-internal-format
+msgid "ERR tag label %d at %L not defined"
+msgstr ""
+
+#: fortran/io.c:2810
+#, gcc-internal-format
+msgid "END tag label %d at %L not defined"
+msgstr ""
+
+#: fortran/io.c:2822
+#, gcc-internal-format
+msgid "EOR tag label %d at %L not defined"
+msgstr ""
+
+#: fortran/io.c:2832
+#, gcc-internal-format
+msgid "FORMAT label %d at %L not defined"
+msgstr ""
+
+#: fortran/io.c:2953
+#, gcc-internal-format
+msgid "Syntax error in I/O iterator at %C"
+msgstr ""
+
+#: fortran/io.c:2984
+#, gcc-internal-format
+msgid "Expected variable in READ statement at %C"
+msgstr ""
+
+#: fortran/io.c:2990
+#, gcc-internal-format
+msgid "Expected expression in %s statement at %C"
+msgstr ""
+
+#: fortran/io.c:3000
+#, gcc-internal-format
+msgid "Variable '%s' in input list at %C cannot be INTENT(IN)"
+msgstr ""
+
+#: fortran/io.c:3010
+#, gcc-internal-format
+msgid "Cannot read to variable '%s' in PURE procedure at %C"
+msgstr ""
+
+#: fortran/io.c:3027
+#, gcc-internal-format
+msgid "Cannot write to internal file unit '%s' at %C inside a PURE procedure"
+msgstr ""
+
+#. A general purpose syntax error.
+#: fortran/io.c:3088 fortran/io.c:3692 fortran/gfortran.h:2350
+#, gcc-internal-format
+msgid "Syntax error in %s statement at %C"
+msgstr ""
+
+#: fortran/io.c:3173
+#, gcc-internal-format
+msgid "Fortran 2003: Internal file at %L with namelist"
+msgstr ""
+
+#: fortran/io.c:3227
+#, gcc-internal-format
+msgid "ASYNCHRONOUS= specifier at %L must be an initialization expression"
+msgstr ""
+
+#: fortran/io.c:3295
+#, gcc-internal-format
+msgid "Fortran 2003: PAD= at %C not allowed in Fortran 95"
+msgstr ""
+
+#: fortran/io.c:3316
+#, gcc-internal-format
+msgid "Fortran 2003: ROUND= at %C not allowed in Fortran 95"
+msgstr ""
+
+#: fortran/io.c:3510
+#, gcc-internal-format
+msgid "PRINT namelist at %C is an extension"
+msgstr ""
+
+#: fortran/io.c:3662
+#, gcc-internal-format
+msgid "Expected comma in I/O list at %C"
+msgstr ""
+
+#: fortran/io.c:3726
+#, gcc-internal-format
+msgid "PRINT statement at %C not allowed within PURE procedure"
+msgstr ""
+
+#: fortran/io.c:3882 fortran/io.c:3933
+#, gcc-internal-format
+msgid "INQUIRE statement not allowed in PURE procedure at %C"
+msgstr ""
+
+#: fortran/io.c:3909
+#, gcc-internal-format
+msgid "IOLENGTH tag invalid in INQUIRE statement at %C"
+msgstr ""
+
+#: fortran/io.c:3919 fortran/trans-io.c:1181
+#, gcc-internal-format
+msgid "INQUIRE statement at %L cannot contain both FILE and UNIT specifiers"
+msgstr ""
+
+#: fortran/io.c:3926
+#, gcc-internal-format
+msgid "INQUIRE statement at %L requires either FILE or UNIT specifier"
+msgstr ""
+
+#: fortran/io.c:3939
+#, gcc-internal-format
+msgid "INQUIRE statement at %L requires a PENDING= specifier with the ID= specifier"
+msgstr ""
+
+#: fortran/io.c:4096
+#, gcc-internal-format
+msgid "Fortran 2003: WAIT at %C not allowed in Fortran 95"
+msgstr ""
+
+#: fortran/io.c:4102
+#, gcc-internal-format
+msgid "WAIT statement not allowed in PURE procedure at %C"
+msgstr ""
+
+#: fortran/match.c:161
+#, gcc-internal-format
+msgid "Missing ')' in statement at or before %L"
+msgstr ""
+
+#: fortran/match.c:166
+#, gcc-internal-format
+msgid "Missing '(' in statement at or before %L"
+msgstr ""
+
+#: fortran/match.c:363
+#, gcc-internal-format
+msgid "Integer too large at %C"
+msgstr ""
+
+#: fortran/match.c:456 fortran/parse.c:634
+#, gcc-internal-format
+msgid "Too many digits in statement label at %C"
+msgstr ""
+
+#: fortran/match.c:462
+#, gcc-internal-format
+msgid "Statement label at %C is zero"
+msgstr ""
+
+#: fortran/match.c:495
+#, gcc-internal-format
+msgid "Label name '%s' at %C is ambiguous"
+msgstr ""
+
+#: fortran/match.c:501
+#, gcc-internal-format
+msgid "Duplicate construct label '%s' at %C"
+msgstr ""
+
+#: fortran/match.c:532
+#, gcc-internal-format
+msgid "Invalid character in name at %C"
+msgstr ""
+
+#: fortran/match.c:545 fortran/match.c:626
+#, gcc-internal-format
+msgid "Name at %C is too long"
+msgstr ""
+
+#: fortran/match.c:556
+#, gcc-internal-format
+msgid "Invalid character '$' at %C. Use -fdollar-ok to allow it as an extension"
+msgstr ""
+
+#: fortran/match.c:607 fortran/match.c:655
+#, gcc-internal-format
+msgid "Invalid C name in NAME= specifier at %C"
+msgstr ""
+
+#: fortran/match.c:646
+#, gcc-internal-format
+msgid "Embedded space in NAME= specifier at %C"
+msgstr ""
+
+#: fortran/match.c:971
+#, gcc-internal-format
+msgid "Loop variable at %C cannot be a sub-component"
+msgstr ""
+
+#: fortran/match.c:977
+#, gcc-internal-format
+msgid "Loop variable '%s' at %C cannot be INTENT(IN)"
+msgstr ""
+
+#: fortran/match.c:1010
+#, gcc-internal-format
+msgid "Expected a step value in iterator at %C"
+msgstr ""
+
+#: fortran/match.c:1022
+#, gcc-internal-format
+msgid "Syntax error in iterator at %C"
+msgstr ""
+
+#: fortran/match.c:1263
+#, gcc-internal-format
+msgid "Invalid form of PROGRAM statement at %C"
+msgstr ""
+
+#: fortran/match.c:1389 fortran/match.c:1470
+#, gcc-internal-format
+msgid "Obsolescent feature: Arithmetic IF statement at %C"
+msgstr ""
+
+#: fortran/match.c:1445
+#, gcc-internal-format
+msgid "Syntax error in IF-expression at %C"
+msgstr ""
+
+#: fortran/match.c:1456
+#, gcc-internal-format
+msgid "Block label not appropriate for arithmetic IF statement at %C"
+msgstr ""
+
+#: fortran/match.c:1494
+#, gcc-internal-format
+msgid "Block label is not appropriate for IF statement at %C"
+msgstr ""
+
+#: fortran/match.c:1574 fortran/primary.c:3007
+#, gcc-internal-format
+msgid "Cannot assign to a named constant at %C"
+msgstr ""
+
+#: fortran/match.c:1584
+#, gcc-internal-format
+msgid "Unclassifiable statement in IF-clause at %C"
+msgstr ""
+
+#: fortran/match.c:1591
+#, gcc-internal-format
+msgid "Syntax error in IF-clause at %C"
+msgstr ""
+
+#: fortran/match.c:1635
+#, gcc-internal-format
+msgid "Unexpected junk after ELSE statement at %C"
+msgstr ""
+
+#: fortran/match.c:1641 fortran/match.c:1676
+#, gcc-internal-format
+msgid "Label '%s' at %C doesn't match IF label '%s'"
+msgstr ""
+
+#: fortran/match.c:1670
+#, gcc-internal-format
+msgid "Unexpected junk after ELSE IF statement at %C"
+msgstr ""
+
+#: fortran/match.c:1862
+#, gcc-internal-format
+msgid "Name '%s' in %s statement at %C is not a loop name"
+msgstr ""
+
+#: fortran/match.c:1878
+#, gcc-internal-format
+msgid "%s statement at %C is not within a loop"
+msgstr ""
+
+#: fortran/match.c:1881
+#, gcc-internal-format
+msgid "%s statement at %C is not within loop '%s'"
+msgstr ""
+
+#: fortran/match.c:1889
+#, gcc-internal-format
+msgid "%s statement at %C leaving OpenMP structured block"
+msgstr ""
+
+#: fortran/match.c:1902
+#, gcc-internal-format
+msgid "EXIT statement at %C terminating !$OMP DO loop"
+msgstr ""
+
+#: fortran/match.c:1954
+#, gcc-internal-format
+msgid "Too many digits in STOP code at %C"
+msgstr ""
+
+#: fortran/match.c:2007
+#, gcc-internal-format
+msgid "Deleted feature: PAUSE statement at %C"
+msgstr ""
+
+#: fortran/match.c:2055
+#, gcc-internal-format
+msgid "Deleted feature: ASSIGN statement at %C"
+msgstr ""
+
+#: fortran/match.c:2101
+#, gcc-internal-format
+msgid "Deleted feature: Assigned GOTO statement at %C"
+msgstr ""
+
+#: fortran/match.c:2148 fortran/match.c:2200
+#, gcc-internal-format
+msgid "Statement label list in GOTO at %C cannot be empty"
+msgstr ""
+
+#: fortran/match.c:2210
+#, gcc-internal-format
+msgid "Obsolescent feature: Computed GOTO at %C"
+msgstr ""
+
+#. Enforce F03:C476.
+#: fortran/match.c:2273
+#, gcc-internal-format
+msgid "'%s' at %L is not an accessible derived type"
+msgstr ""
+
+#: fortran/match.c:2351
+#, gcc-internal-format
+msgid "Derived type '%s' at %L may not be ABSTRACT"
+msgstr ""
+
+#: fortran/match.c:2369
+#, gcc-internal-format
+msgid "Invalid type-spec at %C"
+msgstr ""
+
+#: fortran/match.c:2422
+#, gcc-internal-format
+msgid "Fortran 2003: typespec in ALLOCATE at %L"
+msgstr ""
+
+#: fortran/match.c:2454
+#, gcc-internal-format
+msgid "Bad allocate-object at %C for a PURE procedure"
+msgstr ""
+
+#: fortran/match.c:2465
+#, gcc-internal-format
+msgid "Type of entity at %L is type incompatible with typespec"
+msgstr ""
+
+#: fortran/match.c:2473
+#, gcc-internal-format
+msgid "Kind type parameter for entity at %L differs from the kind type parameter of the typespec"
+msgstr ""
+
+#: fortran/match.c:2500 fortran/match.c:2761
+#, gcc-internal-format
+msgid "Allocate-object at %C is not a nonprocedure pointer or an allocatable variable"
+msgstr ""
+
+#: fortran/match.c:2507
+#, gcc-internal-format
+msgid "Shape specification for allocatable scalar at %C"
+msgstr ""
+
+#: fortran/match.c:2524 fortran/match.c:2778
+#, gcc-internal-format
+msgid "Redundant STAT tag found at %L "
+msgstr ""
+
+#: fortran/match.c:2543
+#, gcc-internal-format
+msgid "Fortran 2003: ERRMSG tag at %L"
+msgstr ""
+
+#: fortran/match.c:2550 fortran/match.c:2804
+#, gcc-internal-format
+msgid "Redundant ERRMSG tag found at %L "
+msgstr ""
+
+#: fortran/match.c:2566
+#, gcc-internal-format
+msgid "Fortran 2003: SOURCE tag at %L"
+msgstr ""
+
+#: fortran/match.c:2573
+#, gcc-internal-format
+msgid "Redundant SOURCE tag found at %L "
+msgstr ""
+
+#: fortran/match.c:2580
+#, gcc-internal-format
+msgid "SOURCE tag at %L conflicts with the typespec at %L"
+msgstr ""
+
+#: fortran/match.c:2587
+#, gcc-internal-format
+msgid "SOURCE tag at %L requires only a single entity in the allocation-list"
+msgstr ""
+
+#: fortran/match.c:2659
+#, gcc-internal-format
+msgid "Illegal variable in NULLIFY at %C for a PURE procedure"
+msgstr ""
+
+#: fortran/match.c:2745
+#, gcc-internal-format
+msgid "Illegal allocate-object at %C for a PURE procedure"
+msgstr ""
+
+#: fortran/match.c:2798
+#, gcc-internal-format
+msgid "Fortran 2003: ERRMSG at %L"
+msgstr ""
+
+#: fortran/match.c:2858
+#, gcc-internal-format
+msgid "Alternate RETURN statement at %C is only allowed within a SUBROUTINE"
+msgstr ""
+
+#: fortran/match.c:2863
+#, gcc-internal-format
+msgid "Obsolescent feature: Alternate RETURN at %C"
+msgstr ""
+
+#: fortran/match.c:2893
+#, gcc-internal-format
+msgid "Extension: RETURN statement in main program at %C"
+msgstr ""
+
+#: fortran/match.c:2921
+#, gcc-internal-format
+msgid "Expected component reference at %C"
+msgstr ""
+
+#: fortran/match.c:2927
+#, gcc-internal-format
+msgid "Junk after CALL at %C"
+msgstr ""
+
+#: fortran/match.c:2937
+#, gcc-internal-format
+msgid "Expected type-bound procedure or procedure pointer component at %C"
+msgstr ""
+
+#: fortran/match.c:3156
+#, gcc-internal-format
+msgid "Syntax error in common block name at %C"
+msgstr ""
+
+#: fortran/match.c:3192
+#, gcc-internal-format
+msgid "Symbol '%s' at %C is already an external symbol that is not COMMON"
+msgstr ""
+
+#. If we find an error, just print it and continue,
+#. cause it's just semantic, and we can see if there
+#. are more errors.
+#: fortran/match.c:3251
+#, gcc-internal-format
+msgid "Variable '%s' at %L in common block '%s' at %C must be declared with a C interoperable kind since common block '%s' is bind(c)"
+msgstr ""
+
+#: fortran/match.c:3260
+#, gcc-internal-format
+msgid "Variable '%s' in common block '%s' at %C can not be bind(c) since it is not global"
+msgstr ""
+
+#: fortran/match.c:3267
+#, gcc-internal-format
+msgid "Symbol '%s' at %C is already in a COMMON block"
+msgstr ""
+
+#: fortran/match.c:3275
+#, gcc-internal-format
+msgid "Initialized symbol '%s' at %C can only be COMMON in BLOCK DATA"
+msgstr ""
+
+#: fortran/match.c:3302
+#, gcc-internal-format
+msgid "Array specification for symbol '%s' in COMMON at %C must be explicit"
+msgstr ""
+
+#: fortran/match.c:3312
+#, gcc-internal-format
+msgid "Symbol '%s' in COMMON at %C cannot be a POINTER array"
+msgstr ""
+
+#: fortran/match.c:3344
+#, gcc-internal-format
+msgid "Symbol '%s', in COMMON block '%s' at %C is being indirectly equivalenced to another COMMON block '%s'"
+msgstr ""
+
+#: fortran/match.c:3452
+#, gcc-internal-format
+msgid "Namelist group name '%s' at %C already has a basic type of %s"
+msgstr ""
+
+#: fortran/match.c:3460
+#, gcc-internal-format
+msgid "Namelist group name '%s' at %C already is USE associated and cannot be respecified."
+msgstr ""
+
+#: fortran/match.c:3487
+#, gcc-internal-format
+msgid "Assumed size array '%s' in namelist '%s' at %C is not allowed"
+msgstr ""
+
+#: fortran/match.c:3494
+#, gcc-internal-format
+msgid "Assumed character length '%s' in namelist '%s' at %C is not allowed"
+msgstr ""
+
+#: fortran/match.c:3621
+#, gcc-internal-format
+msgid "Derived type component %C is not a permitted EQUIVALENCE member"
+msgstr ""
+
+#: fortran/match.c:3629
+#, gcc-internal-format
+msgid "Array reference in EQUIVALENCE at %C cannot be an array section"
+msgstr ""
+
+#: fortran/match.c:3657
+#, gcc-internal-format
+msgid "EQUIVALENCE at %C requires two or more objects"
+msgstr ""
+
+#: fortran/match.c:3671
+#, gcc-internal-format
+msgid "Attempt to indirectly overlap COMMON blocks %s and %s by EQUIVALENCE at %C"
+msgstr ""
+
+#: fortran/match.c:3684
+#, gcc-internal-format
+msgid "Expecting a comma in EQUIVALENCE at %C"
+msgstr ""
+
+#: fortran/match.c:3800
+#, gcc-internal-format
+msgid "Statement function at %L is recursive"
+msgstr ""
+
+#: fortran/match.c:3806
+#, gcc-internal-format
+msgid "Obsolescent feature: Statement function at %C"
+msgstr ""
+
+#: fortran/match.c:3892
+#, gcc-internal-format
+msgid "Expected initialization expression in CASE at %C"
+msgstr ""
+
+#: fortran/match.c:3924
+#, gcc-internal-format
+msgid "Expected block name '%s' of SELECT construct at %C"
+msgstr ""
+
+#: fortran/match.c:4045
+#, gcc-internal-format
+msgid "Selector in SELECT TYPE at %C is not a named variable; use associate-name=>"
+msgstr ""
+
+#: fortran/match.c:4053
+#, gcc-internal-format
+msgid "Selector shall be polymorphic in SELECT TYPE statement at %C"
+msgstr ""
+
+#: fortran/match.c:4081
+#, gcc-internal-format
+msgid "Unexpected CASE statement at %C"
+msgstr ""
+
+#: fortran/match.c:4133
+#, gcc-internal-format
+msgid "Syntax error in CASE specification at %C"
+msgstr ""
+
+#: fortran/match.c:4151
+#, gcc-internal-format
+msgid "Unexpected TYPE IS statement at %C"
+msgstr ""
+
+#: fortran/match.c:4184
+#, gcc-internal-format
+msgid "Syntax error in TYPE IS specification at %C"
+msgstr ""
+
+#: fortran/match.c:4256
+#, gcc-internal-format
+msgid "Syntax error in CLASS IS specification at %C"
+msgstr ""
+
+#: fortran/match.c:4378
+#, gcc-internal-format
+msgid "ELSEWHERE statement at %C not enclosed in WHERE block"
+msgstr ""
+
+#: fortran/match.c:4416
+#, gcc-internal-format
+msgid "Label '%s' at %C doesn't match WHERE label '%s'"
+msgstr ""
+
+#: fortran/match.c:4516
+#, gcc-internal-format
+msgid "Syntax error in FORALL iterator at %C"
+msgstr ""
+
+#: fortran/matchexp.c:72
+#, gcc-internal-format
+msgid "Bad character '%c' in OPERATOR name at %C"
+msgstr ""
+
+#: fortran/matchexp.c:80
+#, gcc-internal-format
+msgid "The name '%s' cannot be used as a defined operator at %C"
+msgstr ""
+
+#: fortran/matchexp.c:177
+#, gcc-internal-format
+msgid "Expected a right parenthesis in expression at %C"
+msgstr ""
+
+#: fortran/matchexp.c:302
+#, gcc-internal-format
+msgid "Expected exponent in expression at %C"
+msgstr ""
+
+#: fortran/matchexp.c:340 fortran/matchexp.c:345 fortran/matchexp.c:449
+#: fortran/matchexp.c:454
+#, gcc-internal-format
+msgid "Extension: Unary operator following arithmetic operator (use parentheses) at %C"
+msgstr ""
+
+#: fortran/misc.c:39
+#, gcc-internal-format
+msgid "Out of memory-- malloc() failed"
+msgstr ""
+
+#: fortran/module.c:520
+#, gcc-internal-format
+msgid "Fortran 2003: module nature in USE statement at %C"
+msgstr ""
+
+#: fortran/module.c:532
+#, gcc-internal-format
+msgid "Module nature in USE statement at %C shall be either INTRINSIC or NON_INTRINSIC"
+msgstr ""
+
+#: fortran/module.c:545
+#, gcc-internal-format
+msgid "\"::\" was expected after module nature at %C but was not found"
+msgstr ""
+
+#: fortran/module.c:554
+#, gcc-internal-format
+msgid "Fortran 2003: \"USE :: module\" at %C"
+msgstr ""
+
+#: fortran/module.c:608
+#, gcc-internal-format
+msgid "Missing generic specification in USE statement at %C"
+msgstr ""
+
+#: fortran/module.c:616
+#, gcc-internal-format
+msgid "Fortran 2003: Renaming operators in USE statements at %C"
+msgstr ""
+
+#: fortran/module.c:658
+#, gcc-internal-format
+msgid "The name '%s' at %C has already been used as an external module name."
+msgstr ""
+
+#: fortran/module.c:935
+#, gcc-internal-format
+msgid "Reading module %s at line %d column %d: %s"
+msgstr ""
+
+#: fortran/module.c:939
+#, gcc-internal-format
+msgid "Writing module %s at line %d column %d: %s"
+msgstr ""
+
+#: fortran/module.c:943
+#, gcc-internal-format
+msgid "Module %s at line %d column %d: %s"
+msgstr ""
+
+#: fortran/module.c:1301
+#, gcc-internal-format
+msgid "Error writing modules file: %s"
+msgstr ""
+
+#: fortran/module.c:3174
+#, gcc-internal-format
+msgid "Namelist %s cannot be renamed by USE association to %s"
+msgstr ""
+
+#: fortran/module.c:4483
+#, gcc-internal-format
+msgid "Symbol '%s' referenced at %L not found in module '%s'"
+msgstr ""
+
+#: fortran/module.c:4490
+#, gcc-internal-format
+msgid "User operator '%s' referenced at %L not found in module '%s'"
+msgstr ""
+
+#: fortran/module.c:4495
+#, gcc-internal-format
+msgid "Intrinsic operator '%s' referenced at %L not found in module '%s'"
+msgstr ""
+
+#: fortran/module.c:5106
+#, gcc-internal-format
+msgid "Can't open module file '%s' for writing at %C: %s"
+msgstr ""
+
+#: fortran/module.c:5144
+#, gcc-internal-format
+msgid "Error writing module file '%s' for writing: %s"
+msgstr ""
+
+#: fortran/module.c:5153
+#, gcc-internal-format
+msgid "Can't delete module file '%s': %s"
+msgstr ""
+
+#: fortran/module.c:5156
+#, gcc-internal-format
+msgid "Can't rename module file '%s' to '%s': %s"
+msgstr ""
+
+#: fortran/module.c:5162
+#, gcc-internal-format
+msgid "Can't delete temporary module file '%s': %s"
+msgstr ""
+
+#: fortran/module.c:5182 fortran/module.c:5265
+#, gcc-internal-format
+msgid "Symbol '%s' referenced at %L does not exist in intrinsic module ISO_C_BINDING."
+msgstr ""
+
+#: fortran/module.c:5300
+#, gcc-internal-format
+msgid "Symbol '%s' referenced at %L not found in intrinsic module ISO_C_BINDING"
+msgstr ""
+
+#: fortran/module.c:5322
+#, gcc-internal-format
+msgid "Symbol '%s' already declared"
+msgstr ""
+
+#: fortran/module.c:5377
+#, gcc-internal-format
+msgid "Use of intrinsic module '%s' at %C conflicts with non-intrinsic module name used previously"
+msgstr ""
+
+#: fortran/module.c:5390
+#, gcc-internal-format
+msgid "Symbol '%s' referenced at %L does not exist in intrinsic module ISO_FORTRAN_ENV"
+msgstr ""
+
+#: fortran/module.c:5398
+#, gcc-internal-format
+msgid "Use of the NUMERIC_STORAGE_SIZE named constant from intrinsic module ISO_FORTRAN_ENV at %L is incompatible with option %s"
+msgstr ""
+
+#: fortran/module.c:5426
+#, gcc-internal-format
+msgid "Use of the NUMERIC_STORAGE_SIZE named constant from intrinsic module ISO_FORTRAN_ENV at %C is incompatible with option %s"
+msgstr ""
+
+#: fortran/module.c:5442
+#, gcc-internal-format
+msgid "Symbol '%s' referenced at %L not found in intrinsic module ISO_FORTRAN_ENV"
+msgstr ""
+
+#: fortran/module.c:5476
+#, gcc-internal-format
+msgid "Fortran 2003: ISO_FORTRAN_ENV intrinsic module at %C"
+msgstr ""
+
+#: fortran/module.c:5484
+#, gcc-internal-format
+msgid "Fortran 2003: ISO_C_BINDING module at %C"
+msgstr ""
+
+#: fortran/module.c:5494
+#, gcc-internal-format
+msgid "Can't find an intrinsic module named '%s' at %C"
+msgstr ""
+
+#: fortran/module.c:5499
+#, gcc-internal-format
+msgid "Can't open module file '%s' for reading at %C: %s"
+msgstr ""
+
+#: fortran/module.c:5507
+#, gcc-internal-format
+msgid "Use of non-intrinsic module '%s' at %C conflicts with intrinsic module name used previously"
+msgstr ""
+
+#: fortran/module.c:5527
+#, gcc-internal-format
+msgid "File '%s' opened at %C is not a GFORTRAN module file"
+msgstr ""
+
+#: fortran/module.c:5534
+#, gcc-internal-format
+msgid "Parse error when checking module version for file '%s' opened at %C"
+msgstr ""
+
+#: fortran/module.c:5539
+#, gcc-internal-format
+msgid "Wrong module version '%s' (expected '%s') for file '%s' opened at %C"
+msgstr ""
+
+#: fortran/module.c:5552
+#, gcc-internal-format
+msgid "Can't USE the same module we're building!"
+msgstr ""
+
+#: fortran/openmp.c:134 fortran/openmp.c:563
+#, gcc-internal-format
+msgid "COMMON block /%s/ not found at %C"
+msgstr ""
+
+#: fortran/openmp.c:165
+#, gcc-internal-format
+msgid "Syntax error in OpenMP variable list at %C"
+msgstr ""
+
+#: fortran/openmp.c:293
+#, gcc-internal-format
+msgid "%s is not INTRINSIC procedure name at %C"
+msgstr ""
+
+#: fortran/openmp.c:404
+#, gcc-internal-format
+msgid "COLLAPSE clause argument not constant positive integer at %C"
+msgstr ""
+
+#: fortran/openmp.c:542
+#, gcc-internal-format
+msgid "Threadprivate variable at %C is an element of a COMMON block"
+msgstr ""
+
+#: fortran/openmp.c:582
+#, gcc-internal-format
+msgid "Syntax error in !$OMP THREADPRIVATE list at %C"
+msgstr ""
+
+#: fortran/openmp.c:760 fortran/resolve.c:7766 fortran/resolve.c:8162
+#, gcc-internal-format
+msgid "IF clause at %L requires a scalar LOGICAL expression"
+msgstr ""
+
+#: fortran/openmp.c:768
+#, gcc-internal-format
+msgid "NUM_THREADS clause at %L requires a scalar INTEGER expression"
+msgstr ""
+
+#: fortran/openmp.c:776
+#, gcc-internal-format
+msgid "SCHEDULE clause's chunk_size at %L requires a scalar INTEGER expression"
+msgstr ""
+
+#: fortran/openmp.c:816
+#, gcc-internal-format
+msgid "Object '%s' is not a variable at %L"
+msgstr ""
+
+#: fortran/openmp.c:824 fortran/openmp.c:834 fortran/openmp.c:841
+#: fortran/openmp.c:851
+#, gcc-internal-format
+msgid "Symbol '%s' present on multiple clauses at %L"
+msgstr ""
+
+#: fortran/openmp.c:874
+#, gcc-internal-format
+msgid "Non-THREADPRIVATE object '%s' in COPYIN clause at %L"
+msgstr ""
+
+#: fortran/openmp.c:877
+#, gcc-internal-format
+msgid "COPYIN clause object '%s' at %L has ALLOCATABLE components"
+msgstr ""
+
+#: fortran/openmp.c:885
+#, gcc-internal-format
+msgid "Assumed size array '%s' in COPYPRIVATE clause at %L"
+msgstr ""
+
+#: fortran/openmp.c:888
+#, gcc-internal-format
+msgid "COPYPRIVATE clause object '%s' at %L has ALLOCATABLE components"
+msgstr ""
+
+#: fortran/openmp.c:896
+#, gcc-internal-format
+msgid "THREADPRIVATE object '%s' in SHARED clause at %L"
+msgstr ""
+
+#: fortran/openmp.c:899
+#, gcc-internal-format
+msgid "Cray pointee '%s' in SHARED clause at %L"
+msgstr ""
+
+#: fortran/openmp.c:907
+#, gcc-internal-format
+msgid "THREADPRIVATE object '%s' in %s clause at %L"
+msgstr ""
+
+#: fortran/openmp.c:910
+#, gcc-internal-format
+msgid "Cray pointee '%s' in %s clause at %L"
+msgstr ""
+
+#: fortran/openmp.c:915
+#, gcc-internal-format
+msgid "POINTER object '%s' in %s clause at %L"
+msgstr ""
+
+#: fortran/openmp.c:920
+#, gcc-internal-format
+msgid "%s clause object '%s' has ALLOCATABLE components at %L"
+msgstr ""
+
+#: fortran/openmp.c:923
+#, gcc-internal-format
+msgid "Cray pointer '%s' in %s clause at %L"
+msgstr ""
+
+#: fortran/openmp.c:927
+#, gcc-internal-format
+msgid "Assumed size array '%s' in %s clause at %L"
+msgstr ""
+
+#: fortran/openmp.c:932
+#, gcc-internal-format
+msgid "Variable '%s' in %s clause is used in NAMELIST statement at %L"
+msgstr ""
+
+#: fortran/openmp.c:941
+#, gcc-internal-format
+msgid "%c REDUCTION variable '%s' at %L must be of numeric type, got %s"
+msgstr ""
+
+#: fortran/openmp.c:952
+#, gcc-internal-format
+msgid "%s REDUCTION variable '%s' must be LOGICAL at %L"
+msgstr ""
+
+#: fortran/openmp.c:963
+#, gcc-internal-format
+msgid "%s REDUCTION variable '%s' must be INTEGER or REAL at %L"
+msgstr ""
+
+#: fortran/openmp.c:972
+#, gcc-internal-format
+msgid "%s REDUCTION variable '%s' must be INTEGER at %L"
+msgstr ""
+
+#: fortran/openmp.c:1084
+#, gcc-internal-format
+msgid "!$OMP ATOMIC statement must set a scalar variable of intrinsic type at %L"
+msgstr ""
+
+#: fortran/openmp.c:1124
+#, gcc-internal-format
+msgid "!$OMP ATOMIC assignment operator must be +, *, -, /, .AND., .OR., .EQV. or .NEQV. at %L"
+msgstr ""
+
+#: fortran/openmp.c:1172
+#, gcc-internal-format
+msgid "!$OMP ATOMIC assignment must be var = var op expr or var = expr op var at %L"
+msgstr ""
+
+#: fortran/openmp.c:1186
+#, gcc-internal-format
+msgid "!$OMP ATOMIC var = var op expr not mathematically equivalent to var = var op (expr) at %L"
+msgstr ""
+
+#: fortran/openmp.c:1218
+#, gcc-internal-format
+msgid "expr in !$OMP ATOMIC assignment var = var op expr must be scalar and cannot reference var at %L"
+msgstr ""
+
+#: fortran/openmp.c:1242
+#, gcc-internal-format
+msgid "!$OMP ATOMIC assignment intrinsic IAND, IOR or IEOR must have two arguments at %L"
+msgstr ""
+
+#: fortran/openmp.c:1249
+#, gcc-internal-format
+msgid "!$OMP ATOMIC assignment intrinsic must be MIN, MAX, IAND, IOR or IEOR at %L"
+msgstr ""
+
+#: fortran/openmp.c:1265
+#, gcc-internal-format
+msgid "!$OMP ATOMIC intrinsic arguments except one must not reference '%s' at %L"
+msgstr ""
+
+#: fortran/openmp.c:1268
+#, gcc-internal-format
+msgid "!$OMP ATOMIC intrinsic arguments must be scalar at %L"
+msgstr ""
+
+#: fortran/openmp.c:1274
+#, gcc-internal-format
+msgid "First or last !$OMP ATOMIC intrinsic argument must be '%s' at %L"
+msgstr ""
+
+#: fortran/openmp.c:1292
+#, gcc-internal-format
+msgid "!$OMP ATOMIC assignment must have an operator or intrinsic on right hand side at %L"
+msgstr ""
+
+#: fortran/openmp.c:1427
+#, gcc-internal-format
+msgid "!$OMP DO cannot be a DO WHILE or DO without loop control at %L"
+msgstr ""
+
+#: fortran/openmp.c:1433
+#, gcc-internal-format
+msgid "!$OMP DO iteration variable must be of type integer at %L"
+msgstr ""
+
+#: fortran/openmp.c:1437
+#, gcc-internal-format
+msgid "!$OMP DO iteration variable must not be THREADPRIVATE at %L"
+msgstr ""
+
+#: fortran/openmp.c:1445
+#, gcc-internal-format
+msgid "!$OMP DO iteration variable present on clause other than PRIVATE or LASTPRIVATE at %L"
+msgstr ""
+
+#: fortran/openmp.c:1463
+#, gcc-internal-format
+msgid "!$OMP DO collapsed loops don't form rectangular iteration space at %L"
+msgstr ""
+
+#: fortran/openmp.c:1477
+#, gcc-internal-format
+msgid "collapsed !$OMP DO loops not perfectly nested at %L"
+msgstr ""
+
+#: fortran/openmp.c:1486 fortran/openmp.c:1493
+#, gcc-internal-format
+msgid "not enough DO loops for collapsed !$OMP DO at %L"
+msgstr ""
+
+#: fortran/options.c:240
+#, gcc-internal-format
+msgid "-fexcess-precision=standard for Fortran"
+msgstr ""
+
+#: fortran/options.c:310
+#, gcc-internal-format
+msgid "Reading file '%s' as free form"
+msgstr ""
+
+#: fortran/options.c:320
+#, gcc-internal-format
+msgid "'-fd-lines-as-comments' has no effect in free form"
+msgstr ""
+
+#: fortran/options.c:323
+#, gcc-internal-format
+msgid "'-fd-lines-as-code' has no effect in free form"
+msgstr ""
+
+#: fortran/options.c:341
+#, gcc-internal-format
+msgid "Flag -fno-automatic overwrites -fmax-stack-var-size=%d"
+msgstr ""
+
+#: fortran/options.c:344
+#, gcc-internal-format
+msgid "Flag -fno-automatic overwrites -frecursive"
+msgstr ""
+
+#: fortran/options.c:346
+#, gcc-internal-format
+msgid "Flag -fno-automatic overwrites -frecursive implied by -fopenmp"
+msgstr ""
+
+#: fortran/options.c:350
+#, gcc-internal-format
+msgid "Flag -frecursive overwrites -fmax-stack-var-size=%d"
+msgstr ""
+
+#: fortran/options.c:354
+#, gcc-internal-format
+msgid "Flag -fmax-stack-var-size=%d overwrites -frecursive implied by -fopenmp"
+msgstr ""
+
+#: fortran/options.c:434
+#, gcc-internal-format
+msgid "gfortran: Only one -J option allowed"
+msgstr ""
+
+#: fortran/options.c:477
+#, gcc-internal-format
+msgid "Argument to -ffpe-trap is not valid: %s"
+msgstr ""
+
+#: fortran/options.c:516
+#, gcc-internal-format
+msgid "Argument to -fcheck is not valid: %s"
+msgstr ""
+
+#: fortran/options.c:673
+#, gcc-internal-format
+msgid "Fixed line length must be at least seven."
+msgstr ""
+
+#: fortran/options.c:691
+#, gcc-internal-format
+msgid "Free line length must be at least three."
+msgstr ""
+
+#: fortran/options.c:709
+#, gcc-internal-format
+msgid "-static-libgfortran is not supported in this configuration"
+msgstr ""
+
+#: fortran/options.c:757
+#, gcc-internal-format
+msgid "Maximum supported identifier length is %d"
+msgstr ""
+
+#: fortran/options.c:789
+#, gcc-internal-format
+msgid "Unrecognized option to -finit-logical: %s"
+msgstr ""
+
+#: fortran/options.c:805
+#, gcc-internal-format
+msgid "Unrecognized option to -finit-real: %s"
+msgstr ""
+
+#: fortran/options.c:821
+#, gcc-internal-format
+msgid "The value of n in -finit-character=n must be between 0 and 127"
+msgstr ""
+
+#: fortran/options.c:912
+#, gcc-internal-format
+msgid "Maximum subrecord length cannot exceed %d"
+msgstr ""
+
+#: fortran/parse.c:462
+#, gcc-internal-format
+msgid "Unclassifiable statement at %C"
+msgstr ""
+
+#: fortran/parse.c:486
+#, gcc-internal-format
+msgid "OpenMP directives at %C may not appear in PURE or ELEMENTAL procedures"
+msgstr ""
+
+#: fortran/parse.c:567
+#, gcc-internal-format
+msgid "Unclassifiable OpenMP directive at %C"
+msgstr ""
+
+#: fortran/parse.c:595
+#, gcc-internal-format
+msgid "Unclassifiable GCC directive at %C"
+msgstr ""
+
+#: fortran/parse.c:637 fortran/parse.c:806
+#, gcc-internal-format
+msgid "Zero is not a valid statement label at %C"
+msgstr ""
+
+#: fortran/parse.c:644 fortran/parse.c:798
+#, gcc-internal-format
+msgid "Non-numeric character in statement label at %C"
+msgstr ""
+
+#: fortran/parse.c:656 fortran/parse.c:710 fortran/parse.c:846
+#, gcc-internal-format
+msgid "Semicolon at %C needs to be preceded by statement"
+msgstr ""
+
+#: fortran/parse.c:664 fortran/parse.c:858
+#, gcc-internal-format
+msgid "Ignoring statement label in empty statement at %L"
+msgstr ""
+
+#: fortran/parse.c:785 fortran/parse.c:825
+#, gcc-internal-format
+msgid "Bad continuation line at %C"
+msgstr ""
+
+#: fortran/parse.c:1072
+#, gcc-internal-format
+msgid "FORMAT statement at %L does not have a statement label"
+msgstr ""
+
+#: fortran/parse.c:1624
+#, gcc-internal-format
+msgid "Unexpected %s statement at %C"
+msgstr ""
+
+#: fortran/parse.c:1771
+#, gcc-internal-format
+msgid "%s statement at %C cannot follow %s statement at %L"
+msgstr ""
+
+#: fortran/parse.c:1788
+#, gcc-internal-format
+msgid "Unexpected end of file in '%s'"
+msgstr ""
+
+#: fortran/parse.c:1820
+#, gcc-internal-format
+msgid "Derived-type '%s' with SEQUENCE must not have a CONTAINS section at %C"
+msgstr ""
+
+#: fortran/parse.c:1823
+#, gcc-internal-format
+msgid "Derived-type '%s' with BIND(C) must not have a CONTAINS section at %C"
+msgstr ""
+
+#: fortran/parse.c:1843
+#, gcc-internal-format
+msgid "Components in TYPE at %C must precede CONTAINS"
+msgstr ""
+
+#: fortran/parse.c:1848
+#, gcc-internal-format
+msgid "Fortran 2003:  Type-bound procedure at %C"
+msgstr ""
+
+#: fortran/parse.c:1857
+#, gcc-internal-format
+msgid "Fortran 2003:  GENERIC binding at %C"
+msgstr ""
+
+#: fortran/parse.c:1867
+#, gcc-internal-format
+msgid "Fortran 2003:  FINAL procedure declaration at %C"
+msgstr ""
+
+#: fortran/parse.c:1879
+#, gcc-internal-format
+msgid "Fortran 2008: Derived type definition at %C with empty CONTAINS section"
+msgstr ""
+
+#: fortran/parse.c:1890 fortran/parse.c:1996
+#, gcc-internal-format
+msgid "PRIVATE statement in TYPE at %C must be inside a MODULE"
+msgstr ""
+
+#: fortran/parse.c:1898
+#, gcc-internal-format
+msgid "PRIVATE statement at %C must precede procedure bindings"
+msgstr ""
+
+#: fortran/parse.c:1906 fortran/parse.c:2012
+#, gcc-internal-format
+msgid "Duplicate PRIVATE statement at %C"
+msgstr ""
+
+#: fortran/parse.c:1916
+#, gcc-internal-format
+msgid "SEQUENCE statement at %C must precede CONTAINS"
+msgstr ""
+
+#: fortran/parse.c:1921
+#, gcc-internal-format
+msgid "Already inside a CONTAINS block at %C"
+msgstr ""
+
+#: fortran/parse.c:1976
+#, gcc-internal-format
+msgid "FINAL declaration at %C must be inside CONTAINS"
+msgstr ""
+
+#: fortran/parse.c:1985
+#, gcc-internal-format
+msgid "Fortran 2003: Derived type definition at %C without components"
+msgstr ""
+
+#: fortran/parse.c:2004
+#, gcc-internal-format
+msgid "PRIVATE statement at %C must precede structure components"
+msgstr ""
+
+#: fortran/parse.c:2025
+#, gcc-internal-format
+msgid "SEQUENCE statement at %C must precede structure components"
+msgstr ""
+
+#: fortran/parse.c:2032
+#, gcc-internal-format
+msgid "SEQUENCE attribute at %C already specified in TYPE statement"
+msgstr ""
+
+#: fortran/parse.c:2037
+#, gcc-internal-format
+msgid "Duplicate SEQUENCE statement at %C"
+msgstr ""
+
+#: fortran/parse.c:2048
+#, gcc-internal-format
+msgid "Fortran 2003:  CONTAINS block in derived type definition at %C"
+msgstr ""
+
+#: fortran/parse.c:2138
+#, gcc-internal-format
+msgid "ENUM declaration at %C has no ENUMERATORS"
+msgstr ""
+
+#: fortran/parse.c:2224
+#, gcc-internal-format
+msgid "Unexpected %s statement in INTERFACE block at %C"
+msgstr ""
+
+#: fortran/parse.c:2250
+#, gcc-internal-format
+msgid "SUBROUTINE at %C does not belong in a generic function interface"
+msgstr ""
+
+#: fortran/parse.c:2254
+#, gcc-internal-format
+msgid "FUNCTION at %C does not belong in a generic subroutine interface"
+msgstr ""
+
+#: fortran/parse.c:2264
+#, gcc-internal-format
+msgid "Name '%s' of ABSTRACT INTERFACE at %C cannot be the same as an intrinsic type"
+msgstr ""
+
+#: fortran/parse.c:2295
+#, gcc-internal-format
+msgid "Unexpected %s statement at %C in INTERFACE body"
+msgstr ""
+
+#: fortran/parse.c:2313
+#, gcc-internal-format
+msgid "INTERFACE procedure '%s' at %L has the same name as the enclosing procedure"
+msgstr ""
+
+#: fortran/parse.c:2434
+#, gcc-internal-format
+msgid "%s statement is not allowed inside of BLOCK at %C"
+msgstr ""
+
+#: fortran/parse.c:2520
+#, gcc-internal-format
+msgid "%s statement must appear in a MODULE"
+msgstr ""
+
+#: fortran/parse.c:2527
+#, gcc-internal-format
+msgid "%s statement at %C follows another accessibility specification"
+msgstr ""
+
+#: fortran/parse.c:2577
+#, gcc-internal-format
+msgid "Bad kind expression for function '%s' at %L"
+msgstr ""
+
+#: fortran/parse.c:2581
+#, gcc-internal-format
+msgid "The type for function '%s' at %L is not accessible"
+msgstr ""
+
+#: fortran/parse.c:2639
+#, gcc-internal-format
+msgid "ELSEWHERE statement at %C follows previous unmasked ELSEWHERE"
+msgstr ""
+
+#: fortran/parse.c:2660
+#, gcc-internal-format
+msgid "Unexpected %s statement in WHERE block at %C"
+msgstr ""
+
+#: fortran/parse.c:2719
+#, gcc-internal-format
+msgid "Unexpected %s statement in FORALL block at %C"
+msgstr ""
+
+#: fortran/parse.c:2770
+#, gcc-internal-format
+msgid "ELSE IF statement at %C cannot follow ELSE statement at %L"
+msgstr ""
+
+#: fortran/parse.c:2788
+#, gcc-internal-format
+msgid "Duplicate ELSE statements at %L and %C"
+msgstr ""
+
+#: fortran/parse.c:2849
+#, gcc-internal-format
+msgid "Expected a CASE or END SELECT statement following SELECT CASE at %C"
+msgstr ""
+
+#: fortran/parse.c:2932
+#, gcc-internal-format
+msgid "Expected TYPE IS, CLASS IS or END SELECT statement following SELECT TYPE at %C"
+msgstr ""
+
+#: fortran/parse.c:2994
+#, gcc-internal-format
+msgid "Variable '%s' at %C cannot be redefined inside loop beginning at %L"
+msgstr ""
+
+#: fortran/parse.c:3027
+#, gcc-internal-format
+msgid "End of nonblock DO statement at %C is within another block"
+msgstr ""
+
+#: fortran/parse.c:3036
+#, gcc-internal-format
+msgid "End of nonblock DO statement at %C is interwoven with another DO loop"
+msgstr ""
+
+#: fortran/parse.c:3092
+#, gcc-internal-format
+msgid "Fortran 2008: BLOCK construct at %C"
+msgstr ""
+
+#: fortran/parse.c:3150
+#, gcc-internal-format
+msgid "Statement label in ENDDO at %C doesn't match DO label"
+msgstr ""
+
+#: fortran/parse.c:3166
+#, gcc-internal-format
+msgid "Named block DO at %L requires matching ENDDO name"
+msgstr ""
+
+#: fortran/parse.c:3425
+#, gcc-internal-format
+msgid "Name after !$omp critical and !$omp end critical does not match at %C"
+msgstr ""
+
+#: fortran/parse.c:3481
+#, gcc-internal-format
+msgid "%s statement at %C cannot terminate a non-block DO loop"
+msgstr ""
+
+#: fortran/parse.c:3671
+#, gcc-internal-format
+msgid "Contained procedure '%s' at %C is already ambiguous"
+msgstr ""
+
+#: fortran/parse.c:3721
+#, gcc-internal-format
+msgid "Unexpected %s statement in CONTAINS section at %C"
+msgstr ""
+
+#: fortran/parse.c:3745
+#, gcc-internal-format
+msgid "Fortran 2008: CONTAINS statement without FUNCTION or SUBROUTINE statement at %C"
+msgstr ""
+
+#: fortran/parse.c:3822
+#, gcc-internal-format
+msgid "CONTAINS statement at %C is already in a contained program unit"
+msgstr ""
+
+#: fortran/parse.c:3871
+#, gcc-internal-format
+msgid "Global name '%s' at %L is already being used as a %s at %L"
+msgstr ""
+
+#: fortran/parse.c:3892
+#, gcc-internal-format
+msgid "Blank BLOCK DATA at %C conflicts with prior BLOCK DATA at %L"
+msgstr ""
+
+#: fortran/parse.c:3918
+#, gcc-internal-format
+msgid "Unexpected %s statement in BLOCK DATA at %C"
+msgstr ""
+
+#: fortran/parse.c:3961
+#, gcc-internal-format
+msgid "Unexpected %s statement in MODULE at %C"
+msgstr ""
+
+#. If we see a duplicate main program, shut down.  If the second
+#. instance is an implied main program, i.e. data decls or executable
+#. statements, we're in for lots of errors.
+#: fortran/parse.c:4278
+#, gcc-internal-format
+msgid "Two main PROGRAMs at %L and %C"
+msgstr ""
+
+#: fortran/primary.c:93
+#, gcc-internal-format
+msgid "Missing kind-parameter at %C"
+msgstr ""
+
+#: fortran/primary.c:217
+#, gcc-internal-format
+msgid "Integer kind %d at %C not available"
+msgstr ""
+
+#: fortran/primary.c:225
+#, gcc-internal-format
+msgid "Integer too big for its kind at %C. This check can be disabled with the option -fno-range-check"
+msgstr ""
+
+#: fortran/primary.c:254
+#, gcc-internal-format
+msgid "Extension: Hollerith constant at %C"
+msgstr ""
+
+#: fortran/primary.c:266
+#, gcc-internal-format
+msgid "Invalid Hollerith constant: %L must contain at least one character"
+msgstr ""
+
+#: fortran/primary.c:272
+#, gcc-internal-format
+msgid "Invalid Hollerith constant: Integer kind at %L should be default"
+msgstr ""
+
+#: fortran/primary.c:289
+#, gcc-internal-format
+msgid "Invalid Hollerith constant at %L contains a wide character"
+msgstr ""
+
+#: fortran/primary.c:370
+#, gcc-internal-format
+msgid "Extension: Hexadecimal constant at %C uses non-standard syntax"
+msgstr ""
+
+#: fortran/primary.c:380
+#, gcc-internal-format
+msgid "Empty set of digits in BOZ constant at %C"
+msgstr ""
+
+#: fortran/primary.c:386
+#, gcc-internal-format
+msgid "Illegal character in BOZ constant at %C"
+msgstr ""
+
+#: fortran/primary.c:409
+#, gcc-internal-format
+msgid "Extension: BOZ constant at %C uses non-standard postfix syntax"
+msgstr ""
+
+#: fortran/primary.c:440
+#, gcc-internal-format
+msgid "Integer too big for integer kind %i at %C"
+msgstr ""
+
+#: fortran/primary.c:446
+#, gcc-internal-format
+msgid "Fortran 2003: BOZ used outside a DATA statement at %C"
+msgstr ""
+
+#: fortran/primary.c:546
+#, gcc-internal-format
+msgid "Missing exponent in real number at %C"
+msgstr ""
+
+#: fortran/primary.c:602
+#, gcc-internal-format
+msgid "Real number at %C has a 'd' exponent and an explicit kind"
+msgstr ""
+
+#: fortran/primary.c:615
+#, gcc-internal-format
+msgid "Invalid real kind %d at %C"
+msgstr ""
+
+#: fortran/primary.c:629
+#, gcc-internal-format
+msgid "Real constant overflows its kind at %C"
+msgstr ""
+
+#: fortran/primary.c:634
+#, gcc-internal-format
+msgid "Real constant underflows its kind at %C"
+msgstr ""
+
+#: fortran/primary.c:726
+#, gcc-internal-format
+msgid "Syntax error in SUBSTRING specification at %C"
+msgstr ""
+
+#: fortran/primary.c:938
+#, gcc-internal-format
+msgid "Invalid kind %d for CHARACTER constant at %C"
+msgstr ""
+
+#: fortran/primary.c:959
+#, gcc-internal-format
+msgid "Unterminated character constant beginning at %C"
+msgstr ""
+
+#: fortran/primary.c:1000
+#, gcc-internal-format
+msgid "Character '%s' in string at %C is not representable in character kind %d"
+msgstr ""
+
+#: fortran/primary.c:1083
+#, gcc-internal-format
+msgid "Bad kind for logical constant at %C"
+msgstr ""
+
+#: fortran/primary.c:1122
+#, gcc-internal-format
+msgid "Expected PARAMETER symbol in complex constant at %C"
+msgstr ""
+
+#: fortran/primary.c:1128
+#, gcc-internal-format
+msgid "Numeric PARAMETER required in complex constant at %C"
+msgstr ""
+
+#: fortran/primary.c:1134
+#, gcc-internal-format
+msgid "Scalar PARAMETER required in complex constant at %C"
+msgstr ""
+
+#: fortran/primary.c:1138
+#, gcc-internal-format
+msgid "Fortran 2003: PARAMETER symbol in complex constant at %C"
+msgstr ""
+
+#: fortran/primary.c:1168
+#, gcc-internal-format
+msgid "Error converting PARAMETER constant in complex constant at %C"
+msgstr ""
+
+#: fortran/primary.c:1297
+#, gcc-internal-format
+msgid "Syntax error in COMPLEX constant at %C"
+msgstr ""
+
+#: fortran/primary.c:1503
+#, gcc-internal-format
+msgid "Keyword '%s' at %C has already appeared in the current argument list"
+msgstr ""
+
+#: fortran/primary.c:1567
+#, gcc-internal-format
+msgid "Extension: argument list function at %C"
+msgstr ""
+
+#: fortran/primary.c:1634
+#, gcc-internal-format
+msgid "Expected alternate return label at %C"
+msgstr ""
+
+#: fortran/primary.c:1652
+#, gcc-internal-format
+msgid "Missing keyword name in actual argument list at %C"
+msgstr ""
+
+#: fortran/primary.c:1697
+#, gcc-internal-format
+msgid "Syntax error in argument list at %C"
+msgstr ""
+
+#: fortran/primary.c:1802
+#, gcc-internal-format
+msgid "Expected structure component name at %C"
+msgstr ""
+
+#: fortran/primary.c:1846
+#, gcc-internal-format
+msgid "Expected argument list at %C"
+msgstr ""
+
+#: fortran/primary.c:2196
+#, gcc-internal-format
+msgid "Fortran 2003: Structure constructor with missing optional arguments at %C"
+msgstr ""
+
+#: fortran/primary.c:2204
+#, gcc-internal-format
+msgid "No initializer for component '%s' given in the structure constructor at %C!"
+msgstr ""
+
+#: fortran/primary.c:2260
+#, gcc-internal-format
+msgid "Can't construct ABSTRACT type '%s' at %C"
+msgstr ""
+
+#: fortran/primary.c:2288
+#, gcc-internal-format
+msgid "Fortran 2003: Structure constructor with named arguments at %C"
+msgstr ""
+
+#: fortran/primary.c:2303
+#, gcc-internal-format
+msgid "Component initializer without name after component named %s at %C!"
+msgstr ""
+
+#: fortran/primary.c:2306
+#, gcc-internal-format
+msgid "Too many components in structure constructor at %C!"
+msgstr ""
+
+#: fortran/primary.c:2339
+#, gcc-internal-format
+msgid "Component '%s' is initialized twice in the structure constructor at %C!"
+msgstr ""
+
+#: fortran/primary.c:2395
+#, gcc-internal-format
+msgid "component '%s' at %L has already been set by a parent derived type constructor"
+msgstr ""
+
+#: fortran/primary.c:2418
+#, gcc-internal-format
+msgid "Syntax error in structure constructor at %C"
+msgstr ""
+
+#: fortran/primary.c:2534
+#, gcc-internal-format
+msgid "'%s' at %C is the name of a recursive function and so refers to the result variable. Use an explicit RESULT variable for direct recursion (12.5.2.1)"
+msgstr ""
+
+#: fortran/primary.c:2653
+#, gcc-internal-format
+msgid "Unexpected use of subroutine name '%s' at %C"
+msgstr ""
+
+#: fortran/primary.c:2684
+#, gcc-internal-format
+msgid "Statement function '%s' requires argument list at %C"
+msgstr ""
+
+#: fortran/primary.c:2687
+#, gcc-internal-format
+msgid "Function '%s' requires an argument list at %C"
+msgstr ""
+
+#: fortran/primary.c:2734
+#, gcc-internal-format
+msgid "Missing argument to '%s' at %C"
+msgstr ""
+
+#: fortran/primary.c:2875
+#, gcc-internal-format
+msgid "Missing argument list in function '%s' at %C"
+msgstr ""
+
+#: fortran/primary.c:2903
+#, gcc-internal-format
+msgid "Symbol at %C is not appropriate for an expression"
+msgstr ""
+
+#: fortran/primary.c:2971
+#, gcc-internal-format
+msgid "Assigning to PROTECTED variable at %C"
+msgstr ""
+
+#: fortran/primary.c:3005
+#, gcc-internal-format
+msgid "Named constant at %C in an EQUIVALENCE"
+msgstr ""
+
+#: fortran/primary.c:3038
+#, gcc-internal-format
+msgid "'%s' at %C is not a variable"
+msgstr ""
+
+#: fortran/resolve.c:111
+#, gcc-internal-format
+msgid "'%s' at %L is of the ABSTRACT type '%s'"
+msgstr ""
+
+#: fortran/resolve.c:114
+#, gcc-internal-format
+msgid "ABSTRACT type '%s' used at %L"
+msgstr ""
+
+#: fortran/resolve.c:164
+#, gcc-internal-format
+msgid "Alternate return specifier in elemental subroutine '%s' at %L is not allowed"
+msgstr ""
+
+#: fortran/resolve.c:168
+#, gcc-internal-format
+msgid "Alternate return specifier in function '%s' at %L is not allowed"
+msgstr ""
+
+#: fortran/resolve.c:181
+#, gcc-internal-format
+msgid "Dummy procedure '%s' of PURE procedure at %L must also be PURE"
+msgstr ""
+
+#: fortran/resolve.c:188
+#, gcc-internal-format
+msgid "Dummy procedure at %L not allowed in ELEMENTAL procedure"
+msgstr ""
+
+#: fortran/resolve.c:201 fortran/resolve.c:1432
+#, gcc-internal-format
+msgid "Unable to find a specific INTRINSIC procedure for the reference '%s' at %L"
+msgstr ""
+
+#: fortran/resolve.c:249
+#, gcc-internal-format
+msgid "Argument '%s' of pure function '%s' at %L must be INTENT(IN)"
+msgstr ""
+
+#: fortran/resolve.c:254
+#, gcc-internal-format
+msgid "Argument '%s' of pure subroutine '%s' at %L must have its INTENT specified"
+msgstr ""
+
+#: fortran/resolve.c:263
+#, gcc-internal-format
+msgid "Argument '%s' of elemental procedure at %L must be scalar"
+msgstr ""
+
+#: fortran/resolve.c:270
+#, gcc-internal-format
+msgid "Argument '%s' of elemental procedure at %L cannot have the POINTER attribute"
+msgstr ""
+
+#: fortran/resolve.c:278
+#, gcc-internal-format
+msgid "Dummy procedure '%s' not allowed in elemental procedure '%s' at %L"
+msgstr ""
+
+#: fortran/resolve.c:290
+#, gcc-internal-format
+msgid "Argument '%s' of statement function at %L must be scalar"
+msgstr ""
+
+#: fortran/resolve.c:300
+#, gcc-internal-format
+msgid "Character-valued argument '%s' of statement function at %L must have constant length"
+msgstr ""
+
+#: fortran/resolve.c:357
+#, gcc-internal-format
+msgid "Contained function '%s' at %L has no IMPLICIT type"
+msgstr ""
+
+#: fortran/resolve.c:360
+#, gcc-internal-format
+msgid "Result '%s' of contained function '%s' at %L has no IMPLICIT type"
+msgstr ""
+
+#: fortran/resolve.c:384
+#, gcc-internal-format
+msgid "Character-valued %s '%s' at %L must not be assumed length"
+msgstr ""
+
+#: fortran/resolve.c:559
+#, gcc-internal-format
+msgid "Function %s at %L has entries with mismatched array specifications"
+msgstr ""
+
+#: fortran/resolve.c:576
+#, gcc-internal-format
+msgid "Extension: Function %s at %L with entries returning variables of different string lengths"
+msgstr ""
+
+#: fortran/resolve.c:603
+#, gcc-internal-format
+msgid "FUNCTION result %s can't be an array in FUNCTION %s at %L"
+msgstr ""
+
+#: fortran/resolve.c:607
+#, gcc-internal-format
+msgid "ENTRY result %s can't be an array in FUNCTION %s at %L"
+msgstr ""
+
+#: fortran/resolve.c:614
+#, gcc-internal-format
+msgid "FUNCTION result %s can't be a POINTER in FUNCTION %s at %L"
+msgstr ""
+
+#: fortran/resolve.c:618
+#, gcc-internal-format
+msgid "ENTRY result %s can't be a POINTER in FUNCTION %s at %L"
+msgstr ""
+
+#: fortran/resolve.c:656
+#, gcc-internal-format
+msgid "FUNCTION result %s can't be of type %s in FUNCTION %s at %L"
+msgstr ""
+
+#: fortran/resolve.c:661
+#, gcc-internal-format
+msgid "ENTRY result %s can't be of type %s in FUNCTION %s at %L"
+msgstr ""
+
+#: fortran/resolve.c:719
+#, gcc-internal-format
+msgid "Variable '%s' at %L is in COMMON but only in BLOCK DATA initialization is allowed"
+msgstr ""
+
+#: fortran/resolve.c:723
+#, gcc-internal-format
+msgid "Initialized variable '%s' at %L is in a blank COMMON but initialization is only allowed in named common blocks"
+msgstr ""
+
+#: fortran/resolve.c:734
+#, gcc-internal-format
+msgid "Derived type variable '%s' in COMMON at %L has neither the SEQUENCE nor the BIND(C) attribute"
+msgstr ""
+
+#: fortran/resolve.c:738
+#, gcc-internal-format
+msgid "Derived type variable '%s' in COMMON at %L has an ultimate component that is allocatable"
+msgstr ""
+
+#: fortran/resolve.c:742
+#, gcc-internal-format
+msgid "Derived type variable '%s' in COMMON at %L may not have default initializer"
+msgstr ""
+
+#: fortran/resolve.c:772
+#, gcc-internal-format
+msgid "COMMON block '%s' at %L is used as PARAMETER at %L"
+msgstr ""
+
+#: fortran/resolve.c:776
+#, gcc-internal-format
+msgid "COMMON block '%s' at %L is also an intrinsic procedure"
+msgstr ""
+
+#: fortran/resolve.c:780
+#, gcc-internal-format
+msgid "Fortran 2003: COMMON block '%s' at %L that is also a function result"
+msgstr ""
+
+#: fortran/resolve.c:785
+#, gcc-internal-format
+msgid "Fortran 2003: COMMON block '%s' at %L that is also a global procedure"
+msgstr ""
+
+#: fortran/resolve.c:848
+#, gcc-internal-format
+msgid "Components of structure constructor '%s' at %L are PRIVATE"
+msgstr ""
+
+#: fortran/resolve.c:876
+#, gcc-internal-format
+msgid "The rank of the element in the derived type constructor at %L does not match that of the component (%d/%d)"
+msgstr ""
+
+#: fortran/resolve.c:889
+#, gcc-internal-format
+msgid "The element in the derived type constructor at %L, for pointer component '%s', is %s but should be %s"
+msgstr ""
+
+#: fortran/resolve.c:906
+#, gcc-internal-format
+msgid "The NULL in the derived type constructor at %L is being applied to component '%s', which is neither a POINTER nor ALLOCATABLE"
+msgstr ""
+
+#: fortran/resolve.c:920
+#, gcc-internal-format
+msgid "The element in the derived type constructor at %L, for pointer component '%s' should be a POINTER or a TARGET"
+msgstr ""
+
+#: fortran/resolve.c:930
+#, gcc-internal-format
+msgid "Invalid expression in the derived type constructor for pointer component '%s' at %L in PURE procedure"
+msgstr ""
+
+#: fortran/resolve.c:1052
+#, gcc-internal-format
+msgid "The upper bound in the last dimension must appear in the reference to the assumed size array '%s' at %L"
+msgstr ""
+
+#: fortran/resolve.c:1114
+#, gcc-internal-format
+msgid "'%s' at %L is ambiguous"
+msgstr ""
+
+#: fortran/resolve.c:1118
+#, gcc-internal-format
+msgid "GENERIC procedure '%s' is not allowed as an actual argument at %L"
+msgstr ""
+
+#: fortran/resolve.c:1220
+#, gcc-internal-format
+msgid "Type specified for intrinsic function '%s' at %L is ignored"
+msgstr ""
+
+#: fortran/resolve.c:1233
+#, gcc-internal-format
+msgid "Intrinsic subroutine '%s' at %L shall not have a type specifier"
+msgstr ""
+
+#: fortran/resolve.c:1244
+#, gcc-internal-format
+msgid "'%s' declared INTRINSIC at %L does not exist"
+msgstr ""
+
+#: fortran/resolve.c:1255
+#, gcc-internal-format
+msgid "The intrinsic '%s' declared INTRINSIC at %L is not available in the current standard settings but %s.  Use an appropriate -std=* option or enable -fall-intrinsics in order to use it."
+msgstr ""
+
+#: fortran/resolve.c:1291
+#, gcc-internal-format
+msgid "Non-RECURSIVE procedure '%s' at %L is possibly calling itself recursively.  Declare it RECURSIVE or use -frecursive"
+msgstr ""
+
+#: fortran/resolve.c:1325 fortran/resolve.c:7333 fortran/resolve.c:8127
+#, gcc-internal-format
+msgid "Label %d referenced at %L is never defined"
+msgstr ""
+
+#: fortran/resolve.c:1384
+#, gcc-internal-format
+msgid "Statement function '%s' at %L is not allowed as an actual argument"
+msgstr ""
+
+#: fortran/resolve.c:1392
+#, gcc-internal-format
+msgid "Intrinsic '%s' at %L is not allowed as an actual argument"
+msgstr ""
+
+#: fortran/resolve.c:1399
+#, gcc-internal-format
+msgid "Internal procedure '%s' is not allowed as an actual argument at %L"
+msgstr ""
+
+#: fortran/resolve.c:1405
+#, gcc-internal-format
+msgid "ELEMENTAL non-INTRINSIC procedure '%s' is not allowed as an actual argument at %L"
+msgstr ""
+
+#: fortran/resolve.c:1454
+#, gcc-internal-format
+msgid "Symbol '%s' at %L is ambiguous"
+msgstr ""
+
+#: fortran/resolve.c:1505
+#, gcc-internal-format
+msgid "By-value argument at %L is not of numeric type"
+msgstr ""
+
+#: fortran/resolve.c:1512
+#, gcc-internal-format
+msgid "By-value argument at %L cannot be an array or an array section"
+msgstr ""
+
+#: fortran/resolve.c:1526
+#, gcc-internal-format
+msgid "By-value argument at %L is not allowed in this context"
+msgstr ""
+
+#: fortran/resolve.c:1538
+#, gcc-internal-format
+msgid "Passing internal procedure at %L by location not allowed"
+msgstr ""
+
+#: fortran/resolve.c:1663
+#, gcc-internal-format
+msgid "'%s' at %L is an array and OPTIONAL; IF IT IS MISSING, it cannot be the actual argument of an ELEMENTAL procedure unless there is a non-optional argument with the same rank (12.4.1.5)"
+msgstr ""
+
+#: fortran/resolve.c:1702
+#, gcc-internal-format
+msgid "Actual argument at %L for INTENT(%s) dummy '%s' of ELEMENTAL subroutine '%s' is a scalar, but another actual argument is an array"
+msgstr ""
+
+#: fortran/resolve.c:1848
+#, gcc-internal-format
+msgid "The reference to function '%s' at %L either needs an explicit INTERFACE or the rank is incorrect"
+msgstr ""
+
+#: fortran/resolve.c:1862
+#, gcc-internal-format
+msgid "Nonconstant character-length function '%s' at %L must have an explicit interface"
+msgstr ""
+
+#: fortran/resolve.c:1964
+#, gcc-internal-format
+msgid "There is no specific function for the generic '%s' at %L"
+msgstr ""
+
+#: fortran/resolve.c:1973
+#, gcc-internal-format
+msgid "Generic function '%s' at %L is not consistent with a specific intrinsic interface"
+msgstr ""
+
+#: fortran/resolve.c:2011
+#, gcc-internal-format
+msgid "Function '%s' at %L is INTRINSIC but is not compatible with an intrinsic"
+msgstr ""
+
+#: fortran/resolve.c:2060
+#, gcc-internal-format
+msgid "Unable to resolve the specific function '%s' at %L"
+msgstr ""
+
+#: fortran/resolve.c:2116 fortran/resolve.c:12179
+#, gcc-internal-format
+msgid "Function '%s' at %L has no IMPLICIT type"
+msgstr ""
+
+#: fortran/resolve.c:2325
+#, gcc-internal-format
+msgid "Argument to '%s' at %L is not a variable"
+msgstr ""
+
+#: fortran/resolve.c:2373
+#, gcc-internal-format
+msgid "More actual than formal arguments in '%s' call at %L"
+msgstr ""
+
+#: fortran/resolve.c:2382
+#, gcc-internal-format
+msgid "Parameter '%s' to '%s' at %L must be either a TARGET or an associated pointer"
+msgstr ""
+
+#: fortran/resolve.c:2405
+#, gcc-internal-format
+msgid "Allocatable variable '%s' used as a parameter to '%s' at %L must not be an array of zero size"
+msgstr ""
+
+#: fortran/resolve.c:2422
+#, gcc-internal-format
+msgid "Assumed-shape array '%s' at %L cannot be an argument to the procedure '%s' because it is not C interoperable"
+msgstr ""
+
+#: fortran/resolve.c:2432
+#, gcc-internal-format
+msgid "Deferred-shape array '%s' at %L cannot be an argument to the procedure '%s' because it is not C interoperable"
+msgstr ""
+
+#: fortran/resolve.c:2455 fortran/resolve.c:2492
+#, gcc-internal-format
+msgid "CHARACTER argument '%s' to '%s' at %L must have a length of 1"
+msgstr ""
+
+#. Case 1c, section 15.1.2.5, J3/04-007: an associated
+#. scalar pointer.
+#: fortran/resolve.c:2468
+#, gcc-internal-format
+msgid "Argument '%s' to '%s' at %L must be an associated scalar POINTER"
+msgstr ""
+
+#: fortran/resolve.c:2484
+#, gcc-internal-format
+msgid "Parameter '%s' to '%s' at %L must be a scalar"
+msgstr ""
+
+#. TODO: Update this error message to allow for procedure
+#. pointers once they are implemented.
+#: fortran/resolve.c:2506
+#, gcc-internal-format
+msgid "Parameter '%s' to '%s' at %L must be a procedure"
+msgstr ""
+
+#: fortran/resolve.c:2514
+#, gcc-internal-format
+msgid "Parameter '%s' to '%s' at %L must be BIND(C)"
+msgstr ""
+
+#: fortran/resolve.c:2565
+#, gcc-internal-format
+msgid "'%s' at %L is not a function"
+msgstr ""
+
+#: fortran/resolve.c:2573 fortran/resolve.c:3187
+#, gcc-internal-format
+msgid "ABSTRACT INTERFACE '%s' must not be referenced at %L"
+msgstr ""
+
+#. Internal procedures are taken care of in resolve_contained_fntype.
+#: fortran/resolve.c:2619
+#, gcc-internal-format
+msgid "Function '%s' is declared CHARACTER(*) and cannot be used at %L since it is not a dummy argument"
+msgstr ""
+
+#: fortran/resolve.c:2672
+#, gcc-internal-format
+msgid "User defined non-ELEMENTAL function '%s' at %L not allowed in WORKSHARE construct"
+msgstr ""
+
+#: fortran/resolve.c:2722
+#, gcc-internal-format
+msgid "reference to non-PURE function '%s' at %L inside a FORALL %s"
+msgstr ""
+
+#: fortran/resolve.c:2729
+#, gcc-internal-format
+msgid "Function reference to '%s' at %L is to a non-PURE procedure within a PURE procedure"
+msgstr ""
+
+#: fortran/resolve.c:2745
+#, gcc-internal-format
+msgid "ENTRY '%s' at %L cannot be called recursively, as function '%s' is not RECURSIVE"
+msgstr ""
+
+#: fortran/resolve.c:2749
+#, gcc-internal-format
+msgid "Function '%s' at %L cannot be called recursively, as it is not RECURSIVE"
+msgstr ""
+
+#: fortran/resolve.c:2797
+#, gcc-internal-format
+msgid "Subroutine call to '%s' in FORALL block at %L is not PURE"
+msgstr ""
+
+#: fortran/resolve.c:2800
+#, gcc-internal-format
+msgid "Subroutine call to '%s' at %L is not PURE"
+msgstr ""
+
+#: fortran/resolve.c:2863
+#, gcc-internal-format
+msgid "There is no specific subroutine for the generic '%s' at %L"
+msgstr ""
+
+#: fortran/resolve.c:2872
+#, gcc-internal-format
+msgid "Generic subroutine '%s' at %L is not consistent with an intrinsic subroutine interface"
+msgstr ""
+
+#: fortran/resolve.c:2980
+#, gcc-internal-format
+msgid "Missing SHAPE parameter for call to %s at %L"
+msgstr ""
+
+#: fortran/resolve.c:2988
+#, gcc-internal-format
+msgid "SHAPE parameter for call to %s at %L must be a rank 1 INTEGER array"
+msgstr ""
+
+#: fortran/resolve.c:3055
+#, gcc-internal-format
+msgid "Subroutine '%s' at %L is INTRINSIC but is not compatible with an intrinsic"
+msgstr ""
+
+#: fortran/resolve.c:3099
+#, gcc-internal-format
+msgid "Unable to resolve the specific subroutine '%s' at %L"
+msgstr ""
+
+#: fortran/resolve.c:3159
+#, gcc-internal-format
+msgid "'%s' at %L has a type, which is not consistent with the CALL at %L"
+msgstr ""
+
+#: fortran/resolve.c:3197
+#, gcc-internal-format
+msgid "ENTRY '%s' at %L cannot be called recursively, as subroutine '%s' is not RECURSIVE"
+msgstr ""
+
+#: fortran/resolve.c:3201
+#, gcc-internal-format
+msgid "SUBROUTINE '%s' at %L cannot be called recursively, as it is not RECURSIVE"
+msgstr ""
+
+#: fortran/resolve.c:3279
+#, gcc-internal-format
+msgid "Shapes for operands at %L and %L are not conformable"
+msgstr ""
+
+#: fortran/resolve.c:3761
+#, gcc-internal-format
+msgid "Array reference at %L is out of bounds (%ld < %ld) in dimension %d"
+msgstr ""
+
+#: fortran/resolve.c:3769
+#, gcc-internal-format
+msgid "Array reference at %L is out of bounds (%ld > %ld) in dimension %d"
+msgstr ""
+
+#: fortran/resolve.c:3788
+#, gcc-internal-format
+msgid "Illegal stride of zero at %L"
+msgstr ""
+
+#: fortran/resolve.c:3805
+#, gcc-internal-format
+msgid "Lower array reference at %L is out of bounds (%ld < %ld) in dimension %d"
+msgstr ""
+
+#: fortran/resolve.c:3813
+#, gcc-internal-format
+msgid "Lower array reference at %L is out of bounds (%ld > %ld) in dimension %d"
+msgstr ""
+
+#: fortran/resolve.c:3829
+#, gcc-internal-format
+msgid "Upper array reference at %L is out of bounds (%ld < %ld) in dimension %d"
+msgstr ""
+
+#: fortran/resolve.c:3838
+#, gcc-internal-format
+msgid "Upper array reference at %L is out of bounds (%ld > %ld) in dimension %d"
+msgstr ""
+
+#: fortran/resolve.c:3877
+#, gcc-internal-format
+msgid "Rightmost upper bound of assumed size array section not specified at %L"
+msgstr ""
+
+#: fortran/resolve.c:3887
+#, gcc-internal-format
+msgid "Rank mismatch in array reference at %L (%d/%d)"
+msgstr ""
+
+#: fortran/resolve.c:3915
+#, gcc-internal-format
+msgid "Array index at %L must be scalar"
+msgstr ""
+
+#: fortran/resolve.c:3921
+#, gcc-internal-format
+msgid "Array index at %L must be of INTEGER type, found %s"
+msgstr ""
+
+#: fortran/resolve.c:3927
+#, gcc-internal-format
+msgid "Extension: REAL array index at %L"
+msgstr ""
+
+#: fortran/resolve.c:3957
+#, gcc-internal-format
+msgid "Argument dim at %L must be scalar"
+msgstr ""
+
+#: fortran/resolve.c:3964
+#, gcc-internal-format
+msgid "Argument dim at %L must be of INTEGER type"
+msgstr ""
+
+#: fortran/resolve.c:4092
+#, gcc-internal-format
+msgid "Array index at %L is an array of rank %d"
+msgstr ""
+
+#: fortran/resolve.c:4131
+#, gcc-internal-format
+msgid "Substring start index at %L must be of type INTEGER"
+msgstr ""
+
+#: fortran/resolve.c:4138
+#, gcc-internal-format
+msgid "Substring start index at %L must be scalar"
+msgstr ""
+
+#: fortran/resolve.c:4147
+#, gcc-internal-format
+msgid "Substring start index at %L is less than one"
+msgstr ""
+
+#: fortran/resolve.c:4160
+#, gcc-internal-format
+msgid "Substring end index at %L must be of type INTEGER"
+msgstr ""
+
+#: fortran/resolve.c:4167
+#, gcc-internal-format
+msgid "Substring end index at %L must be scalar"
+msgstr ""
+
+#: fortran/resolve.c:4177
+#, gcc-internal-format
+msgid "Substring end index at %L exceeds the string length"
+msgstr ""
+
+#: fortran/resolve.c:4187
+#, gcc-internal-format
+msgid "Substring end index at %L is too large"
+msgstr ""
+
+#: fortran/resolve.c:4323
+#, gcc-internal-format
+msgid "Component to the right of a part reference with nonzero rank must not have the POINTER attribute at %L"
+msgstr ""
+
+#: fortran/resolve.c:4330
+#, gcc-internal-format
+msgid "Component to the right of a part reference with nonzero rank must not have the ALLOCATABLE attribute at %L"
+msgstr ""
+
+#: fortran/resolve.c:4349
+#, gcc-internal-format
+msgid "Two or more part references with nonzero rank must not be specified at %L"
+msgstr ""
+
+#: fortran/resolve.c:4532
+#, gcc-internal-format
+msgid "Variable '%s', used in a specification expression, is referenced at %L before the ENTRY statement in which it is a parameter"
+msgstr ""
+
+#: fortran/resolve.c:4537
+#, gcc-internal-format
+msgid "Variable '%s' is used at %L before the ENTRY statement in which it is a parameter"
+msgstr ""
+
+#: fortran/resolve.c:4892
+#, gcc-internal-format
+msgid "Passed-object at %L must be scalar"
+msgstr ""
+
+#: fortran/resolve.c:4921
+#, gcc-internal-format
+msgid "Base object for type-bound procedure call at %L is of ABSTRACT type '%s'"
+msgstr ""
+
+#: fortran/resolve.c:4929
+#, gcc-internal-format
+msgid "Base object for NOPASS type-bound procedure call at %L must be scalar"
+msgstr ""
+
+#: fortran/resolve.c:4937
+#, gcc-internal-format
+msgid "Non-scalar base object at %L currently not implemented"
+msgstr ""
+
+#. Nothing matching found!
+#: fortran/resolve.c:5039
+#, gcc-internal-format
+msgid "Found no matching specific binding for the call to the GENERIC '%s' at %L"
+msgstr ""
+
+#. To resolve class member calls, we borrow this bit
+#. of code to select the specific procedures.
+#: fortran/resolve.c:5059 fortran/resolve.c:5112
+#, gcc-internal-format
+msgid "'%s' at %L should be a SUBROUTINE"
+msgstr ""
+
+#: fortran/resolve.c:5104
+#, gcc-internal-format
+msgid "'%s' at %L should be a FUNCTION"
+msgstr ""
+
+#: fortran/resolve.c:5186
+#, gcc-internal-format
+msgid "no typebound available procedure named '%s' at %L"
+msgstr ""
+
+#: fortran/resolve.c:5687
+#, gcc-internal-format
+msgid "%s at %L must be a scalar"
+msgstr ""
+
+#: fortran/resolve.c:5697
+#, gcc-internal-format
+msgid "Deleted feature: %s at %L must be integer"
+msgstr ""
+
+#: fortran/resolve.c:5701 fortran/resolve.c:5708
+#, gcc-internal-format
+msgid "%s at %L must be INTEGER"
+msgstr ""
+
+#: fortran/resolve.c:5728
+#, gcc-internal-format
+msgid "Cannot assign to loop variable in PURE procedure at %L"
+msgstr ""
+
+#: fortran/resolve.c:5752
+#, gcc-internal-format
+msgid "Step expression in DO loop at %L cannot be zero"
+msgstr ""
+
+#: fortran/resolve.c:5787
+#, gcc-internal-format
+msgid "DO loop at %L will be executed zero times"
+msgstr ""
+
+#: fortran/resolve.c:5848
+#, gcc-internal-format
+msgid "FORALL index-name at %L must be a scalar INTEGER"
+msgstr ""
+
+#: fortran/resolve.c:5853
+#, gcc-internal-format
+msgid "FORALL start expression at %L must be a scalar INTEGER"
+msgstr ""
+
+#: fortran/resolve.c:5860
+#, gcc-internal-format
+msgid "FORALL end expression at %L must be a scalar INTEGER"
+msgstr ""
+
+#: fortran/resolve.c:5868
+#, gcc-internal-format
+msgid "FORALL stride expression at %L must be a scalar %s"
+msgstr ""
+
+#: fortran/resolve.c:5873
+#, gcc-internal-format
+msgid "FORALL stride expression at %L cannot be zero"
+msgstr ""
+
+#: fortran/resolve.c:5889
+#, gcc-internal-format
+msgid "FORALL index '%s' may not appear in triplet specification at %L"
+msgstr ""
+
+#: fortran/resolve.c:5989 fortran/resolve.c:6205
+#, gcc-internal-format
+msgid "Allocate-object at %L must be ALLOCATABLE or a POINTER"
+msgstr ""
+
+#: fortran/resolve.c:5995
+#, gcc-internal-format
+msgid "Cannot deallocate INTENT(IN) variable '%s' at %L"
+msgstr ""
+
+#: fortran/resolve.c:6068
+#, gcc-internal-format
+msgid "Source-expr at %L must be scalar or have the same rank as the allocate-object at %L"
+msgstr ""
+
+#: fortran/resolve.c:6096
+#, gcc-internal-format
+msgid "Source-expr at %L and allocate-object at %L must have the same shape"
+msgstr ""
+
+#: fortran/resolve.c:6216
+#, gcc-internal-format
+msgid "Type of entity at %L is type incompatible with source-expr at %L"
+msgstr ""
+
+#: fortran/resolve.c:6229
+#, gcc-internal-format
+msgid "The allocate-object at %L and the source-expr at %L shall have the same kind type parameter"
+msgstr ""
+
+#: fortran/resolve.c:6238
+#, gcc-internal-format
+msgid "Allocating %s of ABSTRACT base type at %L requires a type-spec or SOURCE="
+msgstr ""
+
+#: fortran/resolve.c:6245
+#, gcc-internal-format
+msgid "Cannot allocate INTENT(IN) variable '%s' at %L"
+msgstr ""
+
+#: fortran/resolve.c:6287
+#, gcc-internal-format
+msgid "Array specification required in ALLOCATE statement at %L"
+msgstr ""
+
+#: fortran/resolve.c:6317
+#, gcc-internal-format
+msgid "Bad array specification in ALLOCATE statement at %L"
+msgstr ""
+
+#: fortran/resolve.c:6337
+#, gcc-internal-format
+msgid "'%s' must not appear in the array specification at %L in the same ALLOCATE statement where it is itself allocated"
+msgstr ""
+
+#: fortran/resolve.c:6362
+#, gcc-internal-format
+msgid "Stat-variable '%s' at %L cannot be INTENT(IN)"
+msgstr ""
+
+#: fortran/resolve.c:6366
+#, gcc-internal-format
+msgid "Illegal stat-variable at %L for a PURE procedure"
+msgstr ""
+
+#: fortran/resolve.c:6373
+#, gcc-internal-format
+msgid "Stat-variable at %L must be a scalar INTEGER variable"
+msgstr ""
+
+#: fortran/resolve.c:6378
+#, gcc-internal-format
+msgid "Stat-variable at %L shall not be %sd within the same %s statement"
+msgstr ""
+
+#: fortran/resolve.c:6386
+#, gcc-internal-format
+msgid "ERRMSG at %L is useless without a STAT tag"
+msgstr ""
+
+#: fortran/resolve.c:6390
+#, gcc-internal-format
+msgid "Errmsg-variable '%s' at %L cannot be INTENT(IN)"
+msgstr ""
+
+#: fortran/resolve.c:6394
+#, gcc-internal-format
+msgid "Illegal errmsg-variable at %L for a PURE procedure"
+msgstr ""
+
+#: fortran/resolve.c:6402
+#, gcc-internal-format
+msgid "Errmsg-variable at %L must be a scalar CHARACTER variable"
+msgstr ""
+
+#: fortran/resolve.c:6407
+#, gcc-internal-format
+msgid "Errmsg-variable at %L shall not be %sd within the same %s statement"
+msgstr ""
+
+#: fortran/resolve.c:6425
+#, gcc-internal-format
+msgid "Allocate-object at %L also appears at %L"
+msgstr ""
+
+#. The cases overlap, or they are the same
+#. element in the list.  Either way, we must
+#. issue an error and get the next case from P.
+#. FIXME: Sort P and Q by line number.
+#: fortran/resolve.c:6592
+#, gcc-internal-format
+msgid "CASE label at %L overlaps with CASE label at %L"
+msgstr ""
+
+#: fortran/resolve.c:6643
+#, gcc-internal-format
+msgid "Expression in CASE statement at %L must be of type %s"
+msgstr ""
+
+#: fortran/resolve.c:6654
+#, gcc-internal-format
+msgid "Expression in CASE statement at %L must be of kind %d"
+msgstr ""
+
+#: fortran/resolve.c:6666
+#, gcc-internal-format
+msgid "Expression in CASE statement at %L must be scalar"
+msgstr ""
+
+#: fortran/resolve.c:6712
+#, gcc-internal-format
+msgid "Selection expression in computed GOTO statement at %L must be a scalar integer expression"
+msgstr ""
+
+#: fortran/resolve.c:6730
+#, gcc-internal-format
+msgid "Argument of SELECT statement at %L cannot be %s"
+msgstr ""
+
+#: fortran/resolve.c:6739
+#, gcc-internal-format
+msgid "Argument of SELECT statement at %L must be a scalar expression"
+msgstr ""
+
+#: fortran/resolve.c:6804 fortran/resolve.c:7026
+#, gcc-internal-format
+msgid "The DEFAULT CASE at %L cannot be followed by a second DEFAULT CASE at %L"
+msgstr ""
+
+#: fortran/resolve.c:6830
+#, gcc-internal-format
+msgid "Logical range in CASE statement at %L is not allowed"
+msgstr ""
+
+#: fortran/resolve.c:6842
+#, gcc-internal-format
+msgid "constant logical value in CASE statement is repeated at %L"
+msgstr ""
+
+#: fortran/resolve.c:6856
+#, gcc-internal-format
+msgid "Range specification at %L can never be matched"
+msgstr ""
+
+#: fortran/resolve.c:6959
+#, gcc-internal-format
+msgid "Logical SELECT CASE block at %L has more that two cases"
+msgstr ""
+
+#: fortran/resolve.c:7004
+#, gcc-internal-format
+msgid "Derived type '%s' at %L must be extensible"
+msgstr ""
+
+#: fortran/resolve.c:7014
+#, gcc-internal-format
+msgid "Derived type '%s' at %L must be an extension of '%s'"
+msgstr ""
+
+#: fortran/resolve.c:7160
+#, gcc-internal-format
+msgid "Double CLASS IS block in SELECT TYPE statement at %L"
+msgstr ""
+
+#: fortran/resolve.c:7255
+#, gcc-internal-format
+msgid "Data transfer element at %L cannot have POINTER components"
+msgstr ""
+
+#: fortran/resolve.c:7262
+#, gcc-internal-format
+msgid "Data transfer element at %L cannot have ALLOCATABLE components"
+msgstr ""
+
+#: fortran/resolve.c:7269
+#, gcc-internal-format
+msgid "Data transfer element at %L cannot have PRIVATE components"
+msgstr ""
+
+#: fortran/resolve.c:7278
+#, gcc-internal-format
+msgid "Data transfer element at %L cannot be a full reference to an assumed-size array"
+msgstr ""
+
+#: fortran/resolve.c:7340
+#, gcc-internal-format
+msgid "Statement at %L is not a valid branch target statement for the branch statement at %L"
+msgstr ""
+
+#: fortran/resolve.c:7349
+#, gcc-internal-format
+msgid "Branch at %L may result in an infinite loop"
+msgstr ""
+
+#. The label is not in an enclosing block, so illegal.  This was
+#. allowed in Fortran 66, so we allow it as extension.  No
+#. further checks are necessary in this case.
+#: fortran/resolve.c:7377
+#, gcc-internal-format
+msgid "Label at %L is not in the same block as the GOTO statement at %L"
+msgstr ""
+
+#: fortran/resolve.c:7452
+#, gcc-internal-format
+msgid "WHERE mask at %L has inconsistent shape"
+msgstr ""
+
+#: fortran/resolve.c:7468
+#, gcc-internal-format
+msgid "WHERE assignment target at %L has inconsistent shape"
+msgstr ""
+
+#: fortran/resolve.c:7476 fortran/resolve.c:7563
+#, gcc-internal-format
+msgid "Non-ELEMENTAL user-defined assignment in WHERE at %L"
+msgstr ""
+
+#: fortran/resolve.c:7486 fortran/resolve.c:7573
+#, gcc-internal-format
+msgid "Unsupported statement inside WHERE at %L"
+msgstr ""
+
+#: fortran/resolve.c:7517
+#, gcc-internal-format
+msgid "Assignment to a FORALL index variable at %L"
+msgstr ""
+
+#: fortran/resolve.c:7526
+#, gcc-internal-format
+msgid "The FORALL with index '%s' is not used on the left side of the assignment at %L and so might cause multiple assignment to this object"
+msgstr ""
+
+#: fortran/resolve.c:7695
+#, gcc-internal-format
+msgid "An outer FORALL construct already has an index with this name %L"
+msgstr ""
+
+#: fortran/resolve.c:7774
+#, gcc-internal-format
+msgid "WHERE/ELSEWHERE clause at %L requires a LOGICAL array"
+msgstr ""
+
+#: fortran/resolve.c:7926
+#, gcc-internal-format
+msgid "CHARACTER expression will be truncated in assignment (%d/%d) at %L"
+msgstr ""
+
+#: fortran/resolve.c:7951
+#, gcc-internal-format
+msgid "Cannot assign to variable '%s' in PURE procedure at %L"
+msgstr ""
+
+#: fortran/resolve.c:7964
+#, gcc-internal-format
+msgid "The impure variable at %L is assigned to a derived type variable with a POINTER component in a PURE procedure (12.6)"
+msgstr ""
+
+#: fortran/resolve.c:7975
+#, gcc-internal-format
+msgid "Variable must not be polymorphic in assignment at %L"
+msgstr ""
+
+#: fortran/resolve.c:8090
+#, gcc-internal-format
+msgid "ASSIGNED GOTO statement at %L requires an INTEGER variable"
+msgstr ""
+
+#: fortran/resolve.c:8093
+#, gcc-internal-format
+msgid "Variable '%s' has not been assigned a target label at %L"
+msgstr ""
+
+#: fortran/resolve.c:8104
+#, gcc-internal-format
+msgid "Alternate RETURN statement at %L requires a SCALAR-INTEGER return specifier"
+msgstr ""
+
+#: fortran/resolve.c:8135
+#, gcc-internal-format
+msgid "ASSIGN statement at %L requires a scalar default INTEGER variable"
+msgstr ""
+
+#: fortran/resolve.c:8150
+#, gcc-internal-format
+msgid "Arithmetic IF statement at %L requires a numeric expression"
+msgstr ""
+
+#: fortran/resolve.c:8209
+#, gcc-internal-format
+msgid "Exit condition of DO WHILE loop at %L must be a scalar LOGICAL expression"
+msgstr ""
+
+#: fortran/resolve.c:8291
+#, gcc-internal-format
+msgid "FORALL mask clause at %L requires a LOGICAL expression"
+msgstr ""
+
+#: fortran/resolve.c:8363 fortran/resolve.c:8419
+#, gcc-internal-format
+msgid "Binding label '%s' for common block '%s' at %L collides with the global entity '%s' at %L"
+msgstr ""
+
+#. Common block names match but binding labels do not.
+#: fortran/resolve.c:8384
+#, gcc-internal-format
+msgid "Binding label '%s' for common block '%s' at %L does not match the binding label '%s' for common block '%s' at %L"
+msgstr ""
+
+#: fortran/resolve.c:8431
+#, gcc-internal-format
+msgid "Binding label '%s' for common block '%s' at %L collides with global entity '%s' at %L"
+msgstr ""
+
+#. Make sure global procedures don't collide with anything.
+#: fortran/resolve.c:8483
+#, gcc-internal-format
+msgid "Binding label '%s' at %L collides with the global entity '%s' at %L"
+msgstr ""
+
+#. Make sure procedures in interface bodies don't collide.
+#: fortran/resolve.c:8496
+#, gcc-internal-format
+msgid "Binding label '%s' in interface body at %L collides with the global entity '%s' at %L"
+msgstr ""
+
+#: fortran/resolve.c:8509
+#, gcc-internal-format
+msgid "Binding label '%s' at %L collides with global entity '%s' at %L"
+msgstr ""
+
+#: fortran/resolve.c:8587
+#, gcc-internal-format
+msgid "CHARACTER variable at %L has negative length %d, the length has been set to zero"
+msgstr ""
+
+#: fortran/resolve.c:8599
+#, gcc-internal-format
+msgid "String length at %L is too large"
+msgstr ""
+
+#: fortran/resolve.c:8891
+#, gcc-internal-format
+msgid "Allocatable array '%s' at %L must have a deferred shape"
+msgstr ""
+
+#: fortran/resolve.c:8895
+#, gcc-internal-format
+msgid "Scalar object '%s' at %L may not be ALLOCATABLE"
+msgstr ""
+
+#: fortran/resolve.c:8903
+#, gcc-internal-format
+msgid "Array pointer '%s' at %L must have a deferred shape"
+msgstr ""
+
+#: fortran/resolve.c:8914
+#, gcc-internal-format
+msgid "Array '%s' at %L cannot have a deferred shape"
+msgstr ""
+
+#: fortran/resolve.c:8942
+#, gcc-internal-format
+msgid "The type '%s' cannot be host associated at %L because it is blocked by an incompatible object of the same name declared at %L"
+msgstr ""
+
+#: fortran/resolve.c:8964
+#, gcc-internal-format
+msgid "Fortran 2008: Implied SAVE for module variable '%s' at %L, needed due to the default initialization"
+msgstr ""
+
+#: fortran/resolve.c:8975
+#, gcc-internal-format
+msgid "Type '%s' of CLASS variable '%s' at %L is not extensible"
+msgstr ""
+
+#: fortran/resolve.c:8985
+#, gcc-internal-format
+msgid "CLASS variable '%s' at %L must be dummy, allocatable or pointer"
+msgstr ""
+
+#. The shape of a main program or module array needs to be
+#. constant.
+#: fortran/resolve.c:9032
+#, gcc-internal-format
+msgid "The module or main program array '%s' at %L must have constant shape"
+msgstr ""
+
+#: fortran/resolve.c:9045
+#, gcc-internal-format
+msgid "Entity with assumed character length at %L must be a dummy argument or a PARAMETER"
+msgstr ""
+
+#: fortran/resolve.c:9064
+#, gcc-internal-format
+msgid "'%s' at %L must have constant character length in this context"
+msgstr ""
+
+#: fortran/resolve.c:9100
+#, gcc-internal-format
+msgid "Allocatable '%s' at %L cannot have an initializer"
+msgstr ""
+
+#: fortran/resolve.c:9103
+#, gcc-internal-format
+msgid "External '%s' at %L cannot have an initializer"
+msgstr ""
+
+#: fortran/resolve.c:9107
+#, gcc-internal-format
+msgid "Dummy '%s' at %L cannot have an initializer"
+msgstr ""
+
+#: fortran/resolve.c:9110
+#, gcc-internal-format
+msgid "Intrinsic '%s' at %L cannot have an initializer"
+msgstr ""
+
+#: fortran/resolve.c:9113
+#, gcc-internal-format
+msgid "Function result '%s' at %L cannot have an initializer"
+msgstr ""
+
+#: fortran/resolve.c:9116
+#, gcc-internal-format
+msgid "Automatic array '%s' at %L cannot have an initializer"
+msgstr ""
+
+#: fortran/resolve.c:9153
+#, gcc-internal-format
+msgid "Character-valued statement function '%s' at %L must have constant length"
+msgstr ""
+
+#: fortran/resolve.c:9176
+#, gcc-internal-format
+msgid "Fortran 2003: '%s' is of a PRIVATE type and cannot be a dummy argument of '%s', which is PUBLIC at %L"
+msgstr ""
+
+#: fortran/resolve.c:9199 fortran/resolve.c:9224
+#, gcc-internal-format
+msgid "Fortran 2003: Procedure '%s' in PUBLIC interface '%s' at %L takes dummy arguments of '%s' which is PRIVATE"
+msgstr ""
+
+#: fortran/resolve.c:9242
+#, gcc-internal-format
+msgid "Function '%s' at %L cannot have an initializer"
+msgstr ""
+
+#: fortran/resolve.c:9251
+#, gcc-internal-format
+msgid "External object '%s' at %L may not have an initializer"
+msgstr ""
+
+#: fortran/resolve.c:9259
+#, gcc-internal-format
+msgid "ELEMENTAL function '%s' at %L must have a scalar result"
+msgstr ""
+
+#: fortran/resolve.c:9280
+#, gcc-internal-format
+msgid "CHARACTER(*) function '%s' at %L cannot be array-valued"
+msgstr ""
+
+#: fortran/resolve.c:9284
+#, gcc-internal-format
+msgid "CHARACTER(*) function '%s' at %L cannot be pointer-valued"
+msgstr ""
+
+#: fortran/resolve.c:9288
+#, gcc-internal-format
+msgid "CHARACTER(*) function '%s' at %L cannot be pure"
+msgstr ""
+
+#: fortran/resolve.c:9292
+#, gcc-internal-format
+msgid "CHARACTER(*) function '%s' at %L cannot be recursive"
+msgstr ""
+
+#: fortran/resolve.c:9301
+#, gcc-internal-format
+msgid "Obsolescent feature: CHARACTER(*) function '%s' at %L"
+msgstr ""
+
+#: fortran/resolve.c:9356
+#, gcc-internal-format
+msgid "PROCEDURE attribute conflicts with SAVE attribute in '%s' at %L"
+msgstr ""
+
+#: fortran/resolve.c:9362
+#, gcc-internal-format
+msgid "PROCEDURE attribute conflicts with INTENT attribute in '%s' at %L"
+msgstr ""
+
+#: fortran/resolve.c:9368
+#, gcc-internal-format
+msgid "PROCEDURE attribute conflicts with RESULT attribute in '%s' at %L"
+msgstr ""
+
+#: fortran/resolve.c:9376
+#, gcc-internal-format
+msgid "EXTERNAL attribute conflicts with FUNCTION attribute in '%s' at %L"
+msgstr ""
+
+#: fortran/resolve.c:9382
+#, gcc-internal-format
+msgid "Procedure pointer result '%s' at %L is missing the pointer attribute"
+msgstr ""
+
+#: fortran/resolve.c:9428
+#, gcc-internal-format
+msgid "FINAL procedure '%s' at %L is not a SUBROUTINE"
+msgstr ""
+
+#: fortran/resolve.c:9436
+#, gcc-internal-format
+msgid "FINAL procedure at %L must have exactly one argument"
+msgstr ""
+
+#: fortran/resolve.c:9445
+#, gcc-internal-format
+msgid "Argument of FINAL procedure at %L must be of type '%s'"
+msgstr ""
+
+#: fortran/resolve.c:9453
+#, gcc-internal-format
+msgid "Argument of FINAL procedure at %L must not be a POINTER"
+msgstr ""
+
+#: fortran/resolve.c:9459
+#, gcc-internal-format
+msgid "Argument of FINAL procedure at %L must not be ALLOCATABLE"
+msgstr ""
+
+#: fortran/resolve.c:9465
+#, gcc-internal-format
+msgid "Argument of FINAL procedure at %L must not be OPTIONAL"
+msgstr ""
+
+#: fortran/resolve.c:9473
+#, gcc-internal-format
+msgid "Argument of FINAL procedure at %L must not be INTENT(OUT)"
+msgstr ""
+
+#: fortran/resolve.c:9481
+#, gcc-internal-format
+msgid "Non-scalar FINAL procedure at %L should have assumed shape argument"
+msgstr ""
+
+#: fortran/resolve.c:9500
+#, gcc-internal-format
+msgid "FINAL procedure '%s' declared at %L has the same rank (%d) as '%s'"
+msgstr ""
+
+#: fortran/resolve.c:9533
+#, gcc-internal-format
+msgid "Only array FINAL procedures declared for derived type '%s' defined at %L, suggest also scalar one"
+msgstr ""
+
+#. TODO:  Remove this error when finalization is finished.
+#: fortran/resolve.c:9538
+#, gcc-internal-format
+msgid "Finalization at %L is not yet implemented"
+msgstr ""
+
+#: fortran/resolve.c:9564
+#, gcc-internal-format
+msgid "Can't overwrite GENERIC '%s' at %L"
+msgstr ""
+
+#: fortran/resolve.c:9576
+#, gcc-internal-format
+msgid "'%s' at %L overrides a procedure binding declared NON_OVERRIDABLE"
+msgstr ""
+
+#: fortran/resolve.c:9584
+#, gcc-internal-format
+msgid "'%s' at %L must not be DEFERRED as it overrides a non-DEFERRED binding"
+msgstr ""
+
+#: fortran/resolve.c:9592
+#, gcc-internal-format
+msgid "'%s' at %L overrides a PURE procedure and must also be PURE"
+msgstr ""
+
+#: fortran/resolve.c:9601
+#, gcc-internal-format
+msgid "'%s' at %L overrides an ELEMENTAL procedure and must also be ELEMENTAL"
+msgstr ""
+
+#: fortran/resolve.c:9607
+#, gcc-internal-format
+msgid "'%s' at %L overrides a non-ELEMENTAL procedure and must not be ELEMENTAL, either"
+msgstr ""
+
+#: fortran/resolve.c:9616
+#, gcc-internal-format
+msgid "'%s' at %L overrides a SUBROUTINE and must also be a SUBROUTINE"
+msgstr ""
+
+#: fortran/resolve.c:9627
+#, gcc-internal-format
+msgid "'%s' at %L overrides a FUNCTION and must also be a FUNCTION"
+msgstr ""
+
+#: fortran/resolve.c:9638
+#, gcc-internal-format
+msgid "'%s' at %L and the overridden FUNCTION should have matching result types"
+msgstr ""
+
+#: fortran/resolve.c:9649
+#, gcc-internal-format
+msgid "'%s' at %L overrides a PUBLIC procedure and must not be PRIVATE"
+msgstr ""
+
+#: fortran/resolve.c:9678
+#, gcc-internal-format
+msgid "Dummy argument '%s' of '%s' at %L should be named '%s' as to match the corresponding argument of the overridden procedure"
+msgstr ""
+
+#: fortran/resolve.c:9691
+#, gcc-internal-format
+msgid "Types mismatch for dummy argument '%s' of '%s' %L in respect to the overridden procedure"
+msgstr ""
+
+#: fortran/resolve.c:9701
+#, gcc-internal-format
+msgid "'%s' at %L must have the same number of formal arguments as the overridden procedure"
+msgstr ""
+
+#: fortran/resolve.c:9710
+#, gcc-internal-format
+msgid "'%s' at %L overrides a NOPASS binding and must also be NOPASS"
+msgstr ""
+
+#: fortran/resolve.c:9721
+#, gcc-internal-format
+msgid "'%s' at %L overrides a binding with PASS and must also be PASS"
+msgstr ""
+
+#: fortran/resolve.c:9728
+#, gcc-internal-format
+msgid "Passed-object dummy argument of '%s' at %L must be at the same position as the passed-object dummy argument of the overridden procedure"
+msgstr ""
+
+#: fortran/resolve.c:9762
+#, gcc-internal-format
+msgid "'%s' and '%s' can't be mixed FUNCTION/SUBROUTINE for GENERIC '%s' at %L"
+msgstr ""
+
+#: fortran/resolve.c:9771
+#, gcc-internal-format
+msgid "'%s' and '%s' for GENERIC '%s' at %L are ambiguous"
+msgstr ""
+
+#: fortran/resolve.c:9830
+#, gcc-internal-format
+msgid "Undefined specific binding '%s' as target of GENERIC '%s' at %L"
+msgstr ""
+
+#: fortran/resolve.c:9842
+#, gcc-internal-format
+msgid "GENERIC '%s' at %L must target a specific binding, '%s' is GENERIC, too"
+msgstr ""
+
+#: fortran/resolve.c:9872
+#, gcc-internal-format
+msgid "GENERIC '%s' at %L can't overwrite specific binding with the same name"
+msgstr ""
+
+#: fortran/resolve.c:9928
+#, gcc-internal-format
+msgid "Type-bound operator at %L can't be NOPASS"
+msgstr ""
+
+#: fortran/resolve.c:10091
+#, gcc-internal-format
+msgid "'%s' must be a module procedure or an external procedure with an explicit interface at %L"
+msgstr ""
+
+#: fortran/resolve.c:10128
+#, gcc-internal-format
+msgid "Procedure '%s' with PASS(%s) at %L has no argument '%s'"
+msgstr ""
+
+#: fortran/resolve.c:10142
+#, gcc-internal-format
+msgid "Procedure '%s' with PASS at %L must have at least one argument"
+msgstr ""
+
+#: fortran/resolve.c:10156 fortran/resolve.c:10545
+#, gcc-internal-format
+msgid "Non-polymorphic passed-object dummy argument of '%s' at %L"
+msgstr ""
+
+#: fortran/resolve.c:10164
+#, gcc-internal-format
+msgid "Argument '%s' of '%s' with PASS(%s) at %L must be of the derived-type '%s'"
+msgstr ""
+
+#: fortran/resolve.c:10174
+#, gcc-internal-format
+msgid "Passed-object dummy argument of '%s' at %L must be scalar"
+msgstr ""
+
+#: fortran/resolve.c:10180
+#, gcc-internal-format
+msgid "Passed-object dummy argument of '%s' at %L must not be ALLOCATABLE"
+msgstr ""
+
+#: fortran/resolve.c:10186
+#, gcc-internal-format
+msgid "Passed-object dummy argument of '%s' at %L must not be POINTER"
+msgstr ""
+
+#: fortran/resolve.c:10212
+#, gcc-internal-format
+msgid "Procedure '%s' at %L has the same name as a component of '%s'"
+msgstr ""
+
+#: fortran/resolve.c:10221
+#, gcc-internal-format
+msgid "Procedure '%s' at %L has the same name as an inherited component of '%s'"
+msgstr ""
+
+#: fortran/resolve.c:10308
+#, gcc-internal-format
+msgid "Derived-type '%s' declared at %L must be ABSTRACT because '%s' is DEFERRED and not overridden"
+msgstr ""
+
+#: fortran/resolve.c:10369
+#, gcc-internal-format
+msgid "Non-extensible derived-type '%s' at %L must not be ABSTRACT"
+msgstr ""
+
+#: fortran/resolve.c:10379
+#, gcc-internal-format
+msgid "Interface '%s', used by procedure pointer component '%s' at %L, is declared in a later PROCEDURE statement"
+msgstr ""
+
+#: fortran/resolve.c:10440
+#, gcc-internal-format
+msgid "Interface '%s' of procedure pointer component '%s' at %L must be explicit"
+msgstr ""
+
+#: fortran/resolve.c:10479
+#, gcc-internal-format
+msgid "Procedure pointer component '%s' with PASS(%s) at %L has no argument '%s'"
+msgstr ""
+
+#: fortran/resolve.c:10493
+#, gcc-internal-format
+msgid "Procedure pointer component '%s' with PASS at %L must have at least one argument"
+msgstr ""
+
+#: fortran/resolve.c:10509
+#, gcc-internal-format
+msgid "Argument '%s' of '%s' with PASS(%s) at %L must be of the derived type '%s'"
+msgstr ""
+
+#: fortran/resolve.c:10519
+#, gcc-internal-format
+msgid "Argument '%s' of '%s' with PASS(%s) at %L must be scalar"
+msgstr ""
+
+#: fortran/resolve.c:10528
+#, gcc-internal-format
+msgid "Argument '%s' of '%s' with PASS(%s) at %L may not have the POINTER attribute"
+msgstr ""
+
+#: fortran/resolve.c:10537
+#, gcc-internal-format
+msgid "Argument '%s' of '%s' with PASS(%s) at %L may not be ALLOCATABLE"
+msgstr ""
+
+#: fortran/resolve.c:10566
+#, gcc-internal-format
+msgid "Component '%s' of '%s' at %L has the same name as an inherited type-bound procedure"
+msgstr ""
+
+#: fortran/resolve.c:10578
+#, gcc-internal-format
+msgid "Character length of component '%s' needs to be a constant specification expression at %L"
+msgstr ""
+
+#: fortran/resolve.c:10593
+#, gcc-internal-format
+msgid "Fortran 2003: the component '%s' is a PRIVATE type and cannot be a component of '%s', which is PUBLIC at %L"
+msgstr ""
+
+#: fortran/resolve.c:10603
+#, gcc-internal-format
+msgid "Component %s of SEQUENCE type declared at %L does not have the SEQUENCE attribute"
+msgstr ""
+
+#: fortran/resolve.c:10614
+#, gcc-internal-format
+msgid "The pointer component '%s' of '%s' at %L is a type that has not been declared"
+msgstr ""
+
+#: fortran/resolve.c:10625
+#, gcc-internal-format
+msgid "Component '%s' with CLASS at %L must be allocatable or pointer"
+msgstr ""
+
+#: fortran/resolve.c:10653
+#, gcc-internal-format
+msgid "Component '%s' of '%s' at %L must have constant array bounds"
+msgstr ""
+
+#: fortran/resolve.c:10698
+#, gcc-internal-format
+msgid "NAMELIST object '%s' was declared PRIVATE and cannot be member of PUBLIC namelist '%s' at %L"
+msgstr ""
+
+#: fortran/resolve.c:10708
+#, gcc-internal-format
+msgid "NAMELIST object '%s' has use-associated PRIVATE components and cannot be member of namelist '%s' at %L"
+msgstr ""
+
+#: fortran/resolve.c:10721
+#, gcc-internal-format
+msgid "NAMELIST object '%s' has PRIVATE components and cannot be a member of PUBLIC namelist '%s' at %L"
+msgstr ""
+
+#: fortran/resolve.c:10733
+#, gcc-internal-format
+msgid "NAMELIST array object '%s' must not have assumed shape in namelist '%s' at %L"
+msgstr ""
+
+#: fortran/resolve.c:10742
+#, gcc-internal-format
+msgid "NAMELIST array object '%s' must have constant shape in namelist '%s' at %L"
+msgstr ""
+
+#: fortran/resolve.c:10754
+#, gcc-internal-format
+msgid "NAMELIST object '%s' in namelist '%s' at %L cannot have ALLOCATABLE components"
+msgstr ""
+
+#: fortran/resolve.c:10762
+#, gcc-internal-format
+msgid "NAMELIST object '%s' in namelist '%s' at %L cannot have POINTER components"
+msgstr ""
+
+#: fortran/resolve.c:10788
+#, gcc-internal-format
+msgid "PROCEDURE attribute conflicts with NAMELIST attribute in '%s' at %L"
+msgstr ""
+
+#: fortran/resolve.c:10807
+#, gcc-internal-format
+msgid "Parameter array '%s' at %L cannot be automatic or of deferred shape"
+msgstr ""
+
+#: fortran/resolve.c:10819
+#, gcc-internal-format
+msgid "Implicitly typed PARAMETER '%s' at %L doesn't match a later IMPLICIT type"
+msgstr ""
+
+#: fortran/resolve.c:10830
+#, gcc-internal-format
+msgid "Incompatible derived type in PARAMETER at %L"
+msgstr ""
+
+#: fortran/resolve.c:10893
+#, gcc-internal-format
+msgid "PROCEDURE '%s' at %L may not be used as its own interface"
+msgstr ""
+
+#: fortran/resolve.c:10899
+#, gcc-internal-format
+msgid "Interface '%s', used by procedure '%s' at %L, is declared in a later PROCEDURE statement"
+msgstr ""
+
+#: fortran/resolve.c:10952
+#, gcc-internal-format
+msgid "Interface '%s' of procedure '%s' at %L must be explicit"
+msgstr ""
+
+#: fortran/resolve.c:11019
+#, gcc-internal-format
+msgid "Assumed size array at %L must be a dummy argument"
+msgstr ""
+
+#: fortran/resolve.c:11022
+#, gcc-internal-format
+msgid "Assumed shape array at %L must be a dummy argument"
+msgstr ""
+
+#: fortran/resolve.c:11034
+#, gcc-internal-format
+msgid "Symbol at %L is not a DUMMY variable"
+msgstr ""
+
+#: fortran/resolve.c:11040
+#, gcc-internal-format
+msgid "'%s' at %L cannot have the VALUE attribute because it is not a dummy argument"
+msgstr ""
+
+#: fortran/resolve.c:11050
+#, gcc-internal-format
+msgid "Character dummy variable '%s' at %L with VALUE attribute must have constant length"
+msgstr ""
+
+#: fortran/resolve.c:11059
+#, gcc-internal-format
+msgid "C interoperable character dummy variable '%s' at %L with VALUE attribute must have length one"
+msgstr ""
+
+#: fortran/resolve.c:11085
+#, gcc-internal-format
+msgid "Variable '%s' at %L cannot be BIND(C) because it is neither a COMMON block nor declared at the module level scope"
+msgstr ""
+
+#: fortran/resolve.c:11138
+#, gcc-internal-format
+msgid "The derived type '%s' at %L is of type '%s', which has not been defined"
+msgstr ""
+
+#: fortran/resolve.c:11179
+#, gcc-internal-format
+msgid "Fortran 2003: PUBLIC %s '%s' at %L of PRIVATE derived type '%s'"
+msgstr ""
+
+#: fortran/resolve.c:11198
+#, gcc-internal-format
+msgid "The INTENT(OUT) dummy argument '%s' at %L is ASSUMED SIZE and so cannot have a default initializer"
+msgstr ""
+
+#: fortran/resolve.c:11272
+#, gcc-internal-format
+msgid "Threadprivate at %L isn't SAVEd"
+msgstr ""
+
+#: fortran/resolve.c:11360
+#, gcc-internal-format
+msgid "BLOCK DATA element '%s' at %L must be in COMMON"
+msgstr ""
+
+#: fortran/resolve.c:11366
+#, gcc-internal-format
+msgid "DATA array '%s' at %L must be specified in a previous declaration"
+msgstr ""
+
+#: fortran/resolve.c:11382
+#, gcc-internal-format
+msgid "DATA element '%s' at %L is a pointer and so must be a full array"
+msgstr ""
+
+#: fortran/resolve.c:11428
+#, gcc-internal-format
+msgid "Nonconstant array section at %L in DATA statement"
+msgstr ""
+
+#: fortran/resolve.c:11441
+#, gcc-internal-format
+msgid "DATA statement at %L has more variables than values"
+msgstr ""
+
+#: fortran/resolve.c:11535
+#, gcc-internal-format
+msgid "iterator start at %L does not simplify"
+msgstr ""
+
+#: fortran/resolve.c:11542
+#, gcc-internal-format
+msgid "iterator end at %L does not simplify"
+msgstr ""
+
+#: fortran/resolve.c:11549
+#, gcc-internal-format
+msgid "iterator step at %L does not simplify"
+msgstr ""
+
+#: fortran/resolve.c:11675
+#, gcc-internal-format
+msgid "DATA statement at %L has more values than variables"
+msgstr ""
+
+#: fortran/resolve.c:11785
+#, gcc-internal-format
+msgid "Label %d at %L defined but not used"
+msgstr ""
+
+#: fortran/resolve.c:11790
+#, gcc-internal-format
+msgid "Label %d at %L defined but cannot be used"
+msgstr ""
+
+#: fortran/resolve.c:11874
+#, gcc-internal-format
+msgid "Derived type variable '%s' at %L must have SEQUENCE attribute to be an EQUIVALENCE object"
+msgstr ""
+
+#: fortran/resolve.c:11883
+#, gcc-internal-format
+msgid "Derived type variable '%s' at %L cannot have ALLOCATABLE components to be an EQUIVALENCE object"
+msgstr ""
+
+#: fortran/resolve.c:11891
+#, gcc-internal-format
+msgid "Derived type variable '%s' at %L with default initialization cannot be in EQUIVALENCE with a variable in COMMON"
+msgstr ""
+
+#: fortran/resolve.c:11907
+#, gcc-internal-format
+msgid "Derived type variable '%s' at %L with pointer component(s) cannot be an EQUIVALENCE object"
+msgstr ""
+
+#: fortran/resolve.c:12009
+#, gcc-internal-format
+msgid "Syntax error in EQUIVALENCE statement at %L"
+msgstr ""
+
+#: fortran/resolve.c:12024
+#, gcc-internal-format
+msgid "Either all or none of the objects in the EQUIVALENCE set at %L shall have the PROTECTED attribute"
+msgstr ""
+
+#: fortran/resolve.c:12036
+#, gcc-internal-format
+msgid "Common block member '%s' at %L cannot be an EQUIVALENCE object in the pure procedure '%s'"
+msgstr ""
+
+#: fortran/resolve.c:12045
+#, gcc-internal-format
+msgid "Named constant '%s' at %L cannot be an EQUIVALENCE object"
+msgstr ""
+
+#: fortran/resolve.c:12124
+#, gcc-internal-format
+msgid "Array '%s' at %L with non-constant bounds cannot be an EQUIVALENCE object"
+msgstr ""
+
+#: fortran/resolve.c:12135
+#, gcc-internal-format
+msgid "Structure component '%s' at %L cannot be an EQUIVALENCE object"
+msgstr ""
+
+#: fortran/resolve.c:12146
+#, gcc-internal-format
+msgid "Substring at %L has length zero"
+msgstr ""
+
+#: fortran/resolve.c:12190
+#, gcc-internal-format
+msgid "Fortran 2003: PUBLIC function '%s' at %L of PRIVATE type '%s'"
+msgstr ""
+
+#: fortran/resolve.c:12203
+#, gcc-internal-format
+msgid "ENTRY '%s' at %L has no IMPLICIT type"
+msgstr ""
+
+#: fortran/resolve.c:12220
+#, gcc-internal-format
+msgid "User operator procedure '%s' at %L must be a FUNCTION"
+msgstr ""
+
+#: fortran/resolve.c:12230
+#, gcc-internal-format
+msgid "User operator procedure '%s' at %L cannot be assumed character length"
+msgstr ""
+
+#: fortran/resolve.c:12238
+#, gcc-internal-format
+msgid "User operator procedure '%s' at %L must have at least one argument"
+msgstr ""
+
+#: fortran/resolve.c:12252
+#, gcc-internal-format
+msgid "First argument of operator interface at %L cannot be optional"
+msgstr ""
+
+#: fortran/resolve.c:12270
+#, gcc-internal-format
+msgid "Second argument of operator interface at %L cannot be optional"
+msgstr ""
+
+#: fortran/resolve.c:12277
+#, gcc-internal-format
+msgid "Operator interface at %L must have, at most, two arguments"
+msgstr ""
+
+#: fortran/resolve.c:12349
+#, gcc-internal-format
+msgid "Contained procedure '%s' at %L of a PURE procedure must also be PURE"
+msgstr ""
+
+#: fortran/scanner.c:760
+#, gcc-internal-format
+msgid "!$OMP at %C starts a commented line as it neither is followed by a space nor is a continuation line"
+msgstr ""
+
+#: fortran/scanner.c:1078 fortran/scanner.c:1221
+#, gcc-internal-format
+msgid "Limit of %d continuations exceeded in statement at %C"
+msgstr ""
+
+#: fortran/scanner.c:1090 fortran/scanner.c:1177
+#, gcc-internal-format
+msgid "Line truncated at %L"
+msgstr ""
+
+#: fortran/scanner.c:1137
+#, gcc-internal-format
+msgid "Missing '&' in continued character constant at %C"
+msgstr ""
+
+#: fortran/scanner.c:1371
+#, gcc-internal-format
+msgid "Nonconforming tab character at %C"
+msgstr ""
+
+#: fortran/scanner.c:1459 fortran/scanner.c:1462
+#, gcc-internal-format
+msgid "'&' not allowed by itself in line %d"
+msgstr ""
+
+#: fortran/scanner.c:1509
+#, gcc-internal-format
+msgid "Nonconforming tab character in column %d of line %d"
+msgstr ""
+
+#: fortran/scanner.c:1717
+#, gcc-internal-format
+msgid "%s:%d: file %s left but not entered"
+msgstr ""
+
+#: fortran/scanner.c:1751
+#, gcc-internal-format
+msgid "%s:%d: Illegal preprocessor directive"
+msgstr ""
+
+#: fortran/scanner.c:1869
+#, gcc-internal-format
+msgid "Can't open file '%s'"
+msgstr ""
+
+#: fortran/simplify.c:86
+#, gcc-internal-format
+msgid "Result of %s overflows its kind at %L"
+msgstr ""
+
+#: fortran/simplify.c:91
+#, gcc-internal-format
+msgid "Result of %s underflows its kind at %L"
+msgstr ""
+
+#: fortran/simplify.c:96
+#, gcc-internal-format
+msgid "Result of %s is NaN at %L"
+msgstr ""
+
+#: fortran/simplify.c:100
+#, gcc-internal-format
+msgid "Result of %s gives range error for its kind at %L"
+msgstr ""
+
+#: fortran/simplify.c:123
+#, gcc-internal-format
+msgid "KIND parameter of %s at %L must be an initialization expression"
+msgstr ""
+
+#: fortran/simplify.c:131
+#, gcc-internal-format
+msgid "Invalid KIND parameter of %s at %L"
+msgstr ""
+
+#: fortran/simplify.c:670
+#, gcc-internal-format
+msgid "Argument of %s function at %L is negative"
+msgstr ""
+
+#: fortran/simplify.c:677
+#, gcc-internal-format
+msgid "Argument of %s function at %L outside of range [0,127]"
+msgstr ""
+
+#: fortran/simplify.c:695
+#, gcc-internal-format
+msgid "Argument of %s function at %L is too large for the collating sequence of kind %d"
+msgstr ""
+
+#: fortran/simplify.c:734
+#, gcc-internal-format
+msgid "Argument of ACOS at %L must be between -1 and 1"
+msgstr ""
+
+#: fortran/simplify.c:766
+#, gcc-internal-format
+msgid "Argument of ACOSH at %L must not be less than 1"
+msgstr ""
+
+#: fortran/simplify.c:1031
+#, gcc-internal-format
+msgid "Argument of ASIN at %L must be between -1 and 1"
+msgstr ""
+
+#: fortran/simplify.c:1116
+#, gcc-internal-format
+msgid "Argument of ATANH at %L must be inside the range -1 to 1"
+msgstr ""
+
+#: fortran/simplify.c:1146
+#, gcc-internal-format
+msgid "If first argument of ATAN2 %L is zero, then the second argument must not be zero"
+msgstr ""
+
+#: fortran/simplify.c:2125
+#, gcc-internal-format
+msgid "Argument of IACHAR at %L must be of length one"
+msgstr ""
+
+#: fortran/simplify.c:2132
+#, gcc-internal-format
+msgid "Argument of IACHAR function at %L outside of range 0..127"
+msgstr ""
+
+#: fortran/simplify.c:2171
+#, gcc-internal-format
+msgid "Invalid second argument of IBCLR at %L"
+msgstr ""
+
+#: fortran/simplify.c:2179
+#, gcc-internal-format
+msgid "Second argument of IBCLR exceeds bit size at %L"
+msgstr ""
+
+#: fortran/simplify.c:2213
+#, gcc-internal-format
+msgid "Invalid second argument of IBITS at %L"
+msgstr ""
+
+#: fortran/simplify.c:2219
+#, gcc-internal-format
+msgid "Invalid third argument of IBITS at %L"
+msgstr ""
+
+#: fortran/simplify.c:2229
+#, gcc-internal-format
+msgid "Sum of second and third arguments of IBITS exceeds bit size at %L"
+msgstr ""
+
+#: fortran/simplify.c:2276
+#, gcc-internal-format
+msgid "Invalid second argument of IBSET at %L"
+msgstr ""
+
+#: fortran/simplify.c:2284
+#, gcc-internal-format
+msgid "Second argument of IBSET exceeds bit size at %L"
+msgstr ""
+
+#: fortran/simplify.c:2314
+#, gcc-internal-format
+msgid "Argument of ICHAR at %L must be of length one"
+msgstr ""
+
+#: fortran/simplify.c:2517
+#, gcc-internal-format
+msgid "Argument of INT at %L is not a valid type"
+msgstr ""
+
+#: fortran/simplify.c:2548
+#, gcc-internal-format
+msgid "Argument of %s at %L is not a valid type"
+msgstr ""
+
+#: fortran/simplify.c:2693
+#, gcc-internal-format
+msgid "Invalid second argument of ISHFT at %L"
+msgstr ""
+
+#: fortran/simplify.c:2708
+#, gcc-internal-format
+msgid "Magnitude of second argument of ISHFT exceeds bit size at %L"
+msgstr ""
+
+#: fortran/simplify.c:2772
+#, gcc-internal-format
+msgid "Invalid second argument of ISHFTC at %L"
+msgstr ""
+
+#: fortran/simplify.c:2786
+#, gcc-internal-format
+msgid "Invalid third argument of ISHFTC at %L"
+msgstr ""
+
+#: fortran/simplify.c:2792
+#, gcc-internal-format
+msgid "Magnitude of third argument of ISHFTC exceeds BIT_SIZE of first argument at %L"
+msgstr ""
+
+#: fortran/simplify.c:2808
+#, gcc-internal-format
+msgid "Magnitude of second argument of ISHFTC exceeds third argument at %L"
+msgstr ""
+
+#: fortran/simplify.c:2811
+#, gcc-internal-format
+msgid "Magnitude of second argument of ISHFTC exceeds BIT_SIZE of first argument at %L"
+msgstr ""
+
+#: fortran/simplify.c:2882
+#, gcc-internal-format
+msgid "Argument of KIND at %L is a DERIVED type"
+msgstr ""
+
+#: fortran/simplify.c:3094
+#, gcc-internal-format
+msgid "DIM argument at %L is out of bounds"
+msgstr ""
+
+#: fortran/simplify.c:3280
+#, gcc-internal-format
+msgid "Argument of LOG at %L cannot be less than or equal to zero"
+msgstr ""
+
+#: fortran/simplify.c:3293
+#, gcc-internal-format
+msgid "Complex argument of LOG at %L cannot be zero"
+msgstr ""
+
+#: fortran/simplify.c:3321
+#, gcc-internal-format
+msgid "Argument of LOG10 at %L cannot be less than or equal to zero"
+msgstr ""
+
+#. Result is processor-dependent.
+#: fortran/simplify.c:3692
+#, gcc-internal-format
+msgid "Second argument MOD at %L is zero"
+msgstr ""
+
+#. Result is processor-dependent.
+#: fortran/simplify.c:3703
+#, gcc-internal-format
+msgid "Second argument of MOD at %L is zero"
+msgstr ""
+
+#. Result is processor-dependent. This processor just opts
+#. to not handle it at all.
+#. Result is processor-dependent.
+#: fortran/simplify.c:3745 fortran/simplify.c:3757
+#, gcc-internal-format
+msgid "Second argument of MODULO at %L is zero"
+msgstr ""
+
+#: fortran/simplify.c:3803
+#, gcc-internal-format
+msgid "Second argument of NEAREST at %L shall not be zero"
+msgstr ""
+
+#: fortran/simplify.c:3839
+#, gcc-internal-format
+msgid "Result of NEAREST is NaN at %L"
+msgstr ""
+
+#: fortran/simplify.c:4212
+#, gcc-internal-format
+msgid "Argument NCOPIES of REPEAT intrinsic is negative at %L"
+msgstr ""
+
+#: fortran/simplify.c:4267
+#, gcc-internal-format
+msgid "Argument NCOPIES of REPEAT intrinsic is too large at %L"
+msgstr ""
+
+#: fortran/simplify.c:4539
+#, gcc-internal-format
+msgid "Result of SCALE overflows its kind at %L"
+msgstr ""
+
+#: fortran/simplify.c:5198
+#, gcc-internal-format
+msgid "Argument of SQRT at %L has a negative value"
+msgstr ""
+
+#: fortran/simplify.c:5384
+#, gcc-internal-format
+msgid "Intrinsic TRANSFER at %L has partly undefined result: source size %ld < result size %ld"
+msgstr ""
+
+#: fortran/simplify.c:5839
+#, gcc-internal-format
+msgid "Character '%s' in string at %L cannot be converted into character kind %d"
+msgstr ""
+
+#: fortran/symbol.c:134
+#, gcc-internal-format
+msgid "Duplicate IMPLICIT NONE statement at %C"
+msgstr ""
+
+#: fortran/symbol.c:174
+#, gcc-internal-format
+msgid "Letter '%c' already set in IMPLICIT statement at %C"
+msgstr ""
+
+#: fortran/symbol.c:196
+#, gcc-internal-format
+msgid "Cannot specify IMPLICIT at %C after IMPLICIT NONE"
+msgstr ""
+
+#: fortran/symbol.c:206
+#, gcc-internal-format
+msgid "Letter %c already has an IMPLICIT type at %C"
+msgstr ""
+
+#: fortran/symbol.c:262
+#, gcc-internal-format
+msgid "Symbol '%s' at %L has no IMPLICIT type"
+msgstr ""
+
+#. BIND(C) variables should not be implicitly declared.
+#: fortran/symbol.c:279
+#, gcc-internal-format
+msgid "Implicitly declared BIND(C) variable '%s' at %L may not be C interoperable"
+msgstr ""
+
+#. Dummy args to a BIND(C) routine may not be interoperable if
+#. they are implicitly typed.
+#: fortran/symbol.c:293
+#, gcc-internal-format
+msgid "Implicitly declared variable '%s' at %L may not be C interoperable but it is a dummy argument to the BIND(C) procedure '%s' at %L"
+msgstr ""
+
+#: fortran/symbol.c:334
+#, gcc-internal-format
+msgid "Function result '%s' at %L has no IMPLICIT type"
+msgstr ""
+
+#: fortran/symbol.c:414
+#, gcc-internal-format
+msgid "%s attribute not allowed in BLOCK DATA program unit at %L"
+msgstr ""
+
+#: fortran/symbol.c:469
+#, gcc-internal-format
+msgid "Fortran 2003: Procedure pointer at %C"
+msgstr ""
+
+#: fortran/symbol.c:624
+#, gcc-internal-format
+msgid "%s attribute applied to %s %s at %L"
+msgstr ""
+
+#: fortran/symbol.c:631
+#, gcc-internal-format
+msgid "BIND(C) applied to %s %s at %L"
+msgstr ""
+
+#: fortran/symbol.c:736 fortran/symbol.c:1417
+#, gcc-internal-format
+msgid "%s attribute conflicts with %s attribute at %L"
+msgstr ""
+
+#: fortran/symbol.c:739
+#, gcc-internal-format
+msgid "%s attribute conflicts with %s attribute in '%s' at %L"
+msgstr ""
+
+#: fortran/symbol.c:747
+#, gcc-internal-format
+msgid "Fortran 2003: %s attribute with %s attribute at %L"
+msgstr ""
+
+#: fortran/symbol.c:753
+#, gcc-internal-format
+msgid "Fortran 2003: %s attribute with %s attribute in '%s' at %L"
+msgstr ""
+
+#: fortran/symbol.c:797
+#, gcc-internal-format
+msgid "Cannot change attributes of USE-associated symbol at %L"
+msgstr ""
+
+#: fortran/symbol.c:800
+#, gcc-internal-format
+msgid "Cannot change attributes of USE-associated symbol %s at %L"
+msgstr ""
+
+#: fortran/symbol.c:816
+#, gcc-internal-format
+msgid "Duplicate %s attribute specified at %L"
+msgstr ""
+
+#: fortran/symbol.c:858
+#, gcc-internal-format
+msgid "ALLOCATABLE specified outside of INTERFACE body at %L"
+msgstr ""
+
+#: fortran/symbol.c:884
+#, gcc-internal-format
+msgid "DIMENSION specified for '%s' outside its INTERFACE body at %L"
+msgstr ""
+
+#: fortran/symbol.c:1002
+#, gcc-internal-format
+msgid "Cray Pointee at %L appears in multiple pointer() statements"
+msgstr ""
+
+#: fortran/symbol.c:1021
+#, gcc-internal-format
+msgid "Duplicate PROTECTED attribute specified at %L"
+msgstr ""
+
+#: fortran/symbol.c:1054
+#, gcc-internal-format
+msgid "SAVE attribute at %L cannot be specified in a PURE procedure"
+msgstr ""
+
+#: fortran/symbol.c:1062
+#, gcc-internal-format
+msgid "Duplicate SAVE attribute specified at %L"
+msgstr ""
+
+#: fortran/symbol.c:1083
+#, gcc-internal-format
+msgid "Duplicate VALUE attribute specified at %L"
+msgstr ""
+
+#: fortran/symbol.c:1103
+#, gcc-internal-format
+msgid "Duplicate VOLATILE attribute specified at %L"
+msgstr ""
+
+#: fortran/symbol.c:1122
+#, gcc-internal-format
+msgid "Duplicate ASYNCHRONOUS attribute specified at %L"
+msgstr ""
+
+#: fortran/symbol.c:1413
+#, gcc-internal-format
+msgid "%s attribute of '%s' conflicts with %s attribute at %L"
+msgstr ""
+
+#: fortran/symbol.c:1447
+#, gcc-internal-format
+msgid "%s procedure at %L is already declared as %s procedure"
+msgstr ""
+
+#: fortran/symbol.c:1482
+#, gcc-internal-format
+msgid "INTENT (%s) conflicts with INTENT(%s) at %L"
+msgstr ""
+
+#: fortran/symbol.c:1506
+#, gcc-internal-format
+msgid "ACCESS specification at %L was already specified"
+msgstr ""
+
+#: fortran/symbol.c:1523
+#, gcc-internal-format
+msgid "Duplicate BIND attribute specified at %L"
+msgstr ""
+
+#: fortran/symbol.c:1530
+#, gcc-internal-format
+msgid "Fortran 2003: BIND(C) at %L"
+msgstr ""
+
+#: fortran/symbol.c:1547
+#, gcc-internal-format
+msgid "Duplicate EXTENDS attribute specified at %L"
+msgstr ""
+
+#: fortran/symbol.c:1551
+#, gcc-internal-format
+msgid "Fortran 2003: EXTENDS at %L"
+msgstr ""
+
+#: fortran/symbol.c:1573
+#, gcc-internal-format
+msgid "Symbol '%s' at %L already has an explicit interface"
+msgstr ""
+
+#: fortran/symbol.c:1580
+#, gcc-internal-format
+msgid "'%s' at %L has attributes specified outside its INTERFACE body"
+msgstr ""
+
+#: fortran/symbol.c:1613
+#, gcc-internal-format
+msgid "Symbol '%s' at %L already has basic type of %s"
+msgstr ""
+
+#: fortran/symbol.c:1620
+#, gcc-internal-format
+msgid "Procedure '%s' at %L may not have basic type of %s"
+msgstr ""
+
+#: fortran/symbol.c:1632
+#, gcc-internal-format
+msgid "Symbol '%s' at %L cannot have a type"
+msgstr ""
+
+#: fortran/symbol.c:1797
+#, gcc-internal-format
+msgid "Component '%s' at %C already declared at %L"
+msgstr ""
+
+#: fortran/symbol.c:1808
+#, gcc-internal-format
+msgid "Component '%s' at %C already in the parent type at %L"
+msgstr ""
+
+#: fortran/symbol.c:1884
+#, gcc-internal-format
+msgid "Symbol '%s' at %C is ambiguous"
+msgstr ""
+
+#: fortran/symbol.c:1916
+#, gcc-internal-format
+msgid "Derived type '%s' at %C is being used before it is defined"
+msgstr ""
+
+#: fortran/symbol.c:1957
+#, gcc-internal-format
+msgid "'%s' at %C is not a member of the '%s' structure"
+msgstr ""
+
+#: fortran/symbol.c:1969
+#, gcc-internal-format
+msgid "Component '%s' at %C is a PRIVATE component of '%s'"
+msgstr ""
+
+#: fortran/symbol.c:2105
+#, gcc-internal-format
+msgid "Duplicate statement label %d at %L and %L"
+msgstr ""
+
+#: fortran/symbol.c:2115
+#, gcc-internal-format
+msgid "Label %d at %C already referenced as branch target"
+msgstr ""
+
+#: fortran/symbol.c:2124
+#, gcc-internal-format
+msgid "Label %d at %C already referenced as a format label"
+msgstr ""
+
+#: fortran/symbol.c:2166
+#, gcc-internal-format
+msgid "Label %d at %C previously used as a FORMAT label"
+msgstr ""
+
+#: fortran/symbol.c:2174
+#, gcc-internal-format
+msgid "Label %d at %C previously used as branch target"
+msgstr ""
+
+#: fortran/symbol.c:2489
+#, gcc-internal-format
+msgid "Name '%s' at %C is an ambiguous reference to '%s' from module '%s'"
+msgstr ""
+
+#: fortran/symbol.c:2492
+#, gcc-internal-format
+msgid "Name '%s' at %C is an ambiguous reference to '%s' from current program unit"
+msgstr ""
+
+#. Symbol is from another namespace.
+#: fortran/symbol.c:2651
+#, gcc-internal-format
+msgid "Symbol '%s' at %C has already been host associated"
+msgstr ""
+
+#: fortran/symbol.c:3485
+#, gcc-internal-format
+msgid "Derived type '%s' declared at %L must have the BIND attribute to be C interoperable"
+msgstr ""
+
+#: fortran/symbol.c:3496
+#, gcc-internal-format
+msgid "Derived type '%s' at %L is empty"
+msgstr ""
+
+#: fortran/symbol.c:3513
+#, gcc-internal-format
+msgid "Component '%s' at %L cannot have the POINTER attribute because it is a member of the BIND(C) derived type '%s' at %L"
+msgstr ""
+
+#: fortran/symbol.c:3523
+#, gcc-internal-format
+msgid "Procedure pointer component '%s' at %L cannot be a member of the BIND(C) derived type '%s' at %L"
+msgstr ""
+
+#: fortran/symbol.c:3534
+#, gcc-internal-format
+msgid "Component '%s' at %L cannot have the ALLOCATABLE attribute because it is a member of the BIND(C) derived type '%s' at %L"
+msgstr ""
+
+#. If the derived type is bind(c), all fields must be
+#. interop.
+#: fortran/symbol.c:3572
+#, gcc-internal-format
+msgid "Component '%s' in derived type '%s' at %L may not be C interoperable, even though derived type '%s' is BIND(C)"
+msgstr ""
+
+#. If derived type is param to bind(c) routine, or to one
+#. of the iso_c_binding procs, it must be interoperable, so
+#. all fields must interop too.
+#: fortran/symbol.c:3581
+#, gcc-internal-format
+msgid "Component '%s' in derived type '%s' at %L may not be C interoperable"
+msgstr ""
+
+#: fortran/symbol.c:3595
+#, gcc-internal-format
+msgid "Derived type '%s' at %L cannot be declared with both PRIVATE and BIND(C) attributes"
+msgstr ""
+
+#: fortran/symbol.c:3603
+#, gcc-internal-format
+msgid "Derived type '%s' at %L cannot have the SEQUENCE attribute because it is BIND(C)"
+msgstr ""
+
+#: fortran/symbol.c:4535
+#, gcc-internal-format
+msgid "Symbol '%s' is used before it is typed at %L"
+msgstr ""
+
+#: fortran/symbol.c:4541
+#, gcc-internal-format
+msgid "Extension: Symbol '%s' is used before it is typed at %L"
+msgstr ""
+
+#: fortran/symbol.c:4883 fortran/symbol.c:4957
+#, gcc-internal-format
+msgid "'%s' of '%s' is PRIVATE at %L"
+msgstr ""
+
+#: fortran/target-memory.c:616
+#, gcc-internal-format
+msgid "Overlapping unequal initializers in EQUIVALENCE at %L"
+msgstr ""
+
+#: fortran/target-memory.c:703
+#, gcc-internal-format
+msgid "BOZ constant at %L is too large (%ld vs %ld bits)"
+msgstr ""
+
+#: fortran/trans-array.c:705 fortran/trans-array.c:4543
+#: fortran/trans-array.c:5651 fortran/trans-intrinsic.c:4255
+#, gcc-internal-format
+msgid "Creating array temporary at %L"
+msgstr ""
+
+#. Problems occur when we get something like
+#. integer :: a(lots) = (/(i, i=1, lots)/)
+#: fortran/trans-array.c:4110
+#, gcc-internal-format
+msgid "The number of elements in the array constructor at %L requires an increase of the allowed %d upper limit.   See -fmax-array-constructor option"
+msgstr ""
+
+#: fortran/trans-array.c:5648
+#, gcc-internal-format
+msgid "Creating array temporary at %L for argument '%s'"
+msgstr ""
+
+#: fortran/trans-array.c:6199
+#, gcc-internal-format
+msgid "Possible frontend bug: Deferred array size without pointer, allocatable attribute or derived type without allocatable components."
+msgstr ""
+
+#: fortran/trans-array.c:6682
+#, gcc-internal-format
+msgid "bad expression type during walk (%d)"
+msgstr ""
+
+#: fortran/trans-common.c:400
+#, gcc-internal-format
+msgid "Named COMMON block '%s' at %L shall be of the same size"
+msgstr ""
+
+#: fortran/trans-common.c:842
+#, gcc-internal-format
+msgid "Bad array reference at %L"
+msgstr ""
+
+#: fortran/trans-common.c:850
+#, gcc-internal-format
+msgid "Illegal reference type at %L as EQUIVALENCE object"
+msgstr ""
+
+#: fortran/trans-common.c:890
+#, gcc-internal-format
+msgid "Inconsistent equivalence rules involving '%s' at %L and '%s' at %L"
+msgstr ""
+
+#. Aligning this field would misalign a previous field.
+#: fortran/trans-common.c:1023
+#, gcc-internal-format
+msgid "The equivalence set for variable '%s' declared at %L violates alignment requirements"
+msgstr ""
+
+#: fortran/trans-common.c:1090
+#, gcc-internal-format
+msgid "Equivalence for '%s' does not match ordering of COMMON '%s' at %L"
+msgstr ""
+
+#: fortran/trans-common.c:1105
+#, gcc-internal-format
+msgid "The equivalence set for '%s' cause an invalid extension to COMMON '%s' at %L"
+msgstr ""
+
+#: fortran/trans-common.c:1120
+#, gcc-internal-format
+msgid "Padding of %d bytes required before '%s' in COMMON '%s' at %L; reorder elements or use -fno-align-commons"
+msgstr ""
+
+#: fortran/trans-common.c:1125
+#, gcc-internal-format
+msgid "Padding of %d bytes required before '%s' in COMMON at %L; reorder elements or use -fno-align-commons"
+msgstr ""
+
+#: fortran/trans-common.c:1148
+#, gcc-internal-format
+msgid "COMMON '%s' at %L does not exist"
+msgstr ""
+
+#: fortran/trans-common.c:1156
+#, gcc-internal-format
+msgid "COMMON '%s' at %L requires %d bytes of padding at start; reorder elements or use -fno-align-commons"
+msgstr ""
+
+#: fortran/trans-common.c:1160
+#, gcc-internal-format
+msgid "COMMON at %L requires %d bytes of padding at start; reorder elements or use -fno-align-commons"
+msgstr ""
+
+#: fortran/trans-const.c:294
+#, gcc-internal-format
+msgid "Assigning value other than 0 or 1 to LOGICAL has undefined result at %L"
+msgstr ""
+
+#: fortran/trans-const.c:330
+#, gcc-internal-format
+msgid "gfc_conv_constant_to_tree(): invalid type: %s"
+msgstr ""
+
+#: fortran/trans-const.c:358
+#, gcc-internal-format
+msgid "non-constant initialization expression at %L"
+msgstr ""
+
+#: fortran/trans-decl.c:1161
+#, gcc-internal-format
+msgid "intrinsic variable which isn't a procedure"
+msgstr ""
+
+#: fortran/trans-decl.c:3088 fortran/trans-decl.c:4439
+#, gcc-internal-format
+msgid "Return value of function '%s' at %L not set"
+msgstr ""
+
+#: fortran/trans-decl.c:3428
+#, gcc-internal-format
+msgid "backend decl for module variable %s already exists"
+msgstr ""
+
+#: fortran/trans-decl.c:3801
+#, gcc-internal-format
+msgid "Dummy argument '%s' at %L was declared INTENT(OUT) but was not set"
+msgstr ""
+
+#: fortran/trans-decl.c:3806
+#, gcc-internal-format
+msgid "Unused dummy argument '%s' at %L"
+msgstr ""
+
+#: fortran/trans-decl.c:3812
+#, gcc-internal-format
+msgid "Unused variable '%s' declared at %L"
+msgstr ""
+
+#: fortran/trans-decl.c:3860
+#, gcc-internal-format
+msgid "Unused parameter '%s' declared at %L"
+msgstr ""
+
+#: fortran/trans-decl.c:3874
+#, gcc-internal-format
+msgid "Return value '%s' of function '%s' declared at %L not set"
+msgstr ""
+
+#: fortran/trans-expr.c:1342
+#, gcc-internal-format
+msgid "Unknown intrinsic op"
+msgstr ""
+
+#: fortran/trans-expr.c:2577
+#, gcc-internal-format
+msgid "Unknown argument list function at %L"
+msgstr ""
+
+#: fortran/trans-intrinsic.c:738
+#, gcc-internal-format
+msgid "Intrinsic function %s(%d) not recognized"
+msgstr ""
+
+#: fortran/trans-intrinsic.c:887
+#, gcc-internal-format
+msgid "'dim' argument of %s intrinsic at %L is not a valid dimension index"
+msgstr ""
+
+#: fortran/trans-io.c:2033
+#, gcc-internal-format
+msgid "Derived type '%s' at %L has PRIVATE components"
+msgstr ""
+
+#: fortran/trans-io.c:2137
+#, gcc-internal-format
+msgid "Bad IO basetype (%d)"
+msgstr ""
+
+#: fortran/trans-openmp.c:1643
+#, gcc-internal-format
+msgid "gfc_trans_omp_workshare(): Bad statement code"
+msgstr ""
+
+#: fortran/trans-stmt.c:513
+#, gcc-internal-format
+msgid "An alternate return at %L without a * dummy argument"
+msgstr ""
+
+#: fortran/trans-types.c:464
+#, gcc-internal-format
+msgid "integer kind=8 not available for -fdefault-integer-8 option"
+msgstr ""
+
+#: fortran/trans-types.c:487
+#, gcc-internal-format
+msgid "real kind=8 not available for -fdefault-real-8 option"
+msgstr ""
+
+#: fortran/trans-types.c:500
+#, gcc-internal-format
+msgid "Use of -fdefault-double-8 requires -fdefault-real-8"
+msgstr ""
+
+#: fortran/trans-types.c:1344
+#, gcc-internal-format
+msgid "Array element size too big"
+msgstr ""
+
+#: fortran/trans.c:1278
+#, gcc-internal-format
+msgid "gfc_trans_code(): Bad statement code"
+msgstr ""
+
+#: java/class.c:836
+#, gcc-internal-format
+msgid "bad method signature"
+msgstr ""
+
+#: java/class.c:893
+#, gcc-internal-format
+msgid "misplaced ConstantValue attribute (not in any field)"
+msgstr ""
+
+#: java/class.c:896
+#, gcc-internal-format
+msgid "duplicate ConstantValue attribute for field '%s'"
+msgstr ""
+
+#: java/class.c:907
+#, gcc-internal-format
+msgid "ConstantValue attribute of field '%s' has wrong type"
+msgstr ""
+
+#: java/class.c:1613
+#, gcc-internal-format
+msgid "abstract method in non-abstract class"
+msgstr ""
+
+#: java/class.c:2689
+#, gcc-internal-format
+msgid "non-static method %q+D overrides static method"
+msgstr ""
+
+#: java/decl.c:1261
+#, gcc-internal-format
+msgid "%q+D used prior to declaration"
+msgstr ""
+
+#: java/decl.c:1687
+#, gcc-internal-format
+msgid "In %+D: overlapped variable and exception ranges at %d"
+msgstr ""
+
+#: java/decl.c:1738
+#, gcc-internal-format
+msgid "bad type in parameter debug info"
+msgstr ""
+
+#: java/decl.c:1747
+#, gcc-internal-format
+msgid "bad PC range for debug info for local %q+D"
+msgstr ""
+
+#: java/expr.c:378
+#, gcc-internal-format
+msgid "need to insert runtime check for %s"
+msgstr ""
+
+#: java/expr.c:526 java/expr.c:573
+#, gcc-internal-format
+msgid "assert: %s is assign compatible with %s"
+msgstr ""
+
+#: java/expr.c:691
+#, gcc-internal-format
+msgid "stack underflow - dup* operation"
+msgstr ""
+
+#: java/expr.c:1689
+#, gcc-internal-format
+msgid "reference %qs is ambiguous: appears in interface %qs and interface %qs"
+msgstr ""
+
+#: java/expr.c:1717
+#, gcc-internal-format
+msgid "field %qs not found"
+msgstr ""
+
+#: java/expr.c:2269
+#, gcc-internal-format
+msgid "method '%s' not found in class"
+msgstr ""
+
+#: java/expr.c:2474
+#, gcc-internal-format
+msgid "failed to find class '%s'"
+msgstr ""
+
+#: java/expr.c:2515
+#, gcc-internal-format
+msgid "class '%s' has no method named '%s' matching signature '%s'"
+msgstr ""
+
+#: java/expr.c:2546
+#, gcc-internal-format
+msgid "invokestatic on non static method"
+msgstr ""
+
+#: java/expr.c:2551
+#, gcc-internal-format
+msgid "invokestatic on abstract method"
+msgstr ""
+
+#: java/expr.c:2559
+#, gcc-internal-format
+msgid "invoke[non-static] on static method"
+msgstr ""
+
+#: java/expr.c:2917
+#, gcc-internal-format
+msgid "missing field '%s' in '%s'"
+msgstr ""
+
+#: java/expr.c:2924
+#, gcc-internal-format
+msgid "mismatching signature for field '%s' in '%s'"
+msgstr ""
+
+#: java/expr.c:2953
+#, gcc-internal-format
+msgid "assignment to final field %q+D not in field's class"
+msgstr ""
+
+#: java/expr.c:3177
+#, gcc-internal-format
+msgid "invalid PC in line number table"
+msgstr ""
+
+#: java/expr.c:3227
+#, gcc-internal-format
+msgid "unreachable bytecode from %d to before %d"
+msgstr ""
+
+#: java/expr.c:3269
+#, gcc-internal-format
+msgid "unreachable bytecode from %d to the end of the method"
+msgstr ""
+
+#. duplicate code from LOAD macro
+#: java/expr.c:3576
+#, gcc-internal-format
+msgid "unrecogized wide sub-instruction"
+msgstr ""
+
+#: java/jcf-parse.c:508
+#, gcc-internal-format
+msgid "<constant pool index %d not in range>"
+msgstr ""
+
+#: java/jcf-parse.c:518
+#, gcc-internal-format
+msgid "<constant pool index %d unexpected type"
+msgstr ""
+
+#: java/jcf-parse.c:1098
+#, gcc-internal-format
+msgid "bad string constant"
+msgstr ""
+
+#: java/jcf-parse.c:1116
+#, gcc-internal-format
+msgid "bad value constant type %d, index %d"
+msgstr ""
+
+#: java/jcf-parse.c:1396 java/jcf-parse.c:1402
+#, gcc-internal-format
+msgid "cannot find file for class %s"
+msgstr ""
+
+#: java/jcf-parse.c:1427
+#, gcc-internal-format
+msgid "not a valid Java .class file"
+msgstr ""
+
+#: java/jcf-parse.c:1430
+#, gcc-internal-format
+msgid "error while parsing constant pool"
+msgstr ""
+
+#. FIXME - where was first time
+#: java/jcf-parse.c:1445
+#, gcc-internal-format
+msgid "reading class %s for the second time from %s"
+msgstr ""
+
+#: java/jcf-parse.c:1463
+#, gcc-internal-format
+msgid "error while parsing fields"
+msgstr ""
+
+#: java/jcf-parse.c:1466
+#, gcc-internal-format
+msgid "error while parsing methods"
+msgstr ""
+
+#: java/jcf-parse.c:1469
+#, gcc-internal-format
+msgid "error while parsing final attributes"
+msgstr ""
+
+#: java/jcf-parse.c:1509
+#, gcc-internal-format
+msgid "duplicate class will only be compiled once"
+msgstr ""
+
+#: java/jcf-parse.c:1604
+#, gcc-internal-format
+msgid "missing Code attribute"
+msgstr ""
+
+#: java/jcf-parse.c:1850
+#, gcc-internal-format
+msgid "no input file specified"
+msgstr ""
+
+#: java/jcf-parse.c:1885
+#, gcc-internal-format
+msgid "can't close input file %s: %m"
+msgstr ""
+
+#: java/jcf-parse.c:1930
+#, gcc-internal-format
+msgid "bad zip/jar file %s"
+msgstr ""
+
+#: java/jcf-parse.c:2132
+#, gcc-internal-format
+msgid "error while reading %s from zip file"
+msgstr ""
+
+#: java/jvspec.c:422
+#, gcc-internal-format
+msgid "warning: already-compiled .class files ignored with -C"
+msgstr ""
+
+#: java/lang.c:559
+#, gcc-internal-format
+msgid "-fexcess-precision=standard for Java"
+msgstr ""
+
+#: java/lang.c:570
+#, gcc-internal-format
+msgid "-findirect-dispatch is incompatible with -freduced-reflection"
+msgstr ""
+
+#: java/lang.c:573
+#, gcc-internal-format
+msgid "-fjni is incompatible with -freduced-reflection"
+msgstr ""
+
+#: java/lang.c:584
+#, gcc-internal-format
+msgid "can't do dependency tracking with input from stdin"
+msgstr ""
+
+#: java/lang.c:600
+#, gcc-internal-format
+msgid "couldn't determine target name for dependency tracking"
+msgstr ""
+
+#: java/mangle_name.c:325 java/mangle_name.c:402
+#, gcc-internal-format
+msgid "internal error - invalid Utf8 name"
+msgstr ""
+
+#: java/typeck.c:427
+#, gcc-internal-format
+msgid "junk at end of signature string"
+msgstr ""
+
+#: java/verify-glue.c:378
+#, gcc-internal-format
+msgid "verification failed: %s"
+msgstr ""
+
+#: java/verify-glue.c:380
+#, gcc-internal-format
+msgid "verification failed at PC=%d: %s"
+msgstr ""
+
+#: java/verify-glue.c:468
+#, gcc-internal-format
+msgid "bad pc in exception_table"
+msgstr ""
+
+#: lto/lto-elf.c:114 lto/lto-elf.c:135
+#, gcc-internal-format
+msgid "could not read section header: %s"
+msgstr ""
+
+#: lto/lto-elf.c:234
+#, gcc-internal-format
+msgid "two or more sections for %s:"
+msgstr ""
+
+#. Initialize the section header of section SCN.  SH_NAME is the section name
+#. as an index into the section header string table.  SH_TYPE is the section
+#. type, an SHT_* macro from libelf headers.
+#: lto/lto-elf.c:259
+#, gcc-internal-format
+msgid "elf32_getshdr() failed: %s"
+msgstr ""
+
+#: lto/lto-elf.c:261
+#, gcc-internal-format
+msgid "elf64_getshdr() failed: %s"
+msgstr ""
+
+#: lto/lto-elf.c:295
+#, gcc-internal-format
+msgid "could not create a new ELF section: %s"
+msgstr ""
+
+#: lto/lto-elf.c:349
+#, gcc-internal-format
+msgid "could not append data to ELF section: %s"
+msgstr ""
+
+#. Validate's ELF_FILE's executable header and, if cached_file_attrs is
+#. uninitialized, caches the architecture.
+#: lto/lto-elf.c:433
+#, gcc-internal-format
+msgid "could not read ELF header: %s"
+msgstr ""
+
+#: lto/lto-elf.c:439
+#, gcc-internal-format
+msgid "not a relocatable ELF object file"
+msgstr ""
+
+#: lto/lto-elf.c:447
+#, gcc-internal-format
+msgid "inconsistent file architecture detected"
+msgstr ""
+
+#: lto/lto-elf.c:473
+#, gcc-internal-format
+msgid "could not read ELF identification information: %s"
+msgstr ""
+
+#: lto/lto-elf.c:492
+#, gcc-internal-format
+msgid "unsupported ELF file class"
+msgstr ""
+
+#: lto/lto-elf.c:525
+#, gcc-internal-format
+msgid "could not locate ELF string table: %s"
+msgstr ""
+
+#. Helper functions used by init_ehdr.  Initialize ELF_FILE's executable
+#. header using cached data from previously read files.
+#: lto/lto-elf.c:549
+#, gcc-internal-format
+msgid "elf32_newehdr() failed: %s"
+msgstr ""
+
+#: lto/lto-elf.c:551
+#, gcc-internal-format
+msgid "elf64_newehdr() failed: %s"
+msgstr ""
+
+#: lto/lto-elf.c:635
+#, gcc-internal-format
+msgid "could not open file %s"
+msgstr ""
+
+#: lto/lto-elf.c:642
+#, gcc-internal-format
+msgid "ELF library is older than that used when building GCC"
+msgstr ""
+
+#: lto/lto-elf.c:651
+#, gcc-internal-format
+msgid "could not open ELF file: %s"
+msgstr ""
+
+#: lto/lto-elf.c:661
+#, gcc-internal-format
+msgid "could not seek in archive"
+msgstr ""
+
+#: lto/lto-elf.c:668
+#, gcc-internal-format
+msgid "could not find archive member"
+msgstr ""
+
+#: lto/lto-elf.c:716
+#, gcc-internal-format
+msgid "gelf_getehdr() failed: %s"
+msgstr ""
+
+#: lto/lto-elf.c:725
+#, gcc-internal-format
+msgid "elf_getscn() failed: %s"
+msgstr ""
+
+#: lto/lto-elf.c:728
+#, gcc-internal-format
+msgid "gelf_getshdr() failed: %s"
+msgstr ""
+
+#: lto/lto-elf.c:731
+#, gcc-internal-format
+msgid "gelf_update_shdr() failed: %s"
+msgstr ""
+
+#: lto/lto-elf.c:735
+#, gcc-internal-format
+msgid "gelf_update_ehdr() failed: %s"
+msgstr ""
+
+#: lto/lto-elf.c:743
+#, gcc-internal-format
+msgid "elf_update() failed: %s"
+msgstr ""
+
+#: lto/lto-lang.c:659
+#, gcc-internal-format
+msgid "-fwpa and -fltrans are mutually exclusive"
+msgstr ""
+
+#: lto/lto.c:252
+#, gcc-internal-format
+msgid "bytecode stream: garbage at the end of symbols section"
+msgstr ""
+
+#: lto/lto.c:276
+#, gcc-internal-format
+msgid "could not parse hex number"
+msgstr ""
+
+#: lto/lto.c:308
+#, gcc-internal-format
+msgid "unexpected file name %s in linker resolution file. Expected %s"
+msgstr ""
+
+#: lto/lto.c:317
+#, gcc-internal-format
+msgid "could not parse file offset"
+msgstr ""
+
+#: lto/lto.c:320
+#, gcc-internal-format
+msgid "unexpected offset"
+msgstr ""
+
+#: lto/lto.c:339
+#, gcc-internal-format
+msgid "Invalid line in the resolution file."
+msgstr ""
+
+#: lto/lto.c:352
+#, gcc-internal-format
+msgid "Invalid resolution in the resolution file."
+msgstr ""
+
+#: lto/lto.c:1049
+#, gcc-internal-format
+msgid "lto_elf_file_open() failed"
+msgstr ""
+
+#: lto/lto.c:1109
+#, gcc-internal-format
+msgid "environment variable COLLECT_GCC must be set"
+msgstr ""
+
+#: lto/lto.c:1114
+#, gcc-internal-format
+msgid "environment variable COLLECT_GCC_OPTIONS must be set"
+msgstr ""
+
+#: lto/lto.c:1123
+#, gcc-internal-format
+msgid "malformed COLLECT_GCC_OPTIONS"
+msgstr ""
+
+#: lto/lto.c:1169
+#, gcc-internal-format
+msgid "opening LTRANS output list %s: %m"
+msgstr ""
+
+#: lto/lto.c:1187 lto/lto.c:1209
+#, gcc-internal-format
+msgid "writing to LTRANS output list %s: %m"
+msgstr ""
+
+#: lto/lto.c:1226
+#, gcc-internal-format
+msgid "pex_init failed: %s"
+msgstr ""
+
+#: lto/lto.c:1234
+#, gcc-internal-format
+msgid "can't get program status: %s"
+msgstr ""
+
+#: lto/lto.c:1246
+#, gcc-internal-format
+msgid "%s terminated with status %d"
+msgstr ""
+
+#: lto/lto.c:1255
+#, gcc-internal-format
+msgid "closing LTRANS output list %s: %m"
+msgstr ""
+
+#: lto/lto.c:1747
+#, gcc-internal-format
+msgid "deleting LTRANS input file %s: %m"
+msgstr ""
+
+#: lto/lto.c:1828
+#, gcc-internal-format
+msgid "could not open symbol resolution file: %s"
+msgstr ""
+
+#: objc/objc-act.c:729
+#, gcc-internal-format
+msgid "%<@end%> must appear in an @implementation context"
+msgstr ""
+
+#: objc/objc-act.c:758
+#, gcc-internal-format
+msgid "method declaration not in @interface context"
+msgstr ""
+
+#: objc/objc-act.c:769
+#, gcc-internal-format
+msgid "method definition not in @implementation context"
+msgstr ""
+
+#: objc/objc-act.c:1026
+#, gcc-internal-format
+msgid "class %qs does not implement the %qE protocol"
+msgstr ""
+
+#: objc/objc-act.c:1029
+#, gcc-internal-format
+msgid "type %qs does not conform to the %qE protocol"
+msgstr ""
+
+#: objc/objc-act.c:1206
+#, gcc-internal-format
+msgid "comparison of distinct Objective-C types lacks a cast"
+msgstr ""
+
+#: objc/objc-act.c:1210
+#, gcc-internal-format
+msgid "initialization from distinct Objective-C type"
+msgstr ""
+
+#: objc/objc-act.c:1214
+#, gcc-internal-format
+msgid "assignment from distinct Objective-C type"
+msgstr ""
+
+#: objc/objc-act.c:1218
+#, gcc-internal-format
+msgid "distinct Objective-C type in return"
+msgstr ""
+
+#: objc/objc-act.c:1222
+#, gcc-internal-format
+msgid "passing argument %d of %qE from distinct Objective-C type"
+msgstr ""
+
+#: objc/objc-act.c:1378
+#, gcc-internal-format
+msgid "statically allocated instance of Objective-C class %qE"
+msgstr ""
+
+#: objc/objc-act.c:1455
+#, gcc-internal-format
+msgid "protocol %qE has circular dependency"
+msgstr ""
+
+#: objc/objc-act.c:1480 objc/objc-act.c:6680
+#, gcc-internal-format
+msgid "cannot find protocol declaration for %qE"
+msgstr ""
+
+#: objc/objc-act.c:1954 objc/objc-act.c:3408 objc/objc-act.c:7297
+#: objc/objc-act.c:7631 objc/objc-act.c:7686 objc/objc-act.c:7711
+#, gcc-internal-format
+msgid "cannot find interface declaration for %qE"
+msgstr ""
+
+#: objc/objc-act.c:1958
+#, gcc-internal-format
+msgid "interface %qE does not have valid constant string layout"
+msgstr ""
+
+#: objc/objc-act.c:1963
+#, gcc-internal-format
+msgid "cannot find reference tag for class %qE"
+msgstr ""
+
+#: objc/objc-act.c:2600
+#, gcc-internal-format
+msgid "creating selector for nonexistent method %qE"
+msgstr ""
+
+#: objc/objc-act.c:2803
+#, gcc-internal-format
+msgid "%qE is not an Objective-C class name or alias"
+msgstr ""
+
+#: objc/objc-act.c:2932 objc/objc-act.c:2964 objc/objc-act.c:7559
+#: objc/objc-act.c:7861 objc/objc-act.c:7891
+#, gcc-internal-format
+msgid "Objective-C declarations may only appear in global scope"
+msgstr ""
+
+#: objc/objc-act.c:2937
+#, gcc-internal-format
+msgid "cannot find class %qE"
+msgstr ""
+
+#: objc/objc-act.c:2939
+#, gcc-internal-format
+msgid "class %qE already exists"
+msgstr ""
+
+#: objc/objc-act.c:2984 objc/objc-act.c:7600
+#, gcc-internal-format
+msgid "%qE redeclared as different kind of symbol"
+msgstr ""
+
+#: objc/objc-act.c:3262
+#, gcc-internal-format
+msgid "strong-cast assignment has been intercepted"
+msgstr ""
+
+#: objc/objc-act.c:3304
+#, gcc-internal-format
+msgid "strong-cast may possibly be needed"
+msgstr ""
+
+#: objc/objc-act.c:3314
+#, gcc-internal-format
+msgid "instance variable assignment has been intercepted"
+msgstr ""
+
+#: objc/objc-act.c:3333
+#, gcc-internal-format
+msgid "pointer arithmetic for garbage-collected objects not allowed"
+msgstr ""
+
+#: objc/objc-act.c:3339
+#, gcc-internal-format
+msgid "global/static variable assignment has been intercepted"
+msgstr ""
+
+#: objc/objc-act.c:3828 objc/objc-act.c:3984
+#, gcc-internal-format
+msgid "use %<-fobjc-exceptions%> to enable Objective-C exception syntax"
+msgstr ""
+
+#: objc/objc-act.c:3866
+#, gcc-internal-format
+msgid "@catch parameter is not a known Objective-C class type"
+msgstr ""
+
+#: objc/objc-act.c:3882
+#, gcc-internal-format
+msgid "exception of type %<%T%> will be caught"
+msgstr ""
+
+#: objc/objc-act.c:3884
+#, gcc-internal-format
+msgid "   by earlier handler for %<%T%>"
+msgstr ""
+
+#: objc/objc-act.c:3937
+#, gcc-internal-format
+msgid "%<@try%> without %<@catch%> or %<@finally%>"
+msgstr ""
+
+#: objc/objc-act.c:3995
+#, gcc-internal-format
+msgid "%<@throw%> (rethrow) used outside of a @catch block"
+msgstr ""
+
+#: objc/objc-act.c:4397
+#, gcc-internal-format
+msgid "type %q+D does not have a known size"
+msgstr ""
+
+#: objc/objc-act.c:5029
+#, gcc-internal-format
+msgid "%s %qs"
+msgstr ""
+
+#: objc/objc-act.c:5052 objc/objc-act.c:5071
+#, gcc-internal-format
+msgid "inconsistent instance variable specification"
+msgstr ""
+
+#: objc/objc-act.c:5934
+#, gcc-internal-format
+msgid "can not use an object as parameter to a method"
+msgstr ""
+
+#: objc/objc-act.c:6162
+#, gcc-internal-format
+msgid "multiple methods named %<%c%E%> found"
+msgstr ""
+
+#: objc/objc-act.c:6165
+#, gcc-internal-format
+msgid "using %<%c%s%>"
+msgstr ""
+
+#: objc/objc-act.c:6174
+#, gcc-internal-format
+msgid "multiple selectors named %<%c%E%> found"
+msgstr ""
+
+#: objc/objc-act.c:6177
+#, gcc-internal-format
+msgid "found %<%c%s%>"
+msgstr ""
+
+#: objc/objc-act.c:6186
+#, gcc-internal-format
+msgid "also found %<%c%s%>"
+msgstr ""
+
+#: objc/objc-act.c:6400
+#, gcc-internal-format
+msgid "no super class declared in @interface for %qE"
+msgstr ""
+
+#: objc/objc-act.c:6438
+#, gcc-internal-format
+msgid "found %<-%E%> instead of %<+%E%> in protocol(s)"
+msgstr ""
+
+#: objc/objc-act.c:6495
+#, gcc-internal-format
+msgid "invalid receiver type %qs"
+msgstr ""
+
+#: objc/objc-act.c:6510
+#, gcc-internal-format
+msgid "%<%c%E%> not found in protocol(s)"
+msgstr ""
+
+#: objc/objc-act.c:6524
+#, gcc-internal-format
+msgid "%qE may not respond to %<%c%E%>"
+msgstr ""
+
+#: objc/objc-act.c:6532
+#, gcc-internal-format
+msgid "no %<%c%E%> method found"
+msgstr ""
+
+#: objc/objc-act.c:6539
+#, gcc-internal-format
+msgid "(Messages without a matching method signature"
+msgstr ""
+
+#: objc/objc-act.c:6541
+#, gcc-internal-format
+msgid "will be assumed to return %<id%> and accept"
+msgstr ""
+
+#: objc/objc-act.c:6543
+#, gcc-internal-format
+msgid "%<...%> as arguments.)"
+msgstr ""
+
+#: objc/objc-act.c:6781
+#, gcc-internal-format
+msgid "undeclared selector %qE"
+msgstr ""
+
+#. Historically, a class method that produced objects (factory
+#. method) would assign `self' to the instance that it
+#. allocated.  This would effectively turn the class method into
+#. an instance method.  Following this assignment, the instance
+#. variables could be accessed.  That practice, while safe,
+#. violates the simple rule that a class method should not refer
+#. to an instance variable.  It's better to catch the cases
+#. where this is done unknowingly than to support the above
+#. paradigm.
+#: objc/objc-act.c:6823
+#, gcc-internal-format
+msgid "instance variable %qE accessed in class method"
+msgstr ""
+
+#: objc/objc-act.c:7058
+#, gcc-internal-format
+msgid "duplicate declaration of method %<%c%E%>"
+msgstr ""
+
+#: objc/objc-act.c:7119
+#, gcc-internal-format
+msgid "duplicate interface declaration for category %<%E(%E)%>"
+msgstr ""
+
+#: objc/objc-act.c:7146
+#, gcc-internal-format
+msgid "illegal reference type specified for instance variable %qs"
+msgstr ""
+
+#: objc/objc-act.c:7157
+#, gcc-internal-format
+msgid "instance variable %qs has unknown size"
+msgstr ""
+
+#: objc/objc-act.c:7182
+#, gcc-internal-format
+msgid "type %qE has no default constructor to call"
+msgstr ""
+
+#: objc/objc-act.c:7188
+#, gcc-internal-format
+msgid "destructor for %qE shall not be run either"
+msgstr ""
+
+#. Vtable pointers are Real Bad(tm), since Obj-C cannot
+#. initialize them.
+#: objc/objc-act.c:7200
+#, gcc-internal-format
+msgid "type %qE has virtual member functions"
+msgstr ""
+
+#: objc/objc-act.c:7201
+#, gcc-internal-format
+msgid "illegal aggregate type %qE specified for instance variable %qs"
+msgstr ""
+
+#: objc/objc-act.c:7211
+#, gcc-internal-format
+msgid "type %qE has a user-defined constructor"
+msgstr ""
+
+#: objc/objc-act.c:7213
+#, gcc-internal-format
+msgid "type %qE has a user-defined destructor"
+msgstr ""
+
+#: objc/objc-act.c:7217
+#, gcc-internal-format
+msgid "C++ constructors and destructors will not be invoked for Objective-C fields"
+msgstr ""
+
+#: objc/objc-act.c:7326
+#, gcc-internal-format
+msgid "instance variable %qE is declared private"
+msgstr ""
+
+#: objc/objc-act.c:7337
+#, gcc-internal-format
+msgid "instance variable %qE is %s; this will be a hard error in the future"
+msgstr ""
+
+#: objc/objc-act.c:7344
+#, gcc-internal-format
+msgid "instance variable %qE is declared %s"
+msgstr ""
+
+#: objc/objc-act.c:7370 objc/objc-act.c:7458
+#, gcc-internal-format
+msgid "incomplete implementation of class %qE"
+msgstr ""
+
+#: objc/objc-act.c:7374 objc/objc-act.c:7462
+#, gcc-internal-format
+msgid "incomplete implementation of category %qE"
+msgstr ""
+
+#: objc/objc-act.c:7379 objc/objc-act.c:7466
+#, gcc-internal-format
+msgid "method definition for %<%c%E%> not found"
+msgstr ""
+
+#: objc/objc-act.c:7507
+#, gcc-internal-format
+msgid "%s %qE does not fully implement the %qE protocol"
+msgstr ""
+
+#: objc/objc-act.c:7565 objc/objc-act.c:9252
+#, gcc-internal-format
+msgid "%<@end%> missing in implementation context"
+msgstr ""
+
+#: objc/objc-act.c:7584
+#, gcc-internal-format
+msgid "cannot find interface declaration for %qE, superclass of %qE"
+msgstr ""
+
+#: objc/objc-act.c:7614
+#, gcc-internal-format
+msgid "reimplementation of class %qE"
+msgstr ""
+
+#: objc/objc-act.c:7644
+#, gcc-internal-format
+msgid "conflicting super class name %qE"
+msgstr ""
+
+#: objc/objc-act.c:7647
+#, gcc-internal-format
+msgid "previous declaration of %qE"
+msgstr ""
+
+#: objc/objc-act.c:7649
+#, gcc-internal-format
+msgid "previous declaration"
+msgstr ""
+
+#: objc/objc-act.c:7665 objc/objc-act.c:7663
+#, gcc-internal-format
+msgid "duplicate interface declaration for class %qE"
+msgstr ""
+
+#: objc/objc-act.c:7919
+#, gcc-internal-format
+msgid "duplicate declaration for protocol %qE"
+msgstr ""
+
+#: objc/objc-act.c:8736
+#, gcc-internal-format
+msgid "conflicting types for %<%c%s%>"
+msgstr ""
+
+#: objc/objc-act.c:8740
+#, gcc-internal-format
+msgid "previous declaration of %<%c%s%>"
+msgstr ""
+
+#: objc/objc-act.c:8830
+#, gcc-internal-format
+msgid "no super class declared in interface for %qE"
+msgstr ""
+
+#: objc/objc-act.c:8889
+#, gcc-internal-format
+msgid "[super ...] must appear in a method context"
+msgstr ""
+
+#: objc/objc-act.c:8928
+#, gcc-internal-format
+msgid "method possibly missing a [super dealloc] call"
+msgstr ""
+
+#: objc/objc-act.c:9545
+#, gcc-internal-format
+msgid "local declaration of %qE hides instance variable"
+msgstr ""
+
+#: ada/gcc-interface/misc.c:196
+#, gcc-internal-format
+msgid "missing argument to \"-%s\""
+msgstr ""
+
+#: ada/gcc-interface/misc.c:254
+#, gcc-internal-format
+msgid "%<-gnat%> misspelled as %<-gant%>"
+msgstr ""
+
+#: ada/gcc-interface/misc.c:312
+#, gcc-internal-format
+msgid "-fexcess-precision=standard for Ada"
+msgstr ""
+
+#: ada/gcc-interface/utils.c:5299
+#, gcc-internal-format
+msgid "%qs attribute requires prototypes with named arguments"
+msgstr ""
+
+#: ada/gcc-interface/utils.c:5311
+#, gcc-internal-format
+msgid "%qs attribute only applies to variadic functions"
+msgstr ""
+
+#: ada/gcc-interface/utils.c:5474
+#, gcc-internal-format
+msgid "invalid vector type for attribute %qs"
+msgstr ""
+
+#: ada/gcc-interface/utils.c:5537
+#, gcc-internal-format
+msgid "attribute %qs applies to array types only"
+msgstr ""
+
+#: ada/gcc-interface/utils.c:5564
+#, gcc-internal-format
+msgid "invalid element type for attribute %qs"
+msgstr ""
Index: gcc/tree-vect-patterns.c
===================================================================
--- gcc/tree-vect-patterns.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/tree-vect-patterns.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -254,6 +254,11 @@
 
   prod_type = half_type;
   stmt = SSA_NAME_DEF_STMT (oprnd0);
+
+  /* It could not be the dot_prod pattern if the stmt is outside the loop.  */
+  if (!flow_bb_inside_loop_p (loop, gimple_bb (stmt)))
+    return NULL;
+
   /* FORNOW.  Can continue analyzing the def-use chain when this stmt in a phi
      inside the loop (in case we are analyzing an outer-loop).  */
   if (!is_gimple_assign (stmt))
Index: gcc/ira.c
===================================================================
--- gcc/ira.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/ira.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -2795,8 +2795,7 @@
 {
   /* Consider spilled pseudos too for IRA because they still have a
      chance to get hard-registers in the reload when IRA is used.  */
-  return (reg_renumber[regno] >= 0
-	  || (ira_conflicts_p && flag_ira_share_spill_slots));
+  return (reg_renumber[regno] >= 0 || ira_conflicts_p);
 }
 
 /* Init LIVE_SUBREGS[ALLOCNUM] and LIVE_SUBREGS_USED[ALLOCNUM] using
@@ -3219,9 +3218,12 @@
   ira_assert (ira_conflicts_p || !loops_p);
 
   saved_flag_ira_share_spill_slots = flag_ira_share_spill_slots;
-  if (too_high_register_pressure_p ())
+  if (too_high_register_pressure_p () || cfun->calls_setjmp)
     /* It is just wasting compiler's time to pack spilled pseudos into
-       stack slots in this case -- prohibit it.  */
+       stack slots in this case -- prohibit it.  We also do this if
+       there is setjmp call because a variable not modified between
+       setjmp and longjmp the compiler is required to preserve its
+       value and sharing slots does not guarantee it.  */
     flag_ira_share_spill_slots = FALSE;
 
   ira_color ();
Index: gcc/tree-nested.c
===================================================================
--- gcc/tree-nested.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/tree-nested.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -2055,9 +2055,8 @@
 static void
 convert_all_function_calls (struct nesting_info *root)
 {
+  unsigned int chain_count = 0, old_chain_count, iter_count;
   struct nesting_info *n;
-  int iter_count;
-  bool any_changed;
 
   /* First, optimistically clear static_chain for all decls that haven't
      used the static chain already for variable access.  */
@@ -2073,6 +2072,7 @@
 	}
       else
 	DECL_STATIC_CHAIN (decl) = 1;
+      chain_count += DECL_STATIC_CHAIN (decl);
     }
 
   /* Walk the functions and perform transformations.  Note that these
@@ -2085,7 +2085,8 @@
   iter_count = 0;
   do
     {
-      any_changed = false;
+      old_chain_count = chain_count;
+      chain_count = 0;
       iter_count++;
 
       if (dump_file && (dump_flags & TDF_DETAILS))
@@ -2094,22 +2095,16 @@
       FOR_EACH_NEST_INFO (n, root)
 	{
 	  tree decl = n->context;
-	  bool old_static_chain = DECL_STATIC_CHAIN (decl);
-
 	  walk_function (convert_tramp_reference_stmt,
 			 convert_tramp_reference_op, n);
 	  walk_function (convert_gimple_call, NULL, n);
-
-	  /* If a call to another function created the use of a chain
-	     within this function, we'll have to continue iteration.  */
-	  if (!old_static_chain && DECL_STATIC_CHAIN (decl))
-	    any_changed = true;
+	  chain_count += DECL_STATIC_CHAIN (decl);
 	}
     }
-  while (any_changed);
+  while (chain_count != old_chain_count);
 
   if (dump_file && (dump_flags & TDF_DETAILS))
-    fprintf (dump_file, "convert_all_function_calls iterations: %d\n\n",
+    fprintf (dump_file, "convert_all_function_calls iterations: %u\n\n",
 	     iter_count);
 }
 
Index: gcc/sched-deps.c
===================================================================
--- gcc/sched-deps.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/sched-deps.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1517,9 +1517,7 @@
 
   delete_all_dependences (insn);
 
-  prev_nonnote = prev_nonnote_insn (insn);
-  while (DEBUG_INSN_P (prev_nonnote))
-    prev_nonnote = prev_nonnote_insn (prev_nonnote);
+  prev_nonnote = prev_nonnote_nondebug_insn (insn);
   if (BLOCK_FOR_INSN (insn) == BLOCK_FOR_INSN (prev_nonnote)
       && ! sched_insns_conditions_mutex_p (insn, prev_nonnote))
     add_dependence (insn, prev_nonnote, REG_DEP_ANTI);
@@ -2695,9 +2693,7 @@
   if (JUMP_P (insn))
     {
       rtx next;
-      next = next_nonnote_insn (insn);
-      while (next && DEBUG_INSN_P (next))
-	next = next_nonnote_insn (next);
+      next = next_nonnote_nondebug_insn (insn);
       if (next && BARRIER_P (next))
 	reg_pending_barrier = MOVE_BARRIER;
       else
@@ -3366,10 +3362,8 @@
      hard registers correct.  */
   if (! reload_completed && !LABEL_P (head))
     {
-      rtx insn = prev_nonnote_insn (head);
+      rtx insn = prev_nonnote_nondebug_insn (head);
 
-      while (insn && DEBUG_INSN_P (insn))
-	insn = prev_nonnote_insn (insn);
       if (insn && CALL_P (insn))
 	deps->in_post_call_group_p = post_call_initial;
     }
Index: gcc/tree-ssa-loop-prefetch.c
===================================================================
--- gcc/tree-ssa-loop-prefetch.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/tree-ssa-loop-prefetch.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -481,6 +481,10 @@
   if (!analyze_ref (loop, &ref, &base, &step, &delta, stmt))
     return false;
 
+  /* Stop if the address of BASE could not be taken.  */
+  if (may_be_nonaddressable_p (base))
+    return false;
+
   /* Now we know that REF = &BASE + STEP * iter + DELTA, where DELTA and STEP
      are integer constants.  */
   agrp = find_or_create_group (refs, base, step);
Index: gcc/rtl.h
===================================================================
--- gcc/rtl.h	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/rtl.h	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1709,6 +1709,8 @@
 extern rtx next_nonnote_insn_bb (rtx);
 extern rtx prev_nondebug_insn (rtx);
 extern rtx next_nondebug_insn (rtx);
+extern rtx prev_nonnote_nondebug_insn (rtx);
+extern rtx next_nonnote_nondebug_insn (rtx);
 extern rtx prev_real_insn (rtx);
 extern rtx next_real_insn (rtx);
 extern rtx prev_active_insn (rtx);
Index: gcc/tree-inline.c
===================================================================
--- gcc/tree-inline.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/tree-inline.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1516,7 +1516,8 @@
 	  tree new_rhs;
 	  new_rhs = force_gimple_operand_gsi (&seq_gsi,
 					      gimple_assign_rhs1 (stmt),
-					      true, NULL, false, GSI_NEW_STMT);
+					      true, NULL, false,
+					      GSI_CONTINUE_LINKING);
 	  gimple_assign_set_rhs1 (stmt, new_rhs);
 	  id->regimplify = false;
 	}
@@ -1934,12 +1935,13 @@
   edge_iterator ei;
   gimple phi;
   gimple_stmt_iterator si;
+  edge new_edge;
+  bool inserted = false;
 
   for (si = gsi_start (phi_nodes (bb)); !gsi_end_p (si); gsi_next (&si))
     {
       tree res, new_res;
       gimple new_phi;
-      edge new_edge;
 
       phi = gsi_stmt (si);
       res = PHI_RESULT (phi);
@@ -1968,13 +1970,19 @@
 		{
 		  gimple_seq stmts = NULL;
 		  new_arg = force_gimple_operand (new_arg, &stmts, true, NULL);
-		  gsi_insert_seq_on_edge_immediate (new_edge, stmts);
+		  gsi_insert_seq_on_edge (new_edge, stmts);
+		  inserted = true;
 		}
 	      add_phi_arg (new_phi, new_arg, new_edge,
 			   gimple_phi_arg_location_from_edge (phi, old_edge));
 	    }
 	}
     }
+
+  /* Commit the delayed edge insertions.  */
+  if (inserted)
+    FOR_EACH_EDGE (new_edge, ei, new_bb->preds)
+      gsi_commit_one_edge_insert (new_edge, NULL);
 }
 
 
Index: gcc/combine.c
===================================================================
--- gcc/combine.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/combine.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -3531,6 +3531,12 @@
 #ifdef HAVE_cc0
       if (reg_referenced_p (cc0_rtx, XVECEXP (newpat, 0, 0)))
 	{
+	  if (use_crosses_set_p (SET_SRC (XVECEXP (newpat, 0, 0)),
+				 DF_INSN_LUID (i2)))
+	    {
+	      undo_all ();
+	      return 0;
+	    }
 	  newi2pat = XVECEXP (newpat, 0, 0);
 	  newpat = XVECEXP (newpat, 0, 1);
 	}
@@ -3544,7 +3550,25 @@
       i2_code_number = recog_for_combine (&newi2pat, i2, &new_i2_notes);
 
       if (i2_code_number >= 0)
-	insn_code_number = recog_for_combine (&newpat, i3, &new_i3_notes);
+	{
+	  /* recog_for_combine might have added CLOBBERs to newi2pat.
+	     Make sure NEWPAT does not depend on the clobbered regs.  */
+	  if (GET_CODE (newi2pat) == PARALLEL)
+	    {
+	      for (i = XVECLEN (newi2pat, 0) - 1; i >= 0; i--)
+		if (GET_CODE (XVECEXP (newi2pat, 0, i)) == CLOBBER)
+		  {
+		    rtx reg = XEXP (XVECEXP (newi2pat, 0, i), 0);
+		    if (reg_overlap_mentioned_p (reg, newpat))
+		      {
+			undo_all ();
+			return 0;
+		      }
+		  }
+	    }
+
+	  insn_code_number = recog_for_combine (&newpat, i3, &new_i3_notes);
+	}
     }
 
   /* If it still isn't recognized, fail and change things back the way they
@@ -9505,7 +9529,9 @@
 		  > GET_MODE_SIZE (GET_MODE (varop)))
 	      && (unsigned int) ((GET_MODE_SIZE (GET_MODE (SUBREG_REG (varop)))
 				  + (UNITS_PER_WORD - 1)) / UNITS_PER_WORD)
-		 == mode_words)
+		 == mode_words
+	      && GET_MODE_CLASS (GET_MODE (varop)) == MODE_INT
+	      && GET_MODE_CLASS (GET_MODE (SUBREG_REG (varop))) == MODE_INT)
 	    {
 	      varop = SUBREG_REG (varop);
 	      if (GET_MODE_SIZE (GET_MODE (varop)) > GET_MODE_SIZE (mode))
@@ -12680,29 +12706,6 @@
 
   return 0;
 }
-
-/* Return the next insn after INSN that is neither a NOTE nor a
-   DEBUG_INSN.  This routine does not look inside SEQUENCEs.  */
-
-static rtx
-next_nonnote_nondebug_insn (rtx insn)
-{
-  while (insn)
-    {
-      insn = NEXT_INSN (insn);
-      if (insn == 0)
-	break;
-      if (NOTE_P (insn))
-	continue;
-      if (DEBUG_INSN_P (insn))
-	continue;
-      break;
-    }
-
-  return insn;
-}
-
-
 
 /* Given a chain of REG_NOTES originally from FROM_INSN, try to place them
    as appropriate.  I3 and I2 are the insns resulting from the combination
Index: gcc/bb-reorder.c
===================================================================
--- gcc/bb-reorder.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/bb-reorder.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1292,7 +1292,9 @@
 
 	      if (src && (src != ENTRY_BLOCK_PTR))
 		{
-		  if (!JUMP_P (BB_END (src)) && !block_ends_with_call_p (src))
+		  if (!JUMP_P (BB_END (src))
+		      && !block_ends_with_call_p (src)
+		      && !can_throw_internal (BB_END (src)))
 		    /* bb just falls through.  */
 		    {
 		      /* make sure there's only one successor */
@@ -1309,9 +1311,9 @@
 		      src->il.rtl->footer = unlink_insn_chain (barrier, barrier);
 		      /* Mark edge as non-fallthru.  */
 		      crossing_edges[i]->flags &= ~EDGE_FALLTHRU;
-		    } /* end: 'if (GET_CODE ... '  */
-		} /* end: 'if (src && src->index...'  */
-	    } /* end: 'if (dest && dest->index...'  */
+		    } /* end: 'if (!JUMP_P ... '  */
+		} /* end: 'if (src && src !=...'  */
+	    } /* end: 'if (dest && dest !=...'  */
 	} /* end: 'if (crossing_edges[i]...'  */
     } /* end for loop  */
 }
@@ -1368,19 +1370,21 @@
 	  fall_thru = succ2;
 	  cond_jump = succ1;
 	}
-      else if (!fall_thru && succ1 && block_ends_with_call_p (cur_bb))
-      {
-        edge e;
-        edge_iterator ei;
+      else if (succ1
+	       && (block_ends_with_call_p (cur_bb)
+		   || can_throw_internal (BB_END (cur_bb))))
+	{
+	  edge e;
+	  edge_iterator ei;
 
-        /* Find EDGE_CAN_FALLTHRU edge.  */
-        FOR_EACH_EDGE (e, ei, cur_bb->succs)
-          if (e->flags & EDGE_CAN_FALLTHRU)
-          {
-            fall_thru = e;
-            break;
-          }
-      }
+	  /* Find EDGE_CAN_FALLTHRU edge.  */
+	  FOR_EACH_EDGE (e, ei, cur_bb->succs)
+	    if (e->flags & EDGE_CAN_FALLTHRU)
+	      {
+		fall_thru = e;
+		break;
+	      }
+	}
 
       if (fall_thru && (fall_thru->dest != EXIT_BLOCK_PTR))
 	{
Index: gcc/tree-flow.h
===================================================================
--- gcc/tree-flow.h	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/tree-flow.h	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -837,6 +837,7 @@
 bool multiplier_allowed_in_address_p (HOST_WIDE_INT, enum machine_mode,
 				      addr_space_t);
 unsigned multiply_by_cost (HOST_WIDE_INT, enum machine_mode, bool);
+bool may_be_nonaddressable_p (tree expr);
 
 /* In tree-ssa-threadupdate.c.  */
 extern bool thread_through_all_blocks (bool);
Index: gcc/config.gcc
===================================================================
--- gcc/config.gcc	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/config.gcc	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -854,7 +854,7 @@
 	use_collect2=no
 	;;
 bfin*-rtems*)
-	tm_file="${tm_file} dbxelf.h elfos.h bfin/elf.h bfin/rtems.h rtems.h"
+	tm_file="${tm_file} dbxelf.h elfos.h bfin/elf.h bfin/rtems.h rtems.h newlib-stdint.h"
 	tmake_file="bfin/t-bfin t-rtems bfin/t-rtems"
 	;;
 bfin*-*)
@@ -1523,7 +1523,7 @@
 	tmake_file="${tmake_file} lm32/t-lm32 lm32/t-fprules-softfp soft-fp/t-softfp"
         ;;
 lm32-*-rtems*)
-	tm_file="dbxelf.h elfos.h ${tm_file} lm32/rtems.h rtems.h"
+	tm_file="dbxelf.h elfos.h ${tm_file} lm32/rtems.h rtems.h newlib-stdint.h"
 	tmake_file="${tmake_file} lm32/t-lm32 lm32/t-fprules-softfp soft-fp/t-softfp"
 	tmake_file="${tmake_file} t-rtems"
          ;;
Index: gcc/reginfo.c
===================================================================
--- gcc/reginfo.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/reginfo.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -841,6 +841,14 @@
 void
 globalize_reg (int i)
 {
+#ifdef STACK_REGS
+  if (IN_RANGE (i, FIRST_STACK_REG, LAST_STACK_REG))
+    {
+      error ("stack register used for global register variable");
+      return;
+    }
+#endif
+
   if (fixed_regs[i] == 0 && no_global_reg_vars)
     error ("global register variable follows a function definition");
 
Index: gcc/Makefile.in
===================================================================
--- gcc/Makefile.in	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/Makefile.in	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -3005,7 +3005,7 @@
     $(TREE_H) $(TM_P_H) $(TREE_FLOW_H) $(DIAGNOSTIC_H) $(TREE_INLINE_H) \
     $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) $(GIMPLE_H) \
     $(TREE_PASS_H) $(FLAGS_H) $(EXPR_H) $(BASIC_BLOCK_H) output.h \
-    $(GGC_H) $(OBSTACK_H) $(PARAMS_H) $(CPPLIB_H) $(PARAMS_H)
+    $(GGC_H) $(OBSTACK_H) $(PARAMS_H) $(CPPLIB_H) $(PARAMS_H) langhooks.h
 tree-complex.o : tree-complex.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TREE_H) \
     $(TM_H) $(RTL_H) $(REAL_H) $(FLAGS_H) $(TREE_FLOW_H) $(GIMPLE_H) \
     tree-iterator.h $(TREE_PASS_H) tree-ssa-propagate.h $(DIAGNOSTIC_H)
Index: gcc/tree-ssa-structalias.c
===================================================================
--- gcc/tree-ssa-structalias.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/tree-ssa-structalias.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -405,8 +405,9 @@
 typedef struct constraint_expr ce_s;
 DEF_VEC_O(ce_s);
 DEF_VEC_ALLOC_O(ce_s, heap);
-static void get_constraint_for_1 (tree, VEC(ce_s, heap) **, bool);
+static void get_constraint_for_1 (tree, VEC(ce_s, heap) **, bool, bool);
 static void get_constraint_for (tree, VEC(ce_s, heap) **);
+static void get_constraint_for_rhs (tree, VEC(ce_s, heap) **);
 static void do_deref (VEC (ce_s, heap) **);
 
 /* Our set constraints are made up of two constraint expressions, one
@@ -2841,7 +2842,7 @@
      does not change the points-to solution.  */
   if (!use_field_sensitive)
     {
-      get_constraint_for (ptr, results);
+      get_constraint_for_rhs (ptr, results);
       return;
     }
 
@@ -2861,7 +2862,7 @@
 	rhsoffset = UNKNOWN_OFFSET;
     }
 
-  get_constraint_for (ptr, results);
+  get_constraint_for_rhs (ptr, results);
   if (rhsoffset == 0)
     return;
 
@@ -2939,11 +2940,13 @@
 
 
 /* Given a COMPONENT_REF T, return the constraint_expr vector for it.
-   If address_p is true the result will be taken its address of.  */
+   If address_p is true the result will be taken its address of.
+   If lhs_p is true then the constraint expression is assumed to be used
+   as the lhs.  */
 
 static void
 get_constraint_for_component_ref (tree t, VEC(ce_s, heap) **results,
-				  bool address_p)
+				  bool address_p, bool lhs_p)
 {
   tree orig_t = t;
   HOST_WIDE_INT bitsize = -1;
@@ -2955,7 +2958,8 @@
   /* Some people like to do cute things like take the address of
      &0->a.b */
   forzero = t;
-  while (!SSA_VAR_P (forzero) && !CONSTANT_CLASS_P (forzero))
+  while (handled_component_p (forzero)
+	 || INDIRECT_REF_P (forzero))
     forzero = TREE_OPERAND (forzero, 0);
 
   if (CONSTANT_CLASS_P (forzero) && integer_zerop (forzero))
@@ -2969,11 +2973,34 @@
       return;
     }
 
+  /* Handle type-punning through unions.  If we are extracting a pointer
+     from a union via a possibly type-punning access that pointer
+     points to anything, similar to a conversion of an integer to
+     a pointer.  */
+  if (!lhs_p)
+    {
+      tree u;
+      for (u = t;
+	   TREE_CODE (u) == COMPONENT_REF || TREE_CODE (u) == ARRAY_REF;
+	   u = TREE_OPERAND (u, 0))
+	if (TREE_CODE (u) == COMPONENT_REF
+	    && TREE_CODE (TREE_TYPE (TREE_OPERAND (u, 0))) == UNION_TYPE)
+	  {
+	    struct constraint_expr temp;
+
+	    temp.offset = 0;
+	    temp.var = anything_id;
+	    temp.type = ADDRESSOF;
+	    VEC_safe_push (ce_s, heap, *results, &temp);
+	    return;
+	  }
+    }
+
   t = get_ref_base_and_extent (t, &bitpos, &bitsize, &bitmaxsize);
 
   /* Pretend to take the address of the base, we'll take care of
      adding the required subset of sub-fields below.  */
-  get_constraint_for_1 (t, results, true);
+  get_constraint_for_1 (t, results, true, lhs_p);
   gcc_assert (VEC_length (ce_s, *results) == 1);
   result = VEC_last (ce_s, *results);
 
@@ -3095,8 +3122,6 @@
     }
 }
 
-static void get_constraint_for_1 (tree, VEC (ce_s, heap) **, bool);
-
 /* Given a tree T, return the constraint expression for taking the
    address of it.  */
 
@@ -3106,7 +3131,7 @@
   struct constraint_expr *c;
   unsigned int i;
 
-  get_constraint_for_1 (t, results, true);
+  get_constraint_for_1 (t, results, true, true);
 
   for (i = 0; VEC_iterate (ce_s, *results, i, c); i++)
     {
@@ -3120,7 +3145,8 @@
 /* Given a tree T, return the constraint expression for it.  */
 
 static void
-get_constraint_for_1 (tree t, VEC (ce_s, heap) **results, bool address_p)
+get_constraint_for_1 (tree t, VEC (ce_s, heap) **results, bool address_p,
+		      bool lhs_p)
 {
   struct constraint_expr temp;
 
@@ -3180,17 +3206,19 @@
 	  {
 	  case INDIRECT_REF:
 	    {
-	      get_constraint_for_1 (TREE_OPERAND (t, 0), results, address_p);
+	      get_constraint_for_1 (TREE_OPERAND (t, 0), results, address_p,
+				    lhs_p);
 	      do_deref (results);
 	      return;
 	    }
 	  case ARRAY_REF:
 	  case ARRAY_RANGE_REF:
 	  case COMPONENT_REF:
-	    get_constraint_for_component_ref (t, results, address_p);
+	    get_constraint_for_component_ref (t, results, address_p, lhs_p);
 	    return;
 	  case VIEW_CONVERT_EXPR:
-	    get_constraint_for_1 (TREE_OPERAND (t, 0), results, address_p);
+	    get_constraint_for_1 (TREE_OPERAND (t, 0), results, address_p,
+				  lhs_p);
 	    return;
 	  /* We are missing handling for TARGET_MEM_REF here.  */
 	  default:;
@@ -3232,10 +3260,21 @@
 {
   gcc_assert (VEC_length (ce_s, *results) == 0);
 
-  get_constraint_for_1 (t, results, false);
+  get_constraint_for_1 (t, results, false, true);
 }
 
+/* Given a gimple tree T, return the constraint expression vector for it
+   to be used as the rhs of a constraint.  */
 
+static void
+get_constraint_for_rhs (tree t, VEC (ce_s, heap) **results)
+{
+  gcc_assert (VEC_length (ce_s, *results) == 0);
+
+  get_constraint_for_1 (t, results, false, false);
+}
+
+
 /* Efficiently generates constraints from all entries in *RHSC to all
    entries in *LHSC.  */
 
@@ -3274,7 +3313,7 @@
   unsigned j;
 
   get_constraint_for (lhsop, &lhsc);
-  get_constraint_for (rhsop, &rhsc);
+  get_constraint_for_rhs (rhsop, &rhsc);
   lhsp = VEC_index (ce_s, lhsc, 0);
   rhsp = VEC_index (ce_s, rhsc, 0);
   if (lhsp->type == DEREF
@@ -3318,12 +3357,11 @@
   VEC_free (ce_s, heap, rhsc);
 }
 
-/* Create a constraint ID = OP.  */
+/* Create constraints ID = { rhsc }.  */
 
 static void
-make_constraint_to (unsigned id, tree op)
+make_constraints_to (unsigned id, VEC(ce_s, heap) *rhsc)
 {
-  VEC(ce_s, heap) *rhsc = NULL;
   struct constraint_expr *c;
   struct constraint_expr includes;
   unsigned int j;
@@ -3332,9 +3370,18 @@
   includes.offset = 0;
   includes.type = SCALAR;
 
-  get_constraint_for (op, &rhsc);
   for (j = 0; VEC_iterate (ce_s, rhsc, j, c); j++)
     process_constraint (new_constraint (includes, *c));
+}
+
+/* Create a constraint ID = OP.  */
+
+static void
+make_constraint_to (unsigned id, tree op)
+{
+  VEC(ce_s, heap) *rhsc = NULL;
+  get_constraint_for_rhs (op, &rhsc);
+  make_constraints_to (id, rhsc);
   VEC_free (ce_s, heap, rhsc);
 }
 
@@ -3558,7 +3605,7 @@
 	  VEC(ce_s, heap) *argc = NULL;
 	  unsigned i;
 	  struct constraint_expr *argp;
-	  get_constraint_for (arg, &argc);
+	  get_constraint_for_rhs (arg, &argc);
 	  for (i = 0; VEC_iterate (ce_s, argc, i, argp); ++i)
 	    VEC_safe_push (ce_s, heap, *results, argp);
 	  VEC_free(ce_s, heap, argc);
@@ -3648,7 +3695,7 @@
 	      tree strippedrhs = PHI_ARG_DEF (t, i);
 
 	      STRIP_NOPS (strippedrhs);
-	      get_constraint_for (gimple_phi_arg_def (t, i), &rhsc);
+	      get_constraint_for_rhs (gimple_phi_arg_def (t, i), &rhsc);
 
 	      for (j = 0; VEC_iterate (ce_s, lhsc, j, c); j++)
 		{
@@ -3796,8 +3843,7 @@
 	     of global memory but not of escaped memory.  */
 	  if (flags & (ECF_CONST|ECF_NOVOPS))
 	    {
-	      if (gimple_call_lhs (t)
-		  && could_have_pointers (gimple_call_lhs (t)))
+	      if (gimple_call_lhs (t))
 		handle_const_call (t, &rhsc);
 	    }
 	  /* Pure functions can return addresses in and of memory
@@ -3807,9 +3853,17 @@
 	    handle_pure_call (t, &rhsc);
 	  else
 	    handle_rhs_call (t, &rhsc);
-	  if (gimple_call_lhs (t)
-	      && could_have_pointers (gimple_call_lhs (t)))
-	    handle_lhs_call (gimple_call_lhs (t), flags, rhsc, fndecl);
+	  if (gimple_call_lhs (t))
+	    {
+	      if (could_have_pointers (gimple_call_lhs (t)))
+		handle_lhs_call (gimple_call_lhs (t), flags, rhsc, fndecl);
+	      /* Similar to conversions a result that is not a pointer
+	         is an escape point for any pointer the function might
+		 return.  */
+	      else if (flags & (ECF_CONST|ECF_PURE
+				|ECF_NOVOPS|ECF_LOOPING_CONST_OR_PURE))
+		make_constraints_to (escaped_id, rhsc);
+	    }
 	  VEC_free (ce_s, heap, rhsc);
 	}
       else
@@ -3842,7 +3896,7 @@
 	      struct constraint_expr *rhsp;
 	      tree arg = gimple_call_arg (t, j);
 
-	      get_constraint_for (arg, &rhsc);
+	      get_constraint_for_rhs (arg, &rhsc);
 	      if (TREE_CODE (decl) != FUNCTION_DECL)
 		{
 		  lhs.type = DEREF;
@@ -3913,7 +3967,7 @@
 		    && !(POINTER_TYPE_P (gimple_expr_type (t))
 			 && !POINTER_TYPE_P (TREE_TYPE (rhsop))))
 		   || gimple_assign_single_p (t))
-	    get_constraint_for (rhsop, &rhsc);
+	    get_constraint_for_rhs (rhsop, &rhsc);
 	  else
 	    {
 	      temp.type = ADDRESSOF;
Index: gcc/tree-switch-conversion.c
===================================================================
--- gcc/tree-switch-conversion.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/tree-switch-conversion.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -96,6 +96,7 @@
 #include "diagnostic.h"
 #include "tree-dump.h"
 #include "timevar.h"
+#include "langhooks.h"
 
 /* The main structure of the pass.  */
 struct switch_conv_info
@@ -693,9 +694,11 @@
 
   /* Make sure we do not generate arithmetics in a subrange.  */
   if (TREE_TYPE (TREE_TYPE (info.index_expr)))
-    utype = unsigned_type_for (TREE_TYPE (TREE_TYPE (info.index_expr)));
+    utype = lang_hooks.types.type_for_mode
+      (TYPE_MODE (TREE_TYPE (TREE_TYPE (info.index_expr))), 1);
   else
-    utype = unsigned_type_for (TREE_TYPE (info.index_expr));
+    utype = lang_hooks.types.type_for_mode
+      (TYPE_MODE (TREE_TYPE (info.index_expr)), 1);
 
   /* (end of) block 0 */
   gsi = gsi_for_stmt (info.arr_ref_first);
Index: gcc/tree-cfg.c
===================================================================
--- gcc/tree-cfg.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/tree-cfg.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -3299,6 +3299,7 @@
       {
 	if (TREE_CODE (rhs1_type) != VECTOR_TYPE
 	    || !(INTEGRAL_TYPE_P (TREE_TYPE (rhs1_type))
+		 || POINTER_TYPE_P (TREE_TYPE (rhs1_type))
 		 || FIXED_POINT_TYPE_P (TREE_TYPE (rhs1_type))
 		 || SCALAR_FLOAT_TYPE_P (TREE_TYPE (rhs1_type)))
 	    || (!INTEGRAL_TYPE_P (rhs2_type)
Index: gcc/c-parser.c
===================================================================
--- gcc/c-parser.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/c-parser.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -7847,6 +7847,42 @@
       rhs = integer_one_node;
       break;
 
+    case COMPOUND_EXPR:
+      if (TREE_CODE (TREE_OPERAND (lhs, 0)) == SAVE_EXPR
+	  && TREE_CODE (TREE_OPERAND (lhs, 1)) == COMPOUND_EXPR
+	  && TREE_CODE (TREE_OPERAND (TREE_OPERAND (lhs, 1), 0)) == MODIFY_EXPR
+	  && TREE_OPERAND (TREE_OPERAND (lhs, 1), 1) == TREE_OPERAND (lhs, 0)
+	  && TREE_CODE (TREE_TYPE (TREE_OPERAND (TREE_OPERAND
+					      (TREE_OPERAND (lhs, 1), 0), 0)))
+	     == BOOLEAN_TYPE)
+	/* Undo effects of boolean_increment for post {in,de}crement.  */
+	lhs = TREE_OPERAND (TREE_OPERAND (lhs, 1), 0);
+      /* FALLTHRU */
+    case MODIFY_EXPR:
+      if (TREE_CODE (lhs) == MODIFY_EXPR
+	  && TREE_CODE (TREE_TYPE (TREE_OPERAND (lhs, 0))) == BOOLEAN_TYPE)
+	{
+	  /* Undo effects of boolean_increment.  */
+	  if (integer_onep (TREE_OPERAND (lhs, 1)))
+	    {
+	      /* This is pre or post increment.  */
+	      rhs = TREE_OPERAND (lhs, 1);
+	      lhs = TREE_OPERAND (lhs, 0);
+	      code = NOP_EXPR;
+	      break;
+	    }
+	  if (TREE_CODE (TREE_OPERAND (lhs, 1)) == TRUTH_NOT_EXPR
+	      && TREE_OPERAND (lhs, 0)
+		 == TREE_OPERAND (TREE_OPERAND (lhs, 1), 0))
+	    {
+	      /* This is pre or post decrement.  */
+	      rhs = TREE_OPERAND (lhs, 1);
+	      lhs = TREE_OPERAND (lhs, 0);
+	      code = NOP_EXPR;
+	      break;
+	    }
+	}
+      /* FALLTHRU */
     default:
       switch (c_parser_peek_token (parser)->type)
 	{
Index: gcc/config/alpha/alpha.c
===================================================================
--- gcc/config/alpha/alpha.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/config/alpha/alpha.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -5945,6 +5945,10 @@
 		    integer_type_node);
   DECL_FIELD_CONTEXT (ofs) = record;
   TREE_CHAIN (ofs) = space;
+  /* ??? This is a hack, __offset is marked volatile to prevent
+     DCE that confuses stdarg optimization and results in
+     gcc.c-torture/execute/stdarg-1.c failure.  See PR 41089.  */
+  TREE_THIS_VOLATILE (ofs) = 1;
 
   base = build_decl (BUILTINS_LOCATION,
 		     FIELD_DECL, get_identifier ("__base"),
Index: gcc/config/s390/s390.c
===================================================================
--- gcc/config/s390/s390.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/config/s390/s390.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -2061,7 +2061,8 @@
 
 /* Return true if ADDR is of kind symbol_ref or symbol_ref + const_int
    and return these parts in SYMREF and ADDEND.  You can pass NULL in
-   SYMREF and/or ADDEND if you are not interested in these values.  */
+   SYMREF and/or ADDEND if you are not interested in these values.
+   Literal pool references are *not* considered symbol references.  */
 
 static bool
 s390_symref_operand_p (rtx addr, rtx *symref, HOST_WIDE_INT *addend)
@@ -2074,6 +2075,7 @@
   if (GET_CODE (addr) == PLUS)
     {
       if (GET_CODE (XEXP (addr, 0)) == SYMBOL_REF
+	  && !CONSTANT_POOL_ADDRESS_P (XEXP (addr, 0))
 	  && CONST_INT_P (XEXP (addr, 1)))
 	{
 	  tmpaddend = INTVAL (XEXP (addr, 1));
@@ -2083,7 +2085,7 @@
 	return false;
     }
   else
-    if (GET_CODE (addr) != SYMBOL_REF)
+    if (GET_CODE (addr) != SYMBOL_REF || CONSTANT_POOL_ADDRESS_P (addr))
 	return false;
 
   if (symref)
@@ -2109,12 +2111,14 @@
   /* This check makes sure that no symbolic address (except literal
      pool references) are accepted by the R or T constraints.  */
   if (s390_symref_operand_p (op, NULL, NULL))
+    return 0;
+
+  /* Ensure literal pool references are only accepted if LIT_POOL_OK.  */
+  if (!lit_pool_ok)
     {
-      if (!lit_pool_ok)
-	return 0;
       if (!s390_decompose_address (op, &addr))
 	return 0;
-      if (!addr.literal_pool)
+      if (addr.literal_pool)
 	return 0;
       decomposed = true;
     }
@@ -2780,6 +2784,12 @@
       && larl_operand (op, VOIDmode))
     return true;
 
+  /* Accept floating-point zero operands that fit into a single GPR.  */
+  if (GET_CODE (op) == CONST_DOUBLE
+      && s390_float_const_zero_p (op)
+      && GET_MODE_SIZE (GET_MODE (op)) <= UNITS_PER_WORD)
+    return true;
+
   /* Accept double-word operands that can be split.  */
   if (GET_CODE (op) == CONST_INT
       && trunc_int_for_mode (INTVAL (op), word_mode) != INTVAL (op))
@@ -2803,13 +2813,16 @@
 {
   switch (GET_CODE (op))
     {
-      /* Constants we cannot reload must be forced into the
-	 literal pool.  */
-
+      /* Constants we cannot reload into general registers
+	 must be forced into the literal pool.  */
       case CONST_DOUBLE:
       case CONST_INT:
-	if (legitimate_reload_constant_p (op))
-	  return rclass;
+	if (reg_class_subset_p (GENERAL_REGS, rclass)
+	    && legitimate_reload_constant_p (op))
+	  return GENERAL_REGS;
+	else if (reg_class_subset_p (ADDR_REGS, rclass)
+		 && legitimate_reload_constant_p (op))
+	  return ADDR_REGS;
 	else
 	  return NO_REGS;
 
Index: gcc/config/s390/s390.md
===================================================================
--- gcc/config/s390/s390.md	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/config/s390/s390.md	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -2037,9 +2037,9 @@
 
 (define_insn "*mov<mode>_64dfp"
   [(set (match_operand:DD_DF 0 "nonimmediate_operand"
-			       "=f,f,d,f,f,R,T,d, d,RT")
+			       "=f,f,d,f,f,R,T,d,d, d,RT")
         (match_operand:DD_DF 1 "general_operand"
-			       " f,d,f,R,T,f,f,d,RT, d"))]
+			       " f,d,f,R,T,f,f,G,d,RT, d"))]
   "TARGET_64BIT && TARGET_DFP"
   "@
    ldr\t%0,%1
@@ -2049,18 +2049,19 @@
    ldy\t%0,%1
    std\t%1,%0
    stdy\t%1,%0
+   lghi\t%0,0
    lgr\t%0,%1
    lg\t%0,%1
    stg\t%1,%0"
-  [(set_attr "op_type" "RR,RRE,RRE,RX,RXY,RX,RXY,RRE,RXY,RXY")
+  [(set_attr "op_type" "RR,RRE,RRE,RX,RXY,RX,RXY,RI,RRE,RXY,RXY")
    (set_attr "type" "floaddf,floaddf,floaddf,floaddf,floaddf,
-                     fstoredf,fstoredf,lr,load,store")
-   (set_attr "z10prop" "*,*,*,*,*,*,*,z10_fr_E1,z10_fwd_A3,z10_rec")
+                     fstoredf,fstoredf,*,lr,load,store")
+   (set_attr "z10prop" "*,*,*,*,*,*,*,z10_fwd_A1,z10_fr_E1,z10_fwd_A3,z10_rec")
 ])
 
 (define_insn "*mov<mode>_64"
-  [(set (match_operand:DD_DF 0 "nonimmediate_operand" "=f,f,f,R,T,d, d,RT")
-        (match_operand:DD_DF 1 "general_operand"       "f,R,T,f,f,d,RT, d"))]
+  [(set (match_operand:DD_DF 0 "nonimmediate_operand" "=f,f,f,R,T,d,d, d,RT")
+        (match_operand:DD_DF 1 "general_operand"       "f,R,T,f,f,G,d,RT, d"))]
   "TARGET_64BIT"
   "@
    ldr\t%0,%1
@@ -2068,13 +2069,14 @@
    ldy\t%0,%1
    std\t%1,%0
    stdy\t%1,%0
+   lghi\t%0,0
    lgr\t%0,%1
    lg\t%0,%1
    stg\t%1,%0"
-  [(set_attr "op_type" "RR,RX,RXY,RX,RXY,RRE,RXY,RXY")
+  [(set_attr "op_type" "RR,RX,RXY,RX,RXY,RI,RRE,RXY,RXY")
    (set_attr "type" "fload<mode>,fload<mode>,fload<mode>,
-                     fstore<mode>,fstore<mode>,lr,load,store")
-   (set_attr "z10prop" "*,*,*,*,*,z10_fr_E1,z10_fwd_A3,z10_rec")])
+                     fstore<mode>,fstore<mode>,*,lr,load,store")
+   (set_attr "z10prop" "*,*,*,*,*,z10_fwd_A1,z10_fr_E1,z10_fwd_A3,z10_rec")])
 
 (define_insn "*mov<mode>_31"
   [(set (match_operand:DD_DF 0 "nonimmediate_operand"
@@ -2145,9 +2147,9 @@
 
 (define_insn "mov<mode>"
   [(set (match_operand:SD_SF 0 "nonimmediate_operand"
-			       "=f,f,f,R,T,d,d,d,R,T")
+			       "=f,f,f,R,T,d,d,d,d,R,T")
         (match_operand:SD_SF 1 "general_operand"
-			       " f,R,T,f,f,d,R,T,d,d"))]
+			       " f,R,T,f,f,G,d,R,T,d,d"))]
   ""
   "@
    ler\t%0,%1
@@ -2155,15 +2157,16 @@
    ley\t%0,%1
    ste\t%1,%0
    stey\t%1,%0
+   lhi\t%0,0
    lr\t%0,%1
    l\t%0,%1
    ly\t%0,%1
    st\t%1,%0
    sty\t%1,%0"
-  [(set_attr "op_type" "RR,RX,RXY,RX,RXY,RR,RX,RXY,RX,RXY")
+  [(set_attr "op_type" "RR,RX,RXY,RX,RXY,RI,RR,RX,RXY,RX,RXY")
    (set_attr "type" "fload<mode>,fload<mode>,fload<mode>,
-                     fstore<mode>,fstore<mode>,lr,load,load,store,store")
-   (set_attr "z10prop" "*,*,*,*,*,z10_fr_E1,z10_fwd_A3,z10_fwd_A3,z10_rec,z10_rec")])
+                     fstore<mode>,fstore<mode>,*,lr,load,load,store,store")
+   (set_attr "z10prop" "*,*,*,*,*,z10_fwd_A1,z10_fr_E1,z10_fwd_A3,z10_fwd_A3,z10_rec,z10_rec")])
 
 ;
 ; movcc instruction pattern
Index: gcc/config/s390/t-linux64
===================================================================
--- gcc/config/s390/t-linux64	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/config/s390/t-linux64	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1,3 +1,10 @@
+# On Debian, Ubuntu and other derivative distributions, the 32bit libraries
+# are found in /lib32 and /usr/lib32, /lib64 and /usr/lib64 are symlinks to
+# /lib and /usr/lib, while other distributions install libraries into /lib64
+# and /usr/lib64.  The LSB does not enforce the use of /lib64 and /usr/lib64,
+# it doesn't tell anything about the 32bit libraries on those systems.  Set
+# MULTILIB_OSDIRNAMES according to what is found on the target.
+
 MULTILIB_OPTIONS = m64/m31
 MULTILIB_DIRNAMES = 64 32
-MULTILIB_OSDIRNAMES = ../lib64 ../lib
+MULTILIB_OSDIRNAMES = ../lib64 $(if $(wildcard $(shell echo $(SYSTEM_HEADER_DIR))/../../usr/lib32),../lib32,../lib)
Index: gcc/config/spu/spu.c
===================================================================
--- gcc/config/spu/spu.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/config/spu/spu.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -2334,7 +2334,7 @@
     return;
 
   /* If we have a Basic block note, emit it after the basic block note.  */
-  if (NOTE_KIND (before) == NOTE_INSN_BASIC_BLOCK)
+  if (NOTE_INSN_BASIC_BLOCK_P (before))
     before = NEXT_INSN (before);
 
   branch_label = gen_label_rtx ();
Index: gcc/config/sparc/linux.h
===================================================================
--- gcc/config/sparc/linux.h	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/config/sparc/linux.h	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -107,7 +107,8 @@
 %{Ym,*} \
 %{Wa,*:%*} \
 -s \
-%{fpic|fPIC|fpie|fPIE|findirect-dispatch:-K PIC} \
+%{fpic|fPIC|fpie|fPIE:-K PIC} \
+%{!.c:%{findirect-dispatch:-K PIC}} \
 %(asm_cpu) %(asm_relax)"
 
 #undef ASM_OUTPUT_ALIGNED_LOCAL
Index: gcc/config/sparc/t-linux64
===================================================================
--- gcc/config/sparc/t-linux64	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/config/sparc/t-linux64	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -17,9 +17,16 @@
 # along with GCC; see the file COPYING3.  If not see
 # <http://www.gnu.org/licenses/>.
 
+# On Debian, Ubuntu and other derivative distributions, the 32bit libraries
+# are found in /lib32 and /usr/lib32, /lib64 and /usr/lib64 are symlinks to
+# /lib and /usr/lib, while other distributions install libraries into /lib64
+# and /usr/lib64.  The LSB does not enforce the use of /lib64 and /usr/lib64,
+# it doesn't tell anything about the 32bit libraries on those systems.  Set
+# MULTILIB_OSDIRNAMES according to what is found on the target.
+
 MULTILIB_OPTIONS = m64/m32
 MULTILIB_DIRNAMES = 64 32
-MULTILIB_OSDIRNAMES = ../lib64 ../lib
+MULTILIB_OSDIRNAMES = ../lib64 $(if $(wildcard $(shell echo $(SYSTEM_HEADER_DIR))/../../usr/lib32),../lib32,../lib)
 
 LIBGCC = stmp-multilib
 INSTALL_LIBGCC = install-multilib
Index: gcc/config/sparc/sparc.c
===================================================================
--- gcc/config/sparc/sparc.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/config/sparc/sparc.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -5558,14 +5558,13 @@
 function_arg_advance (struct sparc_args *cum, enum machine_mode mode,
 		      tree type, int named)
 {
-  int slotno, regno, padding;
+  int regno, padding;
 
   /* We pass 0 for incoming_p here, it doesn't matter.  */
-  slotno = function_arg_slotno (cum, mode, type, named, 0, &regno, &padding);
+  function_arg_slotno (cum, mode, type, named, 0, &regno, &padding);
 
-  /* If register required leading padding, add it.  */
-  if (slotno != -1)
-    cum->words += padding;
+  /* If argument requires leading padding, add it.  */
+  cum->words += padding;
 
   if (TARGET_ARCH32)
     {
Index: gcc/config/sparc/linux64.h
===================================================================
--- gcc/config/sparc/linux64.h	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/config/sparc/linux64.h	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -236,7 +236,8 @@
 %{Ym,*} \
 %{Wa,*:%*} \
 -s \
-%{fpic|fPIC|fpie|fPIE|findirect-dispatch:-K PIC} \
+%{fpic|fPIC|fpie|fPIE:-K PIC} \
+%{!.c:%{findirect-dispatch:-K PIC}} \
 %{mlittle-endian:-EL} \
 %(asm_cpu) %(asm_arch) %(asm_relax)"
 
Index: gcc/config/sparc/constraints.md
===================================================================
--- gcc/config/sparc/constraints.md	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/config/sparc/constraints.md	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -35,10 +35,10 @@
 
 ;; In the non-V9 case, coerce V9 'e' class to 'f', so we can use 'e' in the
 ;; MD file for V8 and V9.
-(define_register_constraint "e" "TARGET_V9 ? EXTRA_FP_REGS : FP_REGS"
+(define_register_constraint "e" "(TARGET_FPU ? (TARGET_V9 ? EXTRA_FP_REGS : FP_REGS) : NO_REGS)"
  "Any floating-point register")
 
-(define_register_constraint "f" "FP_REGS"
+(define_register_constraint "f" "(TARGET_FPU ? FP_REGS : NO_REGS)"
  "Lower floating-point register")
  
 (define_register_constraint "h" "(TARGET_V9 && TARGET_V8PLUS ? I64_REGS : NO_REGS)"
Index: gcc/config/rx/predicates.md
===================================================================
--- gcc/config/rx/predicates.md	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/config/rx/predicates.md	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -45,6 +45,13 @@
   }
 )
 
+(define_predicate "rx_constshift_operand"
+  (match_code "const_int")
+  {
+    return IN_RANGE (INTVAL (op), 0, 31);
+  }
+)
+
 ;; Check that the operand is suitable as the source operand
 ;; for a logic or arithmeitc instruction.  Registers, integers
 ;; and a restricted subset of memory addresses are allowed.
Index: gcc/config/rx/rx.md
===================================================================
--- gcc/config/rx/rx.md	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/config/rx/rx.md	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -24,6 +24,9 @@
 (define_code_iterator most_cond [eq ne gt ge lt le gtu geu ltu leu
 				 unordered ordered ])
 
+;; Likewise, but only the ones that use Z or S.
+(define_code_iterator zs_cond [eq ne gtu geu ltu leu ])
+
 ;; This code iterator is used for sign- and zero- extensions.
 (define_mode_iterator small_int_modes [(HI "") (QI "")])
 
@@ -157,9 +160,9 @@
 
 (define_expand "cbranchsi4"
   [(set (pc)
-	(if_then_else (match_operator:SI 0 "comparison_operator"
-					 [(match_operand:SI 1 "register_operand")
-					  (match_operand:SI 2 "rx_source_operand")])
+	(if_then_else (match_operator 0 "comparison_operator"
+				      [(match_operand:SI 1 "register_operand")
+				       (match_operand:SI 2 "rx_source_operand")])
 		      (label_ref (match_operand 3 ""))
 		      (pc)))
    ]
@@ -169,7 +172,7 @@
 
 (define_insn_and_split "*cbranchsi4_<code>"
   [(set (pc)
-	(if_then_else (most_cond:SI (match_operand:SI  0 "register_operand"  "r")
+	(if_then_else (most_cond (match_operand:SI  0 "register_operand"  "r")
 				    (match_operand:SI  1 "rx_source_operand" "riQ"))
 		      (label_ref (match_operand        2 "" ""))
 		      (pc)))
@@ -189,11 +192,106 @@
   "
 )
 
+;; -----------------------------------------------------------------------------
+;; These two are the canonical TST/branch insns.  However, GCC
+;; generates a wide variety of tst-like patterns, we catch those
+;; below.
+(define_insn_and_split "*tstbranchsi4_<code>"
+  [(set (pc)
+	(if_then_else (zs_cond (and:SI (match_operand:SI  0 "register_operand"  "r")
+				       (match_operand:SI  1 "rx_source_operand" "riQ"))
+			       (const_int 0))
+		      (label_ref (match_operand 2 "" ""))
+		      (pc)))
+   ]
+  ""
+  "#"
+  "reload_completed"
+  [(const_int 0)]
+  "
+  emit_insn (gen_tstsi (operands[0], operands[1]));
+  
+  emit_jump_insn (gen_conditional_branch (operands[2],
+  		 gen_rtx_fmt_ee (<zs_cond:CODE>, CCmode,
+				 gen_rtx_REG (CCmode, CC_REG), const0_rtx)));
+  "
+)
+
+;; Inverse of above
+(define_insn_and_split "*tstbranchsi4_<code>"
+  [(set (pc)
+	(if_then_else (zs_cond (and:SI (match_operand:SI  0 "register_operand"  "r")
+				       (match_operand:SI  1 "rx_source_operand" "riQ"))
+			       (const_int 0))
+		      (pc)
+		      (label_ref (match_operand 2 "" ""))))
+   ]
+  ""
+  "#"
+  "reload_completed"
+  [(const_int 0)]
+  "
+  emit_insn (gen_tstsi (operands[0], operands[1]));
+  
+  emit_jump_insn (gen_conditional_branch (operands[2],
+  		 gen_rtx_fmt_ee (reverse_condition (<zs_cond:CODE>), CCmode,
+				 gen_rtx_REG (CCmode, CC_REG), const0_rtx)));
+  "
+)
+
+;; Various other ways that GCC codes "var & const"
+
+(define_insn_and_split "*tstbranchsi4m_eq"
+  [(set (pc)
+	(if_then_else (eq (zero_extract:SI (match_operand:SI  0 "register_operand"  "r")
+					   (match_operand  1 "rx_constshift_operand" "i")
+					   (match_operand  2 "rx_constshift_operand" "i"))
+			  (const_int 0))
+		      (label_ref (match_operand        3 "" ""))
+		      (pc)))
+   ]
+  ""
+  "#"
+  ""
+  [(set (pc)
+	(if_then_else (eq (and:SI (match_dup  0)
+				  (match_dup 4))
+			  (const_int 0))
+		      (label_ref (match_dup 3))
+		      (pc)))
+   ]
+  "operands[4] = GEN_INT (((1 << INTVAL (operands[1]))-1) << INTVAL (operands[2]));"
+)
+
+(define_insn_and_split "*tstbranchsi4m_ne"
+  [(set (pc)
+	(if_then_else (ne (zero_extract:SI (match_operand:SI  0 "register_operand"  "r")
+					   (match_operand  1 "rx_constshift_operand" "i")
+					   (match_operand  2 "rx_constshift_operand" "i"))
+			  (const_int 0))
+		      (label_ref (match_operand        3 "" ""))
+		      (pc)))
+   ]
+  ""
+  "#"
+  ""
+  [(set (pc)
+	(if_then_else (ne (and:SI (match_dup  0)
+				  (match_dup 4))
+			  (const_int 0))
+		      (label_ref (match_dup 3))
+		      (pc)))
+   ]
+  "operands[4] = GEN_INT (((1 << INTVAL (operands[1]))-1) << INTVAL (operands[2]));"
+)
+
+;; -----------------------------------------------------------------------------
+
 (define_expand "cbranchsf4"
   [(set (pc)
-	(if_then_else (match_operator:SF 0 "comparison_operator"
-					 [(match_operand:SF 1 "register_operand")
-					  (match_operand:SF 2 "rx_source_operand")])
+	(if_then_else (match_operator 0 "comparison_operator"
+				      [(match_operand:SF 1 "register_operand")
+				       (match_operand:SF 2 "rx_source_operand")])
 		      (label_ref (match_operand 3 ""))
 		      (pc)))
    ]
@@ -203,8 +301,8 @@
 
 (define_insn_and_split "*cbranchsf4_<code>"
   [(set (pc)
-	(if_then_else (most_cond:SF (match_operand:SF  0 "register_operand"  "r")
-				    (match_operand:SF  1 "rx_source_operand" "rFiQ"))
+	(if_then_else (most_cond (match_operand:SF  0 "register_operand"  "r")
+				 (match_operand:SF  1 "rx_source_operand" "rFiQ"))
 		      (label_ref (match_operand        2 "" ""))
 		      (pc)))
    ]
Index: gcc/config/i386/cygming.h
===================================================================
--- gcc/config/i386/cygming.h	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/config/i386/cygming.h	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -76,11 +76,25 @@
    won't allow it.  */
 #define ASM_OUTPUT_DWARF_OFFSET(FILE, SIZE, LABEL, SECTION)	\
   do {								\
-    if (SIZE != 4 && (!TARGET_64BIT || SIZE != 8))		\
-      abort ();							\
-								\
-    fputs ("\t.secrel32\t", FILE);				\
-    assemble_name (FILE, LABEL);				\
+    switch (SIZE)						\
+      {								\
+      case 4:							\
+	fputs ("\t.secrel32\t", FILE);				\
+	assemble_name (FILE, LABEL);				\
+	break;							\
+      case 8:							\
+	/* This is a hack.  There is no 64-bit section relative	\
+	   relocation.  However, the COFF format also does not	\
+	   support 64-bit file offsets; 64-bit applications are	\
+	   limited to 32-bits of code+data in any one module.	\
+	   Fake the 64-bit offset by zero-extending it.  */	\
+	fputs ("\t.secrel32\t", FILE);				\
+	assemble_name (FILE, LABEL);				\
+	fputs ("\n\t.long\t0", FILE);				\
+	break;							\
+      default:							\
+	gcc_unreachable ();					\
+      }								\
   } while (0)
 #endif
 
Index: gcc/config/i386/i386.md
===================================================================
--- gcc/config/i386/i386.md	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/config/i386/i386.md	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -7575,7 +7575,7 @@
 	    (match_operand:SWI 2 "<general_operand>" "<r><i>m"))
 	  (match_dup 1)))
    (clobber (match_scratch:SWI 0 "=<r>"))]
-  "ix86_binary_operator_ok (PLUS, <MODE>mode, operands)"
+  "!(MEM_P (operands[1]) && MEM_P (operands[2]))"
   "add{<imodesuffix>}\t{%2, %0|%0, %2}"
   [(set_attr "type" "alu")
    (set_attr "mode" "<MODE>")])
@@ -8999,7 +8999,7 @@
 		 (const_int 0)))
    (clobber (match_scratch:SWI 0 "=<r>"))]
   "ix86_match_ccmode (insn, CCNOmode)
-   && ix86_binary_operator_ok (<CODE>, <MODE>mode, operands)"
+   && !(MEM_P (operands[1]) && MEM_P (operands[2]))"
   "<logicprefix>{<imodesuffix>}\t{%2, %0|%0, %2}"
   [(set_attr "type" "alu")
    (set_attr "mode" "<MODE>")])
Index: gcc/config/i386/sse.md
===================================================================
--- gcc/config/i386/sse.md	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/config/i386/sse.md	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -9535,7 +9535,7 @@
   [(set (match_operand:V8HI 0 "register_operand" "=x")
 	(sign_extend:V8HI
 	  (vec_select:V8QI
-	    (match_operand:V16QI 1 "register_operand" "x")
+	    (match_operand:V16QI 1 "nonimmediate_operand" "xm")
 	    (parallel [(const_int 0)
 		       (const_int 1)
 		       (const_int 2)
@@ -9551,32 +9551,11 @@
    (set_attr "prefix" "maybe_vex")
    (set_attr "mode" "TI")])
 
-(define_insn "*sse4_1_extendv8qiv8hi2"
-  [(set (match_operand:V8HI 0 "register_operand" "=x")
-	(sign_extend:V8HI
-	  (vec_select:V8QI
-	    (vec_duplicate:V16QI
-	      (match_operand:V8QI 1 "nonimmediate_operand" "xm"))
-	    (parallel [(const_int 0)
-		       (const_int 1)
-		       (const_int 2)
-		       (const_int 3)
-		       (const_int 4)
-		       (const_int 5)
-		       (const_int 6)
-		       (const_int 7)]))))]
-  "TARGET_SSE4_1"
-  "%vpmovsxbw\t{%1, %0|%0, %1}"
-  [(set_attr "type" "ssemov")
-   (set_attr "prefix_extra" "1")
-   (set_attr "prefix" "maybe_vex")
-   (set_attr "mode" "TI")])
-
 (define_insn "sse4_1_extendv4qiv4si2"
   [(set (match_operand:V4SI 0 "register_operand" "=x")
 	(sign_extend:V4SI
 	  (vec_select:V4QI
-	    (match_operand:V16QI 1 "register_operand" "x")
+	    (match_operand:V16QI 1 "nonimmediate_operand" "xm")
 	    (parallel [(const_int 0)
 		       (const_int 1)
 		       (const_int 2)
@@ -9588,28 +9567,11 @@
    (set_attr "prefix" "maybe_vex")
    (set_attr "mode" "TI")])
 
-(define_insn "*sse4_1_extendv4qiv4si2"
-  [(set (match_operand:V4SI 0 "register_operand" "=x")
-	(sign_extend:V4SI
-	  (vec_select:V4QI
-	    (vec_duplicate:V16QI
-	      (match_operand:V4QI 1 "nonimmediate_operand" "xm"))
-	    (parallel [(const_int 0)
-		       (const_int 1)
-		       (const_int 2)
-		       (const_int 3)]))))]
-  "TARGET_SSE4_1"
-  "%vpmovsxbd\t{%1, %0|%0, %1}"
-  [(set_attr "type" "ssemov")
-   (set_attr "prefix_extra" "1")
-   (set_attr "prefix" "maybe_vex")
-   (set_attr "mode" "TI")])
-
 (define_insn "sse4_1_extendv2qiv2di2"
   [(set (match_operand:V2DI 0 "register_operand" "=x")
 	(sign_extend:V2DI
 	  (vec_select:V2QI
-	    (match_operand:V16QI 1 "register_operand" "x")
+	    (match_operand:V16QI 1 "nonimmediate_operand" "xm")
 	    (parallel [(const_int 0)
 		       (const_int 1)]))))]
   "TARGET_SSE4_1"
@@ -9619,26 +9581,11 @@
    (set_attr "prefix" "maybe_vex")
    (set_attr "mode" "TI")])
 
-(define_insn "*sse4_1_extendv2qiv2di2"
-  [(set (match_operand:V2DI 0 "register_operand" "=x")
-	(sign_extend:V2DI
-	  (vec_select:V2QI
-	    (vec_duplicate:V16QI
-	      (match_operand:V2QI 1 "nonimmediate_operand" "xm"))
-	    (parallel [(const_int 0)
-		       (const_int 1)]))))]
-  "TARGET_SSE4_1"
-  "%vpmovsxbq\t{%1, %0|%0, %1}"
-  [(set_attr "type" "ssemov")
-   (set_attr "prefix_extra" "1")
-   (set_attr "prefix" "maybe_vex")
-   (set_attr "mode" "TI")])
-
 (define_insn "sse4_1_extendv4hiv4si2"
   [(set (match_operand:V4SI 0 "register_operand" "=x")
 	(sign_extend:V4SI
 	  (vec_select:V4HI
-	    (match_operand:V8HI 1 "register_operand" "x")
+	    (match_operand:V8HI 1 "nonimmediate_operand" "xm")
 	    (parallel [(const_int 0)
 		       (const_int 1)
 		       (const_int 2)
@@ -9650,28 +9597,11 @@
    (set_attr "prefix" "maybe_vex")
    (set_attr "mode" "TI")])
 
-(define_insn "*sse4_1_extendv4hiv4si2"
-  [(set (match_operand:V4SI 0 "register_operand" "=x")
-	(sign_extend:V4SI
-	  (vec_select:V4HI
-	    (vec_duplicate:V8HI
-	      (match_operand:V2HI 1 "nonimmediate_operand" "xm"))
-	    (parallel [(const_int 0)
-		       (const_int 1)
-		       (const_int 2)
-		       (const_int 3)]))))]
-  "TARGET_SSE4_1"
-  "%vpmovsxwd\t{%1, %0|%0, %1}"
-  [(set_attr "type" "ssemov")
-   (set_attr "prefix_extra" "1")
-   (set_attr "prefix" "maybe_vex")
-   (set_attr "mode" "TI")])
-
 (define_insn "sse4_1_extendv2hiv2di2"
   [(set (match_operand:V2DI 0 "register_operand" "=x")
 	(sign_extend:V2DI
 	  (vec_select:V2HI
-	    (match_operand:V8HI 1 "register_operand" "x")
+	    (match_operand:V8HI 1 "nonimmediate_operand" "xm")
 	    (parallel [(const_int 0)
 		       (const_int 1)]))))]
   "TARGET_SSE4_1"
@@ -9681,26 +9611,11 @@
    (set_attr "prefix" "maybe_vex")
    (set_attr "mode" "TI")])
 
-(define_insn "*sse4_1_extendv2hiv2di2"
-  [(set (match_operand:V2DI 0 "register_operand" "=x")
-	(sign_extend:V2DI
-	  (vec_select:V2HI
-	    (vec_duplicate:V8HI
-	      (match_operand:V8HI 1 "nonimmediate_operand" "xm"))
-	    (parallel [(const_int 0)
-		       (const_int 1)]))))]
-  "TARGET_SSE4_1"
-  "%vpmovsxwq\t{%1, %0|%0, %1}"
-  [(set_attr "type" "ssemov")
-   (set_attr "prefix_extra" "1")
-   (set_attr "prefix" "maybe_vex")
-   (set_attr "mode" "TI")])
-
 (define_insn "sse4_1_extendv2siv2di2"
   [(set (match_operand:V2DI 0 "register_operand" "=x")
 	(sign_extend:V2DI
 	  (vec_select:V2SI
-	    (match_operand:V4SI 1 "register_operand" "x")
+	    (match_operand:V4SI 1 "nonimmediate_operand" "xm")
 	    (parallel [(const_int 0)
 		       (const_int 1)]))))]
   "TARGET_SSE4_1"
@@ -9710,26 +9625,11 @@
    (set_attr "prefix" "maybe_vex")
    (set_attr "mode" "TI")])
 
-(define_insn "*sse4_1_extendv2siv2di2"
-  [(set (match_operand:V2DI 0 "register_operand" "=x")
-	(sign_extend:V2DI
-	  (vec_select:V2SI
-	    (vec_duplicate:V4SI
-	      (match_operand:V2SI 1 "nonimmediate_operand" "xm"))
-	    (parallel [(const_int 0)
-		       (const_int 1)]))))]
-  "TARGET_SSE4_1"
-  "%vpmovsxdq\t{%1, %0|%0, %1}"
-  [(set_attr "type" "ssemov")
-   (set_attr "prefix_extra" "1")
-   (set_attr "prefix" "maybe_vex")
-   (set_attr "mode" "TI")])
-
 (define_insn "sse4_1_zero_extendv8qiv8hi2"
   [(set (match_operand:V8HI 0 "register_operand" "=x")
 	(zero_extend:V8HI
 	  (vec_select:V8QI
-	    (match_operand:V16QI 1 "register_operand" "x")
+	    (match_operand:V16QI 1 "nonimmediate_operand" "xm")
 	    (parallel [(const_int 0)
 		       (const_int 1)
 		       (const_int 2)
@@ -9745,32 +9645,11 @@
    (set_attr "prefix" "maybe_vex")
    (set_attr "mode" "TI")])
 
-(define_insn "*sse4_1_zero_extendv8qiv8hi2"
-  [(set (match_operand:V8HI 0 "register_operand" "=x")
-	(zero_extend:V8HI
-	  (vec_select:V8QI
-	    (vec_duplicate:V16QI
-	      (match_operand:V8QI 1 "nonimmediate_operand" "xm"))
-	    (parallel [(const_int 0)
-		       (const_int 1)
-		       (const_int 2)
-		       (const_int 3)
-		       (const_int 4)
-		       (const_int 5)
-		       (const_int 6)
-		       (const_int 7)]))))]
-  "TARGET_SSE4_1"
-  "%vpmovzxbw\t{%1, %0|%0, %1}"
-  [(set_attr "type" "ssemov")
-   (set_attr "prefix_extra" "1")
-   (set_attr "prefix" "maybe_vex")
-   (set_attr "mode" "TI")])
-
 (define_insn "sse4_1_zero_extendv4qiv4si2"
   [(set (match_operand:V4SI 0 "register_operand" "=x")
 	(zero_extend:V4SI
 	  (vec_select:V4QI
-	    (match_operand:V16QI 1 "register_operand" "x")
+	    (match_operand:V16QI 1 "nonimmediate_operand" "xm")
 	    (parallel [(const_int 0)
 		       (const_int 1)
 		       (const_int 2)
@@ -9782,28 +9661,11 @@
    (set_attr "prefix" "maybe_vex")
    (set_attr "mode" "TI")])
 
-(define_insn "*sse4_1_zero_extendv4qiv4si2"
-  [(set (match_operand:V4SI 0 "register_operand" "=x")
-	(zero_extend:V4SI
-	  (vec_select:V4QI
-	    (vec_duplicate:V16QI
-	      (match_operand:V4QI 1 "nonimmediate_operand" "xm"))
-	    (parallel [(const_int 0)
-		       (const_int 1)
-		       (const_int 2)
-		       (const_int 3)]))))]
-  "TARGET_SSE4_1"
-  "%vpmovzxbd\t{%1, %0|%0, %1}"
-  [(set_attr "type" "ssemov")
-   (set_attr "prefix_extra" "1")
-   (set_attr "prefix" "maybe_vex")
-   (set_attr "mode" "TI")])
-
 (define_insn "sse4_1_zero_extendv2qiv2di2"
   [(set (match_operand:V2DI 0 "register_operand" "=x")
 	(zero_extend:V2DI
 	  (vec_select:V2QI
-	    (match_operand:V16QI 1 "register_operand" "x")
+	    (match_operand:V16QI 1 "nonimmediate_operand" "xm")
 	    (parallel [(const_int 0)
 		       (const_int 1)]))))]
   "TARGET_SSE4_1"
@@ -9813,26 +9675,11 @@
    (set_attr "prefix" "maybe_vex")
    (set_attr "mode" "TI")])
 
-(define_insn "*sse4_1_zero_extendv2qiv2di2"
-  [(set (match_operand:V2DI 0 "register_operand" "=x")
-	(zero_extend:V2DI
-	  (vec_select:V2QI
-	    (vec_duplicate:V16QI
-	      (match_operand:V2QI 1 "nonimmediate_operand" "xm"))
-	    (parallel [(const_int 0)
-		       (const_int 1)]))))]
-  "TARGET_SSE4_1"
-  "%vpmovzxbq\t{%1, %0|%0, %1}"
-  [(set_attr "type" "ssemov")
-   (set_attr "prefix_extra" "1")
-   (set_attr "prefix" "maybe_vex")
-   (set_attr "mode" "TI")])
-
 (define_insn "sse4_1_zero_extendv4hiv4si2"
   [(set (match_operand:V4SI 0 "register_operand" "=x")
 	(zero_extend:V4SI
 	  (vec_select:V4HI
-	    (match_operand:V8HI 1 "register_operand" "x")
+	    (match_operand:V8HI 1 "nonimmediate_operand" "xm")
 	    (parallel [(const_int 0)
 		       (const_int 1)
 		       (const_int 2)
@@ -9844,28 +9691,11 @@
    (set_attr "prefix" "maybe_vex")
    (set_attr "mode" "TI")])
 
-(define_insn "*sse4_1_zero_extendv4hiv4si2"
-  [(set (match_operand:V4SI 0 "register_operand" "=x")
-	(zero_extend:V4SI
-	  (vec_select:V4HI
-	    (vec_duplicate:V8HI
-	      (match_operand:V4HI 1 "nonimmediate_operand" "xm"))
-	    (parallel [(const_int 0)
-		       (const_int 1)
-		       (const_int 2)
-		       (const_int 3)]))))]
-  "TARGET_SSE4_1"
-  "%vpmovzxwd\t{%1, %0|%0, %1}"
-  [(set_attr "type" "ssemov")
-   (set_attr "prefix_extra" "1")
-   (set_attr "prefix" "maybe_vex")
-   (set_attr "mode" "TI")])
-
 (define_insn "sse4_1_zero_extendv2hiv2di2"
   [(set (match_operand:V2DI 0 "register_operand" "=x")
 	(zero_extend:V2DI
 	  (vec_select:V2HI
-	    (match_operand:V8HI 1 "register_operand" "x")
+	    (match_operand:V8HI 1 "nonimmediate_operand" "xm")
 	    (parallel [(const_int 0)
 		       (const_int 1)]))))]
   "TARGET_SSE4_1"
@@ -9875,26 +9705,11 @@
    (set_attr "prefix" "maybe_vex")
    (set_attr "mode" "TI")])
 
-(define_insn "*sse4_1_zero_extendv2hiv2di2"
-  [(set (match_operand:V2DI 0 "register_operand" "=x")
-	(zero_extend:V2DI
-	  (vec_select:V2HI
-	    (vec_duplicate:V8HI
-	      (match_operand:V2HI 1 "nonimmediate_operand" "xm"))
-	    (parallel [(const_int 0)
-		       (const_int 1)]))))]
-  "TARGET_SSE4_1"
-  "%vpmovzxwq\t{%1, %0|%0, %1}"
-  [(set_attr "type" "ssemov")
-   (set_attr "prefix_extra" "1")
-   (set_attr "prefix" "maybe_vex")
-   (set_attr "mode" "TI")])
-
 (define_insn "sse4_1_zero_extendv2siv2di2"
   [(set (match_operand:V2DI 0 "register_operand" "=x")
 	(zero_extend:V2DI
 	  (vec_select:V2SI
-	    (match_operand:V4SI 1 "register_operand" "x")
+	    (match_operand:V4SI 1 "nonimmediate_operand" "xm")
 	    (parallel [(const_int 0)
 		       (const_int 1)]))))]
   "TARGET_SSE4_1"
@@ -9904,21 +9719,6 @@
    (set_attr "prefix" "maybe_vex")
    (set_attr "mode" "TI")])
 
-(define_insn "*sse4_1_zero_extendv2siv2di2"
-  [(set (match_operand:V2DI 0 "register_operand" "=x")
-	(zero_extend:V2DI
-	  (vec_select:V2SI
-	    (vec_duplicate:V4SI
-	      (match_operand:V2SI 1 "nonimmediate_operand" "xm"))
-	    (parallel [(const_int 0)
-		       (const_int 1)]))))]
-  "TARGET_SSE4_1"
-  "%vpmovzxdq\t{%1, %0|%0, %1}"
-  [(set_attr "type" "ssemov")
-   (set_attr "prefix_extra" "1")
-   (set_attr "prefix" "maybe_vex")
-   (set_attr "mode" "TI")])
-
 ;; ptestps/ptestpd are very similar to comiss and ucomiss when
 ;; setting FLAGS_REG. But it is not a really compare instruction.
 (define_insn "avx_vtestp<avxmodesuffixf2c><avxmodesuffix>"
Index: gcc/config/i386/darwin.h
===================================================================
--- gcc/config/i386/darwin.h	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/config/i386/darwin.h	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -73,7 +73,9 @@
    Failure to ensure this will lead to a crash in the system libraries
    or dynamic loader.  */
 #undef STACK_BOUNDARY
-#define STACK_BOUNDARY 128
+#define STACK_BOUNDARY \
+ ((profile_flag || (TARGET_64BIT && ix86_abi == MS_ABI)) \
+  ? 128 : BITS_PER_WORD)
 
 #undef MAIN_STACK_BOUNDARY
 #define MAIN_STACK_BOUNDARY 128
@@ -85,7 +87,7 @@
    it's below the minimum.  */
 #undef PREFERRED_STACK_BOUNDARY
 #define PREFERRED_STACK_BOUNDARY			\
-  MAX (STACK_BOUNDARY, ix86_preferred_stack_boundary)
+  MAX (128, ix86_preferred_stack_boundary)
 
 /* We want -fPIC by default, unless we're using -static to compile for
    the kernel or some such.  */
Index: gcc/config/i386/mingw32.h
===================================================================
--- gcc/config/i386/mingw32.h	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/config/i386/mingw32.h	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -231,7 +231,7 @@
 
 /* For 64-bit Windows we can't use DW2 unwind info. Also for multilib
    builds we can't use it, too.  */
-#if !TARGET_64BIT && !defined (TARGET_BI_ARCH)
+#if !TARGET_64BIT_DEFAULT && !defined (TARGET_BI_ARCH)
 #define MD_UNWIND_SUPPORT "config/i386/w32-unwind.h"
 #endif
 
Index: gcc/config/i386/i386.c
===================================================================
--- gcc/config/i386/i386.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/config/i386/i386.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -7160,6 +7160,8 @@
 	      tree dest_addr, dest;
 	      int cur_size = GET_MODE_SIZE (mode);
 
+	      gcc_assert (prev_size <= INTVAL (XEXP (slot, 1)));
+	      prev_size = INTVAL (XEXP (slot, 1));
 	      if (prev_size + cur_size > size)
 		{
 		  cur_size = size - prev_size;
@@ -7192,7 +7194,7 @@
 
 	      dest_addr = fold_convert (daddr_type, addr);
 	      dest_addr = fold_build2 (POINTER_PLUS_EXPR, daddr_type, dest_addr,
-				       size_int (INTVAL (XEXP (slot, 1))));
+				       size_int (prev_size));
 	      if (cur_size == GET_MODE_SIZE (mode))
 		{
 		  src = build_va_arg_indirect_ref (src_addr);
@@ -7777,13 +7779,7 @@
       /* Ensure all queued register saves are flushed before the
 	 call.  */
       if (dwarf2out_do_frame ())
-	{
-	  rtx insn;
-	  start_sequence ();
-	  insn = emit_barrier ();
-	  end_sequence ();
-	  dwarf2out_frame_debug (insn, false);
-	}
+	dwarf2out_flush_queued_reg_saves ();
 #endif
       xops[2] = gen_rtx_SYMBOL_REF (Pmode, ggc_strdup (name));
       xops[2] = gen_rtx_MEM (QImode, xops[2]);
@@ -8654,19 +8650,27 @@
   else
     {
       rtx eax = gen_rtx_REG (Pmode, AX_REG);
-      bool eax_live;
+      rtx r10 = NULL;
+      bool eax_live = false;
+      bool r10_live = false;
       rtx t;
 
-      if (cfun->machine->call_abi == MS_ABI)
-	eax_live = false;
-      else
-	eax_live = ix86_eax_live_at_start_p ();
+      if (TARGET_64BIT)
+        r10_live = (DECL_STATIC_CHAIN (current_function_decl) != 0);
+      if (!TARGET_64BIT_MS_ABI)
+        eax_live = ix86_eax_live_at_start_p ();
 
       if (eax_live)
 	{
 	  emit_insn (gen_push (eax));
 	  allocate -= UNITS_PER_WORD;
 	}
+      if (r10_live)
+       {
+         r10 = gen_rtx_REG (Pmode, R10_REG);
+         emit_insn (gen_push (r10));
+         allocate -= UNITS_PER_WORD;
+       }
 
       emit_move_insn (eax, GEN_INT (allocate));
 
@@ -8685,16 +8689,39 @@
 	  RTX_FRAME_RELATED_P (insn) = 1;
 	}
 
-      if (eax_live)
+      if (eax_live && r10_live)
 	{
 	  if (frame_pointer_needed)
+	    {
+	      t = plus_constant (hard_frame_pointer_rtx,
+				 allocate
+				 - frame.to_allocate
+				 - frame.nregs * UNITS_PER_WORD);
+	      emit_move_insn (r10, gen_rtx_MEM (Pmode, t));
+	      t = plus_constant (hard_frame_pointer_rtx,
+				 allocate + UNITS_PER_WORD
+				 - frame.to_allocate
+				 - frame.nregs * UNITS_PER_WORD);
+	      emit_move_insn (eax, gen_rtx_MEM (Pmode, t));
+	    }
+          else
+	    {
+	      t = plus_constant (stack_pointer_rtx, allocate);
+	      emit_move_insn (r10, gen_rtx_MEM (Pmode, t));
+	      t = plus_constant (stack_pointer_rtx, allocate + UNITS_PER_WORD);
+	      emit_move_insn (eax, gen_rtx_MEM (Pmode, t));
+	    }
+	}
+      else if (eax_live || r10_live)
+	{
+	  if (frame_pointer_needed)
 	    t = plus_constant (hard_frame_pointer_rtx,
 			       allocate
 			       - frame.to_allocate
 			       - frame.nregs * UNITS_PER_WORD);
 	  else
 	    t = plus_constant (stack_pointer_rtx, allocate);
-	  emit_move_insn (eax, gen_rtx_MEM (Pmode, t));
+	  emit_move_insn ((eax_live ? eax : r10), gen_rtx_MEM (Pmode, t));
 	}
     }
 
@@ -9491,8 +9518,7 @@
      to test cfun for being non-NULL. */
   if (TARGET_K6 && cfun && optimize_function_for_speed_p (cfun)
       && base_reg && !index_reg && !disp
-      && REG_P (base_reg)
-      && REGNO_REG_CLASS (REGNO (base_reg)) == SIREG)
+      && REG_P (base_reg) && REGNO (base_reg) == SI_REG)
     disp = const0_rtx;
 
   /* Special case: encode reg+reg instead of reg*2.  */
Index: gcc/config/ia64/ia64.md
===================================================================
--- gcc/config/ia64/ia64.md	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/config/ia64/ia64.md	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -3988,7 +3988,7 @@
 		       [(match_operand:BI 2 "register_operand" "")
 	                (match_operand:BI 3 "const_int_operand" "")]))]
   ""
-  "ia64_expand_compare (&operands[0], &operands[1], &operands[2]);")
+  "ia64_expand_compare (&operands[1], &operands[2], &operands[3]);")
 
 (define_expand "cstoresi4"
   [(set (match_operand:DI 0 "gr_register_operand" "") 
Index: gcc/config/rs6000/x-aix
===================================================================
--- gcc/config/rs6000/x-aix	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/config/rs6000/x-aix	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -2,5 +2,5 @@
 build/genautomata : override LDFLAGS += -Wl,-bmaxdata:0x20000000
 
 # jc1 requires more than 256MB of data
-jc1 : override LDFLAGS += -Wl,-bmaxdata:0x20000000
+$(COMPILERS) : override LDFLAGS += -Wl,-bmaxdata:0x40000000
 
Index: gcc/config/arm/linux-atomic.c
===================================================================
--- gcc/config/arm/linux-atomic.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/config/arm/linux-atomic.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -56,7 +56,7 @@
 									\
     do {								\
       tmp = *ptr;							\
-      failure = __kernel_cmpxchg (tmp, PFX_OP tmp INF_OP val, ptr);	\
+      failure = __kernel_cmpxchg (tmp, PFX_OP (tmp INF_OP val), ptr);	\
     } while (failure != 0);						\
 									\
     return tmp;								\
@@ -88,8 +88,8 @@
 									\
     do {								\
       oldval = *wordptr;						\
-      newval = ((PFX_OP ((oldval & mask) >> shift)			\
-                 INF_OP (unsigned int) val) << shift) & mask;		\
+      newval = ((PFX_OP (((oldval & mask) >> shift)			\
+			 INF_OP (unsigned int) val)) << shift) & mask;	\
       newval |= oldval & ~mask;						\
       failure = __kernel_cmpxchg (oldval, newval, wordptr);		\
     } while (failure != 0);						\
@@ -97,19 +97,19 @@
     return (RETURN & mask) >> shift;					\
   }
 
-SUBWORD_SYNC_OP (add,   , +, short, 2, oldval)
-SUBWORD_SYNC_OP (sub,   , -, short, 2, oldval)
-SUBWORD_SYNC_OP (or,    , |, short, 2, oldval)
-SUBWORD_SYNC_OP (and,   , &, short, 2, oldval)
-SUBWORD_SYNC_OP (xor,   , ^, short, 2, oldval)
-SUBWORD_SYNC_OP (nand, ~, &, short, 2, oldval)
+SUBWORD_SYNC_OP (add,   , +, unsigned short, 2, oldval)
+SUBWORD_SYNC_OP (sub,   , -, unsigned short, 2, oldval)
+SUBWORD_SYNC_OP (or,    , |, unsigned short, 2, oldval)
+SUBWORD_SYNC_OP (and,   , &, unsigned short, 2, oldval)
+SUBWORD_SYNC_OP (xor,   , ^, unsigned short, 2, oldval)
+SUBWORD_SYNC_OP (nand, ~, &, unsigned short, 2, oldval)
 
-SUBWORD_SYNC_OP (add,   , +, char, 1, oldval)
-SUBWORD_SYNC_OP (sub,   , -, char, 1, oldval)
-SUBWORD_SYNC_OP (or,    , |, char, 1, oldval)
-SUBWORD_SYNC_OP (and,   , &, char, 1, oldval)
-SUBWORD_SYNC_OP (xor,   , ^, char, 1, oldval)
-SUBWORD_SYNC_OP (nand, ~, &, char, 1, oldval)
+SUBWORD_SYNC_OP (add,   , +, unsigned char, 1, oldval)
+SUBWORD_SYNC_OP (sub,   , -, unsigned char, 1, oldval)
+SUBWORD_SYNC_OP (or,    , |, unsigned char, 1, oldval)
+SUBWORD_SYNC_OP (and,   , &, unsigned char, 1, oldval)
+SUBWORD_SYNC_OP (xor,   , ^, unsigned char, 1, oldval)
+SUBWORD_SYNC_OP (nand, ~, &, unsigned char, 1, oldval)
 
 #define OP_AND_FETCH_WORD(OP, PFX_OP, INF_OP)				\
   int HIDDEN								\
@@ -119,10 +119,10 @@
 									\
     do {								\
       tmp = *ptr;							\
-      failure = __kernel_cmpxchg (tmp, PFX_OP tmp INF_OP val, ptr);	\
+      failure = __kernel_cmpxchg (tmp, PFX_OP (tmp INF_OP val), ptr);	\
     } while (failure != 0);						\
 									\
-    return PFX_OP tmp INF_OP val;					\
+    return PFX_OP (tmp INF_OP val);					\
   }
 
 OP_AND_FETCH_WORD (add,   , +)
@@ -132,19 +132,19 @@
 OP_AND_FETCH_WORD (xor,   , ^)
 OP_AND_FETCH_WORD (nand, ~, &)
 
-SUBWORD_SYNC_OP (add,   , +, short, 2, newval)
-SUBWORD_SYNC_OP (sub,   , -, short, 2, newval)
-SUBWORD_SYNC_OP (or,    , |, short, 2, newval)
-SUBWORD_SYNC_OP (and,   , &, short, 2, newval)
-SUBWORD_SYNC_OP (xor,   , ^, short, 2, newval)
-SUBWORD_SYNC_OP (nand, ~, &, short, 2, newval)
+SUBWORD_SYNC_OP (add,   , +, unsigned short, 2, newval)
+SUBWORD_SYNC_OP (sub,   , -, unsigned short, 2, newval)
+SUBWORD_SYNC_OP (or,    , |, unsigned short, 2, newval)
+SUBWORD_SYNC_OP (and,   , &, unsigned short, 2, newval)
+SUBWORD_SYNC_OP (xor,   , ^, unsigned short, 2, newval)
+SUBWORD_SYNC_OP (nand, ~, &, unsigned short, 2, newval)
 
-SUBWORD_SYNC_OP (add,   , +, char, 1, newval)
-SUBWORD_SYNC_OP (sub,   , -, char, 1, newval)
-SUBWORD_SYNC_OP (or,    , |, char, 1, newval)
-SUBWORD_SYNC_OP (and,   , &, char, 1, newval)
-SUBWORD_SYNC_OP (xor,   , ^, char, 1, newval)
-SUBWORD_SYNC_OP (nand, ~, &, char, 1, newval)
+SUBWORD_SYNC_OP (add,   , +, unsigned char, 1, newval)
+SUBWORD_SYNC_OP (sub,   , -, unsigned char, 1, newval)
+SUBWORD_SYNC_OP (or,    , |, unsigned char, 1, newval)
+SUBWORD_SYNC_OP (and,   , &, unsigned char, 1, newval)
+SUBWORD_SYNC_OP (xor,   , ^, unsigned char, 1, newval)
+SUBWORD_SYNC_OP (nand, ~, &, unsigned char, 1, newval)
 
 int HIDDEN
 __sync_val_compare_and_swap_4 (int *ptr, int oldval, int newval)
@@ -194,8 +194,8 @@
       }									\
   }
 
-SUBWORD_VAL_CAS (short, 2)
-SUBWORD_VAL_CAS (char,  1)
+SUBWORD_VAL_CAS (unsigned short, 2)
+SUBWORD_VAL_CAS (unsigned char,  1)
 
 typedef unsigned char bool;
 
@@ -216,8 +216,8 @@
     return (oldval == actual_oldval);					\
   }
 
-SUBWORD_BOOL_CAS (short, 2)
-SUBWORD_BOOL_CAS (char,  1)
+SUBWORD_BOOL_CAS (unsigned short, 2)
+SUBWORD_BOOL_CAS (unsigned char,  1)
 
 void HIDDEN
 __sync_synchronize (void)
@@ -259,8 +259,8 @@
     return (oldval & mask) >> shift;					\
   }
 
-SUBWORD_TEST_AND_SET (short, 2)
-SUBWORD_TEST_AND_SET (char,  1)
+SUBWORD_TEST_AND_SET (unsigned short, 2)
+SUBWORD_TEST_AND_SET (unsigned char,  1)
 
 #define SYNC_LOCK_RELEASE(TYPE, WIDTH)					\
   void HIDDEN								\
Index: gcc/config/arm/arm.c
===================================================================
--- gcc/config/arm/arm.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/config/arm/arm.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -13705,7 +13705,8 @@
 		  && !crtl->tail_call_emit)
 		{
 		  unsigned long mask;
-		  mask = (1 << (arm_size_return_regs() / 4)) - 1;
+                  /* Preserve return values, of any size.  */
+		  mask = (1 << ((arm_size_return_regs() + 3) / 4)) - 1;
 		  mask ^= 0xf;
 		  mask &= ~saved_regs_mask;
 		  reg = 0;
Index: gcc/config/arm/arm.md
===================================================================
--- gcc/config/arm/arm.md	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/config/arm/arm.md	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -11191,7 +11191,7 @@
                    (const_int 16)
                    (const_int 16))
         (match_operand:SI 1 "const_int_operand" ""))]
-  "TARGET_32BIT"
+  "arm_arch_thumb2"
   "movt%?\t%0, %c1"
  [(set_attr "predicable" "yes")
    (set_attr "length" "4")]
Index: gcc/config/pa/pa.c
===================================================================
--- gcc/config/pa/pa.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/config/pa/pa.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -5701,7 +5701,7 @@
 pa_secondary_reload (bool in_p, rtx x, enum reg_class rclass,
 		     enum machine_mode mode, secondary_reload_info *sri)
 {
-  int is_symbolic, regno;
+  int regno;
 
   /* Handle the easy stuff first.  */
   if (rclass == R1_REGS)
@@ -5734,6 +5734,23 @@
       return NO_REGS;
     }
 
+  /* Secondary reloads of symbolic operands require %r1 as a scratch
+     register when we're generating PIC code and when the operand isn't
+     readonly.  */
+  if (symbolic_expression_p (x))
+    {
+      if (GET_CODE (x) == HIGH)
+	x = XEXP (x, 0);
+
+      if (flag_pic || !read_only_operand (x, VOIDmode))
+	{
+	  gcc_assert (mode == SImode || mode == DImode);
+	  sri->icode = (mode == SImode ? CODE_FOR_reload_insi_r1
+			: CODE_FOR_reload_indi_r1);
+	  return NO_REGS;
+	}
+    }
+
   /* Profiling showed the PA port spends about 1.3% of its compilation
      time in true_regnum from calls inside pa_secondary_reload_class.  */
   if (regno >= FIRST_PSEUDO_REGISTER || GET_CODE (x) == SUBREG)
@@ -5792,50 +5809,8 @@
   if (regno >= 0 && regno < FIRST_PSEUDO_REGISTER
       && (REGNO_REG_CLASS (regno) == SHIFT_REGS
       && FP_REG_CLASS_P (rclass)))
-    {
-      sri->icode = in_p ? reload_in_optab[mode] : reload_out_optab[mode];
-      return NO_REGS;
-    }
+    sri->icode = in_p ? reload_in_optab[mode] : reload_out_optab[mode];
 
-  /* Secondary reloads of symbolic operands require %r1 as a scratch
-     register when we're generating PIC code and when the operand isn't
-     readonly.  */
-  if (GET_CODE (x) == HIGH)
-    x = XEXP (x, 0);
-
-  /* Profiling has showed GCC spends about 2.6% of its compilation
-     time in symbolic_operand from calls inside pa_secondary_reload_class.
-     So, we use an inline copy to avoid useless work.  */
-  switch (GET_CODE (x))
-    {
-      rtx op;
-
-      case SYMBOL_REF:
-        is_symbolic = !SYMBOL_REF_TLS_MODEL (x);
-        break;
-      case LABEL_REF:
-        is_symbolic = 1;
-        break;
-      case CONST:
-	op = XEXP (x, 0);
-	is_symbolic = (GET_CODE (op) == PLUS
-		       && ((GET_CODE (XEXP (op, 0)) == SYMBOL_REF
-			    && !SYMBOL_REF_TLS_MODEL (XEXP (op, 0)))
-			   || GET_CODE (XEXP (op, 0)) == LABEL_REF)
-		       && GET_CODE (XEXP (op, 1)) == CONST_INT);
-        break;
-      default:
-        is_symbolic = 0;
-        break;
-    }
-
-  if (is_symbolic && (flag_pic || !read_only_operand (x, VOIDmode)))
-    {
-      gcc_assert (mode == SImode || mode == DImode);
-      sri->icode = (mode == SImode ? CODE_FOR_reload_insi_r1
-		    : CODE_FOR_reload_indi_r1);
-    }
-
   return NO_REGS;
 }
 
Index: gcc/config/pa/pa.h
===================================================================
--- gcc/config/pa/pa.h	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/config/pa/pa.h	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -325,8 +325,9 @@
 #define BIGGEST_ALIGNMENT (2 * BITS_PER_WORD)
 
 /* Get around hp-ux assembler bug, and make strcpy of constants fast.  */
-#define CONSTANT_ALIGNMENT(CODE, TYPEALIGN) \
-  ((TYPEALIGN) < 32 ? 32 : (TYPEALIGN))
+#define CONSTANT_ALIGNMENT(EXP, ALIGN)		\
+  (TREE_CODE (EXP) == STRING_CST		\
+   && (ALIGN) < BITS_PER_WORD ? BITS_PER_WORD : (ALIGN))
 
 /* Make arrays of chars word-aligned for the same reasons.  */
 #define DATA_ALIGNMENT(TYPE, ALIGN)		\
Index: gcc/config/mips/mips.c
===================================================================
--- gcc/config/mips/mips.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/config/mips/mips.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -14007,23 +14007,35 @@
 }
 
 /* If INSN is a call, return the underlying CALL expr.  Return NULL_RTX
-   otherwise.  */
+   otherwise.  If INSN has two call rtx, then store the second one in
+   SECOND_CALL.  */
 
 static rtx
-mips_call_expr_from_insn (rtx insn)
+mips_call_expr_from_insn (rtx insn, rtx *second_call)
 {
   rtx x;
+  rtx x2;
 
   if (!CALL_P (insn))
     return NULL_RTX;
 
   x = PATTERN (insn);
   if (GET_CODE (x) == PARALLEL)
-    x = XVECEXP (x, 0, 0);
+    {
+      /* Calls returning complex values have two CALL rtx.  Look for the second
+	 one here, and return it via the SECOND_CALL arg.  */
+      x2 = XVECEXP (x, 0, 1);
+      if (GET_CODE (x2) == SET)
+	x2 = XEXP (x2, 1);
+      if (GET_CODE (x2) == CALL)
+	*second_call = x2;
+
+      x = XVECEXP (x, 0, 0);
+    }
   if (GET_CODE (x) == SET)
     x = XEXP (x, 1);
+  gcc_assert (GET_CODE (x) == CALL);
 
-  gcc_assert (GET_CODE (x) == CALL);
   return x;
 }
 
@@ -14155,9 +14167,10 @@
   FOR_EACH_BB (bb)
     FOR_BB_INSNS (bb, insn)
     {
-      rtx call, reg, symbol;
+      rtx call, reg, symbol, second_call;
 
-      call = mips_call_expr_from_insn (insn);
+      second_call = 0;
+      call = mips_call_expr_from_insn (insn, &second_call);
       if (!call)
 	continue;
       gcc_assert (MEM_P (XEXP (call, 0)));
@@ -14167,7 +14180,11 @@
 
       symbol = mips_find_pic_call_symbol (insn, reg);
       if (symbol)
-	mips_annotate_pic_call_expr (call, symbol);
+	{
+	  mips_annotate_pic_call_expr (call, symbol);
+	  if (second_call)
+	    mips_annotate_pic_call_expr (second_call, symbol);
+	}
     }
 }
 
Index: gcc/tree-vect-slp.c
===================================================================
--- gcc/tree-vect-slp.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/tree-vect-slp.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1714,20 +1714,18 @@
 vect_get_mask_element (gimple stmt, int first_mask_element, int m,
                        int mask_nunits, bool only_one_vec, int index,
                        int *mask, int *current_mask_element,
-                       bool *need_next_vector)
+                       bool *need_next_vector, int *number_of_mask_fixes,
+                       bool *mask_fixed, bool *needs_first_vector)
 {
   int i;
-  static int number_of_mask_fixes = 1;
-  static bool mask_fixed = false;
-  static bool needs_first_vector = false;
 
   /* Convert to target specific representation.  */
   *current_mask_element = first_mask_element + m;
   /* Adjust the value in case it's a mask for second and third vectors.  */
-  *current_mask_element -= mask_nunits * (number_of_mask_fixes - 1);
+  *current_mask_element -= mask_nunits * (*number_of_mask_fixes - 1);
 
   if (*current_mask_element < mask_nunits)
-    needs_first_vector = true;
+    *needs_first_vector = true;
 
   /* We have only one input vector to permute but the mask accesses values in
      the next vector as well.  */
@@ -1745,7 +1743,7 @@
   /* The mask requires the next vector.  */
   if (*current_mask_element >= mask_nunits * 2)
     {
-      if (needs_first_vector || mask_fixed)
+      if (*needs_first_vector || *mask_fixed)
         {
           /* We either need the first vector too or have already moved to the
              next vector. In both cases, this permutation needs three
@@ -1763,23 +1761,23 @@
       /* We move to the next vector, dropping the first one and working with
          the second and the third - we need to adjust the values of the mask
          accordingly.  */
-      *current_mask_element -= mask_nunits * number_of_mask_fixes;
+      *current_mask_element -= mask_nunits * *number_of_mask_fixes;
 
       for (i = 0; i < index; i++)
-        mask[i] -= mask_nunits * number_of_mask_fixes;
+        mask[i] -= mask_nunits * *number_of_mask_fixes;
 
-      (number_of_mask_fixes)++;
-      mask_fixed = true;
+      (*number_of_mask_fixes)++;
+      *mask_fixed = true;
     }
 
-  *need_next_vector = mask_fixed;
+  *need_next_vector = *mask_fixed;
 
   /* This was the last element of this mask. Start a new one.  */
   if (index == mask_nunits - 1)
     {
-      number_of_mask_fixes = 1;
-      mask_fixed = false;
-      needs_first_vector = false;
+      *number_of_mask_fixes = 1;
+      *mask_fixed = false;
+      *needs_first_vector = false;
     }
 
   return true;
@@ -1805,6 +1803,9 @@
   int index, unroll_factor, *mask, current_mask_element, ncopies;
   bool only_one_vec = false, need_next_vector = false;
   int first_vec_index, second_vec_index, orig_vec_stmts_num, vect_stmts_counter;
+  int number_of_mask_fixes = 1;
+  bool mask_fixed = false;
+  bool needs_first_vector = false;
 
   if (!targetm.vectorize.builtin_vec_perm)
     {
@@ -1891,7 +1892,9 @@
                 {
                   if (!vect_get_mask_element (stmt, first_mask_element, m,
                                    mask_nunits, only_one_vec, index, mask,
-                                   &current_mask_element, &need_next_vector))
+                                   &current_mask_element, &need_next_vector,
+                                   &number_of_mask_fixes, &mask_fixed,
+                                   &needs_first_vector))
                     return false;
 
                   mask[index++] = current_mask_element;
Index: gcc/cfgrtl.c
===================================================================
--- gcc/cfgrtl.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/cfgrtl.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -422,7 +422,10 @@
   /* The resource.c machinery uses DF but the CFG isn't guaranteed to be
      valid at that point so it would be too late to call df_analyze.  */
   if (optimize > 0 && flag_delayed_branch)
-    df_analyze ();
+    {
+      df_note_add_problem ();
+      df_analyze ();
+    }
 #endif
 
   free_bb_for_insn ();
Index: gcc/convert.c
===================================================================
--- gcc/convert.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/convert.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -799,14 +799,7 @@
 	  /* This is not correct for ABS_EXPR,
 	     since we must test the sign before truncation.  */
 	  {
-	    tree typex;
-
-	    /* Don't do unsigned arithmetic where signed was wanted,
-	       or vice versa.  */
-	    if (TYPE_UNSIGNED (TREE_TYPE (expr)))
-	      typex = unsigned_type_for (type);
-	    else
-	      typex = signed_type_for (type);
+	    tree typex = unsigned_type_for (type);
 	    return convert (type,
 			    fold_build1 (ex_form, typex,
 					 convert (typex,
Index: gcc/reload1.c
===================================================================
--- gcc/reload1.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ gcc/reload1.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -447,7 +447,6 @@
 static int set_reload_reg (int, int);
 static void choose_reload_regs_init (struct insn_chain *, rtx *);
 static void choose_reload_regs (struct insn_chain *);
-static void merge_assigned_reloads (rtx);
 static void emit_input_reload_insns (struct insn_chain *, struct reload *,
 				     rtx, int);
 static void emit_output_reload_insns (struct insn_chain *, struct reload *,
@@ -4275,12 +4274,6 @@
 		 Record the choices of reload reg in reload_reg_rtx.  */
 	      choose_reload_regs (chain);
 
-	      /* Merge any reloads that we didn't combine for fear of
-		 increasing the number of spill registers needed but now
-		 discover can be safely merged.  */
-	      if (SMALL_REGISTER_CLASSES)
-		merge_assigned_reloads (insn);
-
 	      /* Generate the insns to reload operands into or out of
 		 their reload regs.  */
 	      emit_reload_insns (chain);
@@ -6664,152 +6657,6 @@
   reload_spill_index[r] = -1;
 }
 
-/* If SMALL_REGISTER_CLASSES is nonzero, we may not have merged two
-   reloads of the same item for fear that we might not have enough reload
-   registers. However, normally they will get the same reload register
-   and hence actually need not be loaded twice.
-
-   Here we check for the most common case of this phenomenon: when we have
-   a number of reloads for the same object, each of which were allocated
-   the same reload_reg_rtx, that reload_reg_rtx is not used for any other
-   reload, and is not modified in the insn itself.  If we find such,
-   merge all the reloads and set the resulting reload to RELOAD_OTHER.
-   This will not increase the number of spill registers needed and will
-   prevent redundant code.  */
-
-static void
-merge_assigned_reloads (rtx insn)
-{
-  int i, j;
-
-  /* Scan all the reloads looking for ones that only load values and
-     are not already RELOAD_OTHER and ones whose reload_reg_rtx are
-     assigned and not modified by INSN.  */
-
-  for (i = 0; i < n_reloads; i++)
-    {
-      int conflicting_input = 0;
-      int max_input_address_opnum = -1;
-      int min_conflicting_input_opnum = MAX_RECOG_OPERANDS;
-
-      if (rld[i].in == 0 || rld[i].when_needed == RELOAD_OTHER
-	  || rld[i].out != 0 || rld[i].reg_rtx == 0
-	  || reg_set_p (rld[i].reg_rtx, insn))
-	continue;
-
-      /* Look at all other reloads.  Ensure that the only use of this
-	 reload_reg_rtx is in a reload that just loads the same value
-	 as we do.  Note that any secondary reloads must be of the identical
-	 class since the values, modes, and result registers are the
-	 same, so we need not do anything with any secondary reloads.  */
-
-      for (j = 0; j < n_reloads; j++)
-	{
-	  if (i == j || rld[j].reg_rtx == 0
-	      || ! reg_overlap_mentioned_p (rld[j].reg_rtx,
-					    rld[i].reg_rtx))
-	    continue;
-
-	  if (rld[j].when_needed == RELOAD_FOR_INPUT_ADDRESS
-	      && rld[j].opnum > max_input_address_opnum)
-	    max_input_address_opnum = rld[j].opnum;
-
-	  /* If the reload regs aren't exactly the same (e.g, different modes)
-	     or if the values are different, we can't merge this reload.
-	     But if it is an input reload, we might still merge
-	     RELOAD_FOR_INPUT_ADDRESS and RELOAD_FOR_OTHER_ADDRESS reloads.  */
-
-	  if (! rtx_equal_p (rld[i].reg_rtx, rld[j].reg_rtx)
-	      || rld[j].out != 0 || rld[j].in == 0
-	      || ! rtx_equal_p (rld[i].in, rld[j].in))
-	    {
-	      if (rld[j].when_needed != RELOAD_FOR_INPUT
-		  || ((rld[i].when_needed != RELOAD_FOR_INPUT_ADDRESS
-		       || rld[i].opnum > rld[j].opnum)
-		      && rld[i].when_needed != RELOAD_FOR_OTHER_ADDRESS))
-		break;
-	      conflicting_input = 1;
-	      if (min_conflicting_input_opnum > rld[j].opnum)
-		min_conflicting_input_opnum = rld[j].opnum;
-	    }
-	}
-
-      /* If all is OK, merge the reloads.  Only set this to RELOAD_OTHER if
-	 we, in fact, found any matching reloads.  */
-
-      if (j == n_reloads
-	  && max_input_address_opnum <= min_conflicting_input_opnum)
-	{
-	  gcc_assert (rld[i].when_needed != RELOAD_FOR_OUTPUT);
-
-	  for (j = 0; j < n_reloads; j++)
-	    if (i != j && rld[j].reg_rtx != 0
-		&& rtx_equal_p (rld[i].reg_rtx, rld[j].reg_rtx)
-		&& (! conflicting_input
-		    || rld[j].when_needed == RELOAD_FOR_INPUT_ADDRESS
-		    || rld[j].when_needed == RELOAD_FOR_OTHER_ADDRESS))
-	      {
-		rld[i].when_needed = RELOAD_OTHER;
-		rld[j].in = 0;
-		reload_spill_index[j] = -1;
-		transfer_replacements (i, j);
-	      }
-
-	  /* If this is now RELOAD_OTHER, look for any reloads that
-	     load parts of this operand and set them to
-	     RELOAD_FOR_OTHER_ADDRESS if they were for inputs,
-	     RELOAD_OTHER for outputs.  Note that this test is
-	     equivalent to looking for reloads for this operand
-	     number.
-
-	     We must take special care with RELOAD_FOR_OUTPUT_ADDRESS;
-	     it may share registers with a RELOAD_FOR_INPUT, so we can
-	     not change it to RELOAD_FOR_OTHER_ADDRESS.  We should
-	     never need to, since we do not modify RELOAD_FOR_OUTPUT.
-
-	     It is possible that the RELOAD_FOR_OPERAND_ADDRESS
-	     instruction is assigned the same register as the earlier
-	     RELOAD_FOR_OTHER_ADDRESS instruction.  Merging these two
-	     instructions will cause the RELOAD_FOR_OTHER_ADDRESS
-	     instruction to be deleted later on.  */
-
-	  if (rld[i].when_needed == RELOAD_OTHER)
-	    for (j = 0; j < n_reloads; j++)
-	      if (rld[j].in != 0
-		  && rld[j].when_needed != RELOAD_OTHER
-		  && rld[j].when_needed != RELOAD_FOR_OTHER_ADDRESS
-		  && rld[j].when_needed != RELOAD_FOR_OUTPUT_ADDRESS
-		  && rld[j].when_needed != RELOAD_FOR_OPERAND_ADDRESS
-		  && (! conflicting_input
-		      || rld[j].when_needed == RELOAD_FOR_INPUT_ADDRESS
-		      || rld[j].when_needed == RELOAD_FOR_INPADDR_ADDRESS)
-		  && reg_overlap_mentioned_for_reload_p (rld[j].in,
-							 rld[i].in))
-		{
-		  int k;
-
-		  rld[j].when_needed
-		    = ((rld[j].when_needed == RELOAD_FOR_INPUT_ADDRESS
-			|| rld[j].when_needed == RELOAD_FOR_INPADDR_ADDRESS)
-		       ? RELOAD_FOR_OTHER_ADDRESS : RELOAD_OTHER);
-
-		  /* Check to see if we accidentally converted two
-		     reloads that use the same reload register with
-		     different inputs to the same type.  If so, the
-		     resulting code won't work.  */
-		  if (rld[j].reg_rtx)
-		    for (k = 0; k < j; k++)
-		      gcc_assert (rld[k].in == 0 || rld[k].reg_rtx == 0
-				  || rld[k].when_needed != rld[j].when_needed
-				  || !rtx_equal_p (rld[k].reg_rtx,
-						   rld[j].reg_rtx)
-				  || rtx_equal_p (rld[k].in,
-						  rld[j].in));
-		}
-	}
-    }
-}
-
 /* These arrays are filled by emit_reload_insns and its subroutines.  */
 static rtx input_reload_insns[MAX_RECOG_OPERANDS];
 static rtx other_input_address_reload_insns = 0;
@@ -8478,6 +8325,8 @@
   int n_inherited = 0;
   rtx i1;
   rtx substed;
+  unsigned regno;
+  int nregs;
 
   /* It is possible that this reload has been only used to set another reload
      we eliminated earlier and thus deleted this instruction too.  */
@@ -8529,6 +8378,12 @@
   if (n_occurrences > n_inherited)
     return;
 
+  regno = REGNO (reg);
+  if (regno >= FIRST_PSEUDO_REGISTER)
+    nregs = 1;
+  else
+    nregs = hard_regno_nregs[regno][GET_MODE (reg)];
+
   /* If the pseudo-reg we are reloading is no longer referenced
      anywhere between the store into it and here,
      and we're within the same basic block, then the value can only
@@ -8540,7 +8395,7 @@
       if (NOTE_INSN_BASIC_BLOCK_P (i1))
 	return;
       if ((NONJUMP_INSN_P (i1) || CALL_P (i1))
-	  && reg_mentioned_p (reg, PATTERN (i1)))
+	  && refers_to_regno_p (regno, regno + nregs, PATTERN (i1), NULL))
 	{
 	  /* If this is USE in front of INSN, we only have to check that
 	     there are no more references than accounted for by inheritance.  */
Index: libstdc++-v3/python/libstdcxx/v6/printers.py
===================================================================
--- libstdc++-v3/python/libstdcxx/v6/printers.py	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ libstdc++-v3/python/libstdcxx/v6/printers.py	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -546,7 +546,9 @@
         reptype = gdb.lookup_type (str (realtype) + '::_Rep').pointer ()
         header = ptr.cast(reptype) - 1
         len = header.dereference ()['_M_length']
-        return self.val['_M_dataplus']['_M_p'].lazy_string (length = len)
+        if hasattr(ptr, "lazy_string"):
+            return ptr.lazy_string (length = len)
+        return ptr.string (length = len)
 
     def display_hint (self):
         return 'string'
Index: libstdc++-v3/configure
===================================================================
--- libstdc++-v3/configure	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ libstdc++-v3/configure	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -25562,7 +25562,7 @@
 	CFLAGS="$chktls_save_CFLAGS"
 	if test "X$thread_CFLAGS" != Xfailed; then
 	  CFLAGS="$thread_CFLAGS $chktls_save_CFLAGS"
-	  if test "$cross_compiling" = yes; then :
+ 	  	  	  	  	  	  if test "$cross_compiling" = yes; then :
   { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
 $as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
 as_fn_error "cannot run test program while cross compiling
@@ -44500,7 +44500,7 @@
 	CFLAGS="$chktls_save_CFLAGS"
 	if test "X$thread_CFLAGS" != Xfailed; then
 	  CFLAGS="$thread_CFLAGS $chktls_save_CFLAGS"
-	  if test "$cross_compiling" = yes; then :
+ 	  	  	  	  	  	  if test "$cross_compiling" = yes; then :
   { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
 $as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
 as_fn_error "cannot run test program while cross compiling
@@ -50585,7 +50585,7 @@
 	CFLAGS="$chktls_save_CFLAGS"
 	if test "X$thread_CFLAGS" != Xfailed; then
 	  CFLAGS="$thread_CFLAGS $chktls_save_CFLAGS"
-	  if test "$cross_compiling" = yes; then :
+ 	  	  	  	  	  	  if test "$cross_compiling" = yes; then :
   { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
 $as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
 as_fn_error "cannot run test program while cross compiling
Index: libstdc++-v3/src/Makefile.in
===================================================================
--- libstdc++-v3/src/Makefile.in	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ libstdc++-v3/src/Makefile.in	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -972,13 +972,16 @@
 @GLIBCXX_BUILD_DEBUG_FALSE@install-data-local:
 
 # Build a set of debug objects here.
+# Take care to fix all possibly-relative paths.
 stamp-debug:
 	if test ! -d ${debugdir}; then \
 	  mkdir -p ${debugdir}; \
 	  (cd ${debugdir}; \
 	  sed -e 's/top_builddir = \.\./top_builddir = ..\/../' \
+	      -e 's/top_build_prefix = \.\./top_build_prefix = ..\/../' \
 	      -e 's/srcdir = \.\./srcdir = ..\/../' \
 	      -e 's/glibcxx_basedir = \.\./glibcxx_basedir = ..\/../' \
+	      -e 's/MKDIR_P = \.\./MKDIR_P = ..\/../' \
 	      -e 's/all-local: build_debug/all-local:/' \
 	      -e 's/install-data-local: install_debug/install-data-local:/' \
 	  < ../Makefile > Makefile) ; \
Index: libstdc++-v3/src/Makefile.am
===================================================================
--- libstdc++-v3/src/Makefile.am	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ libstdc++-v3/src/Makefile.am	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -389,13 +389,16 @@
 debugdir = debug
 
 # Build a set of debug objects here.
+# Take care to fix all possibly-relative paths.
 stamp-debug:
 	if test ! -d ${debugdir}; then \
 	  mkdir -p ${debugdir}; \
 	  (cd ${debugdir}; \
 	  sed -e 's/top_builddir = \.\./top_builddir = ..\/../' \
+	      -e 's/top_build_prefix = \.\./top_build_prefix = ..\/../' \
 	      -e 's/srcdir = \.\./srcdir = ..\/../' \
 	      -e 's/glibcxx_basedir = \.\./glibcxx_basedir = ..\/../' \
+	      -e 's/MKDIR_P = \.\./MKDIR_P = ..\/../' \
 	      -e 's/all-local: build_debug/all-local:/' \
 	      -e 's/install-data-local: install_debug/install-data-local:/' \
 	  < ../Makefile > Makefile) ; \
Index: libstdc++-v3/doc/xml/manual/appendix_contributing.xml
===================================================================
--- libstdc++-v3/doc/xml/manual/appendix_contributing.xml	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ libstdc++-v3/doc/xml/manual/appendix_contributing.xml	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -942,10 +942,18 @@
       <title>Generating the Doxygen Files</title>
       <para>
 	The following Makefile rules run Doxygen to generate HTML
-	docs, XML docs, PDF docs, and the man pages.
+	docs, XML docs, XML docs as a single file, PDF docs, and the man pages.
       </para>
 
       <para>
+	Generated files are output into separate sub directores of
+	<filename class="directory">doc/doxygen/</filename> in the
+	build directory, based on the output format. For instance, the
+	HTML docs will be in <filename
+	class="directory">doc/doxygen/html</filename>.
+      </para>
+
+      <para>
       <screen><userinput>make doc-html-doxygen</userinput></screen>
       </para>
 
@@ -954,6 +962,10 @@
       </para>
 
       <para>
+      <screen><userinput>make doc-xml-single-doxygen</userinput></screen>
+      </para>
+
+      <para>
       <screen><userinput>make doc-pdf-doxygen</userinput></screen>
       </para>
 
@@ -1204,23 +1216,30 @@
       </para>
 
       <para>
-	For PDF output, something that transforms valid XML to PDF is
-	required. Possible solutions include 
-	<ulink url="http://dblatex.sourceforge.net">dblatex</ulink>, 
-	<command>xmlto</command>, or <command>prince</command>. Other
-	options are listed on the DocBook
-	web <ulink url="http://wiki.docbook.org/topic/DocBookPublishingTools">pages</ulink>. Please
+	For PDF output, something that transforms valid Docbook XML to PDF is
+	required. Possible solutions include <ulink
+	url="http://dblatex.sourceforge.net">dblatex</ulink>,
+	<command>xmlto</command>, or <command>prince</command>. Of
+	these, <command>dblatex</command> is the default. Other
+	options are listed on the DocBook web <ulink
+	url="http://wiki.docbook.org/topic/DocBookPublishingTools">pages</ulink>. Please
 	consult the <email>libstdc++@gcc.gnu.org</email> list when
 	preparing printed manuals for current best practice and
 	suggestions.
       </para>
 
       <para>
-	Make sure that the XML documentation and markup is valid for
-	any change. This can be done easily, with the validation rules
-	in the <filename>Makefile</filename>, which is equivalent to doing:
+	For Texinfo output, something that transforms valid Docbook
+	XML to Texinfo is required. The default choice is <ulink
+	url="http://docbook2x.sourceforge.net/">docbook2X</ulink>.
       </para>
 
+      <para>
+	Please make sure that the XML documentation and markup is valid for
+	any change. This can be done easily, with the validation rule
+	detailed below, which is equivalent to doing:
+      </para>
+
 	<screen>
 	  <userinput>
 xmllint --noout --valid <filename>xml/index.xml</filename>
@@ -1239,6 +1258,14 @@
       </para>
 
       <para>
+	Generated files are output into separate sub directores of
+	<filename class="directory">doc/docbook/</filename> in the
+	build directory, based on the output format. For instance, the
+	HTML docs will be in <filename
+	class="directory">doc/docbook/html</filename>.
+      </para>
+
+      <para>
       <screen><userinput>make doc-html-docbook</userinput></screen>
       </para>
 
@@ -1492,20 +1519,90 @@
 
       <para>
 	The following Makefile rules are defaults, and are usually
-	aliased to variable rules.
+	aliased to more detailed rules. They are shortcuts for
+	generating HTML, PDF, Texinfo, XML, or man files and then collecting
+	the generated files into the build directory's doc directory.
       </para>
 
+<variablelist>
+
+<varlistentry><term>
+      <emphasis>make doc-html</emphasis>
+    </term>
+<listitem>
       <para>
-      <screen><userinput>make doc-html</userinput></screen>
+	Generates multi-page HTML documentation in the following directories:
       </para>
+      <para>
+	<filename class="directory">doc/libstdc++-api.html</filename>
+      </para>
+      <para>
+	<filename class="directory">doc/libstdc++-manual.html</filename>
+      </para>
+</listitem>
+</varlistentry>
 
+<varlistentry><term>
+      <emphasis>make doc-man</emphasis>
+    </term>
+<listitem>
       <para>
-      <screen><userinput>make doc-man</userinput></screen>
+	Generates man pages in the following directory:
       </para>
+      <para>
+	<filename class="directory">doc/libstdc++-api.man</filename>
+      </para>
+</listitem>
+</varlistentry>
 
+<varlistentry><term>
+      <emphasis>make doc-pdf</emphasis>
+    </term>
+<listitem>
       <para>
-      <screen><userinput>make doc-pdf</userinput></screen>
+	Generates indexed PDF documentation in the following files:
       </para>
+      <para>
+	<filename>doc/libstdc++-api.pdf</filename>
+      </para>
+      <para>
+	<filename>doc/libstdc++-manual.pdf</filename>
+      </para>
+</listitem>
+</varlistentry>
+
+<varlistentry><term>
+      <emphasis>make doc-texinfo</emphasis>
+    </term>
+<listitem>
+      <para>
+	Generates Texinfo documentation in the following files:
+      </para>
+      <para>
+	<filename>doc/libstdc++-manual.texinfo</filename>
+      </para>
+</listitem>
+</varlistentry>
+
+<varlistentry><term>
+      <emphasis>make doc-xml</emphasis>
+    </term>
+<listitem>
+      <para>
+	Generates single-file XML documentation in the following files:
+      </para>
+      <para>
+	<filename>doc/libstdc++-api.xml</filename>
+      </para>
+      <para>
+	<filename>doc/libstdc++-manual.xml</filename>
+      </para>
+</listitem>
+</varlistentry>
+
+</variablelist>
+
+
   </sect3>
   </sect2>
 </sect1>
Index: libstdc++-v3/doc/Makefile.in
===================================================================
--- libstdc++-v3/doc/Makefile.in	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ libstdc++-v3/doc/Makefile.in	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -267,7 +267,15 @@
 # Assumes doxygen, graphviz (with dot), pdflatex installed
 doxygen_script = ${top_srcdir}/scripts/run_doxygen
 doxygen_outdir = ${glibcxx_builddir}/doc/doxygen
+api_xml = ${doxygen_outdir}/xml/libstdc++-api-single.xml
+
+# Chance of loooooonnggg creation time on this rule.  Iff this fails,
+# look at refman.log and see if TeX's memory is exhausted. Symptoms
+# include asking a wizard to enlarge capacity. If this is the case,
+# find texmf.cnf and add a zero for pool_size, string_vacancies,
+# max_strings, and pool_free values.
 doxygen_pdf = ${doxygen_outdir}/latex/refman.pdf
+api_pdf = ${doxygen_outdir}/pdf/libstdc++-api.pdf
 
 # Docbook configuration.
 # Assumes
@@ -364,29 +372,25 @@
 DTD_FLAGS = --dtdvalid http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd
 XMLLINT_FLAGS = $(LINT_FLAGS) $(DTD_FLAGS)
 
-# PDF 1
-# fop
-FOP = fop
-FOP_FLAGS = -d -r
+# XML, all one page
+# Some info on canonicalization
+# http://www.mail-archive.com/help-texinfo@gnu.org/msg00864.html
+manual_xml = ${docbook_outdir}/xml/libstdc++-manual-single.xml
 
-# PDF 2
-# xmlto
-XML2PDF = xmlto
-XML2PDF_FLAGS = -v pdf --skip-validation -o pdf
+# HTML, all one page
+manual_html = ${docbook_outdir}/html/libstdc++-manual-single.html
 
-# PDF 3
-# xmlroff
-XMLROFF = xmlroff
-XMLROFF_FLAGS = --format=pdf --backend=cairo --warn=1 --debug=1 --continue
+# PDF, via dblatex
+manual_pdf = ${docbook_outdir}/pdf/libstdc++-manual.pdf
+DBLATEX_FLAGS = --dump --verbose --pdf -o ${manual_pdf}
 
-# PDF 4
-# prince
-PRINCE = prince
-PRINCE_FLAGS = --log prince.log -o pdf/spine.pdf
+# Texinfo, via docbook2X
+DB2TEXI_FLAGS = \
+	--encoding=utf-8//TRANSLIT \
+	--string-param output-file="libstdc++-manual" \
+	--string-param directory-category="GNU C++ Library" \
+	--string-param explicit-node-names=true
 
-# PDF 5
-# dblatex
-DBLATEX_FLAGS = --dump --verbose --pdf -o ${docbook_outdir}/pdf/manual.pdf
 
 # Performance doc and graph configuration.
 # Assumes pychart, beautiful soup installed.
@@ -585,20 +589,41 @@
 # Documentation Overview
 #
 # There are two main source materials for libstdc++ documentation.
-# The first is the doxygen markup in libstdc++ sources. And the second
-# is the docbook markup in doc/xml/. A third and more obscure option
-# deals with charting performance tests.
+# The first is the doxygen markup in libstdc++ sources, which is a
+# reference to the API. And the second is the docbook markup in
+# doc/xml/.
+#
+# A third and more obscure option deals with charting
+# performance tests, and should be considered experimental.
 
-# Default, points to current best sub-rule that is the best conversion.
+# Default rules.
+#
+# Point to best sub-rule for the requested documentation target,
+# create, and then copy into toplevel directory with standardized names
+# and layouts.
+
+# HTML
+doc-html: doc-html-docbook doc-html-doxygen
+	cp -R ${docbook_outdir}/html ./libstdc++-manual.html
+	cp -R ${doxygen_outdir}/html ./libstdc++-api.html
+
 # MAN
 doc-man: doc-man-doxygen
+	cp -R ${doxygen_outdir}/man ./libstdc++-api.man
 
 # PDF
-doc-pdf: doc-pdf-docbook
+doc-pdf: doc-pdf-docbook doc-pdf-doxygen
+	cp ${docbook_outdir}/pdf/libstdc++-manual.pdf .
+	cp ${doxygen_outdir}/pdf/libstdc++-api.pdf .
 
-# HTML
-doc-html: doc-html-docbook
+# TEXINFO
+doc-texinfo: doc-texinfo-docbook
 
+# XML
+doc-xml: doc-xml-single-docbook doc-xml-single-doxygen
+	cp ${manual_xml} .
+	cp ${api_xml} .
+
 doc-html-doxygen:
 	-(srcdir=`cd ${top_srcdir}; ${PWD_COMMAND}`; \
 	  builddir=`cd ..; ${PWD_COMMAND}`; \
@@ -616,11 +641,10 @@
 	  builddir=`cd ..; ${PWD_COMMAND}`; \
 	  ${SHELL} ${doxygen_script} \
 	  --host_alias=${host_alias} --mode=xml $${srcdir} $${builddir} NO)
-
-doc-xml-single-doxygen:
+doc-xml-single-doxygen: doc-xml-doxygen
 	@echo "Generating doxygen xml single file..."
 	$(XSLTPROC) ${doxygen_outdir}/xml/combine.xslt \
-	${doxygen_outdir}/xml/index.xml > ${doxygen_outdir}/xml/api-spine.xml;
+	${doxygen_outdir}/xml/index.xml > ${api_xml};
 
 doc-latex-doxygen:
 	-(srcdir=`cd ${top_srcdir}; ${PWD_COMMAND}`; \
@@ -628,12 +652,15 @@
 	  ${SHELL} ${doxygen_script} \
 	  --host_alias=${host_alias} --mode=latex $${srcdir} $${builddir} NO)
 
-# Chance of loooooonnggg creation time on this rule.
-doc-pdf-doxygen: stamp-latex-doxygen
+${doxygen_outdir}/pdf:
+	mkdir -p ${doxygen_outdir}/pdf
+
+doc-pdf-doxygen: stamp-latex-doxygen ${doxygen_outdir}/pdf
 	-(cd ${doxygen_outdir}/latex && $(MAKE) -i pdf;)
 	echo "Generating doxygen pdf file...";
 	if [ -f ${doxygen_pdf} ]; then \
-	  echo "... ${doxygen_pdf}"; \
+	  mv ${doxygen_pdf} ${api_pdf} ; \
+	  echo ":: PDF file is ${api_pdf}"; \
 	else \
 	  echo "... error"; \
 	  exit 12; \
@@ -658,37 +685,36 @@
 	fi
 	$(STAMP) stamp-latex-doxygen
 
+${docbook_outdir}/fo:
+	mkdir -p ${docbook_outdir}/fo
+
 ${docbook_outdir}/html:
 	mkdir -p ${docbook_outdir}/html
 
 ${docbook_outdir}/pdf:
 	mkdir -p ${docbook_outdir}/pdf
 
-${docbook_outdir}/fo:
-	mkdir -p ${docbook_outdir}/fo
+${docbook_outdir}/texinfo:
+	mkdir -p ${docbook_outdir}/texinfo
 
 ${docbook_outdir}/xml:
 	mkdir -p ${docbook_outdir}/xml
 doc-xml-validate-docbook: $(xml_sources)
 	@echo "Generating XML validation log..."
 	$(XMLLINT) $(XMLLINT_FLAGS) ${top_srcdir}/doc/xml/spine.xml
-
 doc-xml-single-docbook: $(xml_sources) ${docbook_outdir}/xml
 	@echo "Generating XML single..."
-	$(XMLLINT) --xinclude --noent --noblanks \
-	-o ${docbook_outdir}/xml/spine-single.xml \
-	${top_srcdir}/doc/xml/spine.xml
+	$(XMLLINT) --xinclude --noent --noblanks --nocdata --nsclean --c14n \
+	${top_srcdir}/doc/xml/manual/spine.xml > ${manual_xml}
 
 # HTML, index plus chapters
 doc-html-docbook: $(xml_sources) ${docbook_outdir}/html
 	@echo "Generating html files..."
 	$(XSLTPROC) $(XSLTPROC_FLAGS) -o ${docbook_outdir}/html/ \
 	$(XSL_HTML_STYLE) ${top_srcdir}/doc/xml/spine.xml
-
-# HTML, all one page
 doc-html-single-docbook: $(xml_sources) ${docbook_outdir}/html
 	@echo "Generating html single file..."
-	$(XSLTPROC) $(XSLTPROC_FLAGS) -o ${docbook_outdir}/html/ \
+	$(XSLTPROC) $(XSLTPROC_FLAGS) -o ${manual_html} \
 	$(XSL_HTML_SINGLE_STYLE) ${top_srcdir}/doc/xml/spine.xml
 
 # FO
@@ -696,29 +722,14 @@
 	@echo "Generating FO files..."
 	$(XSLTPROC) $(XSLTPROC_FLAGS) -o ${docbook_outdir}/fo/spine.fo \
 	$(XSL_FO_STYLE) ${top_srcdir}/doc/xml/spine.xml
-doc-pdf-fop-xml-docbook: $(xml_sources) ${glibcxx_builddir}/doc/pdf
-	@echo "Generating pdf fop files from xml..."
-	$(FOP) $(FOP_FLAGS) -xml ${top_srcdir}/doc/xml/spine.xml \
-	-xsl $(XSL_FO_STYLE) -pdf ${docbook_outdir}/pdf/spine.pdf
+doc-pdf-docbook: doc-pdf-dblatex-docbook
 
-doc-pdf-fop-fo-docbook: $(xml_sources) ${glibcxx_builddir}/doc/pdf doc-fo
-	@echo "Generating pdf fop files from fo..."
-	$(FOP) $(FOP_FLAGS) -fo ${docbook_outdir}/fo/spine.fo \
-	-pdf ${docbook_outdir}/pdf/spine.pdf
-doc-pdf-xmlto-docbook: $(xml_sources) ${docbook_outdir}/pdf
-	@echo "Generating pdf xmlto files..."
-	$(XML2PDF) $(XML2PDF_FLAGS) ${top_srcdir}/doc/xml/spine.xml
-doc-pdf-xmlroff-docbook: $(xml_sources) doc-fo
-	@echo "Generating pdf xmlroff files..."
-	$(XMLROFF) $(XMLROFF_FLAGS) ${docbook_outdir}/fo/spine.fo
-doc-pdf-prince-docbook: $(xml_sources) ${docbook_outdir}/pdf
-	@echo "Generating pdf prince files..."
-	$(PRINCE) $(PRINCE_FLAGS) ${top_srcdir}/xml/spine.xml
 doc-pdf-dblatex-docbook: $(xml_sources) ${docbook_outdir}/pdf
 	@echo "Generating pdf dblatex files..."
 	dblatex $(DBLATEX_FLAGS) ${top_srcdir}/doc/xml/spine.xml
-
-doc-pdf-docbook: doc-pdf-dblatex-docbook
+doc-texinfo-docbook: doc-xml-single-docbook ${docbook_outdir}/texinfo
+	@echo "Generating texinfo files..."
+	db2x_docbook2texi $(DB2TEXI_FLAGS) ${manual_xml}
 doc-html-performance:
 	-@(chmod + ${doc_performance_script}; \
 	${doc_performance_script} ${top_srcdir} \
@@ -730,7 +741,7 @@
 
 # To remove directories.
 clean-local:
-	rm -rf man html pdf fo xml doxygen docbook stamp*
+	rm -rf man html pdf fo xml doxygen docbook stamp* ./libstdc++-* db2t*
 
 # Tell versions [3.59,3.63) of GNU make to not export all variables.
 # Otherwise a system limit (for SysV at least) may be exceeded.
Index: libstdc++-v3/doc/Makefile.am
===================================================================
--- libstdc++-v3/doc/Makefile.am	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ libstdc++-v3/doc/Makefile.am	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -25,26 +25,46 @@
 # Documentation Overview
 #
 # There are two main source materials for libstdc++ documentation.
-# The first is the doxygen markup in libstdc++ sources. And the second
-# is the docbook markup in doc/xml/. A third and more obscure option
-# deals with charting performance tests.
+# The first is the doxygen markup in libstdc++ sources, which is a
+# reference to the API. And the second is the docbook markup in
+# doc/xml/.
+#
+# A third and more obscure option deals with charting
+# performance tests, and should be considered experimental.
 
-# Default, points to current best sub-rule that is the best conversion.
+# Default rules.
+#
+# Point to best sub-rule for the requested documentation target,
+# create, and then copy into toplevel directory with standardized names
+# and layouts.
+
+# HTML
+doc-html: doc-html-docbook doc-html-doxygen
+	cp -R ${docbook_outdir}/html ./libstdc++-manual.html
+	cp -R ${doxygen_outdir}/html ./libstdc++-api.html
+
 # MAN
 doc-man: doc-man-doxygen
+	cp -R ${doxygen_outdir}/man ./libstdc++-api.man
 
 # PDF
-doc-pdf: doc-pdf-docbook
+doc-pdf: doc-pdf-docbook doc-pdf-doxygen
+	cp ${docbook_outdir}/pdf/libstdc++-manual.pdf .
+	cp ${doxygen_outdir}/pdf/libstdc++-api.pdf .
 
-# HTML
-doc-html: doc-html-docbook
+# TEXINFO
+doc-texinfo: doc-texinfo-docbook
 
+# XML
+doc-xml: doc-xml-single-docbook doc-xml-single-doxygen
+	cp ${manual_xml} .
+	cp ${api_xml} .
 
+
 # Doxygen configuration
 # Assumes doxygen, graphviz (with dot), pdflatex installed
 doxygen_script=${top_srcdir}/scripts/run_doxygen
 doxygen_outdir = ${glibcxx_builddir}/doc/doxygen
-doxygen_pdf = ${doxygen_outdir}/latex/refman.pdf
 
 doc-html-doxygen:
 	-(srcdir=`cd ${top_srcdir}; ${PWD_COMMAND}`; \
@@ -64,10 +84,11 @@
 	  ${SHELL} ${doxygen_script} \
 	  --host_alias=${host_alias} --mode=xml $${srcdir} $${builddir} NO)
 
-doc-xml-single-doxygen:
+api_xml = ${doxygen_outdir}/xml/libstdc++-api-single.xml
+doc-xml-single-doxygen: doc-xml-doxygen
 	@echo "Generating doxygen xml single file..."
 	$(XSLTPROC) ${doxygen_outdir}/xml/combine.xslt \
-	${doxygen_outdir}/xml/index.xml > ${doxygen_outdir}/xml/api-spine.xml;
+	${doxygen_outdir}/xml/index.xml > ${api_xml};
 
 doc-latex-doxygen:
 	-(srcdir=`cd ${top_srcdir}; ${PWD_COMMAND}`; \
@@ -75,12 +96,23 @@
 	  ${SHELL} ${doxygen_script} \
 	  --host_alias=${host_alias} --mode=latex $${srcdir} $${builddir} NO)
 
-# Chance of loooooonnggg creation time on this rule.
-doc-pdf-doxygen: stamp-latex-doxygen
+# Chance of loooooonnggg creation time on this rule.  Iff this fails,
+# look at refman.log and see if TeX's memory is exhausted. Symptoms
+# include asking a wizard to enlarge capacity. If this is the case,
+# find texmf.cnf and add a zero for pool_size, string_vacancies,
+# max_strings, and pool_free values.
+doxygen_pdf = ${doxygen_outdir}/latex/refman.pdf
+api_pdf = ${doxygen_outdir}/pdf/libstdc++-api.pdf
+
+${doxygen_outdir}/pdf:
+	mkdir -p ${doxygen_outdir}/pdf
+
+doc-pdf-doxygen: stamp-latex-doxygen ${doxygen_outdir}/pdf
 	-(cd ${doxygen_outdir}/latex && $(MAKE) -i pdf;)
 	echo "Generating doxygen pdf file...";
 	if [ -f ${doxygen_pdf} ]; then \
-	  echo "... ${doxygen_pdf}"; \
+	  mv ${doxygen_pdf} ${api_pdf} ; \
+	  echo ":: PDF file is ${api_pdf}"; \
 	else \
 	  echo "... error"; \
 	  exit 12; \
@@ -193,14 +225,17 @@
 #XSL_HTML_SINGLE_STYLE = $(XSL_STYLE_DIR)/xhtml/onechunk.xsl
 XSL_HTML_SINGLE_STYLE = $(XSL_STYLE_DIR)/xhtml/docbook.xsl
 
+${docbook_outdir}/fo:
+	mkdir -p ${docbook_outdir}/fo
+
 ${docbook_outdir}/html:
 	mkdir -p ${docbook_outdir}/html
 
 ${docbook_outdir}/pdf:
 	mkdir -p ${docbook_outdir}/pdf
 
-${docbook_outdir}/fo:
-	mkdir -p ${docbook_outdir}/fo
+${docbook_outdir}/texinfo:
+	mkdir -p ${docbook_outdir}/texinfo
 
 ${docbook_outdir}/xml:
 	mkdir -p ${docbook_outdir}/xml
@@ -216,11 +251,14 @@
 	@echo "Generating XML validation log..."
 	$(XMLLINT) $(XMLLINT_FLAGS) ${top_srcdir}/doc/xml/spine.xml
 
+# XML, all one page
+# Some info on canonicalization
+# http://www.mail-archive.com/help-texinfo@gnu.org/msg00864.html
+manual_xml = ${docbook_outdir}/xml/libstdc++-manual-single.xml
 doc-xml-single-docbook: $(xml_sources) ${docbook_outdir}/xml
 	@echo "Generating XML single..."
-	$(XMLLINT) --xinclude --noent --noblanks \
-	-o ${docbook_outdir}/xml/spine-single.xml \
-	${top_srcdir}/doc/xml/spine.xml
+	$(XMLLINT) --xinclude --noent --noblanks --nocdata --nsclean --c14n \
+	${top_srcdir}/doc/xml/manual/spine.xml > ${manual_xml}
 
 # HTML, index plus chapters
 doc-html-docbook: $(xml_sources) ${docbook_outdir}/html
@@ -229,9 +267,10 @@
 	$(XSL_HTML_STYLE) ${top_srcdir}/doc/xml/spine.xml
 
 # HTML, all one page
+manual_html = ${docbook_outdir}/html/libstdc++-manual-single.html
 doc-html-single-docbook: $(xml_sources) ${docbook_outdir}/html
 	@echo "Generating html single file..."
-	$(XSLTPROC) $(XSLTPROC_FLAGS) -o ${docbook_outdir}/html/ \
+	$(XSLTPROC) $(XSLTPROC_FLAGS) -o ${manual_html} \
 	$(XSL_HTML_SINGLE_STYLE) ${top_srcdir}/doc/xml/spine.xml
 
 # FO
@@ -240,52 +279,24 @@
 	$(XSLTPROC) $(XSLTPROC_FLAGS) -o ${docbook_outdir}/fo/spine.fo \
 	$(XSL_FO_STYLE) ${top_srcdir}/doc/xml/spine.xml
 
-# PDF 1
-# fop
-FOP = fop
-FOP_FLAGS = -d -r
-doc-pdf-fop-xml-docbook: $(xml_sources) ${glibcxx_builddir}/doc/pdf
-	@echo "Generating pdf fop files from xml..."
-	$(FOP) $(FOP_FLAGS) -xml ${top_srcdir}/doc/xml/spine.xml \
-	-xsl $(XSL_FO_STYLE) -pdf ${docbook_outdir}/pdf/spine.pdf
+# PDF, via dblatex
+manual_pdf = ${docbook_outdir}/pdf/libstdc++-manual.pdf
+DBLATEX_FLAGS = --dump --verbose --pdf -o ${manual_pdf}
+doc-pdf-docbook: doc-pdf-dblatex-docbook
 
-doc-pdf-fop-fo-docbook: $(xml_sources) ${glibcxx_builddir}/doc/pdf doc-fo
-	@echo "Generating pdf fop files from fo..."
-	$(FOP) $(FOP_FLAGS) -fo ${docbook_outdir}/fo/spine.fo \
-	-pdf ${docbook_outdir}/pdf/spine.pdf
-
-# PDF 2
-# xmlto
-XML2PDF = xmlto
-XML2PDF_FLAGS = -v pdf --skip-validation -o pdf
-doc-pdf-xmlto-docbook: $(xml_sources) ${docbook_outdir}/pdf
-	@echo "Generating pdf xmlto files..."
-	$(XML2PDF) $(XML2PDF_FLAGS) ${top_srcdir}/doc/xml/spine.xml
-
-# PDF 3
-# xmlroff
-XMLROFF = xmlroff
-XMLROFF_FLAGS = --format=pdf --backend=cairo --warn=1 --debug=1 --continue
-doc-pdf-xmlroff-docbook: $(xml_sources) doc-fo
-	@echo "Generating pdf xmlroff files..."
-	$(XMLROFF) $(XMLROFF_FLAGS) ${docbook_outdir}/fo/spine.fo
-
-# PDF 4
-# prince
-PRINCE = prince
-PRINCE_FLAGS = --log prince.log -o pdf/spine.pdf
-doc-pdf-prince-docbook: $(xml_sources) ${docbook_outdir}/pdf
-	@echo "Generating pdf prince files..."
-	$(PRINCE) $(PRINCE_FLAGS) ${top_srcdir}/xml/spine.xml
-
-# PDF 5
-# dblatex
-DBLATEX_FLAGS = --dump --verbose --pdf -o ${docbook_outdir}/pdf/manual.pdf
 doc-pdf-dblatex-docbook: $(xml_sources) ${docbook_outdir}/pdf
 	@echo "Generating pdf dblatex files..."
 	dblatex $(DBLATEX_FLAGS) ${top_srcdir}/doc/xml/spine.xml
 
-doc-pdf-docbook: doc-pdf-dblatex-docbook
+# Texinfo, via docbook2X
+DB2TEXI_FLAGS = \
+	--encoding=utf-8//TRANSLIT \
+	--string-param output-file="libstdc++-manual" \
+	--string-param directory-category="GNU C++ Library" \
+	--string-param explicit-node-names=true
+doc-texinfo-docbook: doc-xml-single-docbook ${docbook_outdir}/texinfo
+	@echo "Generating texinfo files..."
+	db2x_docbook2texi $(DB2TEXI_FLAGS) ${manual_xml}
 
 
 # Performance doc and graph configuration.
@@ -307,4 +318,4 @@
 
 # To remove directories.
 clean-local:
-	rm -rf man html pdf fo xml doxygen docbook stamp*
+	rm -rf man html pdf fo xml doxygen docbook stamp* ./libstdc++-* db2t*
Index: libstdc++-v3/doc/doxygen/user.cfg.in
===================================================================
--- libstdc++-v3/doc/doxygen/user.cfg.in	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ libstdc++-v3/doc/doxygen/user.cfg.in	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1,4 +1,4 @@
-# Doxyfile 1.6.1
+# Doxyfile 1.7.1
 
 # This file describes the settings to be used by the documentation system
 # doxygen (www.doxygen.org) for a project
@@ -180,7 +180,7 @@
 # You can put \n's in the value part of an alias to insert newlines.
 
 ALIASES                = "doctodo=@todo\nDoc me!  See doc/doxygen/TODO and http://gcc.gnu.org/ml/libstdc++/2002-02/msg00003.html for more.  " \
-			 "isiosfwd=One of the @link io I/O @endlink typedefs"
+                         "isiosfwd=One of the @link io I/O @endlink typedefs"
 
 # Set the OPTIMIZE_OUTPUT_FOR_C tag to YES if your project consists of C
 # sources only. Doxygen will then generate output that is more tailored for C.
@@ -208,17 +208,15 @@
 
 OPTIMIZE_OUTPUT_VHDL   = NO
 
-# Doxygen selects the parser to use depending on the extension of the
-# files it parses.  With this tag you can assign which parser to use
-# for a given extension.  Doxygen has a built-in mapping, but you can
-# override or extend it using this tag.  The format is ext=language,
-# where ext is a file extension, and language is one of the parsers
-# supported by doxygen: IDL, Java, Javascript, C#, C, C++, D, PHP,
-# Objective-C, Python, Fortran, VHDL, C, C++. For instance to make
-# doxygen treat .inc files as Fortran files (default is PHP), and .f
-# files as C (default is Fortran), use: inc=Fortran f=C. Note that for
-# custom extensions you also need to set FILE_PATTERNS otherwise the
-# files are not read by doxygen.
+# Doxygen selects the parser to use depending on the extension of the files it
+# parses. With this tag you can assign which parser to use for a given extension.
+# Doxygen has a built-in mapping, but you can override or extend it using this
+# tag. The format is ext=language, where ext is a file extension, and language
+# is one of the parsers supported by doxygen: IDL, Java, Javascript, CSharp, C,
+# C++, D, PHP, Objective-C, Python, Fortran, VHDL, C, C++. For instance to make
+# doxygen treat .inc files as Fortran files (default is PHP), and .f files as C
+# (default is Fortran), use: inc=Fortran f=C. Note that for custom extensions
+# you also need to set FILE_PATTERNS otherwise the files are not read by doxygen.
 
 EXTENSION_MAPPING      =
 
@@ -236,63 +234,57 @@
 
 CPP_CLI_SUPPORT        = NO
 
-# Set the SIP_SUPPORT tag to YES if your project consists of sip
-# sources only.  Doxygen will parse them like normal C++ but will
-# assume all classes use public instead of private inheritance when no
-# explicit protection keyword is present.
+# Set the SIP_SUPPORT tag to YES if your project consists of sip sources only.
+# Doxygen will parse them like normal C++ but will assume all classes use public
+# instead of private inheritance when no explicit protection keyword is present.
 
 SIP_SUPPORT            = NO
 
-# For Microsoft's IDL there are propget and propput attributes to
-# indicate getter and setter methods for a property. Setting this
-# option to YES (the default) will make doxygen to replace the get and
-# set methods by a property in the documentation. This will only work
-# if the methods are indeed getting or setting a simple type. If this
-# is not the case, or you want to show the methods anyway, you should
-# set this option to NO.
+# For Microsoft's IDL there are propget and propput attributes to indicate getter
+# and setter methods for a property. Setting this option to YES (the default)
+# will make doxygen to replace the get and set methods by a property in the
+# documentation. This will only work if the methods are indeed getting or
+# setting a simple type. If this is not the case, or you want to show the
+# methods anyway, you should set this option to NO.
 
-IDL_PROPERTY_SUPPORT   = YES
+IDL_PROPERTY_SUPPORT   = NO
 
-# If member grouping is used in the documentation and the
-# DISTRIBUTE_GROUP_DOC tag is set to YES, then doxygen will reuse the
-# documentation of the first member in the group (if any) for the
-# other members of the group. By default all members of a group must
-# be documented explicitly.
+# If member grouping is used in the documentation and the DISTRIBUTE_GROUP_DOC
+# tag is set to YES, then doxygen will reuse the documentation of the first
+# member in the group (if any) for the other members of the group. By default
+# all members of a group must be documented explicitly.
 
 DISTRIBUTE_GROUP_DOC   = YES
 
-# Set the SUBGROUPING tag to YES (the default) to allow class member
-# groups of the same type (for instance a group of public functions)
-# to be put as a subgroup of that type (e.g. under the Public
-# Functions section). Set it to NO to prevent
-# subgrouping. Alternatively, this can be done per class using the
-# \nosubgrouping command.
+# Set the SUBGROUPING tag to YES (the default) to allow class member groups of
+# the same type (for instance a group of public functions) to be put as a
+# subgroup of that type (e.g. under the Public Functions section). Set it to
+# NO to prevent subgrouping. Alternatively, this can be done per class using
+# the \nosubgrouping command.
 
 SUBGROUPING            = YES
 
-# When TYPEDEF_HIDES_STRUCT is enabled, a typedef of a struct, union,
-# or enum is documented as struct, union, or enum with the name of the
-# typedef. So typedef struct TypeS {} TypeT, will appear in the
-# documentation as a struct with name TypeT. When disabled the typedef
-# will appear as a member of a file, namespace, or class. And the
-# struct will be named TypeS. This can typically be useful for C code
-# in case the coding convention dictates that all compound types are
-# typedef'ed and only the typedef is referenced, never the tag name.
+# When TYPEDEF_HIDES_STRUCT is enabled, a typedef of a struct, union, or enum
+# is documented as struct, union, or enum with the name of the typedef. So
+# typedef struct TypeS {} TypeT, will appear in the documentation as a struct
+# with name TypeT. When disabled the typedef will appear as a member of a file,
+# namespace, or class. And the struct will be named TypeS. This can typically
+# be useful for C code in case the coding convention dictates that all compound
+# types are typedef'ed and only the typedef is referenced, never the tag name.
 
 TYPEDEF_HIDES_STRUCT   = NO
 
-# The SYMBOL_CACHE_SIZE determines the size of the internal cache use
-# to determine which symbols to keep in memory and which to flush to
-# disk.  When the cache is full, less often used symbols will be
-# written to disk.  For small to medium size projects (<1000 input
-# files) the default value is probably good enough. For larger
-# projects a too small cache size can cause doxygen to be busy
-# swapping symbols to and from disk most of the time causing a
-# significant performance penality.  If the system has enough physical
-# memory increasing the cache will improve the performance by keeping
-# more symbols in memory. Note that the value works on a logarithmic
-# scale so increasing the size by one will rougly double the memory
-# usage. The cache size is given by this formula:
+# The SYMBOL_CACHE_SIZE determines the size of the internal cache use to
+# determine which symbols to keep in memory and which to flush to disk.
+# When the cache is full, less often used symbols will be written to disk.
+# For small to medium size projects (<1000 input files) the default value is
+# probably good enough. For larger projects a too small cache size can cause
+# doxygen to be busy swapping symbols to and from disk most of the time
+# causing a significant performance penality.
+# If the system has enough physical memory increasing the cache will improve the
+# performance by keeping more symbols in memory. Note that the value works on
+# a logarithmic scale so increasing the size by one will rougly double the
+# memory usage. The cache size is given by this formula:
 # 2^(16+SYMBOL_CACHE_SIZE). The valid range is 0..9, the default is 0,
 # corresponding to a cache size of 2^16 = 65536 symbols
 
@@ -396,6 +388,12 @@
 
 SHOW_INCLUDE_FILES     = NO
 
+# If the FORCE_LOCAL_INCLUDES tag is set to YES then Doxygen
+# will list include files with double quotes in the documentation
+# rather than with sharp brackets.
+
+FORCE_LOCAL_INCLUDES   = NO
+
 # If the INLINE_INFO tag is set to YES (the default) then a tag [inline]
 # is inserted in the documentation for inline members.
 
@@ -415,13 +413,13 @@
 
 SORT_BRIEF_DOCS        = YES
 
-# If the SORT_MEMBERS_CTORS_1ST tag is set to YES then doxygen will
-# sort the (brief and detailed) documentation of class members so that
-# constructors and destructors are listed first. If set to NO (the
-# default) the constructors will appear in the respective orders
-# defined by SORT_MEMBER_DOCS and SORT_BRIEF_DOCS. This tag will be
-# ignored for brief docs if SORT_BRIEF_DOCS is set to NO and ignored
-# for detailed docs if SORT_MEMBER_DOCS is set to NO.
+# If the SORT_MEMBERS_CTORS_1ST tag is set to YES then doxygen
+# will sort the (brief and detailed) documentation of class members so that
+# constructors and destructors are listed first. If set to NO (the default)
+# the constructors will appear in the respective orders defined by
+# SORT_MEMBER_DOCS and SORT_BRIEF_DOCS.
+# This tag will be ignored for brief docs if SORT_BRIEF_DOCS is set to NO
+# and ignored for detailed docs if SORT_MEMBER_DOCS is set to NO.
 
 SORT_MEMBERS_CTORS_1ST = YES
 
@@ -505,24 +503,22 @@
 
 SHOW_NAMESPACES        = YES
 
-# The FILE_VERSION_FILTER tag can be used to specify a program or
-# script that doxygen should invoke to get the current version for
-# each file (typically from the version control system). Doxygen will
-# invoke the program by executing (via popen()) the command <command>
-# <input-file>, where <command> is the value of the
-# FILE_VERSION_FILTER tag, and <input-file> is the name of an input
-# file provided by doxygen. Whatever the program writes to standard
-# output is used as the file version. See the manual for examples.
+# The FILE_VERSION_FILTER tag can be used to specify a program or script that
+# doxygen should invoke to get the current version for each file (typically from
+# the version control system). Doxygen will invoke the program by executing (via
+# popen()) the command <command> <input-file>, where <command> is the value of
+# the FILE_VERSION_FILTER tag, and <input-file> is the name of an input file
+# provided by doxygen. Whatever the program writes to standard output
+# is used as the file version. See the manual for examples.
 
 FILE_VERSION_FILTER    =
 
-# The LAYOUT_FILE tag can be used to specify a layout file which will
-# be parsed by doxygen. The layout file controls the global structure
-# of the generated output files in an output format independent
-# way. The create the layout file that represents doxygen's defaults,
-# run doxygen with the -l option. You can optionally specify a file
-# name after the option, if omitted DoxygenLayout.xml will be used as
-# the name of the layout file.
+# The LAYOUT_FILE tag can be used to specify a layout file which will be parsed
+# by doxygen. The layout file controls the global structure of the generated
+# output files in an output format independent way. The create the layout file
+# that represents doxygen's defaults, run doxygen with the -l option.
+# You can optionally specify a file name after the option, if omitted
+# DoxygenLayout.xml will be used as the name of the layout file.
 
 LAYOUT_FILE            =
 
@@ -581,162 +577,161 @@
 # configuration options related to the input files
 #---------------------------------------------------------------------------
 
-# The INPUT tag can be used to specify the files and/or directories
-# that contain documented source files. You may enter file names like
-# "myfile.cpp" or directories like "/usr/src/myproject". Separate the
-# files or directories with spaces.
+# The INPUT tag can be used to specify the files and/or directories that contain
+# documented source files. You may enter file names like "myfile.cpp" or
+# directories like "/usr/src/myproject". Separate the files or directories
+# with spaces.
 
 INPUT                  = @srcdir@/doc/doxygen/doxygroups.cc \
-			 @srcdir@/libsupc++/cxxabi.h \
-			 @srcdir@/libsupc++/cxxabi-forced.h \
-			 @srcdir@/libsupc++/exception \
-			 @srcdir@/libsupc++/exception_ptr.h \
-			 @srcdir@/libsupc++/initializer_list \
-			 @srcdir@/libsupc++/nested_exception.h \
-			 @srcdir@/libsupc++/new \
-			 @srcdir@/libsupc++/typeinfo \
-			 include/algorithm \
-			 include/array \
-			 include/atomic \
-			 include/bitset \
-			 include/chrono \
-			 include/complex \
-			 include/condition_variable \
-			 include/deque \
-			 include/fstream \
-			 include/functional \
-			 include/future \
-			 include/iomanip \
-			 include/ios \
-			 include/iosfwd \
-			 include/iostream \
-			 include/istream \
-			 include/iterator \
-			 include/limits \
-			 include/list \
-			 include/locale \
-			 include/map \
-			 include/memory \
-			 include/mutex \
-			 include/numeric \
-			 include/ostream \
-			 include/queue \
-			 include/random \
-			 include/ratio \
-			 include/regex \
-			 include/set \
-			 include/sstream \
-			 include/stack \
-			 include/stdexcept \
-			 include/streambuf \
-			 include/string \
-			 include/system_error \
-			 include/thread \
-			 include/tuple \
-			 include/type_traits \
-			 include/unordered_map \
-			 include/unordered_set \
-			 include/utility \
-			 include/valarray \
-			 include/vector \
-			 include/cassert \
-			 include/ccomplex \
-			 include/cctype \
-			 include/cerrno \
-			 include/cfenv \
-			 include/cfloat \
-			 include/cinttypes \
-			 include/ciso646 \
-			 include/climits \
-			 include/clocale \
-			 include/cmath \
-			 include/csetjmp \
-			 include/csignal \
-			 include/cstdarg \
-			 include/cstdbool \
-			 include/cstddef \
-			 include/cstdint \
-			 include/cstdio \
-			 include/cstdlib \
-			 include/cstring \
-			 include/ctgmath \
-			 include/ctime \
-			 include/cwchar \
-			 include/cwctype \
-			 include/backward/hash_map \
-			 include/backward/hash_set \
-			 include/backward/strstream \
-			 include/debug/bitset \
-			 include/debug/deque \
-			 include/debug/list \
-			 include/debug/map \
-			 include/debug/set \
-			 include/debug/string \
-			 include/debug/unordered_map \
-			 include/debug/unordered_set \
-			 include/debug/vector \
-			 include/profile/bitset \
-			 include/profile/deque \
-			 include/profile/list \
-			 include/profile/map \
-			 include/profile/set \
-			 include/profile/unordered_map \
-			 include/profile/unordered_set \
-			 include/profile/vector \
-			 include/ext/algorithm \
-			 include/ext/functional \
-			 include/ext/iterator \
-			 include/ext/memory \
-			 include/ext/numeric \
-			 include/ext/rb_tree \
-			 include/ext/rope \
-			 include/ext/slist \
-			 include/parallel/algorithm \
-			 include/parallel/numeric \
-			 include/tr1/ccomplex \
-			 include/tr1/cctype \
-			 include/tr1/cfenv \
-			 include/tr1/cfloat \
-			 include/tr1/cinttypes \
-			 include/tr1/climits \
-			 include/tr1/cmath \
-			 include/tr1/complex \
-			 include/tr1/cstdarg \
-			 include/tr1/cstdbool \
-			 include/tr1/cstdint \
-			 include/tr1/cstdio \
-			 include/tr1/cstdlib \
-			 include/tr1/ctgmath \
-			 include/tr1/ctime \
-			 include/tr1/cwchar \
-			 include/tr1/cwctype \
-			 include/tr1_impl/array \
-			 include/tr1_impl/cctype \
-			 include/tr1_impl/cfenv \
-			 include/tr1_impl/cinttypes \
-			 include/tr1_impl/cmath \
-			 include/tr1_impl/complex \
-			 include/tr1_impl/cstdint \
-			 include/tr1_impl/cstdio \
-			 include/tr1_impl/cstdlib \
-			 include/tr1_impl/cwchar \
-			 include/tr1_impl/cwctype \
-			 include/tr1_impl/regex \
-			 include/tr1_impl/type_traits \
-			 include/tr1_impl/utility \
-			 include/tr1_impl \
-			 include/decimal/decimal \
-			 include/ \
-			 include/@host_alias@/bits \
-			 include/backward \
-			 include/bits \
-			 include/debug \
-			 include/parallel \
-			 include/profile \
-			 include/profile/impl \
-			 include/ext \
-			 include/ext/pb_ds \
-			 include/ext/pb_ds/detail
+                         @srcdir@/libsupc++/cxxabi.h \
+                         @srcdir@/libsupc++/cxxabi-forced.h \
+                         @srcdir@/libsupc++/exception \
+                         @srcdir@/libsupc++/exception_ptr.h \
+                         @srcdir@/libsupc++/initializer_list \
+                         @srcdir@/libsupc++/nested_exception.h \
+                         @srcdir@/libsupc++/new \
+                         @srcdir@/libsupc++/typeinfo \
+                         include/algorithm \
+                         include/array \
+                         include/atomic \
+                         include/bitset \
+                         include/chrono \
+                         include/complex \
+                         include/condition_variable \
+                         include/deque \
+                         include/fstream \
+                         include/functional \
+                         include/future \
+                         include/iomanip \
+                         include/ios \
+                         include/iosfwd \
+                         include/iostream \
+                         include/istream \
+                         include/iterator \
+                         include/limits \
+                         include/list \
+                         include/locale \
+                         include/map \
+                         include/memory \
+                         include/mutex \
+                         include/numeric \
+                         include/ostream \
+                         include/queue \
+                         include/random \
+                         include/ratio \
+                         include/regex \
+                         include/set \
+                         include/sstream \
+                         include/stack \
+                         include/stdexcept \
+                         include/streambuf \
+                         include/string \
+                         include/system_error \
+                         include/thread \
+                         include/tuple \
+                         include/type_traits \
+                         include/unordered_map \
+                         include/unordered_set \
+                         include/utility \
+                         include/valarray \
+                         include/vector \
+                         include/cassert \
+                         include/ccomplex \
+                         include/cctype \
+                         include/cerrno \
+                         include/cfenv \
+                         include/cfloat \
+                         include/cinttypes \
+                         include/ciso646 \
+                         include/climits \
+                         include/clocale \
+                         include/cmath \
+                         include/csetjmp \
+                         include/csignal \
+                         include/cstdarg \
+                         include/cstdbool \
+                         include/cstddef \
+                         include/cstdint \
+                         include/cstdio \
+                         include/cstdlib \
+                         include/cstring \
+                         include/ctgmath \
+                         include/ctime \
+                         include/cwchar \
+                         include/cwctype \
+                         include/backward/hash_map \
+                         include/backward/hash_set \
+                         include/backward/strstream \
+                         include/debug/bitset \
+                         include/debug/deque \
+                         include/debug/list \
+                         include/debug/map \
+                         include/debug/set \
+                         include/debug/string \
+                         include/debug/unordered_map \
+                         include/debug/unordered_set \
+                         include/debug/vector \
+                         include/profile/bitset \
+                         include/profile/deque \
+                         include/profile/list \
+                         include/profile/map \
+                         include/profile/set \
+                         include/profile/unordered_map \
+                         include/profile/unordered_set \
+                         include/profile/vector \
+                         include/ext/algorithm \
+                         include/ext/functional \
+                         include/ext/iterator \
+                         include/ext/memory \
+                         include/ext/numeric \
+                         include/ext/rb_tree \
+                         include/ext/rope \
+                         include/ext/slist \
+                         include/parallel/algorithm \
+                         include/parallel/numeric \
+                         include/tr1/ccomplex \
+                         include/tr1/cctype \
+                         include/tr1/cfenv \
+                         include/tr1/cfloat \
+                         include/tr1/cinttypes \
+                         include/tr1/climits \
+                         include/tr1/cmath \
+                         include/tr1/complex \
+                         include/tr1/cstdarg \
+                         include/tr1/cstdbool \
+                         include/tr1/cstdint \
+                         include/tr1/cstdio \
+                         include/tr1/cstdlib \
+                         include/tr1/ctgmath \
+                         include/tr1/ctime \
+                         include/tr1/cwchar \
+                         include/tr1/cwctype \
+                         include/tr1_impl/array \
+                         include/tr1_impl/cctype \
+                         include/tr1_impl/cfenv \
+                         include/tr1_impl/cinttypes \
+                         include/tr1_impl/cmath \
+                         include/tr1_impl/complex \
+                         include/tr1_impl/cstdint \
+                         include/tr1_impl/cstdio \
+                         include/tr1_impl/cstdlib \
+                         include/tr1_impl/cwchar \
+                         include/tr1_impl/cwctype \
+                         include/tr1_impl/type_traits \
+                         include/tr1_impl/utility \
+                         include/tr1_impl \
+                         include/decimal/decimal \
+                         include/ \
+                         include/@host_alias@/bits \
+                         include/backward \
+                         include/bits \
+                         include/debug \
+                         include/parallel \
+                         include/profile \
+                         include/profile/impl \
+                         include/ext \
+                         include/ext/pb_ds \
+                         include/ext/pb_ds/detail
 
 # This tag can be used to specify the character encoding of the source files
 # that doxygen parses. Internally doxygen uses the UTF-8 encoding, which is
@@ -754,8 +749,8 @@
 # *.hpp *.h++ *.idl *.odl *.cs *.php *.php3 *.inc *.m *.mm *.py *.f90
 
 FILE_PATTERNS          = *.h \
-			 *.hpp \
-			 *.tcc
+                         *.hpp \
+                         *.tcc
 
 # The RECURSIVE tag can be used to turn specify whether or not subdirectories
 # should be searched for input files as well. Possible values are YES and NO.
@@ -782,10 +777,10 @@
 # for example use the pattern */test/*
 
 EXCLUDE_PATTERNS       = stamp-* \
-			 *stdc++.h* \
-			 *stdtr1c++.h* \
-			 *extc++.h* \
-			 */.svn/*
+                         *stdc++.h* \
+                         *stdtr1c++.h* \
+                         *extc++.h* \
+                         */.svn/*
 
 # The EXCLUDE_SYMBOLS tag can be used to specify one or more symbol names
 # (namespaces, classes, functions, etc.) that should be excluded from the
@@ -961,11 +956,6 @@
 
 HTML_FOOTER            =
 
-# If the HTML_TIMESTAMP tag is set to YES then the generated HTML
-# documentation will contain the timesstamp.
-
-HTML_TIMESTAMP         = NO
-
 # The HTML_STYLESHEET tag can be used to specify a user-defined cascading
 # style sheet that is used by each HTML page. It can be used to
 # fine-tune the look of the HTML output. If the tag is left blank doxygen
@@ -975,6 +965,37 @@
 
 HTML_STYLESHEET        =
 
+# The HTML_COLORSTYLE_HUE tag controls the color of the HTML output.
+# Doxygen will adjust the colors in the stylesheet and background images
+# according to this color. Hue is specified as an angle on a colorwheel,
+# see http://en.wikipedia.org/wiki/Hue for more information.
+# For instance the value 0 represents red, 60 is yellow, 120 is green,
+# 180 is cyan, 240 is blue, 300 purple, and 360 is red again.
+# The allowed range is 0 to 359.
+
+HTML_COLORSTYLE_HUE    = 220
+
+# The HTML_COLORSTYLE_SAT tag controls the purity (or saturation) of
+# the colors in the HTML output. For a value of 0 the output will use
+# grayscales only. A value of 255 will produce the most vivid colors.
+
+HTML_COLORSTYLE_SAT    = 100
+
+# The HTML_COLORSTYLE_GAMMA tag controls the gamma correction applied to
+# the luminance component of the colors in the HTML output. Values below
+# 100 gradually make the output lighter, whereas values above 100 make
+# the output darker. The value divided by 100 is the actual gamma applied,
+# so 80 represents a gamma of 0.8, The value 220 represents a gamma of 2.2,
+# and 100 does not change the gamma.
+
+HTML_COLORSTYLE_GAMMA  = 80
+
+# If the HTML_TIMESTAMP tag is set to YES then the footer of each generated HTML
+# page will contain the date and time when the page was generated. Setting
+# this to NO can help when comparing the output of multiple runs.
+
+HTML_TIMESTAMP         = NO
+
 # If the HTML_ALIGN_MEMBERS tag is set to YES, the members of classes,
 # files or namespaces will be aligned in HTML using tables. If set to
 # NO a bullet list will be used.
@@ -991,14 +1012,14 @@
 
 # If the GENERATE_DOCSET tag is set to YES, additional index files
 # will be generated that can be used as input for Apple's Xcode 3
-# integrated development environment, introduced with OSX 10.5
-# (Leopard).  To create a documentation set, doxygen will generate a
-# Makefile in the HTML output directory. Running make will produce the
-# docset in that directory and running "make install" will install the
-# docset in ~/Library/Developer/Shared/Documentation/DocSets so that
-# Xcode will find it at startup.  See
-# http://developer.apple.com/tools/creatingdocsetswithdoxygen.html for
-# more information.
+# integrated development environment, introduced with OSX 10.5 (Leopard).
+# To create a documentation set, doxygen will generate a Makefile in the
+# HTML output directory. Running make will produce the docset in that
+# directory and running "make install" will install the docset in
+# ~/Library/Developer/Shared/Documentation/DocSets so that Xcode will find
+# it at startup.
+# See http://developer.apple.com/tools/creatingdocsetswithdoxygen.html
+# for more information.
 
 GENERATE_DOCSET        = NO
 
@@ -1014,8 +1035,19 @@
 # reverse domain-name style string, e.g. com.mycompany.MyDocSet. Doxygen
 # will append .docset to the name.
 
-DOCSET_BUNDLE_ID       = org.doxygen.Project
+DOCSET_BUNDLE_ID       = org.gnu.libstdc++
 
+# When GENERATE_PUBLISHER_ID tag specifies a string that should
+# uniquely identify the documentation publisher. This should be a
+# reverse domain-name style string,
+# e.g. com.mycompany.MyDocSet.documentation.
+
+DOCSET_PUBLISHER_ID    = org.fsf
+
+# The GENERATE_PUBLISHER_NAME tag identifies the documentation publisher.
+
+DOCSET_PUBLISHER_NAME  = libstdc++
+
 # If the GENERATE_HTMLHELP tag is set to YES, additional index files
 # will be generated that can be used as input for tools like the
 # Microsoft HTML help workshop to generate a compiled HTML help file (.chm)
@@ -1061,10 +1093,9 @@
 TOC_EXPAND             = NO
 
 # If the GENERATE_QHP tag is set to YES and both QHP_NAMESPACE and
-# QHP_VIRTUAL_FOLDER are set, an additional index file will be
-# generated that can be used as input for Qt's qhelpgenerator to
-# generate a Qt Compressed Help (.qch) of the generated HTML
-# documentation.
+# QHP_VIRTUAL_FOLDER are set, an additional index file will be generated
+# that can be used as input for Qt's qhelpgenerator to generate a
+# Qt Compressed Help (.qch) of the generated HTML documentation.
 
 GENERATE_QHP           = NO
 
@@ -1086,23 +1117,24 @@
 
 QHP_VIRTUAL_FOLDER     = doc
 
-# If QHP_CUST_FILTER_NAME is set, it specifies the name of a custom
-# filter to add.  For more information please see
+# If QHP_CUST_FILTER_NAME is set, it specifies the name of a custom filter to
+# add. For more information please see
 # http://doc.trolltech.com/qthelpproject.html#custom-filters
 
 QHP_CUST_FILTER_NAME   =
 
-# The QHP_CUST_FILT_ATTRS tag specifies the list of the attributes of
-# the custom filter to add.For more information please see <a
-# href="http://doc.trolltech.com/qthelpproject.html#custom-filters">Qt
-# Help Project / Custom Filters</a>.
+# The QHP_CUST_FILT_ATTRS tag specifies the list of the attributes of the
+# custom filter to add. For more information please see
+# <a href="http://doc.trolltech.com/qthelpproject.html#custom-filters">
+# Qt Help Project / Custom Filters</a>.
 
 QHP_CUST_FILTER_ATTRS  =
 
-# The QHP_SECT_FILTER_ATTRS tag specifies the list of the attributes
-# this project's filter section matches.  <a
-# href="http://doc.trolltech.com/qthelpproject.html#filter-attributes">Qt
-# Help Project / Filter Attributes</a>.
+# The QHP_SECT_FILTER_ATTRS tag specifies the list of the attributes this
+# project's
+# filter section matches.
+# <a href="http://doc.trolltech.com/qthelpproject.html#filter-attributes">
+# Qt Help Project / Filter Attributes</a>.
 
 QHP_SECT_FILTER_ATTRS  =
 
@@ -1113,6 +1145,23 @@
 
 QHG_LOCATION           =
 
+# If the GENERATE_ECLIPSEHELP tag is set to YES, additional index files
+#  will be generated, which together with the HTML files, form an Eclipse help
+# plugin. To install this plugin and make it available under the help contents
+# menu in Eclipse, the contents of the directory containing the HTML and XML
+# files needs to be copied into the plugins directory of eclipse. The name of
+# the directory within the plugins directory should be the same as
+# the ECLIPSE_DOC_ID value. After copying Eclipse needs to be restarted before
+# the help appears.
+
+GENERATE_ECLIPSEHELP   = NO
+
+# A unique identifier for the eclipse help plugin. When installing the plugin
+# the directory name containing the HTML and XML files should also have
+# this name.
+
+ECLIPSE_DOC_ID         = org.doxygen.Project
+
 # The DISABLE_INDEX tag can be used to turn on/off the condensed index at
 # top of each HTML page. The value NO (the default) enables the index and
 # the value YES disables it.
@@ -1145,6 +1194,11 @@
 
 TREEVIEW_WIDTH         = 250
 
+# When the EXT_LINKS_IN_WINDOW option is set to YES doxygen will open
+# links to external symbols imported via tag files in a separate window.
+
+EXT_LINKS_IN_WINDOW    = NO
+
 # Use this tag to change the font size of Latex formulas included
 # as images in the HTML documentation. The default is 10. Note that
 # when you change the font size after a successful doxygen run you need
@@ -1153,15 +1207,34 @@
 
 FORMULA_FONTSIZE       = 10
 
-# When the SEARCHENGINE tag is enable doxygen will generate a search
-# box for the HTML output. The underlying search engine uses
-# javascript and DHTML and should work on any modern browser. Note
-# that when using HTML help (GENERATE_HTMLHELP) or Qt help
-# (GENERATE_QHP) there is already a search function so this one should
-# typically be disabled.
+# Use the FORMULA_TRANPARENT tag to determine whether or not the images
+# generated for formulas are transparent PNGs. Transparent PNGs are
+# not supported properly for IE 6.0, but are supported on all modern browsers.
+# Note that when changing this option you need to delete any form_*.png files
+# in the HTML output before the changes have effect.
 
+FORMULA_TRANSPARENT    = YES
+
+# When the SEARCHENGINE tag is enabled doxygen will generate a search box
+# for the HTML output. The underlying search engine uses javascript
+# and DHTML and should work on any modern browser. Note that when using
+# HTML help (GENERATE_HTMLHELP), Qt help (GENERATE_QHP), or docsets
+# (GENERATE_DOCSET) there is already a search function so this one should
+# typically be disabled. For large projects the javascript based search engine
+# can be slow, then enabling SERVER_BASED_SEARCH may provide a better solution.
+
 SEARCHENGINE           = NO
 
+# When the SERVER_BASED_SEARCH tag is enabled the search engine will be
+# implemented using a PHP enabled web server instead of at the web client
+# using Javascript. Doxygen will generate the search PHP script and index
+# file to put on the web server. The advantage of the server
+# based approach is that it scales better to large projects and allows
+# full text search. The disadvances is that it is more difficult to setup
+# and does not have live searching capabilities.
+
+SERVER_BASED_SEARCH    = NO
+
 #---------------------------------------------------------------------------
 # configuration options related to the LaTeX output
 #---------------------------------------------------------------------------
@@ -1179,6 +1252,9 @@
 
 # The LATEX_CMD_NAME tag can be used to specify the LaTeX command name to be
 # invoked. If left blank `latex' will be used as the default command name.
+# Note that when enabling USE_PDFLATEX this option is only used for
+# generating bitmaps for formulas in the HTML output, but not in the
+# Makefile that is written to the output directory.
 
 LATEX_CMD_NAME         = latex
 
@@ -1225,11 +1301,10 @@
 
 USE_PDFLATEX           = YES
 
-# If the LATEX_BATCHMODE tag is set to YES, doxygen will add the
-# \\batchmode.  command to the generated LaTeX files. This will
-# instruct LaTeX to keep running if errors occur, instead of asking
-# the user for help.  This option is also used when generating
-# formulas in HTML.
+# If the LATEX_BATCHMODE tag is set to YES, doxygen will add the \\batchmode.
+# command to the generated LaTeX files. This will instruct LaTeX to keep
+# running if errors occur, instead of asking the user for help.
+# This option is also used when generating formulas in HTML.
 
 LATEX_BATCHMODE        = YES
 
@@ -1239,10 +1314,10 @@
 
 LATEX_HIDE_INDICES     = YES
 
-# If LATEX_SOURCE_CODE is set to YES then doxygen will include source
-# code with syntax highlighting in the LaTeX output. Note that which
-# sources are shown also depends on other settings such as
-# SOURCE_BROWSER.
+# If LATEX_SOURCE_CODE is set to YES then doxygen will include
+# source code with syntax highlighting in the LaTeX output.
+# Note that which sources are shown also depends on other settings
+# such as SOURCE_BROWSER.
 
 LATEX_SOURCE_CODE      = NO
 
@@ -1448,37 +1523,37 @@
 # instead of the = operator.
 
 PREDEFINED             = __cplusplus \
-			 __GTHREADS \
-			 _GLIBCXX_HAS_GTHREADS \
-			 __GXX_EXPERIMENTAL_CXX0X__ \
-			 _GLIBCXX_INCLUDE_AS_CXX0X \
-			 "_GLIBCXX_STD_P= " \
-			 "_GLIBCXX_STD_D= " \
-			 _GLIBCXX_STD=std \
-			 "_GLIBCXX_TR1= " \
-			 "_GLIBCXX_BEGIN_NAMESPACE_TR1= " \
-			 "_GLIBCXX_END_NAMESPACE_TR1= " \
-			 "_GLIBCXX_BEGIN_NAMESPACE(name)=namespace name {  " \
-			 "_GLIBCXX_BEGIN_NESTED_NAMESPACE(name, unused)=namespace name {  " \
-			 _GLIBCXX_END_NAMESPACE=} \
-			 _GLIBCXX_END_NESTED_NAMESPACE=} \
-			 "_GLIBCXX_TEMPLATE_ARGS=...  " \
-			 _GLIBCXX_DEPRECATED \
-			 _GLIBCXX_USE_WCHAR_T \
-			 _GLIBCXX_USE_LONG_LONG \
-			 _GLIBCXX_USE_C99_STDINT_TR1 \
-			 _GLIBCXX_ATOMIC_BUILTINS_1 \
-			 _GLIBCXX_ATOMIC_BUILTINS_2 \
-			 _GLIBCXX_ATOMIC_BUILTINS_4 \
-			 _GLIBCXX_ATOMIC_BUILTINS_8 \
-			 _GLIBCXX_USE_SCHED_YIELD \
-			 _GLIBCXX_USE_NANOSLEEP \
-			 __GXX_RTTI \
-			 __glibcxx_function_requires=// \
-			 __glibcxx_class_requires=// \
-			 __glibcxx_class_requires2=// \
-			 __glibcxx_class_requires3=// \
-			 __glibcxx_class_requires4=//
+                         __GTHREADS \
+                         _GLIBCXX_HAS_GTHREADS \
+                         __GXX_EXPERIMENTAL_CXX0X__ \
+                         _GLIBCXX_INCLUDE_AS_CXX0X \
+                         "_GLIBCXX_STD_P= " \
+                         "_GLIBCXX_STD_D= " \
+                         _GLIBCXX_STD=std \
+                         "_GLIBCXX_TR1= " \
+                         "_GLIBCXX_BEGIN_NAMESPACE_TR1= " \
+                         "_GLIBCXX_END_NAMESPACE_TR1= " \
+                         "_GLIBCXX_BEGIN_NAMESPACE(name)=namespace name {  " \
+                         "_GLIBCXX_BEGIN_NESTED_NAMESPACE(name, unused)=namespace name {  " \
+                         _GLIBCXX_END_NAMESPACE=} \
+                         _GLIBCXX_END_NESTED_NAMESPACE=} \
+                         "_GLIBCXX_TEMPLATE_ARGS=...  " \
+                         _GLIBCXX_DEPRECATED \
+                         _GLIBCXX_USE_WCHAR_T \
+                         _GLIBCXX_USE_LONG_LONG \
+                         _GLIBCXX_USE_C99_STDINT_TR1 \
+                         _GLIBCXX_ATOMIC_BUILTINS_1 \
+                         _GLIBCXX_ATOMIC_BUILTINS_2 \
+                         _GLIBCXX_ATOMIC_BUILTINS_4 \
+                         _GLIBCXX_ATOMIC_BUILTINS_8 \
+                         _GLIBCXX_USE_SCHED_YIELD \
+                         _GLIBCXX_USE_NANOSLEEP \
+                         __GXX_RTTI \
+                         __glibcxx_function_requires=// \
+                         __glibcxx_class_requires=// \
+                         __glibcxx_class_requires2=// \
+                         __glibcxx_class_requires3=// \
+                         __glibcxx_class_requires4=//
 
 # If the MACRO_EXPANSION and EXPAND_ONLY_PREDEF tags are set to YES then
 # this tag can be used to specify a list of macro names that should be expanded.
@@ -1575,6 +1650,14 @@
 
 HAVE_DOT               = YES
 
+# The DOT_NUM_THREADS specifies the number of dot invocations doxygen is
+# allowed to run in parallel. When set to 0 (the default) doxygen will
+# base this on the number of processors available in the system. You can set it
+# explicitly to a value larger than 0 to get control over the balance
+# between CPU load and processing speed.
+
+DOT_NUM_THREADS        = 0
+
 # By default doxygen will write a font called FreeSans.ttf to the
 # output directory and reference it in all dot files that doxygen
 # generates. This font does not include all possible unicode
@@ -1590,7 +1673,7 @@
 # The DOT_FONTSIZE tag can be used to set the size of the font of dot graphs.
 # The default size is 10pt.
 
-DOT_FONTSIZE           = 10
+DOT_FONTSIZE           = 9
 
 # By default doxygen will tell dot to use the output directory to look for the
 # FreeSans.ttf font (which doxygen will put there itself). If you specify a
Index: libstdc++-v3/doc/doxygen/doxygroups.cc
===================================================================
--- libstdc++-v3/doc/doxygen/doxygroups.cc	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ libstdc++-v3/doc/doxygen/doxygroups.cc	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1,5 +1,6 @@
 /*
-   Copyright (C) 2001, 2002, 2005, 2008, 2009 Free Software Foundation, Inc.
+   Copyright (C) 2001, 2002, 2005, 2008, 2009, 2010
+   Free Software Foundation, Inc.
    See license.html for license.
 
    This just provides documentation for stuff that doesn't need to be in the
@@ -47,7 +48,7 @@
  * Components generally useful that are not part of any standard.
  */
 
-/** @defgroup SGIextensions SGI STL extensions
+/** @defgroup SGIextensions SGI
  * @ingroup extensions
 Because libstdc++ based its implementation of the STL subsections of
 the library on the SGI 3.3 implementation, we inherited their extensions
@@ -115,7 +116,7 @@
 <a href="tables.html">tables</a>.
 */
 
-/** @defgroup associative_containers Associative Containers
+/** @defgroup associative_containers Associative
  * @ingroup containers
 Associative containers allow fast retrieval of data based on keys.
 
@@ -126,7 +127,7 @@
 <a href="tables.html">tables</a>.
 */
 
-/** @defgroup unordered_associative_containers Unordered Associative Containers
+/** @defgroup unordered_associative_containers Unordered Associative
  * @ingroup containers
 Unordered associative containers allow fast retrieval of data based on keys.
 
Index: libstdc++-v3/include/std/atomic
===================================================================
--- libstdc++-v3/include/std/atomic	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ libstdc++-v3/include/std/atomic	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -141,13 +141,16 @@
       atomic(_Tp* __v) : atomic_address(__v) { }
 
       void
-      store(_Tp*, memory_order = memory_order_seq_cst);
+      store(_Tp* __v, memory_order __m = memory_order_seq_cst)
+      { atomic_address::store(__v, __m); }
 
       _Tp*
-      load(memory_order = memory_order_seq_cst) const;
+      load(memory_order __m = memory_order_seq_cst) const
+      { return static_cast<_Tp*>(atomic_address::load(__m)); }
 
       _Tp*
-      exchange(_Tp*, memory_order = memory_order_seq_cst);
+      exchange(_Tp* __v, memory_order __m = memory_order_seq_cst)
+      { return static_cast<_Tp*>(atomic_address::exchange(__v, __m)); }
 
       bool
       compare_exchange_weak(_Tp*&, _Tp*, memory_order, memory_order);
@@ -487,18 +490,7 @@
       using __base_type::operator=;
     };
 
-
   template<typename _Tp>
-    _Tp*
-    atomic<_Tp*>::load(memory_order __m) const
-    { return static_cast<_Tp*>(atomic_address::load(__m)); }
-
-  template<typename _Tp>
-    _Tp*
-    atomic<_Tp*>::exchange(_Tp* __v, memory_order __m)
-    { return static_cast<_Tp*>(atomic_address::exchange(__v, __m)); }
-
-  template<typename _Tp>
     bool
     atomic<_Tp*>::compare_exchange_weak(_Tp*& __r, _Tp* __v, memory_order __m1,
 					memory_order __m2)
Index: libstdc++-v3/include/std/functional
===================================================================
--- libstdc++-v3/include/std/functional	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ libstdc++-v3/include/std/functional	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1323,7 +1323,7 @@
         operator()(_Args&&... __args)
         {
           return this->__call<_Result>(
-              tuple<_Args...>(std::forward<_Args...>(__args)...),
+              tuple<_Args...>(std::forward<_Args>(__args)...),
               _Bound_indexes());
         }
 
@@ -1333,7 +1333,7 @@
         operator()(_Args&&... __args) const
         {
           return this->__call<_Result>(
-              tuple<_Args...>(std::forward<_Args...>(__args)...),
+              tuple<_Args...>(std::forward<_Args>(__args)...),
               _Bound_indexes());
         }
 
@@ -1343,7 +1343,7 @@
         operator()(_Args&&... __args) volatile
         {
           return this->__call<_Result>(
-              tuple<_Args...>(std::forward<_Args...>(__args)...),
+              tuple<_Args...>(std::forward<_Args>(__args)...),
               _Bound_indexes());
         }
 
@@ -1353,7 +1353,7 @@
         operator()(_Args&&... __args) const volatile
         {
           return this->__call<_Result>(
-              tuple<_Args...>(std::forward<_Args...>(__args)...),
+              tuple<_Args...>(std::forward<_Args>(__args)...),
               _Bound_indexes());
         }
     };
Index: libstdc++-v3/include/bits/stl_iterator_base_types.h
===================================================================
--- libstdc++-v3/include/bits/stl_iterator_base_types.h	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ libstdc++-v3/include/bits/stl_iterator_base_types.h	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -69,6 +69,12 @@
 
   /**
    *  @defgroup iterators Iterators
+   *  Abstractions for uniform iterating through various underlying types.
+  */
+  //@{ 
+
+  /**
+   *  @defgroup iterator_tags Iterator Tags
    *  These are empty types, used to distinguish different iterators.  The
    *  distinction is not made by what they contain, but simply by what they
    *  are.  Different underlying algorithms can then be used based on the
@@ -91,8 +97,8 @@
   /// Random-access iterators support a superset of bidirectional
   /// iterator operations.
   struct random_access_iterator_tag : public bidirectional_iterator_tag { };
+  //@}
 
-
   /**
    *  @brief  Common %iterator class.
    *
Index: libstdc++-v3/include/bits/stl_heap.h
===================================================================
--- libstdc++-v3/include/bits/stl_heap.h	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ libstdc++-v3/include/bits/stl_heap.h	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -62,7 +62,7 @@
 _GLIBCXX_BEGIN_NAMESPACE(std)
 
   /**
-   * @defgroup heap_algorithms Heap Algorithms
+   * @defgroup heap_algorithms Heap
    * @ingroup sorting_algorithms
    */
 
Index: libstdc++-v3/include/bits/forward_list.h
===================================================================
--- libstdc++-v3/include/bits/forward_list.h	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ libstdc++-v3/include/bits/forward_list.h	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -461,7 +461,9 @@
        *  constructed elements.
        */
       explicit
-      forward_list(size_type __n);
+      forward_list(size_type __n)
+      : _Base()
+      { _M_default_initialize(__n); }
 
       /**
        *  @brief  Creates a %forward_list with copies of an exemplar element.
@@ -1207,6 +1209,14 @@
       // Called by splice_after and insert_after.
       iterator
       _M_splice_after(const_iterator __pos, forward_list&& __list);
+
+      // Called by forward_list(n).
+      void
+      _M_default_initialize(size_type __n);
+
+      // Called by resize(sz).
+      void
+      _M_default_insert_after(const_iterator __pos, size_type __n);
     };
 
   /**
Index: libstdc++-v3/include/bits/move.h
===================================================================
--- libstdc++-v3/include/bits/move.h	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ libstdc++-v3/include/bits/move.h	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -81,7 +81,7 @@
     move(_Tp&& __t)
     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 
-  /// declval, defined in <type_traits>.
+  /// declval, from type_traits.
 
 _GLIBCXX_END_NAMESPACE
 
Index: libstdc++-v3/include/bits/stl_iterator.h
===================================================================
--- libstdc++-v3/include/bits/stl_iterator.h	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ libstdc++-v3/include/bits/stl_iterator.h	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -416,14 +416,21 @@
        *  the end, if you like).  Assigning a value to the %iterator will
        *  always append the value to the end of the container.
       */
+#ifndef __GXX_EXPERIMENTAL_CXX0X__
       back_insert_iterator&
       operator=(typename _Container::const_reference __value)
       {
 	container->push_back(__value);
 	return *this;
       }
+#else
+      back_insert_iterator&
+      operator=(const typename _Container::value_type& __value)
+      {
+	container->push_back(__value);
+	return *this;
+      }
 
-#ifdef __GXX_EXPERIMENTAL_CXX0X__
       back_insert_iterator&
       operator=(typename _Container::value_type&& __value)
       {
@@ -499,14 +506,21 @@
        *  the front, if you like).  Assigning a value to the %iterator will
        *  always prepend the value to the front of the container.
       */
+#ifndef __GXX_EXPERIMENTAL_CXX0X__
       front_insert_iterator&
       operator=(typename _Container::const_reference __value)
       {
 	container->push_front(__value);
 	return *this;
       }
+#else
+      front_insert_iterator&
+      operator=(const typename _Container::value_type& __value)
+      {
+	container->push_front(__value);
+	return *this;
+      }
 
-#ifdef __GXX_EXPERIMENTAL_CXX0X__
       front_insert_iterator&
       operator=(typename _Container::value_type&& __value)
       {
@@ -603,6 +617,7 @@
        *     // vector v contains A, 1, 2, 3, and Z
        *  @endcode
       */
+#ifndef __GXX_EXPERIMENTAL_CXX0X__
       insert_iterator&
       operator=(typename _Container::const_reference __value)
       {
@@ -610,8 +625,15 @@
 	++iter;
 	return *this;
       }
+#else
+      insert_iterator&
+      operator=(const typename _Container::value_type& __value)
+      {
+	iter = container->insert(iter, __value);
+	++iter;
+	return *this;
+      }
 
-#ifdef __GXX_EXPERIMENTAL_CXX0X__
       insert_iterator&
       operator=(typename _Container::value_type&& __value)
       {
Index: libstdc++-v3/include/bits/forward_list.tcc
===================================================================
--- libstdc++-v3/include/bits/forward_list.tcc	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ libstdc++-v3/include/bits/forward_list.tcc	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -114,7 +114,7 @@
     _M_fill_initialize(size_type __n, const value_type& __value)
     {
       _Node_base* __to = &this->_M_impl._M_head;
-      for (; __n > 0; --__n)
+      for (; __n; --__n)
         {
           __to->_M_next = this->_M_create_node(__value);
           __to = __to->_M_next;
@@ -122,12 +122,12 @@
     }
 
   template<typename _Tp, typename _Alloc>
+    void
     forward_list<_Tp, _Alloc>::
-    forward_list(size_type __n)
-    : _Base()
+    _M_default_initialize(size_type __n)
     {
       _Node_base* __to = &this->_M_impl._M_head;
-      for (; __n > 0; --__n)
+      for (; __n; --__n)
         {
           __to->_M_next = this->_M_create_node();
           __to = __to->_M_next;
@@ -164,6 +164,24 @@
   template<typename _Tp, typename _Alloc>
     void
     forward_list<_Tp, _Alloc>::
+    _M_default_insert_after(const_iterator __pos, size_type __n)
+    {
+      const_iterator __saved_pos = __pos;
+      __try
+	{
+	  for (; __n; --__n)
+	    __pos = emplace_after(__pos);
+	}
+      __catch(...)
+	{
+	  erase_after(__saved_pos, ++__pos);
+	  __throw_exception_again;
+	}
+    }
+
+  template<typename _Tp, typename _Alloc>
+    void
+    forward_list<_Tp, _Alloc>::
     resize(size_type __sz)
     {
       iterator __k = before_begin();
@@ -177,10 +195,7 @@
       if (__len == __sz)
         erase_after(__k, end());
       else
-	{
-	  forward_list __tmp(__sz - __len);
-	  splice_after(__k, std::move(__tmp));
-	}
+	_M_default_insert_after(__k, __sz - __len);
     }
 
   template<typename _Tp, typename _Alloc>
Index: libstdc++-v3/include/bits/algorithmfwd.h
===================================================================
--- libstdc++-v3/include/bits/algorithmfwd.h	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ libstdc++-v3/include/bits/algorithmfwd.h	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -134,22 +134,22 @@
    */
 
   /**
-   * @defgroup mutating_algorithms Mutating Algorithms
+   * @defgroup mutating_algorithms Mutating
    * @ingroup algorithms
    */
 
   /**
-   * @defgroup non_mutating_algorithms Non-Mutating Algorithms
+   * @defgroup non_mutating_algorithms Non-Mutating
    * @ingroup algorithms
    */
 
   /**
-   * @defgroup sorting_algorithms Sorting Algorithms
+   * @defgroup sorting_algorithms Sorting
    * @ingroup algorithms
    */
 
   /**
-   * @defgroup set_algorithms Set Operation Algorithms
+   * @defgroup set_algorithms Set Operation
    * @ingroup sorting_algorithms
    *
    * These algorithms are common set operations performed on sequences
@@ -158,7 +158,7 @@
    */
 
   /**
-   * @defgroup binary_search_algorithms Binary Search Algorithms
+   * @defgroup binary_search_algorithms Binary Search
    * @ingroup sorting_algorithms
    *
    * These algorithms are variations of a classic binary search, and
Index: libstdc++-v3/include/bits/random.tcc
===================================================================
--- libstdc++-v3/include/bits/random.tcc	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ libstdc++-v3/include/bits/random.tcc	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -2586,6 +2586,9 @@
 	  __aurng(__urng);
 
 	const double __p = __aurng();
+	if (__param._M_m.empty())
+	  return __p;
+
 	auto __pos = std::lower_bound(__param._M_cp.begin(),
 				      __param._M_cp.end(), __p);
 	const size_t __i = __pos - __param._M_cp.begin();
Index: libstdc++-v3/include/bits/random.h
===================================================================
--- libstdc++-v3/include/bits/random.h	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ libstdc++-v3/include/bits/random.h	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1614,7 +1614,7 @@
    */
 
   /**
-   * @addtogroup random_distributions_uniform Uniform Distributions
+   * @addtogroup random_distributions_uniform Uniform
    * @ingroup random_distributions
    * @{
    */
@@ -1972,7 +1972,7 @@
   /* @} */ // group random_distributions_uniform
 
   /**
-   * @addtogroup random_distributions_normal Normal Distributions
+   * @addtogroup random_distributions_normal Normal
    * @ingroup random_distributions
    * @{
    */
@@ -3226,7 +3226,7 @@
   /* @} */ // group random_distributions_normal
 
   /**
-   * @addtogroup random_distributions_bernoulli Bernoulli Distributions
+   * @addtogroup random_distributions_bernoulli Bernoulli
    * @ingroup random_distributions
    * @{
    */
@@ -3957,7 +3957,7 @@
   /* @} */ // group random_distributions_bernoulli
 
   /**
-   * @addtogroup random_distributions_poisson Poisson Distributions
+   * @addtogroup random_distributions_poisson Poisson
    * @ingroup random_distributions
    * @{
    */
Index: libstdc++-v3/ChangeLog
===================================================================
--- libstdc++-v3/ChangeLog	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ libstdc++-v3/ChangeLog	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1,3 +1,139 @@
+2010-10-12  Paolo Carlini  <paolo.carlini@oracle.com>
+
+	* include/bits/random.tcc (piecewise_linear_distribution<>::
+	operator()): Don't crash when the dist is default-constructed.
+	* testsuite/26_numerics/random/piecewise_linear_distribution/
+	operators/call-default.cc: New.
+
+2010-10-11  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>
+
+	PR libstdc++/45711
+	* src/Makefile.am (stamp-debug): Also adjust possibly-relative
+	file names in MKDIR_P, and, for consistency, also top_build_prefix.
+	* src/Makefile.in: Regenerate.
+
+2010-10-08  Jonathan Wakely  <jwakely.gcc@gmail.com>
+
+	PR libstdc++/45403
+	* python/libstdcxx/v6/printers.py: Check for lazy_string support.
+
+2010-10-07  Jonathan Wakely  <jwakely.gcc@gmail.com>
+
+	PR libstdc++/45924
+	* include/std/functional (_Bind_result::operator()): Do not expand
+	template parameter pack in forward call.
+	* testsuite/20_util/bind/45924.cc: New.
+
+2010-09-17  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
+
+	Backport from mainline:
+	2010-07-26  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
+
+	* testsuite/22_locale/num_put/put/char/14220.cc: XFAIL on Solaris
+	9/x86, 32-bit Solaris 10/x86 and 64-bit Solaris 10/SPARC.
+	* testsuite/22_locale/num_put/put/wchar_t/14220.cc: XFAIL on
+	Solaris 9/x86 and 32-bit Solaris 10/x86.
+
+	* testsuite/27_io/basic_istream/extractors_arithmetic/char/12.cc:
+	Only XFAIL on Solaris 8 and 9.
+	* testsuite/27_io/basic_istream/extractors_arithmetic/wchar_t/12.cc:
+	Likewise.
+
+	* testsuite/ext/enc_filebuf/char/13598.cc: XFAIL before Solaris 11.
+
+2010-09-07  Paolo Carlini  <paolo.carlini@oracle.com>
+
+	* testsuite/29_atomics/atomic/cons/copy_neg.cc: Further adjust
+	dg-error line numbers.
+
+2010-09-07  Paolo Carlini  <paolo.carlini@oracle.com>
+
+	* testsuite/29_atomics/atomic/cons/assign_neg.cc: Adjust dg-error
+	line numbers.
+	* testsuite/29_atomics/atomic/cons/copy_neg.cc: Likewise.
+
+2010-09-07  Paolo Carlini  <paolo.carlini@oracle.com>
+
+	PR libstdc++/45398
+	* include/std/atomic (atomic<_TP*>::store): Define.
+
+	* include/std/atomic (atomic<_TP*>::load, exchange): Define inline.
+
+2010-08-26  Benjamin Kosnik  <bkoz@redhat.com>
+
+        * include/bits/stl_iterator_base_types.h: Fix doxygen warning.
+
+	Merge in other doc patches.
+
+	2010-07-08  Benjamin Kosnik  <bkoz@redhat.com>
+
+        * include/bits/stl_heap.h: Update markup.
+        * include/bits/move.h: Same.
+        * include/bits/algorithmfwd.h: Same.
+        * include/bits/random.h: Same.
+        * doc/doxygen/doxygroups.cc: Same.
+        * doc/doxygen/user.cfg.in: Remove include/tr1_impl/regex from
+        input file list.
+        * doc/Makefile.am (doc-pdf-doxygen): Add comment, put generated
+        pdf in location consistent with docbook pdf generation.
+        * doc/Makefile.in: Regenerate.
+
+	2010-07-13  Benjamin Kosnik  <bkoz@redhat.com>
+        * doc/Makefile.in: Regenerate.
+        * doc/Makefile.am: Edit pdf rules, expand default rules.
+        * doc/doxygen/user.cfg.in: Update to Doxygen 1.7.1.
+
+	2010-07-19  Benjamin Kosnik  <bkoz@redhat.com>
+
+        * doc/Makefile.am (doc-texinfo): New rule.
+        (doc-texinfo-docbook): New rule.
+        (DB2TEXI_FLAGS): New.
+        (doc-xml-single-docbook): Just the manual, not the set. Tweak flags.
+        * doc/Makefile.in: Regenerate.
+
+	2010-07-19  Benjamin Kosnik  <bkoz@redhat.com>
+
+        * doc/xml/manual/appendix_contributing.xml: Update for new reality.
+        * doc/Makefile.am (doc-xml): New default rule for XML output.
+        (doc-xml-single-doxygen): Standardize output names.
+        * doc/Makefile.in: Regenerate.
+
+        * doc/doxygen/user.cfg.in: Tweak.
+
+2010-08-15  Jonathan Wakely  <jwakely.gcc@gmail.com>
+
+	PR libstdc++/45283
+	* testsuite/performance/30_threads/future/polling.cc: Replace calls to
+	shared_future::is_ready.
+
+2010-08-08  Paolo Carlini  <paolo.carlini@oracle.com>
+
+	* include/bits/forward_list.h (_M_default_initialize,
+	_M_default_insert_after): Declare.
+	(forward_list<>::forward_list(size_type), resize(size_type)): Fix,
+	use the latter.
+	* include/bits/forward_list.tcc (forward_list<>::_M_default_append,
+	* testsuite/23_containers/forward_list/requirements/dr438/
+	assign_neg.cc: Adjust dg-error line numbers.
+	* testsuite/23_containers/forward_list/requirements/dr438/
+	insert_neg.cc: Likewise.
+	* testsuite/23_containers/forward_list/requirements/dr438/
+	constructor_1_neg.cc: Likewise.
+	* testsuite/23_containers/forward_list/requirements/dr438/
+	constructor_2_neg.cc: Likewise.
+
+2010-08-08  Paolo Carlini  <paolo.carlini@oracle.com>
+
+	PR libstdc++/44963
+	* include/bits/stl_iterator.h (insert_iterator<>::
+	operator=(const typename _Container::value_type&,
+	back_insert_iterator<>::
+	operator=(const typename _Container::value_type&),
+	front_insert_iterator<>::
+	operator=(const typename _Container::value_type&))): Add
+	in C++0x mode.
+	* testsuite/ext/rope/44963.cc: New.
+
 2010-07-31  Release Manager
 
 	* GCC 4.5.1 released.
Index: libstdc++-v3/testsuite/27_io/basic_istream/extractors_arithmetic/wchar_t/12.cc
===================================================================
--- libstdc++-v3/testsuite/27_io/basic_istream/extractors_arithmetic/wchar_t/12.cc	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ libstdc++-v3/testsuite/27_io/basic_istream/extractors_arithmetic/wchar_t/12.cc	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1,4 +1,5 @@
-// Copyright (C) 2004, 2005, 2006, 2007, 2009 Free Software Foundation, Inc.
+// Copyright (C) 2004, 2005, 2006, 2007, 2009, 2010
+// Free Software Foundation, Inc.
 //
 // This file is part of the GNU ISO C++ Library.  This library is free
 // software; you can redistribute it and/or modify it under the
@@ -17,10 +18,10 @@
 
 // 27.6.1.2.2 arithmetic extractors
 
-// XXX This test fails on sparc-solaris2 because of a bug in libc
+// XXX This test fails on Solaris 8 and 9 because of a bug in libc
 // XXX sscanf for very long input.  See:
 // XXX http://gcc.gnu.org/ml/gcc/2002-12/msg01422.html
-// { dg-do run { xfail { { sparc*-*-solaris2* } || lax_strtofp } } }
+// { dg-do run { xfail { { *-*-solaris2.[89] } || lax_strtofp } } }
 
 #include <istream>
 #include <sstream>
Index: libstdc++-v3/testsuite/27_io/basic_istream/extractors_arithmetic/char/12.cc
===================================================================
--- libstdc++-v3/testsuite/27_io/basic_istream/extractors_arithmetic/char/12.cc	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ libstdc++-v3/testsuite/27_io/basic_istream/extractors_arithmetic/char/12.cc	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1,6 +1,7 @@
 // 1999-04-12 bkoz
 
-// Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2009
+// Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2009,
+// 2010
 // Free Software Foundation, Inc.
 //
 // This file is part of the GNU ISO C++ Library.  This library is free
@@ -20,10 +21,10 @@
 
 // 27.6.1.2.2 arithmetic extractors
 
-// XXX This test fails on sparc-solaris2 because of a bug in libc
+// XXX This test fails on Solaris 8 and 9 because of a bug in libc
 // XXX sscanf for very long input.  See:
 // XXX http://gcc.gnu.org/ml/gcc/2002-12/msg01422.html
-// { dg-do run { xfail { { sparc*-*-solaris2* } || lax_strtofp } } }
+// { dg-do run { xfail { { *-*-solaris2.[89] } || lax_strtofp } } }
 
 #include <istream>
 #include <sstream>
Index: libstdc++-v3/testsuite/26_numerics/random/piecewise_linear_distribution/operators/call-default.cc
===================================================================
--- libstdc++-v3/testsuite/26_numerics/random/piecewise_linear_distribution/operators/call-default.cc	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ libstdc++-v3/testsuite/26_numerics/random/piecewise_linear_distribution/operators/call-default.cc	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,41 @@
+// { dg-options "-std=c++0x" }
+// { dg-require-cstdint "" }
+//
+// 2010-10-12  Paolo Carlini  <paolo.carlini@oracle.com>
+//
+// Copyright (C) 2010 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+//
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+//
+// You should have received a copy of the GNU General Public License along
+// with this library; see the file COPYING3.  If not see
+// <http://www.gnu.org/licenses/>.
+
+// 26.5.8.5.3 Class template piecewise_linear_distribution
+//   [rand.dist.samp.plinear]
+
+#include <random>
+
+void
+test01()
+{
+  std::piecewise_linear_distribution<> u;
+  std::minstd_rand0 rng;
+
+  u(rng);
+}
+
+int main()
+{
+  test01();
+  return 0;
+}
Index: libstdc++-v3/testsuite/ext/enc_filebuf/char/13598.cc
===================================================================
--- libstdc++-v3/testsuite/ext/enc_filebuf/char/13598.cc	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ libstdc++-v3/testsuite/ext/enc_filebuf/char/13598.cc	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1,6 +1,10 @@
+// Before Solaris 11, iconv -f ISO-8859-1 -t ISO-8859-1 fails with
+// Not supported ISO-8859-1 to ISO-8859-1
+//
+// { dg-do run { xfail *-*-solaris2.[89] *-*-solaris2.10 } }
 // { dg-require-iconv "ISO-8859-1" }
 
-// Copyright (C) 2004, 2005, 2006, 2007, 2009 Free Software Foundation
+// Copyright (C) 2004, 2005, 2006, 2007, 2009, 2010 Free Software Foundation
 //
 // This file is part of the GNU ISO C++ Library.  This library is free
 // software; you can redistribute it and/or modify it under the
Index: libstdc++-v3/testsuite/ext/rope/44963.cc
===================================================================
--- libstdc++-v3/testsuite/ext/rope/44963.cc	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ libstdc++-v3/testsuite/ext/rope/44963.cc	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,31 @@
+// { dg-options "-std=gnu++0x" }
+// { dg-do compile }
+
+// Copyright (C) 2010 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+//
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+//
+// You should have received a copy of the GNU General Public License along
+// with this library; see the file COPYING3.  If not see
+// <http://www.gnu.org/licenses/>.
+
+#include <ext/rope>
+
+// libstdc++/44963
+void test01()
+{
+  __gnu_cxx::crope line("test");
+  auto ii(std::back_inserter(line));
+
+  *ii++ = 'm';
+  *ii++ = 'e';
+}
Index: libstdc++-v3/testsuite/performance/30_threads/future/polling.cc
===================================================================
--- libstdc++-v3/testsuite/performance/30_threads/future/polling.cc	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ libstdc++-v3/testsuite/performance/30_threads/future/polling.cc	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1,4 +1,4 @@
-// Copyright (C) 2009 Free Software Foundation, Inc.
+// Copyright (C) 2009, 2010 Free Software Foundation, Inc.
 //
 // This file is part of the GNU ISO C++ Library.  This library is free
 // software; you can redistribute it and/or modify it under the
@@ -20,9 +20,14 @@
 #include <thread>
 #include <testsuite_performance.h>
 
+inline bool is_ready(std::shared_future<void>& f)
+{
+  return f.wait_for(std::chrono::microseconds(1));
+}
+
 void poll(std::shared_future<void> f)
 {
-  while (!f.is_ready())
+  while (!is_ready(f))
   { }
 }
 
@@ -46,7 +51,7 @@
   start_counters(time, resource);
 
   for (int i = 0; i < 1000000; ++i)
-    (void)f.is_ready();
+    (void)is_ready(f);
   p.set_value();
 
   for (int i=0; i < n; ++i)
Index: libstdc++-v3/testsuite/22_locale/num_put/put/wchar_t/14220.cc
===================================================================
--- libstdc++-v3/testsuite/22_locale/num_put/put/wchar_t/14220.cc	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ libstdc++-v3/testsuite/22_locale/num_put/put/wchar_t/14220.cc	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1,6 +1,6 @@
 // 2004-04-30  Paolo Carlini  <pcarlini@suse.de>
 
-// Copyright (C) 2004, 2009 Free Software Foundation
+// Copyright (C) 2004, 2009, 2010 Free Software Foundation
 //
 // This file is part of the GNU ISO C++ Library.  This library is free
 // software; you can redistribute it and/or modify it under the
@@ -23,11 +23,11 @@
 #include <sstream>
 #include <testsuite_hooks.h>
 
-// On Solaris 10 x86, this test crashes in libc.  Inside libstdc++, 
-// we call sprintf like so:
+// On Solaris 9 and 32-bit Solaris 10/x86, this test crashes in libc.  Inside
+// libstdc++, we call sprintf like so:
 //   sprintf (buffer, "%.*f", 1000, 1.0)
 // which crashes.
-// { dg-do run { xfail { i?86*-*-solaris2.10 } } } 
+// { dg-do run { xfail { i?86-*-solaris2.9 || { i?86-*-solaris2.10 && ilp32 } } } } 
 
 // libstdc++/14220
 void test01()
Index: libstdc++-v3/testsuite/22_locale/num_put/put/char/14220.cc
===================================================================
--- libstdc++-v3/testsuite/22_locale/num_put/put/char/14220.cc	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ libstdc++-v3/testsuite/22_locale/num_put/put/char/14220.cc	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1,6 +1,6 @@
 // 2004-04-30  Paolo Carlini  <pcarlini@suse.de>
 
-// Copyright (C) 2004, 2009 Free Software Foundation
+// Copyright (C) 2004, 2009, 2010 Free Software Foundation
 //
 // This file is part of the GNU ISO C++ Library.  This library is free
 // software; you can redistribute it and/or modify it under the
@@ -19,11 +19,13 @@
 
 // 22.2.2.2.1  num_put members
 
-// On Solaris 10 x86, this test crashes in libc.  Inside libstdc++, 
-// we call sprintf like so:
+// On Solaris 9/x86, 32-bit Solaris 10/x86 and 64-bit Solaris 10/SPARC, this
+// test crashes in libc.  Inside libstdc++, we call sprintf like so:
 //   sprintf (buffer, "%.*f", 1000, 1.0)
 // which crashes.
-// { dg-do run { xfail { i?86*-*-solaris2.10 } } } 
+// { dg-xfail-run-if "" i?86-*-solaris2.9 }
+// { dg-xfail-run-if "" { i?86-*-solaris2.10 && ilp32 } }
+// { dg-xfail-run-if "" { sparc*-sun-solaris2.10 && lp64 } }
 
 #include <locale>
 #include <sstream>
Index: libstdc++-v3/testsuite/29_atomics/atomic/cons/assign_neg.cc
===================================================================
--- libstdc++-v3/testsuite/29_atomics/atomic/cons/assign_neg.cc	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ libstdc++-v3/testsuite/29_atomics/atomic/cons/assign_neg.cc	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -29,19 +29,19 @@
 }
 
 // { dg-error "used here" "" { target *-*-* } 521 }
-// { dg-error "deleted function" "" { target *-*-* } 230 }
-// { dg-error "deleted function" "" { target *-*-* } 248 }
-// { dg-error "deleted function" "" { target *-*-* } 266 }
-// { dg-error "deleted function" "" { target *-*-* } 284 }
-// { dg-error "deleted function" "" { target *-*-* } 302 }
-// { dg-error "deleted function" "" { target *-*-* } 320 }
-// { dg-error "deleted function" "" { target *-*-* } 338 }
-// { dg-error "deleted function" "" { target *-*-* } 356 }
-// { dg-error "deleted function" "" { target *-*-* } 374 }
-// { dg-error "deleted function" "" { target *-*-* } 392 }
-// { dg-error "deleted function" "" { target *-*-* } 410 }
-// { dg-error "deleted function" "" { target *-*-* } 428 }
-// { dg-error "deleted function" "" { target *-*-* } 446 }
-// { dg-error "deleted function" "" { target *-*-* } 464 }
-// { dg-error "deleted function" "" { target *-*-* } 482 }
+// { dg-error "deleted function" "" { target *-*-* } 233 }
+// { dg-error "deleted function" "" { target *-*-* } 251 }
+// { dg-error "deleted function" "" { target *-*-* } 269 }
+// { dg-error "deleted function" "" { target *-*-* } 287 }
+// { dg-error "deleted function" "" { target *-*-* } 305 }
+// { dg-error "deleted function" "" { target *-*-* } 323 }
+// { dg-error "deleted function" "" { target *-*-* } 341 }
+// { dg-error "deleted function" "" { target *-*-* } 359 }
+// { dg-error "deleted function" "" { target *-*-* } 377 }
+// { dg-error "deleted function" "" { target *-*-* } 395 }
+// { dg-error "deleted function" "" { target *-*-* } 413 }
+// { dg-error "deleted function" "" { target *-*-* } 431 }
+// { dg-error "deleted function" "" { target *-*-* } 449 }
+// { dg-error "deleted function" "" { target *-*-* } 467 }
+// { dg-error "deleted function" "" { target *-*-* } 485 }
 // { dg-excess-errors "In member function" }
Index: libstdc++-v3/testsuite/29_atomics/atomic/cons/copy_neg.cc
===================================================================
--- libstdc++-v3/testsuite/29_atomics/atomic/cons/copy_neg.cc	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ libstdc++-v3/testsuite/29_atomics/atomic/cons/copy_neg.cc	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -29,19 +29,19 @@
 }
 
 // { dg-error "used here" "" { target *-*-* } 560 }
-// { dg-error "deleted function" "" { target *-*-* } 229 }
-// { dg-error "deleted function" "" { target *-*-* } 247 }
-// { dg-error "deleted function" "" { target *-*-* } 265 }
-// { dg-error "deleted function" "" { target *-*-* } 283 }
-// { dg-error "deleted function" "" { target *-*-* } 301 }
-// { dg-error "deleted function" "" { target *-*-* } 319 }
-// { dg-error "deleted function" "" { target *-*-* } 337 }
-// { dg-error "deleted function" "" { target *-*-* } 355 }
-// { dg-error "deleted function" "" { target *-*-* } 373 }
-// { dg-error "deleted function" "" { target *-*-* } 391 }
-// { dg-error "deleted function" "" { target *-*-* } 409 }
-// { dg-error "deleted function" "" { target *-*-* } 427 }
-// { dg-error "deleted function" "" { target *-*-* } 445 }
-// { dg-error "deleted function" "" { target *-*-* } 463 }
-// { dg-error "deleted function" "" { target *-*-* } 481 }
+// { dg-error "deleted function" "" { target *-*-* } 232 }
+// { dg-error "deleted function" "" { target *-*-* } 250 }
+// { dg-error "deleted function" "" { target *-*-* } 268 }
+// { dg-error "deleted function" "" { target *-*-* } 286 }
+// { dg-error "deleted function" "" { target *-*-* } 304 }
+// { dg-error "deleted function" "" { target *-*-* } 322 }
+// { dg-error "deleted function" "" { target *-*-* } 340 }
+// { dg-error "deleted function" "" { target *-*-* } 358 }
+// { dg-error "deleted function" "" { target *-*-* } 376 }
+// { dg-error "deleted function" "" { target *-*-* } 394 }
+// { dg-error "deleted function" "" { target *-*-* } 412 }
+// { dg-error "deleted function" "" { target *-*-* } 430 }
+// { dg-error "deleted function" "" { target *-*-* } 448 }
+// { dg-error "deleted function" "" { target *-*-* } 466 }
+// { dg-error "deleted function" "" { target *-*-* } 484 }
 // { dg-excess-errors "In member function" }
Index: libstdc++-v3/testsuite/23_containers/forward_list/requirements/dr438/assign_neg.cc
===================================================================
--- libstdc++-v3/testsuite/23_containers/forward_list/requirements/dr438/assign_neg.cc	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ libstdc++-v3/testsuite/23_containers/forward_list/requirements/dr438/assign_neg.cc	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1,6 +1,6 @@
 // { dg-do compile }
 // { dg-options "-std=gnu++0x" }
-// { dg-error "no matching" "" { target *-*-* } 1194 }
+// { dg-error "no matching" "" { target *-*-* } 1196 }
 // { dg-excess-errors "" }
 
 // Copyright (C) 2009, 2010 Free Software Foundation
Index: libstdc++-v3/testsuite/23_containers/forward_list/requirements/dr438/insert_neg.cc
===================================================================
--- libstdc++-v3/testsuite/23_containers/forward_list/requirements/dr438/insert_neg.cc	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ libstdc++-v3/testsuite/23_containers/forward_list/requirements/dr438/insert_neg.cc	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1,6 +1,6 @@
 // { dg-do compile }
 // { dg-options "-std=gnu++0x" }
-// { dg-error "no matching" "" { target *-*-* } 1194 }
+// { dg-error "no matching" "" { target *-*-* } 1196 }
 // { dg-excess-errors "" }
 
 // Copyright (C) 2009, 2010 Free Software Foundation
Index: libstdc++-v3/testsuite/23_containers/forward_list/requirements/dr438/constructor_1_neg.cc
===================================================================
--- libstdc++-v3/testsuite/23_containers/forward_list/requirements/dr438/constructor_1_neg.cc	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ libstdc++-v3/testsuite/23_containers/forward_list/requirements/dr438/constructor_1_neg.cc	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1,6 +1,6 @@
 // { dg-do compile }
 // { dg-options "-std=gnu++0x" }
-// { dg-error "no matching" "" { target *-*-* } 1194 }
+// { dg-error "no matching" "" { target *-*-* } 1196 }
 // { dg-excess-errors "" }
 
 // Copyright (C) 2009, 2010 Free Software Foundation
Index: libstdc++-v3/testsuite/23_containers/forward_list/requirements/dr438/constructor_2_neg.cc
===================================================================
--- libstdc++-v3/testsuite/23_containers/forward_list/requirements/dr438/constructor_2_neg.cc	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ libstdc++-v3/testsuite/23_containers/forward_list/requirements/dr438/constructor_2_neg.cc	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1,6 +1,6 @@
 // { dg-do compile }
 // { dg-options "-std=gnu++0x" }
-// { dg-error "no matching" "" { target *-*-* } 1194 }
+// { dg-error "no matching" "" { target *-*-* } 1196 }
 // { dg-excess-errors "" }
 
 // Copyright (C) 2009, 2010 Free Software Foundation
Index: libstdc++-v3/testsuite/20_util/bind/45924.cc
===================================================================
--- libstdc++-v3/testsuite/20_util/bind/45924.cc	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ libstdc++-v3/testsuite/20_util/bind/45924.cc	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,45 @@
+// { dg-options "-std=gnu++0x" }
+// { dg-do compile }
+
+// Copyright (C) 2010 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 3, or (at your option)
+// any later version.
+
+// This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+// You should have received a copy of the GNU General Public License along
+// with this library; see the file COPYING3.  If not see
+// <http://www.gnu.org/licenses/>.
+
+#include <functional>
+
+// PR libstdc++/45924
+
+struct f
+{
+  int operator()(int, int) const { return 0; }
+};
+
+void test01()
+{
+  int i = 0;
+  using namespace std::placeholders;
+  auto b = std::bind<int>(f(), _1, _2);
+  auto const bc(b);
+  b(i, i);
+  bc(i, i);
+}
+
+int main()
+{
+  test01();
+  return 0;
+}
+
Index: configure.ac
===================================================================
--- configure.ac	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ configure.ac	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -340,7 +340,7 @@
     # Check for target supported by gold.
     case "${target}" in
       i?86-*-* | x86_64-*-* | sparc*-*-* | powerpc*-*-* | arm*-*-*)
-        configdirs="`echo " ${configdirs} " | sed -e 's/ ld / gold /'`"
+        configdirs=`echo " ${configdirs} " | sed -e 's/ ld / gold /'`
         ;;
     esac
   fi
@@ -1333,7 +1333,7 @@
 if test "x$with_gmp$with_gmp_include$with_gmp_lib" = x && test -d ${srcdir}/gmp; then
   gmplibs='-L$$r/$(HOST_SUBDIR)/gmp/'"$lt_cv_objdir $gmplibs"
   gmpinc='-I$$r/$(HOST_SUBDIR)/gmp -I$$s/gmp '"$gmpinc"
-  extra_mpfr_configure_flags='--with-gmp-build=$$r/$(HOST_SUBDIR)/gmp'
+  extra_mpfr_configure_flags='--with-gmp-include=$$r/$(HOST_SUBDIR)/gmp --with-gmp-lib=$$r/$(HOST_SUBDIR)/gmp/'"$lt_cv_objdir"
   extra_mpc_gmp_configure_flags='--with-gmp-include=$$r/$(HOST_SUBDIR)/gmp --with-gmp-lib=$$r/$(HOST_SUBDIR)/gmp/'"$lt_cv_objdir"
   # Do not test the gmp version.  Assume that it is sufficient, since
   # it is in the source tree, and the library has not been built yet
Index: intl/configure
===================================================================
--- intl/configure	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ intl/configure	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -7830,7 +7830,7 @@
       case "$ac_file" in */Makefile.in)
         # Adjust a relative srcdir.
         ac_dir=`echo "$ac_file"|sed 's%/[^/][^/]*$%%'`
-        ac_dir_suffix="/`echo "$ac_dir"|sed 's%^\./%%'`"
+        ac_dir_suffix=/`echo "$ac_dir"|sed 's%^\./%%'`
         ac_dots=`echo "$ac_dir_suffix"|sed 's%/[^/]*%../%g'`
         # In autoconf-2.13 it is called $ac_given_srcdir.
         # In autoconf-2.50 it is called $srcdir.
Index: intl/ChangeLog
===================================================================
--- intl/ChangeLog	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ intl/ChangeLog	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1,3 +1,8 @@
+2010-10-02  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>
+
+	PR bootstrap/44621
+	* configure: Regenerate.
+
 2010-07-31  Release Manager
 
 	* GCC 4.5.1 released.
Index: libgfortran/ChangeLog
===================================================================
--- libgfortran/ChangeLog	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ libgfortran/ChangeLog	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1,3 +1,25 @@
+2010-10-06  Jerry DeLisle  <jvdelisle@gcc.gnu.org>
+
+	Backport from mainline:
+	PR libfortran/45710
+	* io/write.c (namelist_write_newline): Pad character array internal
+	unit records with spaces.
+
+2010-09-22  Jerry DeLisle  <jvdelisle@gcc.gnu.org>
+
+	PR libfortran/45532
+	Backport from mainline:
+	* io/list_read.c (nml_get_obj_data): Set first_nl if the previous
+	is NULL.
+
+2010-09-17  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
+
+	Backport from mainline:
+	2010-08-26  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
+
+	* config/fpu-387.h (has_sse): Remove cw_sse, unused.
+	Use fixed-length asm.
+
 2010-07-31  Release Manager
 
 	* GCC 4.5.1 released.
Index: libgfortran/config/fpu-387.h
===================================================================
--- libgfortran/config/fpu-387.h	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ libgfortran/config/fpu-387.h	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -64,7 +64,6 @@
   if (edx & bit_SSE)
     {
       struct sigaction act, oact;
-      unsigned int cw_sse;
 
       act.sa_handler = sigill_hdlr;
       sigemptyset (&act.sa_mask);
@@ -72,7 +71,9 @@
       act.sa_flags = SA_SIGINFO;
       sigaction (SIGILL, &act, &oact);
 
-      asm volatile ("stmxcsr %0" : "=m" (cw_sse));
+      /* We need a single SSE instruction here so the handler can safely skip
+	 over it.  */
+      __asm__ volatile ("movss %xmm2,%xmm1");
 
       sigaction (SIGILL, &oact, NULL);
 
Index: libgfortran/io/list_read.c
===================================================================
--- libgfortran/io/list_read.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ libgfortran/io/list_read.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -2731,10 +2731,11 @@
 	  goto nml_err_ret;
 	}
 
-      if (!component_flag)
+      if (*pprev_nl == NULL || !component_flag)
 	first_nl = nl;
 
       root_nl = nl;
+
       component_flag = 1;
 
       c = next_char (dtp);
Index: libgfortran/io/write.c
===================================================================
--- libgfortran/io/write.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ libgfortran/io/write.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1,4 +1,4 @@
-/* Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009
+/* Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010
    Free Software Foundation, Inc.
    Contributed by Andy Vaught
    Namelist output contributed by Paul Thomas
@@ -1428,7 +1428,14 @@
     {
       gfc_offset record;
       int finished;
+      char *p;
+      int length = dtp->u.p.current_unit->bytes_left;
 
+      p = write_block (dtp, length);
+      if (p == NULL)
+	return;
+      memset (p, ' ', length);
+
       /* Now that the current record has been padded out,
 	 determine where the next record in the array is. */
       record = next_array_record (dtp, dtp->u.p.current_unit->ls,
Index: ChangeLog
===================================================================
--- ChangeLog	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ ChangeLog	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1,3 +1,19 @@
+2010-10-06  Richard Guenther  <rguenther@suse.de>
+
+	Backport from mainline
+	2010-07-23  Marc Glisse <marc.glisse@normalesup.org>
+
+	PR bootstrap/44455
+	* configure.ac (extra_mpfr_configure_flags): Copy from
+	extra_mpc_gmp_configure_flags.
+	* configure: Re-generated.
+
+2010-10-02  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>
+
+	PR bootstrap/44621
+	* configure.ac: Fix unportable shell quoting.
+	* configure: Regenerate.
+
 2010-07-31  Release Manager
 
 	* GCC 4.5.1 released.
Index: libffi/src/x86/ffi64.c
===================================================================
--- libffi/src/x86/ffi64.c	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ libffi/src/x86/ffi64.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -377,7 +377,7 @@
 	  if (align < 8)
 	    align = 8;
 
-	  bytes = ALIGN(bytes, align);
+	  bytes = ALIGN (bytes, align);
 	  bytes += cif->arg_types[i]->size;
 	}
       else
@@ -389,7 +389,7 @@
   if (ssecount)
     flags |= 1 << 11;
   cif->flags = flags;
-  cif->bytes = bytes;
+  cif->bytes = ALIGN (bytes, 8);
 
   return FFI_OK;
 }
Index: libffi/ChangeLog
===================================================================
--- libffi/ChangeLog	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ libffi/ChangeLog	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1,3 +1,10 @@
+2010-10-01  Jakub Jelinek  <jakub@redhat.com>
+
+	PR libffi/45677
+	* src/x86/ffi64.c (ffi_prep_cif_machdep): Ensure cif->bytes is
+	a multiple of 8.
+	* testsuite/libffi.call/many2.c: New test.
+
 2010-07-31  Release Manager
 
 	* GCC 4.5.1 released.
Index: libffi/testsuite/libffi.call/many2.c
===================================================================
--- libffi/testsuite/libffi.call/many2.c	(.../tags/gcc_4_5_1_release)	(wersja 0)
+++ libffi/testsuite/libffi.call/many2.c	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -0,0 +1,54 @@
+/* Area:        ffi_call
+   Purpose:     Check uint8_t arguments.
+   Limitations: none.
+   PR:          PR45677.
+   Originator:  Dan Witte <dwitte@gmail.com> 20100916  */
+
+/* { dg-do run } */
+
+#include "ffitest.h"
+
+#define NARGS 7
+
+typedef unsigned char u8;
+
+__attribute__((noinline)) uint8_t
+foo (uint8_t a, uint8_t b, uint8_t c, uint8_t d,
+     uint8_t e, uint8_t f, uint8_t g)
+{
+  return a + b + c + d + e + f + g;
+}
+
+uint8_t
+bar (uint8_t a, uint8_t b, uint8_t c, uint8_t d,
+     uint8_t e, uint8_t f, uint8_t g)
+{
+  return foo (a, b, c, d, e, f, g);
+}
+
+int
+main (void)
+{
+  ffi_type *ffitypes[NARGS];
+  int i;
+  ffi_cif cif;
+  ffi_arg result = 0;
+  uint8_t args[NARGS];
+  void *argptrs[NARGS];
+
+  for (i = 0; i < NARGS; ++i)
+    ffitypes[i] = &ffi_type_uint8;
+
+  CHECK (ffi_prep_cif (&cif, FFI_DEFAULT_ABI, NARGS,
+		       &ffi_type_uint8, ffitypes) == FFI_OK);
+
+  for (i = 0; i < NARGS; ++i)
+    {
+      args[i] = i;
+      argptrs[i] = &args[i];
+    }
+  ffi_call (&cif, FFI_FN (bar), &result, argptrs);
+
+  CHECK (result == 21);
+  return 0;
+}
Index: config/ChangeLog
===================================================================
--- config/ChangeLog	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ config/ChangeLog	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1,3 +1,7 @@
+2010-10-02  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>
+
+	* po.m4 (AM_PO_SUBDIRS): Fix unportable shell quoting.
+
 2010-07-31  Release Manager
 
 	* GCC 4.5.1 released.
Index: config/po.m4
===================================================================
--- config/po.m4	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ config/po.m4	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -96,7 +96,7 @@
       case "$ac_file" in */Makefile.in)
         # Adjust a relative srcdir.
         ac_dir=`echo "$ac_file"|sed 's%/[^/][^/]*$%%'`
-        ac_dir_suffix="/`echo "$ac_dir"|sed 's%^\./%%'`"
+        ac_dir_suffix=/`echo "$ac_dir"|sed 's%^\./%%'`
         ac_dots=`echo "$ac_dir_suffix"|sed 's%/[^/]*%../%g'`
         # In autoconf-2.13 it is called $ac_given_srcdir.
         # In autoconf-2.50 it is called $srcdir.
Index: libjava/classpath/javax/print/attribute/standard/JobStateReasons.java
===================================================================
--- libjava/classpath/javax/print/attribute/standard/JobStateReasons.java	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ libjava/classpath/javax/print/attribute/standard/JobStateReasons.java	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -129,7 +129,7 @@
     if (o == null)
       throw new NullPointerException("reason is null");  
     
-    return add(o);
+    return super.add(o);
   }
   
   /**
Index: libjava/classpath/ChangeLog
===================================================================
--- libjava/classpath/ChangeLog	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ libjava/classpath/ChangeLog	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1,3 +1,23 @@
+2010-04-27  Andrew Haley  <aph@redhat.com>
+
+	* java/util/concurrent/CopyOnWriteArrayList.java: Fix for empty
+	list.
+
+2010-04-27  Andrew Haley  <aph@redhat.com>
+
+	* gnu/javax/print/ipp/IppResponse.java (parseAttributes): Handle
+	IppValueTag.UNKNOWN.  
+	* gnu/javax/print/ipp/IppRequest.java (writeOperationAttributes):
+	Handle RequestedAttributes.
+	* gnu/javax/print/ipp/IppPrintService.java (processResponse): Add
+	DocFlavor.SERVICE_FORMATTED.PAGEABLE and
+	DocFlavor.SERVICE_FORMATTED.PRINTABLE.
+
+2010-07-30  Andrew Haley  <aph@redhat.com>
+
+	* javax/print/attribute/standard/JobStateReasons.java (add): Fix
+	infinite recursion with call to super.
+
 2010-07-31  Release Manager
 
 	* GCC 4.5.1 released.
Index: libjava/classpath/gnu/javax/print/ipp/IppRequest.java
===================================================================
--- libjava/classpath/gnu/javax/print/ipp/IppRequest.java	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ libjava/classpath/gnu/javax/print/ipp/IppRequest.java	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -434,6 +434,8 @@
       PrinterURI printerUri = (PrinterURI) attributes.get(PrinterURI.class);
       JobUri jobUri = (JobUri) attributes.get(JobUri.class);
       JobId jobId = (JobId) attributes.get(JobId.class);
+      RequestedAttributes reqAttrs 
+	= (RequestedAttributes)attributes.get(RequestedAttributes.class);
       if (printerUri != null && jobId == null && jobUri == null)
         {
           write(printerUri);
@@ -467,6 +469,12 @@
           logger.log(Component.IPP, "Attribute: Name: <" + jobUri.getCategory()
             .getName() + "> Value: <" + jobUri.toString() + ">");
         }
+      else if (reqAttrs != null)
+	{
+	  write(reqAttrs);
+	  attributes.remove(RequestedAttributes.class);
+	  logger.log(Component.IPP, "RequestedAttributes: <" + reqAttrs + ">");
+	}
       else
         {
           throw new IppException("Unknown target operation attribute combination.");
Index: libjava/classpath/gnu/javax/print/ipp/IppPrintService.java
===================================================================
--- libjava/classpath/gnu/javax/print/ipp/IppPrintService.java	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ libjava/classpath/gnu/javax/print/ipp/IppPrintService.java	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -356,8 +356,17 @@
                 // should not happen, all fields are public
               }
           }
+
+	if (this.getClass()
+	    .isAssignableFrom(gnu.javax.print.CupsPrintService.class))
+	  {
+// 	    CUPS always provides filters to convert from Postscript.
+//  	    This logic looks odd, but it's what OpenJDK does.
+	    flavors.add(DocFlavor.SERVICE_FORMATTED.PAGEABLE);
+	    flavors.add(DocFlavor.SERVICE_FORMATTED.PRINTABLE);
+	  }
       }
-    
+
     // printer uris
     Set uris = getPrinterAttributeSet(PrinterUriSupported.class);
     printerUris = new ArrayList(uris.size());
Index: libjava/classpath/gnu/javax/print/ipp/IppResponse.java
===================================================================
--- libjava/classpath/gnu/javax/print/ipp/IppResponse.java	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ libjava/classpath/gnu/javax/print/ipp/IppResponse.java	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -302,11 +302,14 @@
             // out-of-band values
             case IppValueTag.UNSUPPORTED:
             case IppValueTag.UNKNOWN:
+              // TODO implement out-of-band handling
+              // We currently throw an exception to see when it occurs - not yet :-)
+	      throw new IppException(
+                    "Unexpected name value for out-of-band value tag " + tag);
             case IppValueTag.NO_VALUE:
-              // TODO implement out-of-band handling
-              // We currently throw an exception to see when it occurs - not yet :-)              
-              throw new IppException(
-                    "Unexpected name value for out-of-band value tag");
+	      attribute = null;
+
+	      break;
             case IppValueTag.INTEGER:
               int intValue = IppUtilities.convertToInt(value);
               attribute = IppUtilities.getIntegerAttribute(name, intValue);
Index: libjava/classpath/lib/java/util/concurrent/CopyOnWriteArrayList$3.class
===================================================================
Nie można wyświetlić: plik binarny.
svn:mime-type = application/octet-stream
Index: libjava/classpath/lib/java/util/concurrent/CopyOnWriteArrayList$2.class
===================================================================
Nie można wyświetlić: plik binarny.
svn:mime-type = application/octet-stream
Index: libjava/classpath/lib/java/util/concurrent/CopyOnWriteArrayList.class
===================================================================
Nie można wyświetlić: plik binarny.
svn:mime-type = application/octet-stream
Index: libjava/classpath/lib/java/util/concurrent/CopyOnWriteArrayList$1.class
===================================================================
Nie można wyświetlić: plik binarny.
svn:mime-type = application/octet-stream
Index: libjava/classpath/lib/java/util/concurrent/CopyOnWriteArrayList$SubList.class
===================================================================
Nie można wyświetlić: plik binarny.
svn:mime-type = application/octet-stream
Index: libjava/classpath/lib/java/util/concurrent/CopyOnWriteArrayList$RandomAccessSubList.class
===================================================================
Nie można wyświetlić: plik binarny.
svn:mime-type = application/octet-stream
Index: libjava/classpath/lib/gnu/javax/print/ipp/IppRequest$RequestWriter.class
===================================================================
Nie można wyświetlić: plik binarny.
svn:mime-type = application/octet-stream
Index: libjava/classpath/lib/gnu/javax/print/ipp/IppResponse$ResponseReader.class
===================================================================
Nie można wyświetlić: plik binarny.
svn:mime-type = application/octet-stream
Index: libjava/classpath/lib/gnu/javax/print/ipp/IppRequest.class
===================================================================
Nie można wyświetlić: plik binarny.
svn:mime-type = application/octet-stream
Index: libjava/classpath/lib/gnu/javax/print/ipp/IppPrintService.class
===================================================================
Nie można wyświetlić: plik binarny.
svn:mime-type = application/octet-stream
Index: libjava/classpath/lib/gnu/javax/print/ipp/IppResponse.class
===================================================================
Nie można wyświetlić: plik binarny.
svn:mime-type = application/octet-stream
Index: libjava/classpath/lib/javax/print/attribute/standard/JobStateReasons.class
===================================================================
Nie można wyświetlić: plik binarny.
svn:mime-type = application/octet-stream
Index: libjava/classpath/java/util/concurrent/CopyOnWriteArrayList.java
===================================================================
--- libjava/classpath/java/util/concurrent/CopyOnWriteArrayList.java	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ libjava/classpath/java/util/concurrent/CopyOnWriteArrayList.java	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -452,7 +452,12 @@
   public synchronized boolean remove(Object element)
   {
     E[] snapshot = this.data;
-    E[] newData = (E[]) new Object[snapshot.length - 1];
+    int len = snapshot.length;
+
+    if (len == 0)
+      return false;
+
+    E[] newData = (E[]) new Object[len - 1];
     
     // search the element to remove while filling the backup array
     // this way we can run this method in O(n)
Index: libjava/ChangeLog
===================================================================
--- libjava/ChangeLog	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ libjava/ChangeLog	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -1,3 +1,16 @@
+2010-10-06  Jack Howarth <howarth@bromo.med.uc.edu>
+
+	Backport from mainline
+	2010-05-03  Jack Howarth <howarth@bromo.med.uc.edu>
+
+	PR java/43839
+	* testsuite/Makefile.am: Override automake for site.exp creation
+	and add entry to set libiconv.
+	* testsuite/Makefile.in: Regenerate.
+	* testsuite/libjava.jni/jni.exp (gcj_jni_get_cxxflags_invocation):
+	Add new global variable libiconv to handle alternative libiconv
+	locations.
+
 2010-07-31  Release Manager
 
 	* GCC 4.5.1 released.
Index: libjava/testsuite/Makefile.in
===================================================================
--- libjava/testsuite/Makefile.in	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ libjava/testsuite/Makefile.in	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -388,25 +388,6 @@
 	else echo "WARNING: could not find \`runtest'" 1>&2; :;\
 	fi; \
 	exit $$exit_status
-site.exp: Makefile
-	@echo 'Making a new site.exp file...'
-	@echo '## these variables are automatically generated by make ##' >site.tmp
-	@echo '# Do not edit here.  If you wish to override these values' >>site.tmp
-	@echo '# edit the last section' >>site.tmp
-	@echo 'set srcdir $(srcdir)' >>site.tmp
-	@echo "set objdir `pwd`" >>site.tmp
-	@echo 'set build_alias "$(build_alias)"' >>site.tmp
-	@echo 'set build_triplet $(build_triplet)' >>site.tmp
-	@echo 'set host_alias "$(host_alias)"' >>site.tmp
-	@echo 'set host_triplet $(host_triplet)' >>site.tmp
-	@echo 'set target_alias "$(target_alias)"' >>site.tmp
-	@echo 'set target_triplet $(target_triplet)' >>site.tmp
-	@echo '## All variables above are generated by configure. Do Not Edit ##' >>site.tmp
-	@test ! -f site.exp || \
-	  sed '1,/^## All variables above are.*##/ d' site.exp >> site.tmp
-	@-rm -f site.bak
-	@test ! -f site.exp || mv site.exp site.bak
-	@mv site.tmp site.exp
 
 distclean-DEJAGNU:
 	-rm -f site.exp site.bak
@@ -557,6 +538,31 @@
 
 .PHONY: compile-tests
 
+# We need more things in site.exp, but automake completely controls the
+# creation of that file; there's no way to append to it without messing up
+# the dependency chains.  So we overrule automake.  This rule is exactly
+# what it would have generated, plus our own additions.
+site.exp: Makefile
+	@echo 'Making a new site.exp file...'
+	@echo '## these variables are automatically generated by make ##' >site.tmp
+	@echo '# Do not edit here.  If you wish to override these values' >>site.tmp
+	@echo '# edit the last section' >>site.tmp
+	@echo 'set srcdir $(srcdir)' >>site.tmp
+	@echo "set objdir `pwd`" >>site.tmp
+	@echo 'set build_alias "$(build_alias)"' >>site.tmp
+	@echo 'set build_triplet $(build_triplet)' >>site.tmp
+	@echo 'set host_alias "$(host_alias)"' >>site.tmp
+	@echo 'set host_triplet $(host_triplet)' >>site.tmp
+	@echo 'set target_alias "$(target_alias)"' >>site.tmp
+	@echo 'set target_triplet $(target_triplet)' >>site.tmp
+	@echo 'set libiconv "$(LIBICONV)"' >>site.tmp
+	@echo '## All variables above are generated by configure. Do Not Edit ##' >>site.tmp
+	@test ! -f site.exp || \
+	  sed '1,/^## All variables above are.*##/ d' site.exp >> site.tmp
+	@-rm -f site.bak
+	@test ! -f site.exp || mv site.exp site.bak
+	@mv site.tmp site.exp
+
 check-am: compile-tests
 
 compile-tests:
Index: libjava/testsuite/libjava.jni/jni.exp
===================================================================
--- libjava/testsuite/libjava.jni/jni.exp	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ libjava/testsuite/libjava.jni/jni.exp	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -251,7 +251,11 @@
 }
 
 proc gcj_jni_get_cxxflags_invocation {} {
+  global libiconv
   global LIBJAVA
+  if {$libiconv == ""} {
+      set libiconv "-liconv"
+  }
   if [info exists LIBJAVA] {
       set libjava $LIBJAVA;
   } else {
@@ -267,7 +271,7 @@
   # to just make the linker find libgcc using -L options.
   # Similar logic applies to libgcj.
   if { [istarget "*-*-darwin*"] } {
-    lappend cxxflags -shared-libgcc -lgcj -liconv
+    eval lappend cxxflags "-shared-libgcc -lgcj $libiconv"
   }
 
   if { [istarget "*-*-solaris*"] } {
Index: libjava/testsuite/Makefile.am
===================================================================
--- libjava/testsuite/Makefile.am	(.../tags/gcc_4_5_1_release)	(wersja 165515)
+++ libjava/testsuite/Makefile.am	(.../branches/gcc-4_5-branch)	(wersja 165515)
@@ -24,6 +24,31 @@
 
 .PHONY: compile-tests
 
+# We need more things in site.exp, but automake completely controls the
+# creation of that file; there's no way to append to it without messing up
+# the dependency chains.  So we overrule automake.  This rule is exactly
+# what it would have generated, plus our own additions.
+site.exp: Makefile
+	@echo 'Making a new site.exp file...'
+	@echo '## these variables are automatically generated by make ##' >site.tmp
+	@echo '# Do not edit here.  If you wish to override these values' >>site.tmp
+	@echo '# edit the last section' >>site.tmp
+	@echo 'set srcdir $(srcdir)' >>site.tmp
+	@echo "set objdir `pwd`" >>site.tmp
+	@echo 'set build_alias "$(build_alias)"' >>site.tmp
+	@echo 'set build_triplet $(build_triplet)' >>site.tmp
+	@echo 'set host_alias "$(host_alias)"' >>site.tmp
+	@echo 'set host_triplet $(host_triplet)' >>site.tmp
+	@echo 'set target_alias "$(target_alias)"' >>site.tmp
+	@echo 'set target_triplet $(target_triplet)' >>site.tmp
+	@echo 'set libiconv "$(LIBICONV)"' >>site.tmp
+	@echo '## All variables above are generated by configure. Do Not Edit ##' >>site.tmp
+	@test ! -f site.exp || \
+	  sed '1,/^## All variables above are.*##/ d' site.exp >> site.tmp
+	@-rm -f site.bak
+	@test ! -f site.exp || mv site.exp site.bak
+	@mv site.tmp site.exp
+
 check-am: compile-tests
 
 compile-tests:

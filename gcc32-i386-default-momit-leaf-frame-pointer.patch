2002-05-29  Richard Henderson  <rth@redhat.com>

	* config/i386/biarch64.h (TARGET_64BIT_DEFAULT): Define with value.
	(TARGET_BI_ARCH): Likewise.
	* config/i386/i386.h: Test TARGET_64BIT_DEFAULT by value.
	(TARGET_SWITCHES): Combine target defaults here not in TARGET_DEFAULT.
	(TARGET_64BIT_DEFAULT): Default to 0.
	(TARGET_DEFAULT): Default to MASK_OMIT_LEAF_FRAME_POINTER.

--- gcc/config/i386/biarch64.h.jj	Tue Oct  2 12:59:38 2001
+++ gcc/config/i386/biarch64.h	Tue Jun  4 15:11:52 2002
@@ -21,5 +21,5 @@ along with GNU CC; see the file COPYING.
 the Free Software Foundation, 59 Temple Place - Suite 330,
 Boston, MA 02111-1307, USA.  */
 
-#define TARGET_64BIT_DEFAULT
-#define TARGET_BI_ARCH
+#define TARGET_64BIT_DEFAULT MASK_64BIT
+#define TARGET_BI_ARCH 1
--- gcc/config/i386/i386.h.jj	Thu Apr 18 19:02:03 2002
+++ gcc/config/i386/i386.h	Tue Jun  4 15:13:40 2002
@@ -192,7 +192,7 @@ extern int target_flags;
 #ifdef TARGET_BI_ARCH
 #define TARGET_64BIT (target_flags & MASK_64BIT)
 #else
-#ifdef TARGET_64BIT_DEFAULT
+#if TARGET_64BIT_DEFAULT
 #define TARGET_64BIT 1
 #else
 #define TARGET_64BIT 0
@@ -381,14 +381,14 @@ extern int x86_prefetch_sse;
   { "no-red-zone",		MASK_NO_RED_ZONE,			      \
     N_("Do not use red-zone in the x86-64 code") },			      \
   SUBTARGET_SWITCHES							      \
-  { "", TARGET_DEFAULT, 0 }}
+  { "", TARGET_DEFAULT | TARGET_64BIT_DEFAULT | TARGET_SUBTARGET_DEFAULT, 0 }}
 
-#ifdef TARGET_64BIT_DEFAULT
-#define TARGET_DEFAULT (MASK_64BIT | TARGET_SUBTARGET_DEFAULT)
-#else
-#define TARGET_DEFAULT TARGET_SUBTARGET_DEFAULT
+#ifndef TARGET_64BIT_DEFAULT
+#define TARGET_64BIT_DEFAULT 0
 #endif
 
+#define TARGET_DEFAULT MASK_OMIT_LEAF_FRAME_POINTER
+
 /* Which processor to schedule for. The cpu attribute defines a list that
    mirrors this list, so changes to i386.md must be made at the same time.  */
 
@@ -624,13 +624,13 @@ extern int ix86_arch;
 
 #ifndef CPP_CPU_SPEC
 #ifdef TARGET_BI_ARCH
-#ifdef TARGET_64BIT_DEFAULT
+#if TARGET_64BIT_DEFAULT
 #define CPP_CPU_SPEC "%{m32:%(cpp_cpu32)}%{!m32:%(cpp_cpu64)} %(cpp_cpucommon)"
 #else
 #define CPP_CPU_SPEC "%{m64:%(cpp_cpu64)}%{!m64:%(cpp_cpu32)} %(cpp_cpucommon)"
 #endif
 #else
-#ifdef TARGET_64BIT_DEFAULT
+#if TARGET_64BIT_DEFAULT
 #define CPP_CPU_SPEC "%(cpp_cpu64) %(cpp_cpucommon)"
 #else
 #define CPP_CPU_SPEC "%(cpp_cpu32) %(cpp_cpucommon)"
@@ -695,7 +695,7 @@ extern int ix86_arch;
 #define DOUBLE_TYPE_SIZE 64
 #define LONG_LONG_TYPE_SIZE 64
 
-#if defined (TARGET_BI_ARCH) || defined (TARGET_64BIT_DEFAULT)
+#if defined (TARGET_BI_ARCH) || TARGET_64BIT_DEFAULT
 #define MAX_BITS_PER_WORD 64
 #define MAX_LONG_TYPE_SIZE 64
 #else
